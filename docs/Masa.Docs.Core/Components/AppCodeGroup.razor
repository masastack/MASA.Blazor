@using System.Text.Json.Serialization
@attribute [JSCustomElement]

<div class="mb-4">
    @if (Model is not null)
    {
        <MTabs Dark="Dark" @bind-Value="_tabValue" Class="mb-1">
            @foreach (var tab in Tabs)
            {
                <MTab Class="text-none">@tab</MTab>
            }
        </MTabs>

        <MTabsItems Dark="Dark" Value="_tabValue">
            @foreach (var tabItem in TabItems)
            {
                <MTabItem>
                    <Markup Code="@tabItem.Code" Language="@tabItem.Lang"
                            FileName="@tabItem.FileName"
                            LineHighlights="@tabItem.LineHighlights">
                    </Markup>
                </MTabItem>
            }
        </MTabsItems>
    }
</div>

@code {
    
    [Parameter]
    public bool Dark { get; set; }

    [Parameter]
    public Dictionary<string, MarkupModel>? Model { get; set; }
    
    private StringNumber? _tabValue;

    private IEnumerable<string> Tabs => (Model ?? new()).Keys;

    private IEnumerable<MarkupModel> TabItems => (Model ?? new()).Values;

    public class MarkupModel
    {
        [JsonPropertyName("code")]
        public string? Code { get; set; }

        [JsonPropertyName("lang")]
        public string? Lang { get; set; }

        [JsonPropertyName("fileName")]
        public string? FileName { get; set; }

        [JsonPropertyName("lineHighlights")]
        public string? LineHighlights { get; set; }
    }

}
