@namespace Masa.Blazor.Docs.Components
@inherits NextTickComponentBase

@if (_rendered)
{
    if (_type == null)
    {
        <MAlert Type="AlertTypes.Error" Outlined Dark="Dark">
            The file "@File" doesn't exist.
        </MAlert>
    }
    else
    {
        <MSheet Class="m-example"
                Outlined
                Dark="Dark"
                Rounded="true">
            <div style="min-height: 52px">
                <MSheet Class="pa-4" Rounded="true" Dark="_dark" Light="!_dark">
                    @if (_type is not null)
                    {
                        <DynamicComponent Type="_type"></DynamicComponent>
                    }
                </MSheet>

                @if (!NoActions)
                {
                    <AppDivider />

                    <div class="text-end pa-2">
                        @foreach (var tooltip in _tooltips)
                        {
                            <AppTooltipButton Icon="@tooltip.Icon"
                                              Path="@tooltip.Path"
                                              Href="@tooltip.href"
                                              Target="@(tooltip.href != null ? "_blank" : null)"
                                              Class="mx-2"
                                              OnClick="() => tooltip.OnClick?.Invoke()" />
                        }
                    </div>

                    @if (_showExpands)
                    {
                        <AppDivider />

                        <ExpandTransition>
                            <ShowTransitionElement Value="_expand">
                                
                                <MButton Class="mr-2"
                                         IsActive="true"
                                         Text
                                         Color="primary">
                                    @_sections.Language
                                </MButton>
                                
                                <MButton Class="mr-2"
                                         Text
                                         Color="primary" Style="float: right" OnClick="async ()=>await RunCode()">
                                    Run
                                 </MButton>

                                 <MButton Class="mr-2"
                                          Text
                                          Color="primary" Style="float: right" OnClick="async ()=>await RestoreCode()">
                                     Restore
                                 </MButton>
                                <MButton Class="mr-2"
                                         Text
                                          Color="primary" Style="float: right" OnClick="async ()=>await CopyCode()">
                                     Copy code
                                </MButton>
                                <AppDivider />

                                <MWindow Value="_selected" Class="grey lighten-5 rounded-b">
                                    <MWindowItem>
                                         <MMonacoEditor InitCompleteHandle="async() =>await InitCompleteHandle()" @ref=MonacoEditor Height="@("500px")" Value="@_sections.Code" EditorOptions="options"></MMonacoEditor>
                                    </MWindowItem>
                                </MWindow>
                            </ShowTransitionElement>
                        </ExpandTransition>
                    }
                }
            </div>
        </MSheet>
    }
}
else
{
    <MSkeletonLoader Dark="Dark" MinHeight="250" MaxHeight="250" Type="card"></MSkeletonLoader>
}

<MOverlay Value="_load" ZIndex="7">
    <div class="white--text text-h3">
        Loading, just a moment...
    </div>
</MOverlay>