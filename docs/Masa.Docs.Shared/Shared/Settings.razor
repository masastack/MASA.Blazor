@inject I18n I18n
@inject MasaBlazor MasaBlazor
@inject LocalStorage LocalStorage
@inject IJSRuntime JSRuntime

<MNavigationDrawer Value="Value" ValueChanged="ValueChanged" Fixed Right Temporary Width="349">
    <PrependContent>
        <MToolbar Class="m-bar--underline" Flat Height="96">
            <h3>
                @I18n.T("settings")
            </h3>
        </MToolbar>
    </PrependContent>
    <ChildContent>
        <MContainer>
            <div>
                <div class="text-subtitle-2 font-weight-black ps-1">@I18n.T("theme")</div>
                <MItemGroup Value="@MasaBlazor.Theme.Dark.ToString()" ActiveClass="primary">
                    <MRow>
                        <MCol Cols="6">
                            <MItem Value="@("False")">
                                <MButton Block Large Depressed Class="@($"justify-space-between {context.ActiveClass}")"
                                         OnClick="() => ToggleTheme(false)">
                                    Light
                                    <MIcon Right>mdi-weather-sunny</MIcon>
                                </MButton>
                            </MItem>
                        </MCol>
                        <MCol Cols="6">
                            <MItem Value="@("True")">
                                <MButton Block Large Depressed Class="@($"justify-space-between {context.ActiveClass}")"
                                         OnClick="() => ToggleTheme(true)">
                                    Dark
                                    <MIcon Right>mdi-weather-night</MIcon>
                                </MButton>
                            </MItem>
                        </MCol>
                    </MRow>
                </MItemGroup>
            </div>
        </MContainer>
    </ChildContent>
</MNavigationDrawer>

@code {

    [Parameter]
    public bool? Value { get; set; }

    [Parameter]
    public EventCallback<bool?> ValueChanged { get; set; }

    private void ToggleTheme(bool dark)
    {
        if (dark == MasaBlazor.Theme.Dark)
        {
            return;
        }

        MasaBlazor.ToggleTheme();

        _ = LocalStorage.SetItemAsync("masablazor@theme", dark ? "dark" : "light");

        _ = JSRuntime.TryInvokeVoidAsync("updateThemeOfElementsFromMarkdown", dark);
    }

}
