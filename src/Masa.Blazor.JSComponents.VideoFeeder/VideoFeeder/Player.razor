@namespace Masa.Blazor.Components.VideoFeeder
@using Masa.Blazor.Components.Xgplayer.Plugins
@using Masa.Blazor.Components.Xgplayer.Plugins.Controls
@inherits MasaComponentBase

@if (_available)
{
    <MXgplayer Poster="@Data.Poster"
               Loop
               Autoplay="@Data.Playing"
               AutoplayMuted
               Url="@Data.Src"
               Ignores="@IgnoredXgplayerPlugins"
               Height="@("100%")"
               Width="@("100%")"
               OnFullscreenChange="@HandleOnFullscreen"
               OnVideoResize="@HandleOnVideoResize"
               @ref="_xgplayer">
        <MXgplayerStart ShowAtPause/>
        <MXgplayerControls Mode="ControlsMode.Flex"/>
        <MXgplayerVolume Default="1f"/>
        <MXgplayerDynamicBg Disable="false"/>
        <MXgplayerFullscreen RotateFullscreen="@RotateFullscreen"
                             NeedBackIcon
                             Index="0"
                             Position="PluginPosition.ControlsCenter"/>
    </MXgplayer>

    <MThemeProvider WithBackground
                    Class="@ControlsElement.ToString()"
                    @onclick:stoppPropagation
                    Theme="dark">
        @if (_fullscreenChipStyle != null)
        {
            <MChip Class="@ControlsFullscreenElement.ToString()"
                   Outlined
                   Small
                   OnClick="@GetFullscreenAsync"
                   Style="@_fullscreenChipStyle">
                全屏播放
            </MChip>
        }
        <div class="@ControlsTopElement">
            @TopContent?.Invoke(Data)
        </div>
        <div class="@ControlsBottomElement">
            @BottomContent?.Invoke(Data)
        </div>
        <div class="@ControlsRightElement">
            @ActionsContent?.Invoke(Data)
            <MToggle Value="@Muted"
                     ValueChanged="@MutedChanged"
                     DataOn="@("mdi-volume-off")"
                     Dataoff="@("mdi-volume-high")">
                <MButton IconName="@context.Data"
                         Large
                         OnClick="@context.Toggle"
                         OnClickStopPropagation/>
            </MToggle>
        </div>
    </MThemeProvider>
}
