@namespace Masa.Blazor
@using Masa.Blazor.Components.VideoFeeder
@inherits MasaComponentBase
@inject I18n I18n

<div class="@GetClass()"
     style="@GetStyle()"
     id="@Id"
     @ref="@Ref"
     @attributes="@Attributes">
    @if (Videos.Count > 0)
    {
        <MSwiper Index="@_index"
                 IndexChanged="@IndexChanged"
                 Width="@Width"
                 Height="@Height"
                 Vertical
                 Virtual
                 TouchStartPreventDefault="false"
                 @ref="_swiper">
            @foreach (var item in Videos)
            {
                var index = Videos.IndexOf(item);

                <MSwiperSlide>
                    <Player Data="@item"
                            Index="@index"
                            @bind-Muted="@_muted"
                            RotateFullscreen="@RotateFullscreen"
                            OnFullscreen="@HandleOnFullscreen"
                            OnLongPress="@HandleOnLongPress"
                            OnEnded="@HandleOnEnded"
                            ActionsContent="@SideActionsContent"
                            TopContent="@TopContent"
                            BottomContent="@BottomContent"
                            @ref="item.Player"/>
                </MSwiperSlide>
            }
        </MSwiper>
    }

    <MBottomSheet @bind-Value="_sheet">
        <MList Dense Slim>
            @BottomActionsContent
            <MListItem Link
                       PrependIcon="mdi-cast-audio-variant"
                       Title="@ToggleModeText"
                       OnClick="@ToggleMode"/>
            <MListItem PrependIcon="mdi-play-speed"
                       Title="@I18n.T("$masaBlazor.video-feeder.playbackRate")">
                <MListItemAction>
                    <MButtonGroup Value="_playbackRate"
                                  ValueChanged="@SetPlaybackRate"
                                  ActiveClass="primary--text"
                                  Borderless
                                  Mandatory>
                        <MButton Class="px-2" MinWidth="@("auto")" Small Text Value="0.75">0.75</MButton>
                        <MButton Class="px-2" MinWidth="@("auto")" Small Text Value="1.0">1.0</MButton>
                        <MButton Class="px-2" MinWidth="@("auto")" Small Text Value="1.25">1.25</MButton>
                        <MButton Class="px-2" MinWidth="@("auto")" Small Text Value="1.5">1.5</MButton>
                        <MButton Class="px-2" MinWidth="@("auto")" Small Text Value="2.0">2.0</MButton>
                    </MButtonGroup>
                </MListItemAction>
            </MListItem>

            @if (OnDownload.HasDelegate)
            {
                <MListItem Link
                           PrependIcon="mdi-download-box-outline"
                           Title="@I18n.T("$masaBlazor.video-feeder.download")"
                           OnClick="@OnDownload.InvokeAsync"/>
            }

            <MListItem Link
                       PrependIcon="mdi-playlist-play"
                       Title="@I18n.T("$masaBlazor.video-feeder.autoPlayNext")">
                <MListItemAction>
                    <MSwitch @bind-Value="_autoPlayNext" Inset Dense/>
                </MListItemAction>
            </MListItem>
        </MList>
    </MBottomSheet>
</div>

@code {

    private string ToggleModeText => I18n.T(CurrentVideo?.Player?._isMusic is true ? "$masaBlazor.video-feeder.toVideo" : "$masaBlazor.video-feeder.toMusic");

}