{
  "Order": 5,
  "Title": "国际化多语言 (i18n)",
  "Html": "<section id=\"section-375046753\">\r\n                <h1 class=\"m-heading text-h3 text-sm-h3 mb-4\">\r\n                    <a class=\"text-decoration-none text-right text-md-left\">#</a>\r\n                    国际化多语言 (i18n)\r\n                </h1>\n<p><strong>MASA Blazor</strong> 支持组件的语言国际化（i18n）。</p>\n\r\n            </section><section id=section-1681655181>\r\n                <h2 class=\"m-heading text-h4 text-sm-h4 mb-3\">\r\n                    <a class=\"text-decoration-none text-right text-md-left\">#</a>\r\n                    语言支持\r\n                </h2></section>\n<p>支持下列语言：</p>\n<ul>\n<li><strong>af-AZ</strong> - Afrikaans (Afrikaans)</li>\n<li><strong>ar-EG</strong> - Arabic (اللغة العربية)</li>\n<li><strong>az</strong> - Azerbaijani (Azərbaycan)</li>\n<li><strong>bg-BG</strong> - Bulgarian (български)</li>\n<li><strong>ca-ES</strong> - Catalan (català)</li>\n<li><strong>ckb</strong> - Central Kurdish (کوردی)</li>\n<li><strong>cs-CZ</strong> - Czech (čeština)</li>\n<li><strong>de-DE</strong> - German (Deutsch)</li>\n<li><strong>el-GR</strong> - Greek (Ελληνικά)</li>\n<li><strong>en-GB</strong> - English (Global)</li>\n<li><strong>en-US</strong> - English</li>\n<li><strong>es-ES</strong> - Spanish (Español)</li>\n<li><strong>et-EE</strong> - Estonian (eesti)</li>\n<li><strong>fa-IR</strong> - Persian (فارسی)</li>\n<li><strong>fi-FI</strong> - Finnish (suomi)</li>\n<li><strong>fr-FR</strong> - French (Français)</li>\n<li><strong>he-IL</strong> - Hebrew (עברית)</li>\n<li><strong>hr-HR</strong> - Croatian (hrvatski jezik)</li>\n<li><strong>hu-HU</strong> - Hungarian (magyar)</li>\n<li><strong>id-ID</strong> - Indonesian (Indonesian)</li>\n<li><strong>it-IT</strong> - Italian (Italiano)</li>\n<li><strong>ja-JP</strong> - Japanese (日本語)</li>\n<li><strong>ko-KR</strong> - Korean (한국어)</li>\n<li><strong>lv-LV</strong> - Latvian (latviešu valoda)</li>\n<li><strong>nb-NO</strong> - Norwegian (Norsk)</li>\n<li><strong>nl-BE</strong> - Dutch (Belgium)</li>\n<li><strong>nl-NL</strong> - Dutch (Nederlands)</li>\n<li><strong>pl-PL</strong> - Polish (język polski)</li>\n<li><strong>pt-BR</strong> - Portuguese (Brazil)</li>\n<li><strong>pt-PT</strong> - Portuguese (Português)</li>\n<li><strong>ro-RO</strong> - Romanian (Română)</li>\n<li><strong>ru-RU</strong> - Russian (Русский)</li>\n<li><strong>sk-SK</strong> - Slovak (slovenčina)</li>\n<li><strong>sl_SI</strong> - Slovene (slovenski jezik)</li>\n<li><strong>sr-Cyrl-CS</strong> - Serbian (српски језик)</li>\n<li><strong>sr-Latn-CS</strong> - Serbian (srpski jezik)</li>\n<li><strong>sv-SE</strong> - Swedish (svenska)</li>\n<li><strong>th-TH</strong> - Thai (ไทย)</li>\n<li><strong>tr-TR</strong> - Turkish (Türkçe)</li>\n<li><strong>uk-UA</strong> - Ukrainian (Українська)</li>\n<li><strong>vi-CN</strong> - Vietnamese (Tiếng Việt)</li>\n<li><strong>zh-CN</strong> - Chinese (简体中文)</li>\n<li><strong>zh-TW</strong> - Chinese (正體中文)</li>\n</ul>\n\r\n            </section><section id=section-148273855>\r\n                <h2 class=\"m-heading text-h4 text-sm-h4 mb-3\">\r\n                    <a class=\"text-decoration-none text-right text-md-left\">#</a>\r\n                    使用MASA Blazor已内置支持的I18n功能\r\n                </h2></section>\n<h3>在Blazor Server项目中支持MasaI18n</h3>\n<ul>\n<li>添加服务依赖I18n:</li>\n</ul>\n<pre><code class=\"language-csharp\">services.AddMasaBlazor().AddI18nForServer(&quot;{i18n local directory path}&quot;);\n</code></pre>\n<ul>\n<li><code>i18n local directory path</code>为放置i18n资源文件的文件夹物理路径。例如,您在<code>wwwroot/i18n</code>路径下放置了i18n资源文件，则代码写为<code>services.AddMasaBlazor().AddI18nForServer(&quot;wwwroot/i18n&quot;);</code>。</li>\n</ul>\n<pre><code>- Pages \n- Shared \n- wwwroot\n  - i18n\n    - en-US.json\n    - zh-CN.json\n</code></pre>\n<ul>\n<li><p>i18n资源文件格式如下：</p>\n<ul>\n<li>zh-CN.json</li>\n</ul>\n<pre><code>{\n  &quot;$DefaultCulture&quot;: &quot;true&quot;,\n  &quot;Home&quot;: &quot;首页&quot;,\n  &quot;Docs&quot;: &quot;文档&quot;,\n  &quot;Blog&quot;: &quot;博客&quot;,\n  &quot;Team&quot;: &quot;团队&quot;,\n  &quot;Search&quot;: &quot;搜索&quot;,\n}\n</code></pre>\n<ul>\n<li>en-US.json</li>\n</ul>\n<pre><code>{\n    &quot;Home&quot;: &quot;Home&quot;,\n    &quot;Docs&quot;: &quot;Docs&quot;,\n    &quot;Blog&quot;: &quot;Blog&quot;,\n    &quot;Team&quot;: &quot;Team&quot;,\n    &quot;Search&quot;: &quot;Search&quot;,\n}\n</code></pre>\n</li>\n</ul>\n<blockquote>\n<p><code>$DefaultCulture</code>是预置key，可以设置当前语言为默认语言</p>\n</blockquote>\n<ul>\n<li>I18n使用示例</li>\n</ul>\n<pre><code class=\"language-csharp\">@using BlazorComponent.I18n\n@inject I18n I18n\n\nvoid Example()\n{\n   I18n.SetCulture(&quot;zh-CN&quot;);//将语言切换成zh-CN\n   var home = I18n.T(&quot;Home&quot;);//获取键值Home对应语言的值，此方法调用将返回&quot;首页&quot;;\n}\n</code></pre>\n<h4>嵌套</h4>\n<ul>\n<li>zh-CN.json</li>\n</ul>\n<pre><code>{\n    &quot;User&quot;:{\n        &quot;Name&quot;:&quot;姓名&quot;,\n        &quot;Age&quot;:&quot;年龄&quot;,\n    },\n    &quot;Goods&quot;:{\n        &quot;Name&quot;:&quot;名称&quot;,\n        &quot;Price&quot;:&quot;价格&quot;\n    }\n}\n</code></pre>\n<ul>\n<li>en-US.json</li>\n</ul>\n<pre><code>{\n    &quot;User&quot;:{\n        &quot;Name&quot;:&quot;Name&quot;,\n        &quot;Age&quot;:&quot;Age&quot;,\n    },\n    &quot;Goods&quot;:{\n        &quot;Name&quot;:&quot;Name&quot;,\n        &quot;Price&quot;:&quot;Price&quot;\n    }\n}\n</code></pre>\n<ul>\n<li>使用示例</li>\n</ul>\n<pre><code class=\"language-csharp\">@using BlazorComponent.I18n\n@inject I18n I18n\n\nvoid Example()\n{\n   I18n.SetCulture(&quot;zh-CN&quot;);\n   var name1 = I18n.T(&quot;Goods.Name&quot;);//输出：名称\n   var name2 = I18n.T(&quot;User.Name&quot;);//输出：姓名\n   var name3 = I18n.T(&quot;Name&quot;,true);//输出：姓名。注意：重复的Key会默认取第一个匹配的\n   var name4 = I18n.T(&quot;Goods&quot;,&quot;Name&quot;);//输出：名称\n   var age1 = I18n.T(&quot;User.Age&quot;);//输出：年龄\n   var age2 = I18n.T(&quot;Age&quot;,true);//输出：年龄\n   var price1 = I18n.T(&quot;Goods.Price&quot;);//输出：价格\n   var price2 = I18n.T(&quot;Price&quot;,true);//输出：价格\n\n   I18n.SetLang(&quot;en-US&quot;);\n   name1 = I18n.T(&quot;Goods.Name&quot;);//输出：Goods.Name\n   name2 = I18n.T(&quot;User.Name&quot;);//输出：User.Name\n   name3 = I18n.T(&quot;Name&quot;,true);//输出：Name\n   name4 = I18n.T(&quot;Goods&quot;,&quot;Name&quot;);//输出：Name\n   age1 = I18n.T(&quot;User.Age&quot;);//输出：User.Age\n   age2 = I18n.T(&quot;Age&quot;,true);//输出：Age\n   price1 = I18n.T(&quot;Goods.Price&quot;);//输出：Goods.Price\n   price2 = I18n.T(&quot;Price&quot;,true);//输出：Price\n}\n</code></pre>\n<blockquote>\n<p>I18n默认key找不到对应的数据时返回key，而key一般是英文的，所以en-US.json可以根据情况不用写。如果想找不到对应的数据时返回null，则使用<code>I18n.T(&quot;key&quot;,whenNullReturnKey:false)</code>即可。\n支持在嵌套中递归嵌套，使用方式与示例一致</p>\n</blockquote>\n<h3>在Blazor WebAssembly项目中支持MasaI18n</h3>\n<ul>\n<li>由于Blazor WebAssembly代码在浏览器端执行，所以需要使用http请求来读取i18n资源文件，program.cs增加代码如下：</li>\n</ul>\n<pre><code class=\"language-csharp\">var builder = WebAssemblyHostBuilder.CreateDefault(args);\nawait builder.Services.AddMasaBlazor().AddI18nForWasmAsync($&quot;builder.HostEnvironment.BaseAddress/{i18n directory api}&quot;);\n</code></pre>\n<ul>\n<li><code>i18n directory api</code> 为放置i18n资源文件的文件夹路由地址。例如,您在<code>wwwroot/i18n</code>路径下放置了i18n资源文件，则代码写为<code>await builder.Services.AddMasaBlazor().AddI18nForWasmAsync($&quot;{builder.HostEnvironment.BaseAddress}/i18n&quot;)</code>。</li>\n</ul>\n<pre><code>- Pages \n- Shared \n- wwwroot\n  - i18n\n    - supportedCultures.json\n    - en-US.json\n    - zh-CN.json\n</code></pre>\n<ul>\n<li><code>supportedCultures.json</code>配置文件格式如下</li>\n</ul>\n<pre><code>[\n  &quot;zh-CN&quot;,\n  &quot;en-US&quot;\n]\n</code></pre>\n<blockquote>\n<p>注意：<code>supportedCultures.json</code>必须与i18n资源文件在同一目录下</p>\n</blockquote>\n<ul>\n<li>I18n使用示例请参考Blazor Server模式，使用方式与Blazor Server模式一致</li>\n</ul>\n</section>"
}