[
  {
    "Desc": "<p>该组件用于通过使用上下文类型，图标和颜色向用户传达重要信息。这些默认类型有4种变体：<strong>Success</strong>、<strong>Info</strong>、<strong>Warning</strong> 和 <strong>Error</strong>\n。默认图标有助于表示每种类型所描述的不同动作。也可以自定义提示框的许多部分，例如 <strong>Border</strong> 、<strong>Icon</strong> 和 <strong>Color</strong> 也可以自定义以适应几乎任何情况。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MAlert\">MAlert</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.4426281+08:00",
    "DemoList": [
      {
        "Order": 1,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>最简单的警报形式是显示消息的平板纸。</p>\n",
        "Code": "<MSheet Class=\"d-flex align-center justify-center\">\r\n    <MAlert Type=\"AlertTypes.Success\">\r\n        I'm an Alert Usage Example\r\n    </MAlert>\r\n</MSheet>",
        "Type": "Demos.Components.Alert.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "border",
        "Title": "边框",
        "Description": "<p><strong>Border</strong> 属性支持将一个简单的边框添加到提示框的4个边。这可以和 <strong>Color</strong>、<strong>Dark</strong>、<strong>Type</strong> 这些属性一起使用来，为提示框提供强调作用。</p>\n",
        "Code": "<div>\r\n    <MAlert Border=\"Borders.Top\"\r\n            Color=\"red lighten-2\"\r\n            Dark>\r\n        I'm an alert with a top border and red color\r\n    </MAlert>\r\n    <MAlert Border=\"Borders.Right\"\r\n            Color=\"blue-grey\"\r\n            Dark>\r\n        I'm an alert with a right border and blue-grey color\r\n    </MAlert>\r\n    <MAlert Border=\"Borders.Bottom\"\r\n            Color=\"pink darken-1\"\r\n            Dark>\r\n        I'm an alert with a bottom border and pink color\r\n    </MAlert>\r\n    <MAlert Border=\"Borders.Left\"\r\n            Color=\"indigo\"\r\n            Dark>\r\n        I'm an alert with a border left type info\r\n    </MAlert>\r\n</div>",
        "Type": "Demos.Components.Alert.props.Border",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "coloredBorder",
        "Title": "彩色的边框",
        "Description": "<p><strong>ColoredBorder</strong> prop 会移除警报背景，以突出 <strong>Border</strong> 属性 。如果设置了 <strong>Type</strong>，它将使用类型的默认颜色。如果没有设置 <strong>Color</strong> 或 <strong>Type</strong>\n，颜色将默认为所应用的主题的反色（黑色代表浅色，白色/灰色代表深色）。</p>\n",
        "Code": "@using AlertTypes = BlazorComponent.AlertTypes\r\n\r\n<div>\r\n    <MAlert Border=\"Borders.Left\"\r\n            ColoredBorder\r\n            Color=\"deep-purple accent-4\"\r\n            Elevation=\"2\">\r\n        Aliquam eu nunc. Fusce commodo aliquam arcu. In consectetuer turpis ut velit. Nulla facilisi..\r\n\r\n        Morbi mollis tellus ac sapien. Fusce vel dui. Praesent ut ligula non mi varius sagittis. Vivamus consectetuer hendrerit lacus. Suspendisse enim turpis, dictum sed, iaculis a, condimentum nec, nisi.\r\n    </MAlert>\r\n    <MAlert Border=\"Borders.Top\"\r\n            ColoredBorder\r\n            Type=\"AlertTypes.Info\"\r\n            Elevation=\"2\">\r\n        Vestibulum ullamcorper mauris at ligula. Nam pretium turpis et arcu. Ut varius tincidunt libero. Curabitur ligula sapien, tincidunt non, euismod vitae, posuere imperdiet, leo. Morbi nec metus.\r\n    </MAlert>\r\n    <MAlert Border=\"Borders.Bottom\"\r\n            ColoredBorder\r\n            Type=\"AlertTypes.Warning\"\r\n            Elevation=\"2\">\r\n        Sed in libero ut nibh placerat accumsan. Phasellus leo dolor, tempus non, auctor et, hendrerit quis, nisi. Phasellus leo dolor, tempus non, auctor et, hendrerit quis, nisi. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero. Donec elit libero, sodales nec, volutpat a, suscipit non, turpis.\r\n    </MAlert>\r\n    <MAlert Border=\"Borders.Right\"\r\n            ColoredBorder\r\n            Type=\"AlertTypes.Error\"\r\n            Elevation=\"2\">\r\n        Fusce commodo aliquam arcu. Pellentesque posuere. Phasellus tempus. Donec posuere vulputate arcu.\r\n    </MAlert>\r\n</div>",
        "Type": "Demos.Components.Alert.props.ColoredBorder",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 3,
        "Name": "dense",
        "Title": "紧凑",
        "Description": "<p><strong>Dense</strong> 属性会降低提示框的高度来制造出一个简单且紧凑的风格。如果和 <strong>Border</strong> 属性一起使用，那么边界高度也会一起降低来保持风格统一。</p>\n",
        "Code": "@using AlertTypes = BlazorComponent.AlertTypes\r\n\r\n<div>\r\n    <MAlert Dense\r\n            Type=\"AlertTypes.Info\">\r\n        I'm a dense alert with a <strong>type</strong> of info\r\n    </MAlert>\r\n    <MAlert Dense\r\n            Text\r\n            Type=\"AlertTypes.Success\">\r\n        I'm a dense alert with the <strong>text</strong> prop and a <strong>type</strong> of success\r\n    </MAlert>\r\n    <MAlert Dense\r\n            Border=\"Borders.Left\"\r\n            Type=\"AlertTypes.Warning\">\r\n        I'm a dense alert with the <strong>border</strong> prop and a <strong>type</strong> of warning\r\n    </MAlert>\r\n    <MAlert Dense\r\n            Outlined\r\n            Type=\"AlertTypes.Error\">\r\n        I'm a dense alert with the <strong>outlined</strong> prop and a <strong>type</strong> of error\r\n    </MAlert>\r\n</div>",
        "Type": "Demos.Components.Alert.props.Dense",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 4,
        "Name": "dismissible",
        "Title": "可关闭",
        "Description": "<p><strong>Dismissible</strong> 属性将会在提示框的尾部添加一个关闭按钮。点击此按钮将会将它的值设置为 false 且隐藏提示框。你也能够通过绑定 <strong>@bind-Value</strong> 的值为 true 来恢复提示框。关闭图标会自动应用\n<code>aria-label</code>，可以通过修改 <strong>CloseLabel</strong> 属性或者改变本地设置 close 的值来进行更改它。</p>\n",
        "Code": "<div>\r\n    <MAlert @bind-Value=\"visible\"\r\n            Border=\"Borders.Left\"\r\n            CloseLabel=\"Close Alert\"\r\n            Color=\"deep-purple accent-4\"\r\n            Dark\r\n            Dismissible>\r\n        Aenean imperdiet. Quisque id odio. Cras dapibus. Pellentesque ut neque. Cras dapibus.\r\n\r\n        Vivamus consectetuer hendrerit lacus. Sed mollis, eros et ultrices tempus, mauris ipsum aliquam libero, non adipiscing dolor urna a orci. Sed mollis, eros et ultrices tempus, mauris ipsum aliquam libero, non adipiscing dolor urna a orci. Curabitur blandit mollis lacus. Curabitur ligula sapien, tincidunt non, euismod vitae, posuere imperdiet, leo.\r\n    </MAlert>\r\n\r\n    @if (!visible)\r\n    {\r\n        <div class=\"text-center\">\r\n            <MButton Color=\"deep-purple accent-4\"\r\n                     Dark\r\n                     OnClick=\"() => visible = !visible\">\r\n                Reset\r\n            </MButton>\r\n        </div>\r\n    }\r\n</div>\r\n\r\n@code {\r\n    bool visible = true;\r\n}",
        "Type": "Demos.Components.Alert.props.Dismissible",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 5,
        "Name": "icon",
        "Title": "图标",
        "Description": "<p><strong>Icon</strong> 属性允许你在提示框的开头添加图标。如果提供了 <strong>Type</strong>，那么将会覆盖默认类型的图标。 此外设置 <strong>Icon</strong> 属性为 false 将会完全移除图标。</p>\n",
        "Code": "<div>\r\n    <MAlert Color=\"#2A3B4D\"\r\n            Dark\r\n            Icon=\"@(\"mdi-firework\")\"\r\n            Dense>\r\n        Suspendisse enim turpis, dictum sed, iaculis a, condimentum nec, nisi. Vivamus quis mi. Quisque ut nisi. Maecenas malesuada.\r\n    </MAlert>\r\n    <MAlert Color=\"#C51162\"\r\n            Dark\r\n            Icon=\"@(\"mdi-material-design\")\"\r\n            Border=\"Borders.Right\">\r\n        Phasellus blandit leo ut odio. Morbi mattis ullamcorper velit. Donec orci lectus, aliquam ut, faucibus non, euismod id, nulla. In ut quam vitae odio lacinia tincidunt.\r\n    </MAlert>\r\n    <MAlert Color=\"primary\"\r\n            Dark\r\n            Icon=\"@(\"mi-masa\")\"\r\n            Border=\"Borders.Left\"\r\n            Prominent>\r\n        Praesent congue erat at massa. Nullam vel sem. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Proin viverra, ligula sit amet ultrices semper, ligula arcu tristique sapien, a accumsan nisi mauris ac eros. Curabitur at lacus ac velit ornare lobortis.\r\n    </MAlert>\r\n</div>",
        "Type": "Demos.Components.Alert.props.Icon",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 6,
        "Name": "outlined",
        "Title": "轮廓",
        "Description": "<p><strong>Outlined</strong> 属性将会反转提示框的风格，它会继承当前应用的 <strong>Color</strong> 并应用与文本和边框且将其背景透明化。</p>\n",
        "Code": "@using AlertTypes = BlazorComponent.AlertTypes\r\n\r\n<div>\r\n    <MAlert Outlined\r\n            Color=\"purple\">\r\n        <div class=\"text-h6\">\r\n            Lorem Ipsum\r\n        </div>\r\n        <div>Maecenas ullamcorper, dui et placerat feugiat, eros pede varius nisi, condimentum viverra felis nunc et lorem. Duis vel nibh at velit scelerisque suscipit. Praesent blandit laoreet nibh. Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc, eu sollicitudin urna dolor sagittis lacus. Etiam sollicitudin, ipsum eu pulvinar rutrum, tellus ipsum laoreet sapien, quis venenatis ante odio sit amet eros.</div>\r\n    </MAlert>\r\n    <MAlert Outlined\r\n            Type=\"AlertTypes.Success\"\r\n            Text>\r\n        Praesent venenatis metus at tortor pulvinar varius. Aenean commodo ligula eget dolor. Praesent ac massa at ligula laoreet iaculis. Vestibulum ullamcorper mauris at ligula.\r\n    </MAlert>\r\n    <MAlert Outlined\r\n            Type=\"AlertTypes.Warning\"\r\n            Prominent\r\n            Border=\"Borders.Left\">\r\n        Duis arcu tortor, suscipit eget, imperdiet nec, imperdiet iaculis, ipsum. Suspendisse non nisl sit amet velit hendrerit rutrum. Nullam vel sem. Pellentesque dapibus hendrerit tortor.\r\n    </MAlert>\r\n</div>",
        "Type": "Demos.Components.Alert.props.Outlined",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 7,
        "Name": "prominent",
        "Title": "突出",
        "Description": "<p><strong>Prominent</strong> 属性通过增加高度并向图标施加光晕来提供更明显的提示。当同时应用 <strong>Prominent</strong> 和 <strong>Dense</strong> 时，提示框将会呈现出普通的风格但是会 <strong>Prominent</strong> 图标特效。</p>\n",
        "Code": "@using AlertTypes = BlazorComponent.AlertTypes\r\n\r\n<div>\r\n    <MAlert Prominent\r\n            Type=\"AlertTypes.Error\">\r\n        <MRow Align=\"@AlignTypes.Center\">\r\n            <MCol Class=\"grow\">\r\n                Nunc nonummy metus. Nunc interdum lacus sit amet orci. Nullam dictum felis eu pede mollis pretium. Cras id dui.\r\n            </MCol>\r\n            <MCol Class=\"shrink\">\r\n                <MButton>Take action</MButton>\r\n            </MCol>\r\n        </MRow>\r\n    </MAlert>\r\n    <MAlert Color=\"blue-grey\"\r\n            Dark\r\n            Dense\r\n            Icon=\"@(\"mdi-school\")\"\r\n            Prominent>\r\n        Sed augue ipsum, egestas nec, vestibulum et, malesuada adipiscing, dui. Aenean ut eros et nisl sagittis vestibulum. Sed aliquam ultrices mauris. Donec vitae orci sed dolor rutrum auctor.\r\n    </MAlert>\r\n    <MAlert Icon=\"@(\"mdi-shield-lock-outline\")\"\r\n            Prominent\r\n            Text\r\n            Type=\"AlertTypes.Info\">\r\n        Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Sed in libero ut nibh placerat accumsan.. Curabitur blandit mollis lacus. Curabitur blandit mollis lacus.\r\n    </MAlert>\r\n</div>",
        "Type": "Demos.Components.Alert.props.Prominent",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 8,
        "Name": "shaped",
        "Title": "形状",
        "Description": "<p><strong>Shaped</strong> 属性将在 <code>MAlert</code> 的左上角和右下角添加边界半径。与其他样式的道具类似，<strong>Shaped</strong> 可以与其他属性（如 <strong>Dense</strong>, <strong>Prominent</strong>, <strong>Outlined</strong> and **\nText**）组合，以创建独特的定制组件。</p>\n",
        "Code": "@using AlertTypes = BlazorComponent.AlertTypes\r\n\r\n<div>\r\n    <MAlert Shaped\r\n            Dark\r\n            Color=\"info\">\r\n        I'm a shaped alert with a border-radius at top-left, bottom-right\r\n    </MAlert>\r\n    <MAlert Shaped\r\n            Outlined\r\n            Type=\"AlertTypes.Success\">\r\n        I'm a shaped alert with a outline option\r\n    </MAlert>\r\n    <MAlert Shaped\r\n            Dense\r\n            Dark\r\n            Type=\"AlertTypes.Warning\">\r\n        I'm a shaped alert with a dense option option\r\n    </MAlert>\r\n    <MAlert Shaped\r\n            Prominent\r\n            Type=\"AlertTypes.Error\">\r\n        I'm a shaped alert with a dense prominent option that Praesent blandit laoreet nibh. Praesent nonummy mi in odio. Phasellus tempus. Mauris turpis nunc, blandit et, volutpat molestie, porta ut, ligula. Duis leo.\r\n    </MAlert>\r\n</div>",
        "Type": "Demos.Components.Alert.props.Shaped",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 8,
        "Name": "text",
        "Title": "文本",
        "Description": "<p><strong>Text</strong> 属性是一个简单的提示框变量，它对所提供的 <strong>Color</strong> 使用不透明的背景。类似于其他样式的属性，可与 <strong>Dense</strong>, <strong>Prominent</strong>, <strong>Outlined</strong> and <strong>Shaped</strong>\n等其他属性结合使用，以创建独特的定制组件。</p>\n",
        "Code": "@using AlertTypes = BlazorComponent.AlertTypes\r\n\r\n<div>\r\n    <MAlert Text\r\n            Color=\"info\">\r\n        <h3 class=\"Text-h5\">\r\n            Lorem Ipsum\r\n        </h3>\r\n        <div>Maecenas nec odio et ante tincidunt tempus. Sed mollis, eros et ultrices tempus, mauris ipsum aliquam libero, non adipiscing dolor urna a orci. Proin viverra, ligula sit amet ultrices semper, ligula arcu tristique sapien, a accumsan nisi mauris ac eros. Curabitur turpis.</div>\r\n\r\n        <MDivider Class=\"my-4 info\"\r\n                  Style=\"opacity: 0.22\"></MDivider>\r\n\r\n        <MRow Align=\"@AlignTypes.Center\"\r\n              NoGutters>\r\n            <MCol Class=\"grow\">\r\n                Proin magna. Vivamus in erat ut urna cursus vestibulum. Etiam imperdiet imperdiet orci.\r\n            </MCol>\r\n            <MSpacer></MSpacer>\r\n            <MCol Class=\"shrink\">\r\n                <MButton Color=\"info\"\r\n                         Outlined>\r\n                    Okay\r\n                </MButton>\r\n            </MCol>\r\n        </MRow>\r\n    </MAlert>\r\n    <MAlert Text\r\n            Outlined\r\n            Color=\"deep-orange\"\r\n            Icon=\"@(\"mdi-fire\")\">\r\n        Nullam tincidunt adipiscing enim. In consectetuer turpis ut velit. Maecenas egestas arcu quis ligula mattis placerat. Praesent metus tellus, elementum eu, semper a, adipiscing nec, purus.\r\n    </MAlert>\r\n    <MAlert Text\r\n            Dense\r\n            Color=\"teal\"\r\n            Icon=\"@(\"mdi-clock-fast\")\"\r\n            Border=\"Borders.Left\">\r\n        Vestibulum ullamcorper mauris at ligula. Nulla porta dolor. Vestibulum facilisis, purus nec pulvinar iaculis, ligula mi congue nunc, vitae euismod ligula urna in dolor. Curabitur at lacus ac velit ornare lobortis.\r\n    </MAlert>\r\n    <MAlert Text\r\n            Prominent\r\n            Type=\"AlertTypes.Error\"\r\n            Icon=\"@(\"mdi-cloud-alert\")\">\r\n        Praesent blandit laoreet nibh. Praesent nonummy mi in odio. Phasellus tempus. Mauris turpis nunc, blandit et, volutpat molestie, porta ut, ligula. Duis leo.\r\n    </MAlert>\r\n</div>",
        "Type": "Demos.Components.Alert.props.Text",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 8,
        "Name": "transition",
        "Title": "过渡",
        "Description": "<p><strong>Transition</strong> 属性可让你向提示框应用一个过渡，该动画在隐藏和显示组件时可见。 你可以在 <a href=\"/stylesandanimations/transitions\">内建过渡</a> 浏览更多信息。</p>\n",
        "Code": "<div>\r\n    <div class=\"text-center mb-4\">\r\n        <MButton Color=\"primary\"\r\n                 OnClick=\"()=>_alert = !_alert\">\r\n            Toggle\r\n        </MButton>\r\n    </div>\r\n    <MAlert Value=\"_alert\"\r\n            Color=\"pink\"\r\n            Dark\r\n            Border=\"Borders.Top\"\r\n            Icon=\"@(\"mdi-home\")\"\r\n            Transition=\"scale-transition\">\r\n        Phasellus tempus. Fusce ac felis sit amet ligula pharetra condimentum. In dui magna, posuere eget, vestibulum et, tempor auctor, justo. Pellentesque posuere. Curabitur ligula sapien, tincidunt non, euismod vitae, posuere imperdiet, leo.\r\n\r\n        Phasellus nec sem in justo pellentesque facilisis. Phasellus magna. Cras risus ipsum, faucibus ut, ullamcorper id, varius ac, leo. In hac habitasse platea dictumst. Praesent turpis.\r\n    </MAlert>\r\n</div>\r\n\r\n  @code {\r\n    private bool _alert = true;\r\n  }",
        "Type": "Demos.Components.Alert.props.Transition",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 8,
        "Name": "twitter",
        "Title": "Twitter",
        "Description": "<p>通过将 <strong>Color</strong>、<strong>Dismissible</strong>、<strong>Border</strong>、<strong>Elevation</strong>、<strong>Icon</strong> 和 <strong>ColoredBorder</strong> 属性组合在一起，你可以创建时尚的自定义提醒，比如这个 twitter\n通知。</p>\n",
        "Code": "<div>\r\n    <div>\r\n        <MAlert @bind-Value=\"_alert\"\r\n                Dismissible\r\n                Color=\"cyan\"\r\n                Border=\"Borders.Left\"\r\n                Elevation=\"2\"\r\n                ColoredBorder\r\n                Icon=\"@(\"mdi-twitter\")\">\r\n            You've got <strong>5</strong> new updates on your timeline!\r\n        </MAlert>\r\n\r\n        <div class=\"text-center\">\r\n            @if (!_alert)\r\n            {\r\n                <MButton Dark\r\n                         OnClick=\"() => _alert = true\">\r\n                    Reset Alert\r\n                </MButton>\r\n            }\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n@code{\r\n    private bool _alert = true;\r\n}",
        "Type": "Demos.Components.Alert.props.Twitter",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 9,
        "Name": "type",
        "Title": "类型",
        "Description": "<p><strong>Type</strong> 属性提供 4 种默认的样式：<strong>Success</strong>, <strong>Info</strong>, <strong>Warning</strong>, 和 <strong>Error</strong>。每个样式都提供默认图标和颜色。</p>\n",
        "Code": "@using AlertTypes = BlazorComponent.AlertTypes\r\n\r\n<div>\r\n    <MAlert Type=\"AlertTypes.Success\">\r\n        I'm a success alert.\r\n    </MAlert>\r\n\r\n    <MAlert Type=\"AlertTypes.Info\">\r\n        I'm an info alert.\r\n    </MAlert>\r\n\r\n    <MAlert Type=\"AlertTypes.Warning\">\r\n        I'm a warning alert.\r\n    </MAlert>\r\n\r\n    <MAlert Type=\"AlertTypes.Error\">\r\n        I'm an error alert.\r\n    </MAlert>\r\n</div>",
        "Type": "Demos.Components.Alert.props.Type",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/buttons",
      "/components/icons",
      "/components/dialogs"
    ],
    "Subtitle": "提示框",
    "Title": "Alerts",
    "Type": "提示框"
  },
  {
    "Desc": "<p>在 MASA Blazor 中，<code>MApp</code> 组件和 <code>MNavigationDrawer</code>、<code>MAppBar</code>、<code>MFooter</code> 等组件上的 App 属性，帮助你的应用围绕 <code>MMain</code> 组件进行适当的大小调整。\n这使你可以创建真正独特的界面，无需因管理布局尺寸而烦恼。 所有应用都需要 <code>MApp</code> 组件。 这是许多 <code>MASA Blazor</code> 组件和功能的挂载点，并确保它将默认的应用主题\n（Dark/Light）传递给子组件，并确保在浏览器中对某些点击事件的正确跨浏览器支持。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MApp\">MApp</a></li>\n<li><a href=\"/api/MMain\">MMain</a></li>\n</ul>\n<!--alert:error-->\n<p>为了让你的应用正常工作，你必须将其包裹在 <code>MApp</code> 组件中。 该组件是确保正确的跨浏览器兼容性所必需的。 MASA Blazor 不支持在一个页面上有多个孤立的 \nMasa.Blazor 实例。 <code>MApp</code> 可以存在于你的应用主体的任何地方，但是只能有一个，而且它必须是所有 MASA Blazor 组件的祖先节点。</p>\n<!--/alert:error-->\n<!--alert:info-->\n<p>如果你在应用中使用多个布局，你需要确保每个包含组件的根布局文件在其模板的根部有一个 <code>MApp</code>。</p>\n<!--/alert:info-->\n",
      "默认应用标记": "\n<p>这是一个默认应用标记的例子。 只要设置 <strong>App</strong> 属性，你可以将布局元素放在任何地方。此处的关键组件是<code>MMain</code>。它将会根据您分配的 app\n组件动态地调整大小。你可以使用上述任何或所有组件的组合，包括 <code>MBottomNavigation</code>。</p>\n<pre><code class=\"language-html\">&lt;!-- MainLayout.razor --&gt;\n@inherits LayoutComponentBase\n\n&lt;MApp&gt;\n  &lt;MNavigationDrawer App&gt;\n    &lt;!-- --&gt;\n  &lt;/MNavigationDrawer&gt;\n\n  &lt;MAppBar App&gt;\n    &lt;!-- --&gt;\n  &lt;/MAppBar&gt;\n\n  &lt;!-- 根据应用组件来调整你的内容 --&gt;\n  &lt;MMain&gt;\n    &lt;!-- 给应用提供合适的间距 --&gt;\n    &lt;MContainer Fluid&gt;\n        @Body\n    &lt;/MContainer&gt;\n  &lt;/MMain&gt;\n\n  &lt;MFooter App&gt;\n    &lt;!-- --&gt;\n  &lt;/MFooter&gt;\n&lt;/MApp&gt;\n</code></pre>\n<!--alert:info-->\n<p>设置 <strong>App</strong> 属性会自动给布局元素设置 position: <strong>fixed</strong>。 如果你的应用程序需要一个绝对定位元素，你可以使用 <strong>Absolute</strong> 属性来覆盖这个功能。</p>\n<!--/alert:info-->\n",
      "应用组件": "\n<p>以下是所有支持 <strong>App</strong> 属性的组件列表，这些组件可以在你的应用中用作布局元素。 这些组件可以混合和匹配，并且每个特定组件在任何时候都只能存在一个。 不过，你可以把它们换掉，布局也能适应。\n有关如何构建各种布局的一些示例，请查看预制布局页面。</p>\n<p>每一个应用组件都有一个指定的位置和优先级，影响布局系统中的位置。</p>\n<ul>\n<li><a href=\"/components/app-bars\">MAppBar</a>：总是放在应用顶部，优先级低于 <code>MSystemBar</code>。</li>\n<li>MBottomNavigation：总是放在应用底部，优先级高于 <code>MFooter</code>。</li>\n<li><a href=\"/components/footers\">MFooter</a>：总是放在应用底部，优先级低于 <code>MBottomNavigation</code>。</li>\n<li><a href=\"/components/navigation-drawers\">MNavigationDrawer</a>：可以放置在应用的左边或右边，并且可以配置在 <code>MAppBar</code> 的旁边或下面。</li>\n<li><a href=\"/components/system-bars\">MSystemBar</a>：总是放在应用顶部，优先级高于 <code>MAppBar</code>。</li>\n</ul>\n",
      "应用服务": "\n<p>应用服务用于配置你的布局。 它与 <code>MMain</code> 组件通信，以便它能够正确地调整应用内容。 它有一些可以访问的属性：</p>\n<pre><code class=\"language-csharp\">double Bar { get; }\ndouble Bottom { get; }\ndouble Footer { get; }\ndouble InsetFooter { get; }\ndouble Left { get; }\ndouble Right { get; }\ndouble Top { get; }\n</code></pre>\n<p>当你使用 <strong>App</strong> 属性添加和删除组件时，这些值会自动更新。 它们是不可编辑的，并且以只读状态存在。 你可以通过引用 <strong>Application</strong> 对象的应用属性来访问这些值。</p>\n<pre><code class=\"language-csharp\"> [Inject] public MasaBlazor MasaBlazor { get; set; }\n \n Console.WriteLine(MasaBlazor.Application.Footer); // 60\n</code></pre>\n<!--alert:error-->\n<p>为了让你的应用正常工作，你必须将其包裹在 <code>MApp</code> 组件中。 该组件是确保正确的跨浏览器兼容性所必需的。</p>\n<!--/alert:error-->\n"
    },
    "LastWriteTime": "0001-01-01T00:00:00",
    "DemoList": [],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/features/theme",
      "/components/app-bars",
      "/components/navigation-drawers"
    ],
    "Subtitle": "应用程序",
    "Title": "Application",
    "Type": "应用程序"
  },
  {
    "Desc": "<p><code>MResponsive</code> 组件可用于将任何部分固定到特定的宽高比。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MResponsive\">MResponsive</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.4436281+08:00",
    "DemoList": [
      {
        "Order": 1,
        "Name": "basic",
        "Title": "使用",
        "Description": "<p>指定自定义长宽比</p>\n",
        "Code": "<div>\r\n    <MCard>\r\n        <MResponsive AspectRatio=\"16/9D\">\r\n            <MCardText>\r\n                This card will always be 16:9 (unless you put more stuff in it)\r\n            </MCardText>\r\n        </MResponsive>\r\n    </MCard>\r\n</div>",
        "Type": "Demos.Components.AspectRatios.usage.Basic",
        "Style": "",
        "Debug": false,
        "Group": 4
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/cards",
      "/components/sheets",
      "/components/images"
    ],
    "Subtitle": "长宽比",
    "Title": "Aspect ratios",
    "Type": "长宽比"
  },
  {
    "Desc": "<p>MAvatar 组件通常用于显示用户个人资料图片。 此组件允许您动态添加设置响应图像、图标和文字的边框半径。 ** tile ** 变量可用来显示无边框半径的头像。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MAvatar\">MAvatar</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.4471423+08:00",
    "DemoList": [
      {
        "Order": 1,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>头像以最简单的形式在圆形容器中显示内容。</p>\n",
        "Code": "<div class=\"text-center\" style=\"width:100%\">\r\n    <MAvatar Color=\"primary\" Size=\"56\">\r\n        <span class=\"white--text\">VJ</span>\r\n    </MAvatar>\r\n</div>",
        "Type": "Demos.Components.Avatar.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "size",
        "Title": "尺寸",
        "Description": "<p>size属性允许你定义m-avatar的高度和宽度。此属性以1的纵横比均匀缩放。height和width属性将覆盖此属性。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.SpaceAround\">\r\n    <MAvatar Color=\"indigo\"\r\n             Size=\"36\">\r\n        <span class=\"white--text text-h5\">36</span>\r\n    </MAvatar>\r\n\r\n    <MAvatar Color=\"teal\"\r\n             Size=\"48\">\r\n        <span class=\"white--text text-h5\">48</span>\r\n    </MAvatar>\r\n\r\n    <MAvatar Color=\"orange\"\r\n             Size=\"62\">\r\n        <span class=\"white--text text-h5\">62</span>\r\n    </MAvatar>\r\n</MRow>\r\n",
        "Type": "Demos.Components.Avatar.props.Size",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "tile",
        "Title": "方块",
        "Description": "<p>tile属性移除了m-avatar的边界半径，只留下一个简单的方形头像。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MAvatar Tile Color=\"blue\">\r\n        <MIcon Dark>mdi-alarm</MIcon>\r\n    </MAvatar>\r\n</div>\r\n",
        "Type": "Demos.Components.Avatar.props.Tile",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "default",
        "Title": "默认值",
        "Description": "<p>m-avatar 默认插槽将接受 m-icon 组件、图像或文本。 将这些道具与其他道具混合搭配以创造独特的东西。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.SpaceAround\">\r\n\t<MAvatar Color=\"indigo\">\r\n\t\t<MIcon Dark>mdi-account-circle</MIcon>\r\n\t</MAvatar>\r\n\r\n\t<MAvatar>\r\n\t\t<MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/jack.png\" Alt=\"Jack\"></MImage>\r\n\t</MAvatar>\r\n\r\n\t<MAvatar Color=\"red\">\r\n\t\t<span class=\"white--text text-h5\">CJ</span>\r\n\t</MAvatar>\r\n</MRow>",
        "Type": "Demos.Components.Avatar.contents.Default",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 5,
        "Name": "businesscard",
        "Title": "个人名片",
        "Description": "<p>使用 tile prop，我们可以创建一个名片。</p>\n",
        "Code": "<MCard Class=\"mx-auto\" MaxWidth=\"434\" Tile>\r\n\t<MImage Height=\"@(\"100%\")\" Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/cards/server-room.jpg\">\r\n\t\t<MRow Align=\"AlignTypes.End\" Class=\"fill-height\">\r\n\t\t\t<MCol Align=\"AlignTypes.Start\" Class=\"pa-0\" Cols=\"12\">\r\n\t\t\t\t<MAvatar Class=\"profile\" Color=\"grey\" Size=\"164\" Tile>\r\n\t\t\t\t\t<MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/marcus1.png\"></MImage>\r\n\t\t\t\t</MAvatar>\r\n\t\t\t</MCol>\r\n\t\t\t<MCol Class=\"py-0\">\r\n\t\t\t\t<MListItem Color=\"rgba(0, 0, 0, .4)\" Dark>\r\n\t\t\t\t\t<MListItemContent>\r\n\t\t\t\t\t\t<MListItemTitle Class=\"text-h6\">Marcus Obrien</MListItemTitle>\r\n\t\t\t\t\t\t<MListItemSubtitle>Network Engineer</MListItemSubtitle>\r\n\t\t\t\t\t</MListItemContent>\r\n\t\t\t\t</MListItem>\r\n\t\t\t</MCol>\r\n\t\t</MRow>\r\n\t</MImage>\r\n</MCard>",
        "Type": "Demos.Components.Avatar.misc.BusinessCard",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 4,
        "Name": "menu",
        "Title": "菜单",
        "Description": "<p>你可以将头像和菜单结合起来。</p>\n",
        "Code": "<MContainer Fluid Style=\"height:300px\">\r\n\t<MRow Justify=\"JustifyTypes.Center\">\r\n\t\t<MMenu Bottom MinWidth=\"200\" Rounded=\"@true\" OffsetY>\r\n\t\t\t<ActivatorContent>\r\n\t\t\t\t<MButton Icon XLarge @attributes=\"@context.Attrs\">\r\n\t\t\t\t\t<MAvatar Color=\"brown\" Size=\"48\">\r\n\t\t\t\t\t\t<span class=\"white--text text-h5\">@initials</span>\r\n\t\t\t\t\t</MAvatar>\r\n\t\t\t\t</MButton>\r\n\t\t\t</ActivatorContent>\r\n\t\t\t<ChildContent>\r\n\t\t\t\t<MCard>\r\n\t\t\t\t\t<MListItemContent Class=\"justify-center\">\r\n\t\t\t\t\t\t<div class=\"mx-auto text-center\">\r\n\t\t\t\t\t\t\t<MAvatar Color=\"brown\">\r\n\t\t\t\t\t\t\t\t<span class=\"white--text text-h5\">@initials</span>\r\n\t\t\t\t\t\t\t</MAvatar>\r\n\t\t\t\t\t\t\t<h3>@fullName</h3>\r\n\t\t\t\t\t\t\t<p class=\"text-caption mt-1\">@email</p>\r\n\t\t\t\t\t\t\t<MDivider class=\"my-3\"></MDivider>\r\n\t\t\t\t\t\t\t<MButton Depressed Rounded Text>Edit Account</MButton>\r\n\t\t\t\t\t\t\t<MDivider class=\"my-3\"></MDivider>\r\n\t\t\t\t\t\t\t<MButton Depressed Rounded Text>Disconnect</MButton>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</MListItemContent>\r\n\t\t\t\t</MCard>\r\n\t\t\t</ChildContent>\r\n\t\t</MMenu>\r\n\t</MRow>\r\n</MContainer>\r\n\r\n@code {\r\n\tstring initials = \"JD\";\r\n\tstring fullName = \"John Doe\";\r\n\tstring email = \"john.doe@doe.com\";\r\n}",
        "Type": "Demos.Components.Avatar.misc.Menu",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 3,
        "Name": "other",
        "Title": "高级用法",
        "Description": "<p>将头像与其他组件组合在一起，你就可以构建漂亮的用户界面。</p>\n",
        "Code": "<MContainer Fluid>\r\n\t<MRow Justify=\"JustifyTypes.Center\">\r\n\t\t<MSubheader>\r\n\t\t\tToday\r\n\t\t</MSubheader>\r\n\t\t<MExpansionPanels PopOut>\r\n\t\t\t@foreach(var message in Messages)\r\n\t\t\t{\r\n\t\t\t\t<MExpansionPanel Key=\"@message.Key\" HideActions>\r\n\t\t\t\t\t<MExpansionPanelHeader>\r\n\t\t\t\t\t\t<MRow Align=\"AlignTypes.Center\" Class=\"spacer\" NoGutters>\r\n\t\t\t\t\t\t\t<MCol Cols=\"4\" Sm=\"2\" Md=\"1\">\r\n\t\t\t\t\t\t\t\t<MAvatar Size=\"36\">\r\n\t\t\t\t\t\t\t\t\t@if(!string.IsNullOrWhiteSpace(message.Avatar)) \r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t<MImage Alt=\"Avatar\" Src=\"@message.Avatar\"></MImage>\r\n\t\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t\t\telse \r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t<MIcon Color=\"@message.Color\">@message.Icon</MIcon>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</MAvatar>\r\n\t\t\t\t\t\t\t</MCol>\r\n\r\n\t\t\t\t\t\t\t<MCol Class=\"hidden-xs-only\" Sm=\"5\" Md=\"3\">\r\n\t\t\t\t\t\t\t\t<strong>@message.Name</strong>\r\n\t\t\t\t\t\t\t\t@if(message.Total > 0) \r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t<span class=\"grey--text\">@($\"({message.Total})\")</span>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</MCol>\r\n\r\n\t\t\t\t\t\t\t<MCol Class=\"text-no-wrap\" Cols=\"5\" Sm=\"3\">\r\n\t\t\t\t\t\t\t\t@if(message.New > 0) \r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t<MChip Color=\"@($\" {message.Color} lighten-4 \")\" Class=\"ml-0 mr-2 black--text\" Label Small>@($\"{message.New} new\")</MChip>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<strong>@message.Title</strong>\r\n\t\t\t\t\t\t\t</MCol>\r\n\r\n\t\t\t\t\t\t\t@if(!string.IsNullOrWhiteSpace(message.Excerpt)) \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t<MCol Class=\"grey--text text-truncate hidden-sm-and-down\">@message.Excerpt</MCol>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</MRow>\r\n\t\t\t\t\t</MExpansionPanelHeader>\r\n\r\n\t\t\t\t\t<MExpansionPanelContent>\r\n\t\t\t\t\t\t<MDivider></MDivider>\r\n\t\t\t\t\t\t<MCardText>@_lorem</MCardText>\r\n\t\t\t\t\t</MExpansionPanelContent>\r\n\t\t\t\t</MExpansionPanel>\r\n\t\t\t}\r\n\t\t</MExpansionPanels>\r\n\t</MRow>\r\n</MContainer>\r\n\r\n@code\r\n{\r\n    private string _lorem = \"Lorem ipsum dolor sit amet, at aliquam vivendum vel, everti delicatissimi cu eos.\" + \r\n\t\t\" Dico iuvaret debitis mel an, et cum zril menandri. Eum in consul legimus accusam. Ea dico abhorreant duo,\" + \r\n\t\t\" quo illum minimum incorrupte no, nostro voluptaria sea eu. Suas eligendi ius at, at nemore equidem est.\" + \r\n\t\t\" Sed in error hendrerit, in consul constituam cum.\";\r\n\r\n    private class MessageDemo\r\n    {\r\n        public int Key { get; set; }\r\n        public string Avatar { get; set; }\r\n        public string Color { get; set; }\r\n        public string Icon { get; set; }\r\n        public string Name { get; set; }\r\n        public int Total { get; set; }\r\n        public int New { get; set; }\r\n        public string Title { get; set; }\r\n        public string Excerpt { get; set; }\r\n    }\r\n\r\n    private List<MessageDemo> Messages = new()\r\n    {\r\n        new () \r\n\t\t{ \r\n\t\t\tKey = 1,\r\n\t\t\tAvatar = \"https://cdn.masastack.com/stack/images/website/masa-blazor/doddgu.png\", \r\n\t\t\tName = \"doddgu\",\r\n\t\t\tTotal = 0,\r\n\t\t\tTitle = \"Welcome to MASA Blazor!\",\r\n\t\t\tExcerpt = \" — Thank you for joining our community... \"\r\n\t\t},\r\n        new () \r\n\t\t{ \r\n\t\t\tKey = 2,\r\n\t\t\tIcon = \"mdi-account-multiple\",\r\n\t\t\tColor = \"red\", \r\n\t\t\tName = \"Social\",\r\n\t\t\tTotal = 3,\r\n\t\t\tTitle = \"Twitter\", \r\n\t\t\tNew = 1 \r\n\t\t},\r\n        new () \r\n\t\t{ \r\n\t\t\tKey = 3,\r\n\t\t\tIcon = \"mdi-tag\", \r\n\t\t\tColor = \"teal\", \r\n\t\t\tName = \"Promos\",\r\n\t\t\tTotal = 4,\r\n\t\t\tTitle = \"Shop your way\", \r\n\t\t\tNew = 2 \r\n\t\t}\r\n    };\r\n}",
        "Type": "Demos.Components.Avatar.misc.Other",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/badges",
      "/components/icons",
      "/components/lists"
    ],
    "Subtitle": "头像",
    "Title": "Avatars",
    "Type": "头像"
  },
  {
    "Desc": "<p>MBadge组件可以上覆或订阅一个像头像的图标，或者内容上的文本来突出显示用户的信息，或只是提请注意某个特定元素。 徽章中的内容通常包含数字或图标。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MBadge\">MBadge</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.4501417+08:00",
    "DemoList": [
      {
        "Order": 1,
        "Name": "basic",
        "Title": "使用",
        "Description": "<p>最简单形式的徽章显示在它包装的内容的右上角，并且需要徽章插槽。</p>\n",
        "Code": "<div class=\"text-center\" style=\"width:100%\">\r\n    <MBadge>\r\n        <MIcon Size=\"36\">mi-masa</MIcon>\r\n    </MBadge>\r\n</div>",
        "Type": "Demos.Components.Badge.usage.Basic",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "customize",
        "Title": "自定义选项",
        "Description": "<p>MBadge组件是灵活的，可以用于众多元素的各种使用案例。 调整位置的选项也可以通过 offset-x 和 offset-y props。</p>\n",
        "Code": "<MContainer>\r\n\t<MRow Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n\t\t<MBadge OverLap Bordered Color=\"error\" Icon=\"mdi-lock\">\r\n\t\t\t<ChildContent>\r\n\t\t\t\t<MButton Class=\"white--text\" Color=\"error\" Depressed>Lock Account\r\n\t\t\t\t</MButton>\r\n\t\t\t</ChildContent>\r\n\t\t</MBadge>\r\n\t\t<div class=\"mx-3\">\r\n\t\t</div>\r\n\t\t<MBadge Bordered Bottom Color=\"deep-purple accent-4\" Dot OffsetX=\"10\" OffsetY=\"10\">\r\n\t\t\t<ChildContent>\r\n\t\t\t\t<MAvatar Size=\"40\">\r\n\t\t\t\t\t<MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/2.png\">\r\n\t\t\t\t\t</MImage>\r\n\t\t\t\t</MAvatar>\r\n\t\t\t</ChildContent>\r\n\t\t</MBadge>\r\n\t\t<div class=\"mx-3\">\r\n\t\t</div>\r\n\t\t<MBadge Avatar Bordered OverLap>\r\n\t\t\t<BadgeContent>\r\n\t\t\t\t<MAvatar>\r\n\t\t\t\t\t<MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/logos/b.svg\">\r\n\t\t\t\t\t</MImage>\r\n\t\t\t\t</MAvatar>\r\n\t\t\t</BadgeContent>\r\n\t\t\t<ChildContent>\r\n\t\t\t\t<MAvatar Size=\"40\">\r\n\t\t\t\t\t<MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/jack.png\">\r\n\t\t\t\t\t</MImage>\r\n\t\t\t\t</MAvatar>\r\n\t\t\t</ChildContent>\r\n\t\t</MBadge>\r\n\t</MRow>\r\n</MContainer>",
        "Type": "Demos.Components.Badge.misc.Customize",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 1,
        "Name": "dynamicnotification",
        "Title": "动态通知",
        "Description": "<p>你可以将徽章与动态内容合并，以创建通知系统之类的东西。</p>\n",
        "Code": "<MContainer>\r\n\t<MRow Justify=\"JustifyTypes.SpaceAround\">\r\n\t\t<div>\r\n\t\t\t<MButton Class=\"mx-1\" Color=\"primary\" OnClick=\"Send\">Send Message\r\n\t\t\t</MButton>\r\n\t\t\t<MButton Class=\"mx-1\" Color=\"error\" OnClick=\"Clear\">Clear Notifications\r\n\t\t\t</MButton>\r\n\t\t</div>\r\n\t\t<MBadge Content=\"_message\" Value=\"_message != 0\" Color=\"green\"\r\n\t\tOverLap>\r\n\t\t\t<ChildContent>\r\n\t\t\t\t<MIcon Large>mi-masa</MIcon>\r\n\t\t\t</ChildContent>\r\n\t\t</MBadge>\r\n\t</MRow>\r\n</MContainer>\r\n\r\n@code\r\n{\r\n    private int _message = 0;\r\n\r\n    private void Send() => _message++;\r\n\r\n    private void Clear() => _message = 0;\r\n}",
        "Type": "Demos.Components.Badge.misc.DynamicNotification",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 2,
        "Name": "hover",
        "Title": "鼠标悬停显示",
        "Description": "<p>你可以用可见性控制做很多事情，例如，在鼠标悬停时显示徽章。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MBadge\r\n      Value=\"_hover\"\r\n      Color=\"deep-purple accent-4\"\r\n      Content=\"@(\"9999+\")\"\r\n      Left\r\n      Transition=\"slide-x-transition\"\r\n    >\r\n      <MHover @bind-Value=\"_hover\">\r\n        <MIcon\r\n          Color=\"grey lighten-1\"\r\n          Large\r\n          @attributes=\"context.Attrs\"\r\n        >\r\n          mdi-account\r\n        </MIcon>\r\n      </MHover>\r\n    </MBadge>\r\n  </div>\r\n\r\n  @code{\r\n      private bool _hover;\r\n  }",
        "Type": "Demos.Components.Badge.misc.Hover",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 3,
        "Name": "tabs",
        "Title": "标签页",
        "Description": "<p>徽章有助于以各种方式向用户传递信息。</p>\n",
        "Code": "<MToolbar>\r\n    <MTabs BackgroundColor=\"primary\" Grow Dark>\r\n        <MTab>\r\n            <MBadge Color=\"pink\" Dot>\r\n                Item One\r\n            </MBadge>\r\n        </MTab>\r\n        <MTab>\r\n            <MBadge Color=\"green\" Content=\"6\">\r\n                Item Two\r\n            </MBadge>\r\n        </MTab>\r\n        <MTab>\r\n            <MBadge Color=\"deep-purple accent-4\" Icon=\"mi-masa\">\r\n                Item Three\r\n            </MBadge>\r\n        </MTab>\r\n    </MTabs>\r\n</MToolbar>",
        "Type": "Demos.Components.Badge.misc.Tabs",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/avatars",
      "/components/icons",
      "/components/toolbars"
    ],
    "Subtitle": "徽章",
    "Title": "Badges",
    "Type": "徽章"
  },
  {
    "Desc": "<p>MBanner组件被用来作为向用户发送1-2动作的中间段描述信息。 它有两个变量单行and多行(默认多行展示)。 这些图标可以与您的消息和操作一起使用。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MBanner\">MBanner</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.4531421+08:00",
    "DemoList": [
      {
        "Order": 1,
        "Name": "basic",
        "Title": "使用",
        "Description": "<p>横幅可以有 1-2 行文本、动作和图标。</p>\n",
        "Code": "<div style=\"width:100%\">\r\n    <MBanner>\r\n         A banner for use on desktop / mobile \r\n    </MBanner>\r\n</div>",
        "Type": "Demos.Components.Banner.usage.Basic",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "singleLine",
        "Title": "单行亮色主题",
        "Description": "<p>单行 MBanner 用于少量信息，建议仅用于桌面实现。 您可以选择启用粘性道具以确保内容固定在屏幕上（注意：在 IE11 中不起作用）。</p>\n",
        "Code": "<MCard>\r\n\t<MSystemBar></MSystemBar>\r\n\t<MToolbar Flat>\r\n\t\t<MToolbarTitle>\r\n\t\t\tMy Document\r\n\t\t</MToolbarTitle>\r\n\t\t<MSpacer>\r\n\t\t</MSpacer>\r\n\t\t<div>\r\n\t\t\t<MSwitch Label=\"Sticky Banner\" HideDetails=\"true\" @bind-Value=\"_sticky\">\r\n\t\t\t</MSwitch>\r\n\t\t</div>\r\n\t</MToolbar>\r\n\t<MBanner SingleLine>\r\n\t\t<ChildContent>\r\n\t\t\tWe can't save your edits while you are in offline mode.\r\n\t\t</ChildContent>\r\n\t\t<ActionsContent>\r\n\t\t\t<MButton Text Color=\"deep-purple accent-4\">\r\n\t\t\t\tGet Online\r\n\t\t\t</MButton>\r\n\t\t</ActionsContent>\r\n\t</MBanner>\r\n\t<MCardText Class=\"grey lighten-4\" @bind-Sticky=\"_sticky\">\r\n\t\t<MSheet MaxWidth=\"800\" Height=\"300\" Class=\"mx-auto\">\r\n\t\t</MSheet>\r\n\t</MCardText>\r\n</MCard>\r\n\r\n@code\r\n{\r\n\tprivate bool _sticky = false;\r\n}",
        "Type": "Demos.Components.Banner.props.SingleLine",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "iconClick",
        "Title": "图标事件",
        "Description": "<p>横幅上的图标在点击时发出 click:icon 事件，该事件带有自定义图标插槽。</p>\n",
        "Code": "<MBanner SingleLine OnIconClick=\"Alert\">\r\n\t<IconContent>\r\n\t\t<MIcon Color=\"warning\" Size=\"36\">mdi-wifi-strength-alert-outline\r\n\t\t</MIcon>\r\n\t</IconContent>\r\n\t<ChildContent>\r\n\t\tUnable to verify your Internet connection\r\n\t</ChildContent>\r\n\t<ActionsContent>\r\n\t\t<MButton Text Color=\"primary\">\r\n\t\t\tConnection Settings\r\n\t\t</MButton>\r\n\t</ActionsContent>\r\n</MBanner>\r\n\r\n@code\r\n{\r\n\t[Inject]\r\n\tprivate IJSRuntime Js { get; set; }\r\n\r\n\tprivate void Alert()\r\n\t{\r\n\t\tJs.InvokeVoidAsync(\"alert\", \"Hello world!\");\r\n\t}\r\n}",
        "Type": "Demos.Components.Banner.events.IconClick",
        "Style": "",
        "Debug": false,
        "Group": 1
      },
      {
        "Order": 2,
        "Name": "actions",
        "Title": "行为",
        "Description": "<p>Actions 插槽在其范围内具有 dismiss 功能，你可以使用它来轻松地隐藏横幅。</p>\n",
        "Code": "<div>\r\n\t<MCheckbox Label=\"Visible\" @bind-Value=\"_sticky\">\r\n\t</MCheckbox>\r\n\t<MBanner SingleLine @bind-Value=\"_sticky\">\r\n\t\t<ChildContent>\r\n\t\t\tNo Internet connection\r\n\t\t</ChildContent>\r\n\t\t<ActionsContent Context=\"dismiss\">\r\n\t\t\t<MButton Text Color=\"primary\" OnClick=\"dismiss\">\r\n\t\t\t\tDismiss\r\n\t\t\t</MButton>\r\n\t\t\t<MButton Text Color=\"primary\">\r\n\t\t\t\tRetry\r\n\t\t\t</MButton>\r\n\t\t</ActionsContent>\r\n\t</MBanner>\r\n</div>\r\n\r\n@code\r\n{\r\n\tprivate bool _sticky = true;\r\n}",
        "Type": "Demos.Components.Banner.contents.Actions",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 4,
        "Name": "icon",
        "Title": "图标",
        "Description": "<p>图标插槽允许你明确控制其包含的内容和功能。</p>\n",
        "Code": "<MBanner>\r\n\t<ChildContent>\r\n\t\tThree line text string example with two actions. One to two lines is preferable. Three lines should be considered the maximum string length on desktop in order to keep messages short and actionable.\r\n\t</ChildContent>\r\n\t<IconContent>\r\n\t\t<MAvatar Color=\"deep-purple accent-4\" Size=\"40\">\r\n\t\t\t<ChildContent>\r\n\t\t\t\t<MIcon Color=\"white\">mdi-lock\r\n\t\t\t\t</MIcon>\r\n\t\t\t</ChildContent>\r\n\t\t</MAvatar>\r\n\t</IconContent>\r\n\t<ActionsContent>\r\n\t\t<MButton Text Color=\"deep-purple accent-4\">\r\n\t\t\tAction\r\n\t\t</MButton>\r\n\t\t<MButton Text Color=\"deep-purple accent-4\">\r\n\t\t\tAction\r\n\t\t</MButton>\r\n\t</ActionsContent>\r\n</MBanner>",
        "Type": "Demos.Components.Banner.contents.Icon",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 5,
        "Name": "twoline",
        "Title": "两行",
        "Description": "<p>两行MBanner可以存储更大的数据量，用于大消息。 这是推荐的移动实现。</p>\n",
        "Code": "<MBanner>\r\n\t<ChildContent>\r\n\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent cursus nec sem id malesuada. Curabitur lacinia sem et turpis euismod, eget elementum ex pretium.\r\n\t</ChildContent>\r\n\t<ActionsContent>\r\n\t\t<MButton Text Color=\"primary\">\r\n\t\t\tDismiss\r\n\t\t</MButton>\r\n\t\t<MButton Text Color=\"primary\">\r\n\t\t\tRetry\r\n\t\t</MButton>\r\n\t</ActionsContent>\r\n</MBanner>",
        "Type": "Demos.Components.Banner.misc.TwoLine",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/alerts",
      "/components/icons",
      "/components/snackbars"
    ],
    "Subtitle": "横幅",
    "Title": "Banners",
    "Type": "横幅"
  },
  {
    "Desc": "<p><code>MAppBar</code> 组件对于任何图形用户界面 (GUI) 都是至关重要的，因为它通常是网站导航的主要来源。<code>MAppBar</code> 和 <code>MNavigationDrawer</code> 结合在一起为应用程序提供站点导航。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MAppBar\">MAppBar</a></li>\n<li><a href=\"/api/MAppBarNavIcon\">MAppBarNavIcon</a></li>\n<li><a href=\"/api/MAppBarTitle\">MAppBarTitle</a></li>\n</ul>\n",
      "功能组件": "\n<ul>\n<li><code>MAppBarNavIcon</code>：专门为与 <a href=\"/components/toolbars\">MToolbar</a> 和 <code>MAppBar</code> 一起使用而创建的样式化图标按钮组件。 在工具栏的左侧显示为汉堡菜单，它通常用于控制导航抽屉的状态。 默认插槽可以用于自定义此组件的图标和功能。</li>\n<li><code>MAppBarTitle</code>：修改过的 <a href=\"/components/toolbars\">MToolbarTitle</a> 组件 ，用于配合 <strong>ShrinkOnScroll</strong> 属性使用。 在小屏幕上，<strong>MToolbarTitle</strong>\n将被截断，但这个组件在展开时使用了绝对定位使其内容可见。 我们不建议您在没有使用 <strong>ShrinkOnScroll</strong> 属性时使用 <code>MAppBarTitle</code> 组件。确实是因为向此组件添加了resize事件，并进行了很多额外的计算。</li>\n</ul>\n",
      "注意事项": "\n<!--alert:warning-->\n<p>当在 <code>MToolbar</code> 和 <code>MAppBar</code> 内部使用带有 <strong>Icon</strong> 属性的 <code>MButton</code> 时，它们将自动增大其尺寸并应用负边距，以确保根据Material设计规范的适当间距。\n如果您选择将按钮包装在任何容器例如<code>div</code>中，则需要对该容器应用负边距，以便正确对齐它们。</p>\n<!--/alert:warning-->\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.4581418+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p><code>MAppBar</code> 组件用于应用程序范围内的操作和信息。</p>\n",
        "Code": "<MAppBar>\r\n    <MAppBarNavIcon></MAppBarNavIcon>\r\n</MAppBar>\r\n\r\n",
        "Type": "Demos.Components.Bars.children.AppBar.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "collapsibleBars",
        "Title": "可折叠栏",
        "Description": "<p>借助 <strong>Collapse</strong> 和 <strong>CollapseOnScroll</strong> 属性，简单的实现toolbar与用户的交互。</p>\n",
        "Code": "<MCard Class=\"overflow-hidden\">\r\n    <MAppBar Collapse=\"!collapseOnScroll\"\r\n             CollapseOnScroll=\"collapseOnScroll\"\r\n             Absolute\r\n             Color=\"deep-purple accent-4\"\r\n             Dark\r\n             ScrollTarget=\"#scrolling-sheet-1\">\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n        <MAppBarTitle>Collapsing Bar</MAppBarTitle>\r\n        <MSpacer></MSpacer>\r\n        <MCheckbox @bind-Value=\"collapseOnScroll\" Color=\"white\" HideDetails=\"true\"></MCheckbox>\r\n    </MAppBar>\r\n    <MSheet Class=\"overflow-y-auto\" MaxHeight=\"600\" Id=\"scrolling-sheet-1\">\r\n        <MContainer Style=\"height: 1000px;\"></MContainer>\r\n    </MSheet>\r\n</MCard>\r\n\r\n@code {\r\n    bool collapseOnScroll = true;\r\n}",
        "Type": "Demos.Components.Bars.children.AppBar.props.CollapsibleBars",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "dense",
        "Title": "紧凑",
        "Description": "<p>您可以使 <strong>MAppBar</strong> 更加紧凑。 紧凑应用栏的高度低于普通应用栏。</p>\n",
        "Code": "<div>\r\n    <MAppBar Color=\"deep-purple accent-4\"\r\n             Dense\r\n             Dark>\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n        <MToolbarTitle>Page title</MToolbarTitle>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-heart</MIcon>\r\n        </MButton>\r\n\r\n        <MButton icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n\r\n        <MMenu Left\r\n               Bottom>\r\n            <ActivatorContent>\r\n                <MButton Icon @attributes=\"@context.Attrs\">\r\n                    <MIcon>mdi-dots-vertical</MIcon>\r\n                </MButton>\r\n            </ActivatorContent>\r\n            <ChildContent>\r\n                <MList>\r\n                    @for (var i = 0; i < 5; i++)\r\n                    {\r\n                        var n = i + 1;\r\n                        <MListItem @key=\"n\"\r\n                               OnClick=\"() => {}\">\r\n                            <MListItemTitle>Option @n</MListItemTitle>\r\n                        </MListItem>\r\n                    }\r\n                </MList>\r\n            </ChildContent>\r\n        </MMenu>\r\n    </MAppBar>\r\n</div>",
        "Type": "Demos.Components.Bars.children.AppBar.props.Dense",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "elevateOnScroll",
        "Title": "滚动时的高度(Z轴)",
        "Description": "<p>使用 <strong>ElevateOnScroll</strong> 属性时，<code>MAppBar</code> 默认的高度为 0dp，当用户开始向下滚动时，高度会升至 4dp。</p>\n",
        "Code": "<MCard Class=\"overflow-hidden\">\r\n    <MAppBar ElevateOnScroll Color=\"white\" Absolute ScrollTarget=\"#scrolling-sheet-2\">\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n        <MAppBarTitle>Title</MAppBarTitle>\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n        <MButton Icon>\r\n            <MIcon>mdi-heart</MIcon>\r\n        </MButton>\r\n        <MButton Icon>\r\n            <MIcon>mdi-dots-vertical</MIcon>\r\n        </MButton>\r\n\r\n    </MAppBar>\r\n    <MSheet Class=\"overflow-y-auto\" MaxHeight=\"600\" Id=\"scrolling-sheet-2\">\r\n        <MContainer Style=\"height: 1500px;\"></MContainer>\r\n    </MSheet>\r\n</MCard>",
        "Type": "Demos.Components.Bars.children.AppBar.props.ElevateOnScroll",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "fadeImageOnScroll",
        "Title": "滚动时淡入淡出图像",
        "Description": "<p><code>MAppBar</code>的背景图像可以在滚动时淡出。使用<strong>FadeImgOnScroll</strong>属性进行此操作。</p>\n",
        "Code": "<MCard Class=\"overflow-hidden\">\r\n    <MAppBar Absolute\r\n             Color=\"#6A76AB\"\r\n             Dark\r\n             ShrinkOnScroll\r\n             Prominent\r\n             Src=\"https://picsum.photos/1920/1080?random\"\r\n             FadeImgOnScroll\r\n             ScrollTarget=\"#scrolling-sheet-3\">\r\n        <ImgContent>\r\n            <MImage Gradient=\"to top right, rgba(100,115,201,.7), rgba(25,32,72,.7)\" @attributes=\"@context\"></MImage>\r\n        </ImgContent>\r\n\r\n        <ChildContent>\r\n            <MAppBarNavIcon></MAppBarNavIcon>\r\n            <MAppBarTitle>Title</MAppBarTitle>\r\n            <MSpacer></MSpacer>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-magnify</MIcon>\r\n            </MButton>\r\n            <MButton Icon>\r\n                <MIcon>mdi-heart</MIcon>\r\n            </MButton>\r\n            <MButton Icon>\r\n                <MIcon>mdi-dots-vertical</MIcon>\r\n            </MButton>\r\n\r\n        </ChildContent>\r\n        <ExtensionContent>\r\n            <MTabs AlignWithTitle>\r\n                <MTab>Tab 1</MTab>\r\n                <MTab>Tab 2</MTab>\r\n                <MTab>Tab 3</MTab>\r\n            </MTabs>\r\n        </ExtensionContent>\r\n    </MAppBar>\r\n\r\n    <MSheet Class=\"overflow-y-auto\" MaxHeight=\"600\" Id=\"scrolling-sheet-3\">\r\n        <MContainer Style=\"height: 1000px;\"></MContainer>\r\n    </MSheet>\r\n</MCard>",
        "Type": "Demos.Components.Bars.children.AppBar.props.FadeImageOnScroll",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "hiddenOnScroll",
        "Title": "滚动隐藏",
        "Description": "<p>当设置了<strong>HideOnScroll</strong> 属性，<code>MAppBar</code> 向下滚动时会被隐藏。</p>\n",
        "Code": "<MCard Class=\"overflow-hidden\">\r\n    <MAppBar Color=\"teal lighten-3\" Dark Prominent HideOnScroll Absolute ScrollTarget=\"#scrolling-sheet-4\">\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n        <MAppBarTitle>Title</MAppBarTitle>\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n        <MButton Icon>\r\n            <MIcon>mdi-heart</MIcon>\r\n        </MButton>\r\n        <MButton Icon>\r\n            <MIcon>mdi-dots-vertical</MIcon>\r\n        </MButton>\r\n\r\n    </MAppBar>\r\n    <MSheet Class=\"overflow-y-auto\" MaxHeight=\"600\" Id=\"scrolling-sheet-4\">\r\n        <MContainer Style=\"height: 1000px;\"></MContainer>\r\n    </MSheet>\r\n</MCard>",
        "Type": "Demos.Components.Bars.children.AppBar.props.HiddenOnScroll",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "images",
        "Title": "图像",
        "Description": "<p><code>MAppBar</code> 可以包含背景图像。您可以通过 <strong>Src</strong> 属性设置。 如果您需要自定义 <code>MImage</code>，应用栏将为您提供一个 <strong>ImgContent</strong> 插槽。</p>\n",
        "Code": "<MCard Class=\"overflow-hidden\">\r\n    <MAppBar Absolute\r\n             Color=\"#fcb69f\"\r\n             Dark\r\n             ShrinkOnScroll\r\n             Src=\"https://picsum.photos/1920/1080?random\"\r\n             ScrollTarget=\"#scrolling-techniques-5\">\r\n        <ImgContent>\r\n            <MImage Gradient=\"to top right, rgba(19,84,122,.5), rgba(128,208,199,.8)\" @attributes=\"@context\"></MImage>\r\n        </ImgContent>\r\n\r\n        <ChildContent>\r\n            <MAppBarNavIcon></MAppBarNavIcon>\r\n            <MAppBarTitle>Title</MAppBarTitle>\r\n            <MSpacer></MSpacer>\r\n            <MButton Icon>\r\n                <MIcon>mdi-magnify</MIcon>\r\n            </MButton>\r\n            <MButton Icon>\r\n                <MIcon>mdi-heart</MIcon>\r\n            </MButton>\r\n            <MButton Icon>\r\n                <MIcon>mdi-dots-vertical</MIcon>\r\n            </MButton>\r\n        </ChildContent>\r\n    </MAppBar>\r\n    <MSheet Class=\"overflow-y-auto\" Color=\"white\" Elevation=\"1\" MaxHeight=\"600\" Id=\"scrolling-techniques-5\">\r\n        <MContainer Style=\"height: 1000px;\"></MContainer>\r\n    </MSheet>\r\n</MCard>",
        "Type": "Demos.Components.Bars.children.AppBar.props.Images",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "inverted",
        "Title": "滚动反转",
        "Description": "<p>当使用<strong>InvertedScroll</strong>属性时，该条将隐藏，直到用户滚动超过指定的阈值。一旦超过阈值，<code>MAppBar</code>将继续显示，直到用户向上滚动超过阈值。如果未提供<strong>ScrollThreshold</strong>值，将使用默认值0。</p>\n",
        "Code": "<MCard Class=\"overflow-hidden\">\r\n    <MAppBar Absolute\r\n             Color=\"primary\"\r\n             Dark\r\n             InvertedScroll\r\n             ScrollTarget=\"#scrolling-techniques-8\">\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n        <MAppBarTitle>Title</MAppBarTitle>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-heart</MIcon>\r\n        </MButton>\r\n        <MButton Icon>\r\n\r\n            <MIcon>mdi-dots-vertical</MIcon>\r\n        </MButton>\r\n\r\n    </MAppBar>\r\n    <MSheet Id=\"scrolling-techniques-8\"\r\n            Class=\"overflow-y-auto\"\r\n            MaxHeight=\"600\">\r\n        <MContainer Style=\"height: 1500px;\"></MContainer>\r\n    </MSheet>\r\n</MCard>",
        "Type": "Demos.Components.Bars.children.AppBar.props.Inverted",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "prominent",
        "Title": "突出",
        "Description": "<p>一个带有 <strong>Prominent</strong> 属性的 <code>MAppBar</code> 可以被设置为随着用户滚动而收缩。 当用户滚动浏览内容时，这提供了一个平滑的过渡，以减少视觉空间占用。 收缩高度有 <strong>Dense</strong>（紧密，48px）和 <strong>Short</strong>\n（短，56px）两种选择。</p>\n",
        "Code": "<MCard Class=\"overflow-hidden\">\r\n    <MAppBar\r\n        Absolute\r\n        Color=\"indigo darken-2\"\r\n        Dark\r\n        ShrinkOnScroll\r\n        prominent\r\n        ScrollTarget=\"#scrolling-techniques\">\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n        <MAppBarTitle>Title</MAppBarTitle>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-heart</MIcon>\r\n        </MButton>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-dots-vertical</MIcon>\r\n        </MButton>\r\n    </MAppBar>\r\n    <MSheet\r\n        Id=\"scrolling-techniques\"\r\n        Class=\"overflow-y-auto\"\r\n        MaxHeight=\"600\">\r\n        <MContainer style=\"height: 1000px;\"></MContainer>\r\n    </MSheet>\r\n</MCard>",
        "Type": "Demos.Components.Bars.children.AppBar.props.Prominent",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "scrollThreshold",
        "Title": "滚动阈值",
        "Description": "<p><code>MAppBar</code>可以有滚动阈值。只有在通过<strong>ScrollThreshold</strong>属性定义像素量后，它才会开始对滚动做出反应。</p>\n",
        "Code": "<MCard class=\"overflow-hidden\">\r\n    <MAppBar\r\n        Absolute\r\n        Color=\"#43a047\"\r\n        Dark\r\n        ShrinkOnScroll\r\n        Prominent\r\n        Src=\"https://picsum.photos/1920/1080?random\"\r\n        FadeImgOnScroll\r\n        ScrollTarget=\"#scrolling-techniques-55\"\r\n        ScrollThreshold=\"500\">\r\n        <ImgContent>\r\n            <MImage\r\n                @attributes=\"context\"\r\n                Gradient=\"to top right, rgba(55,236,186,.7), rgba(25,32,72,.7)\">\r\n            </MImage>\r\n        </ImgContent>\r\n\r\n        <ChildContent>\r\n            <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n            <MAppBarTitle>Title</MAppBarTitle>\r\n\r\n            <MSpacer></MSpacer>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-magnify</MIcon>\r\n            </MButton>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-heart</MIcon>\r\n            </MButton>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-dots-vertical</MIcon>\r\n            </MButton>\r\n        </ChildContent>\r\n    </MAppBar>\r\n    <MSheet Id=\"scrolling-techniques-55\"\r\n            Class=\"overflow-y-auto\"\r\n            MaxHeight=\"600\">\r\n        <MContainer style=\"height: 1500px;\"></MContainer>\r\n    </MSheet>\r\n</MCard>",
        "Type": "Demos.Components.Bars.children.AppBar.props.ScrollThreshold",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "menu",
        "Title": "菜单",
        "Description": "<p>您可以通过添加 <strong>MMenu</strong> 来轻松地扩展应用栏的功能。 单击最后一个图标以查看其运行情况。</p>\n",
        "Code": "<MCard Class=\"overflow-hidden\">\r\n    <MAppBar\r\n        Absolute\r\n        Color=\"#6A76AB\"\r\n        Dark\r\n        ShrinkOnScroll\r\n        Prominent\r\n        Src=\"https://picsum.photos/1920/1080?random\"\r\n        FadeImgOnScroll\r\n        ScrollTarget=\"#scrolling-techniques-4\">\r\n        <ImgContent>\r\n            <MImage\r\n                @attributes=\"@context\"\r\n                Gradient=\"to top right, rgba(100,115,201,.7), rgba(25,32,72,.7)\">\r\n            </MImage>\r\n        </ImgContent>\r\n\r\n        <ChildContent>\r\n            <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n            <MToolbarTitle>Title</MToolbarTitle>\r\n\r\n            <MSpacer></MSpacer>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-magnify</MIcon>\r\n            </MButton>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-heart</MIcon>\r\n            </MButton>\r\n\r\n            <MMenu\r\n                Bottom\r\n                Left>\r\n                <ActivatorContent>\r\n                    <MButton\r\n                        Icon\r\n                        Color=\"yellow\"\r\n                        @attributes=\"@context.Attrs\">\r\n                        <MIcon>mdi-dots-vertical</MIcon>\r\n                    </MButton>\r\n                </ActivatorContent>\r\n\r\n                <ChildContent>\r\n                    <MList>\r\n                        @foreach (var item in items)\r\n                        {\r\n                            <MListItem>\r\n                                <MListItemTitle>@item</MListItemTitle>\r\n                            </MListItem>\r\n                        }\r\n                    </MList>\r\n                </ChildContent>\r\n            </MMenu>\r\n        </ChildContent>\r\n\r\n        <ExtensionContent>\r\n            <MTabs AlignWithTitle>\r\n                <MTab>Tab 1</MTab>\r\n                <MTab>Tab 2</MTab>\r\n                <MTab>Tab 3</MTab>\r\n            </MTabs>\r\n        </ExtensionContent>\r\n    </MAppBar>\r\n    <MSheet\r\n        id=\"scrolling-techniques-4\"\r\n        Class=\"overflow-y-auto\"\r\n        MaxHeight=\"600\">\r\n        <MContainer Style=\"height: 1000px;\"></MContainer>\r\n    </MSheet>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    readonly List<string> items = new()\r\n    {\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me 2\",\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.Bars.children.AppBar.misc.Menu",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 1,
        "Name": "toggleNavigationDrawers",
        "Title": "切换导航抽屉",
        "Description": "<p>使用函数式组件 <code>MAppBarNavIcon</code> 可以切换其他组件的状态，例如 <a href=\"/components/navigation-drawers\"><strong>MNavigationDrawer</strong></a>。</p>\n",
        "Code": "<MCard\r\n    Class=\"mx-auto overflow-hidden\"\r\n    Height=\"400\">\r\n    <MAppBar\r\n        Color=\"deep-purple\"\r\n        Dark>\r\n        <MAppBarNavIcon @onclick=\"() => drawer = true\"></MAppBarNavIcon>\r\n\r\n        <MToolbarTitle>Title</MToolbarTitle>\r\n    </MAppBar>\r\n\r\n    <MNavigationDrawer\r\n        @bind-Value=\"drawer\"\r\n        Absolute\r\n        Temporary>\r\n        <MList\r\n            Nav\r\n            Dense>\r\n            <MListItemGroup\r\n                @bind-Value=\"group\"\r\n                ActiveClass=\"deep-purple--text text--accent-4\">\r\n                <MListItem>\r\n                    <MListItemIcon>\r\n                        <MIcon>mdi-home</MIcon>\r\n                    </MListItemIcon>\r\n                    <MListItemTitle>Home</MListItemTitle>\r\n                </MListItem>\r\n\r\n                <MListItem>\r\n                    <MListItemIcon>\r\n                        <MIcon>mdi-account</MIcon>\r\n                    </MListItemIcon>\r\n                    <MListItemTitle>Account</MListItemTitle>\r\n                </MListItem>\r\n            </MListItemGroup>\r\n        </MList>\r\n    </MNavigationDrawer>\r\n</MCard>\r\n\r\n@code {\r\n    bool drawer;\r\n    StringNumber group;\r\n}",
        "Type": "Demos.Components.Bars.children.AppBar.misc.ToggleNavigationDrawers",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/buttons",
      "/components/icons",
      "/components/toolbars"
    ],
    "Subtitle": "应用栏",
    "Title": "App bars",
    "Type": "应用栏"
  },
  {
    "Desc": "<p><code>MSystemBar</code> 组件可以用于向用户显示状态。 它看起来像Android系统栏，可以包含图标、空格和一些文本。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MSystemBar\">MSystemBar</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.461142+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "color",
        "Title": "颜色",
        "Description": "<p>您可以选择使用 color 更改 MSystemBar 的颜色。</p>\n",
        "Code": "<div>\r\n    <MSystemBar Dark Color=\"primary\">\r\n        <MSpacer></MSpacer>\r\n        <MIcon>mdi-wifi-strength-4</MIcon>\r\n        <MIcon>mdi-signal-cellular-outline</MIcon>\r\n        <MIcon>mdi-battery</MIcon>\r\n        <span>12:30</span>\r\n    </MSystemBar>\r\n    <br />\r\n    <MSystemBar Dark Color=\"red lighten-2\">\r\n        <MSpacer></MSpacer>\r\n        <MIcon>mdi-wifi-strength-4</MIcon>\r\n        <MIcon>mdi-signal-cellular-outline</MIcon>\r\n        <MIcon>mdi-battery</MIcon>\r\n        <span>12:30</span>\r\n    </MSystemBar>\r\n    <br />\r\n    <MSystemBar Dark Color=\"indigo darken-2\">\r\n        <MSpacer></MSpacer>\r\n        <MIcon>mdi-wifi-strength-4</MIcon>\r\n        <MIcon>mdi-signal-cellular-outline</MIcon>\r\n        <MIcon>mdi-battery</MIcon>\r\n        <span>12:30</span>\r\n    </MSystemBar>\r\n</div>",
        "Type": "Demos.Components.Bars.children.SystemBar.demo.Color",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "lightout",
        "Title": "熄灯",
        "Description": "<p>您可以使用 lights-out 属性来降低 MSystemBar 的不透明度。</p>\n",
        "Code": "<div>\r\n    <MSubheader>Lights out (light)</MSubheader>\r\n    <MCard Height=\"200\" Img=\"https://cdn.masastack.com/stack/images/website/masa-blazor/home/masa_layout2.svg\">\r\n        <MSystemBar Color=\"primary\" LightsOut>\r\n            <MSpacer></MSpacer>\r\n            <MIcon>mdi-wifi-strength-4</MIcon>\r\n            <MIcon>mdi-signal-cellular-outline</MIcon>\r\n            <MIcon>mdi-battery</MIcon>\r\n            <span>12:30</span>\r\n        </MSystemBar>\r\n    </MCard>\r\n    <MSubheader>Lights out (dark)</MSubheader>\r\n    <MCard Height=\"200\" Img=\"https://cdn.masastack.com/stack/images/website/masa-blazor/home/masa_layout2.svg\">\r\n        <MSystemBar Color=\"primary\" LightsOut Dark>\r\n            <MSpacer></MSpacer>\r\n            <MIcon>mdi-wifi-strength-4</MIcon>\r\n            <MIcon>mdi-signal-cellular-outline</MIcon>\r\n            <MIcon>mdi-battery</MIcon>\r\n            <span>12:30</span>\r\n        </MSystemBar>\r\n    </MCard>\r\n</div>",
        "Type": "Demos.Components.Bars.children.SystemBar.demo.LightOut",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "theme",
        "Title": "主题",
        "Description": "<p>可以将dark或light主题变量应用于MSystemBar。</p>\n",
        "Code": "<div>\r\n    <MSubheader>Light status bar</MSubheader>\r\n    <MCard Height=\"200\" Img=\"https://cdn.masastack.com/stack/images/website/masa-blazor/home/masa_layout1.svg\">\r\n        <MSystemBar Color=\"primary\">\r\n            <MSpacer></MSpacer>\r\n            <MIcon>mdi-wifi-strength-4</MIcon>\r\n            <MIcon>mdi-signal-cellular-outline</MIcon>\r\n            <MIcon>mdi-battery</MIcon>\r\n            <span>12:30</span>\r\n        </MSystemBar>\r\n    </MCard>\r\n    <MSubheader>Dark status bar</MSubheader>\r\n    <MCard Height=\"200\" Img=\"https://cdn.masastack.com/stack/images/website/masa-blazor/home/masa_layout1.svg\">\r\n        <MSystemBar Color=\"primary\" Dark>\r\n            <MSpacer></MSpacer>\r\n            <MIcon>mdi-wifi-strength-4</MIcon>\r\n            <MIcon>mdi-signal-cellular-outline</MIcon>\r\n            <MIcon>mdi-battery</MIcon>\r\n            <span>12:30</span>\r\n        </MSystemBar>\r\n    </MCard>\r\n</div>",
        "Type": "Demos.Components.Bars.children.SystemBar.demo.Theme",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "window",
        "Title": "窗口",
        "Description": "<p>带有窗口控件和状态信息的窗口栏。</p>\n",
        "Code": "<div>\r\n    <MSystemBar Dark Window>\r\n        <MIcon>mdi-message</MIcon>\r\n        <span>10 unread messages</span>\r\n        <MSpacer></MSpacer>\r\n        <MIcon>mdi-minus</MIcon>\r\n        <MIcon>mdi-checkbox-blank-outline</MIcon>\r\n        <MIcon>mdi-close</MIcon>\r\n    </MSystemBar>\r\n</div>",
        "Type": "Demos.Components.Bars.children.SystemBar.demo.Window",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "basic",
        "Title": "使用",
        "Description": "<p><code>MSystemBar</code> 最最简单的形式是显示一个带有默认主题的小容器。</p>\n",
        "Code": "<MRow Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n    <MContainer Fluid>\r\n        <MCard Height=\"200\" Img=\"https://cdn.masastack.com/stack/images/website/masa-blazor/home/masa_layout1.svg\">\r\n            <MSystemBar Color=\"orange\" Height=\"30\">\r\n                <MIcon>mdi-message</MIcon>\r\n                <span>10 unread messages</span>\r\n                <MSpacer></MSpacer>\r\n                <MIcon>mdi-wifi-strength-4</MIcon>\r\n                <MIcon>mdi-signal-cellular-outline</MIcon>\r\n                <MIcon>mdi-battery</MIcon>\r\n                <span>12:30</span>\r\n            </MSystemBar>\r\n        </MCard>\r\n    </MContainer>\r\n</MRow>\r\n\r\n",
        "Type": "Demos.Components.Bars.children.SystemBar.usage.Basic",
        "Style": "",
        "Debug": false,
        "Group": 4
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/buttons",
      "/components/toolbars",
      "/components/tabs"
    ],
    "Subtitle": "系统栏",
    "Title": "System bars",
    "Type": "系统栏"
  },
  {
    "Desc": "<p><code>MToolbar</code> 组件对于任何 GUI 都是至关重要的，因为它通常是站点导航的主要来源。 工具栏组件与 <a href=\"/components/navigation-drawers\"><strong>MNavigationDrawer</strong></a> 和 <a href=\"/components/cards\"><strong>MCard</strong></a> 配合使用非常有效。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MToolbar\">MToolbar</a></li>\n<li><a href=\"/api/MToolbarItems\">MToolbarItems</a></li>\n<li><a href=\"/api/MToolbarTitle\">MToolbarTitle</a></li>\n</ul>\n",
      "注意": "\n<!--alert:warning-->\n<p>当在 <code>MToolbar</code> 和 <code>MAppBar</code> 内部使用带有 <code>Icon</code> prop的 <code>MButton</code> 时，它们将自动增大其尺寸并应用负边距，以确保根据Material设计规范的适当间距。\n如果您选择将您的按钮包装在任何容器中，例如<code>div</code>， 您需要对容器应用负边距，以便正确对齐。</p>\n<!--/alert:warning-->\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.4661416+08:00",
    "DemoList": [
      {
        "Order": 1,
        "Name": "basic",
        "Title": "使用",
        "Description": "<p>工具栏是一个灵活的容器，可以通过多种方式使用。 默认情况下，工具栏在桌面上是64px高，在移动设备上是56px高。 有许多辅助组件可供工具栏使用。 <code>MToolbarTitle</code> 用于显示标题并且 <code>MToolbarItems</code> 允许 <code>MButton</code> 扩展全高度。</p>\n",
        "Code": "<MToolbar Elevation=\"4\">\r\n    <MAppBarNavIcon></MAppBarNavIcon>\r\n</MToolbar>",
        "Type": "Demos.Components.Bars.children.Toolbar.usage.Basic",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "background",
        "Title": "背景",
        "Description": "<p>工具栏可以使用 src 属性显示背景而不是纯色。 这可以通过使用 img 插槽并提供您自己的 <a href=\"/components/images\"><strong>MImage</strong></a> 组件来修改。\n可以使用 <a href=\"/components/app-bars\">MAppBar</a> 使背景淡入淡出</p>\n",
        "Code": "<div>\r\n    <MToolbar Dark\r\n               Prominent\r\n               Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/backgrounds/banner.png\">\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n        <MToolbarTitle>MASA Blazor</MToolbarTitle>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-export</MIcon>\r\n        </MButton>\r\n    </MToolbar>\r\n</div>",
        "Type": "Demos.Components.Bars.children.Toolbar.props.Background",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "collapse",
        "Title": "折叠",
        "Description": "<p>可以折叠工具栏以节省屏幕空间。</p>\n",
        "Code": "<MCard Color=\"grey lighten-4\"\r\n       Flat\r\n       Height=\"200\"\r\n       tile>\r\n    <MToolbar Collapse>\r\n        <MButton Icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-dots-vertical</MIcon>\r\n        </MButton>\r\n    </MToolbar>\r\n</MCard>",
        "Type": "Demos.Components.Bars.children.Toolbar.props.Collapse",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "denseToolbars",
        "Title": "紧凑工具栏",
        "Description": "<p>紧凑工具栏将其高度降低到 48px。 当与 prominent prop 同时使用时，将会将高度降低到 96px。</p>\n",
        "Code": "<MCard Color=\"grey lighten-4\"\r\n        Flat\r\n        Height=\"200\"\r\n        tile>\r\n    <MToolbar Dense>\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n        <MToolbarTitle>Title</MToolbarTitle>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-heart</MIcon>\r\n        </MButton>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-dots-vertical</MIcon>\r\n        </MButton>\r\n    </MToolbar>\r\n</MCard>",
        "Type": "Demos.Components.Bars.children.Toolbar.props.DenseToolbars",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "extended",
        "Title": "扩展",
        "Description": "<p>工具栏可以在不使用 扩展 插槽的情况下扩展。</p>\n",
        "Code": "<MCard Color=\"grey lighten-4\"\r\n       Flat\r\n       Height=\"200\"\r\n       Tile>\r\n    <MToolbar Extended>\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n        <MToolbarTitle>Title</MToolbarTitle>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-heart</MIcon>\r\n        </MButton>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-dots-vertical</MIcon>\r\n        </MButton>\r\n    </MToolbar>\r\n</MCard>",
        "Type": "Demos.Components.Bars.children.Toolbar.props.Extended",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "extensitionHeight",
        "Title": "扩展高度",
        "Description": "<p>扩展的高度可以定制。</p>\n",
        "Code": "<MCard\r\n    Color=\"grey lighten-4\"\r\n    Flat\r\n    Height=\"200\"\r\n    Tile\r\n  >\r\n    <MToolbar\r\n      Extended\r\n      ExtensionHeight=\"100\"\r\n    >\r\n      <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n      <MToolbarTitle>Title</MToolbarTitle>\r\n\r\n      <MSpacer></MSpacer>\r\n\r\n      <MButton Icon>\r\n        <MIcon>mdi-magnify</MIcon>\r\n      </MButton>\r\n\r\n      <MButton Icon>\r\n        <MIcon>mdi-heart</MIcon>\r\n      </MButton>\r\n\r\n      <MButton Icon>\r\n        <MIcon>mdi-dots-vertical</MIcon>\r\n      </MButton>\r\n    </MToolbar>\r\n  </MCard>",
        "Type": "Demos.Components.Bars.children.Toolbar.props.ExtensitionHeight",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "floatingWithSearch",
        "Title": "搜索时浮动",
        "Description": "<p>浮动工具栏变成内联元素，只占用所需空间的。 这在将工具栏放置在内容上时特别有用。</p>\n",
        "Code": "<MCard\r\n    Class=\"pa-4\"\r\n    Flat\r\n    Height=\"300\"\r\n    Img=\"https://cdn.masastack.com/stack/images/website/masa-blazor/toolbar/map.jpg\"\r\n  >\r\n    <MToolbar\r\n      Dense\r\n      Floating\r\n    >\r\n      <MTextField\r\n        TValue=\"string\"\r\n        HideDetails=\"true\"\r\n        PrependIcon=\"mdi-magnify\"\r\n        SingleLine\r\n      ></MTextField>\r\n\r\n      <MButton Icon>\r\n        <MIcon>mdi-crosshairs-gps</MIcon>\r\n      </MButton>\r\n\r\n      <MButton Icon>\r\n        <MIcon>mdi-dots-vertical</MIcon>\r\n      </MButton>\r\n    </MToolbar>\r\n  </MCard>",
        "Type": "Demos.Components.Bars.children.Toolbar.props.FloatingWithSearch",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "lightAndDark",
        "Title": "浅色和深色",
        "Description": "<p>工具栏有 2 种变体，浅色和深色。 浅色工具栏具有深色按钮和深色文本，而深色工具栏具有白色按钮和白色文本。</p>\n",
        "Code": "<MCard Flat>\r\n    <MContainer Fluid>\r\n      <MRow Class=\"child-flex\">\r\n        <div>\r\n          <MToolbar>\r\n            <MButton\r\n              Icon\r\n              Class=\"hidden-xs-only\"\r\n            >\r\n              <MIcon>mdi-arrow-left</MIcon>\r\n            </MButton>\r\n\r\n            <MToolbarTitle>Title</MToolbarTitle>\r\n\r\n            <MSpacer></MSpacer>\r\n\r\n            <MButton\r\n              Icon\r\n              Class=\"hidden-xs-only\"\r\n            >\r\n              <MIcon>mdi-magnify</MIcon>\r\n            </MButton>\r\n          </MToolbar>\r\n        </div>\r\n\r\n        <div style=\"flex-basis: 20%\">\r\n          <MToolbar Dark>\r\n            <MSpacer></MSpacer>\r\n\r\n            <MButton Icon>\r\n              <MIcon>mdi-reply</MIcon>\r\n            </MButton>\r\n\r\n            <MButton Icon>\r\n              <MIcon>mdi-dots-vertical</MIcon>\r\n            </MButton>\r\n          </MToolbar>\r\n        </div>\r\n      </MRow>\r\n    </MContainer>\r\n  </MCard>",
        "Type": "Demos.Components.Bars.children.Toolbar.props.LightAndDark",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "prominentToolbars",
        "Title": "突出的工具栏",
        "Description": "<p>突出的工具栏将 <code>MToolbar</code> 的高度增加到 128px ，并将 <code>MToolbarTitle</code> 放置到容器底部。 在 <a href=\"/components/application\"><strong>MApp</strong></a> 中扩展了这个功能，能够将\nprominent 的工具栏缩小到 <strong>紧凑</strong> 工具栏或 <strong>短</strong> 工具栏。</p>\n",
        "Code": "<MCard\r\n    Color=\"grey lighten-4\"\r\n    Flat\r\n    Height=\"200\"\r\n    Tile\r\n  >\r\n    <MToolbar\r\n      Prominent\r\n      Extended\r\n    >\r\n      <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n      <MToolbarTitle>Title</MToolbarTitle>\r\n\r\n      <MSpacer></MSpacer>\r\n\r\n      <MButton Icon>\r\n        <MIcon>mdi-magnify</MIcon>\r\n      </MButton>\r\n\r\n      <MButton Icon>\r\n        <MIcon>mdi-heart</MIcon>\r\n      </MButton>\r\n\r\n      <MButton Icon>\r\n        <MIcon>mdi-dots-vertical</MIcon>\r\n      </MButton>\r\n    </MToolbar>\r\n  </MCard>",
        "Type": "Demos.Components.Bars.children.Toolbar.props.ProminentToolbars",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "contextualActionBar",
        "Title": "上下文操作栏",
        "Description": "<p>可以更新工具栏的外观以响应应用程序状态的改变。 在本例中，工具栏的颜色和内容会随着用户在 <code>MSelect</code> 中的选择而改变。</p>\n",
        "Code": "<MCard MaxWidth=\"500\"\r\n       Class=\"mx-auto\">\r\n    <MToolbar Color=\"@(_selection.Count>0 ? \"grey darken-4\" : \"deep-purple accent-4\")\"\r\n              Dark>\r\n        @if (!(_selection.Count > 0))\r\n        {\r\n            <MAppBarNavIcon></MAppBarNavIcon>\r\n        }\r\n        else\r\n        {\r\n            <MButton Icon\r\n                 OnClick=\"()=>_selection = new List<string>()\">\r\n                <MIcon>mdi-close</MIcon>\r\n            </MButton>\r\n        }\r\n\r\n        <MToolbarTitle>\r\n            @(_selection.Count>0 ? $\"{_selection.Count} selected\" : \"Photos\")\r\n        </MToolbarTitle>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <ScaleTransition>\r\n            <MButton If=\"@(_selection.Count>0)\"\r\n                     Icon>\r\n                <MIcon>mdi-export-variant</MIcon>\r\n            </MButton>\r\n        </ScaleTransition>\r\n        <ScaleTransition>\r\n            <MButton If=\"@(_selection.Count>0)\"\r\n                     Icon>\r\n                <MIcon>mdi-delete</MIcon>\r\n            </MButton>\r\n        </ScaleTransition>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-dots-vertical</MIcon>\r\n        </MButton>\r\n    </MToolbar>\r\n\r\n    <MCardText>\r\n        <MSelect @bind-Value=\"_selection\"\r\n                 Items=\"_items\"\r\n                 ItemValue=\"r=>r\"\r\n                 ItemText=\"r=>r\"\r\n                 Multiple\r\n                 Label=\"Select an option\"></MSelect>\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code {\r\n    private List<string> _selection = new List<string>();\r\n    private List<string> _items = new List<string>\r\n        {\r\n            \"Foo\", \"Bar\", \"Fizz\", \"Buzz\"\r\n        };\r\n}",
        "Type": "Demos.Components.Bars.children.Toolbar.misc.ContextualActionBar",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 1,
        "Name": "flexibleAndCardToolbar",
        "Title": "灵活的卡片工具栏",
        "Description": "<p>在本例中，我们使用 extended prop 将卡片偏移到工具栏的扩展内容区域。</p>\n",
        "Code": "<MCard Flat>\r\n    <MToolbar Color=\"primary\"\r\n              Dark\r\n              Extended\r\n              Flat>\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n    </MToolbar>\r\n\r\n    <MCard Class=\"mx-auto\"\r\n           MaxWidth=\"700\"\r\n           Style=\"margin-top: -64px;\">\r\n        <MToolbar Flat>\r\n            <MToolbarTitle Class=\"grey--text\">\r\n                Title\r\n            </MToolbarTitle>\r\n\r\n            <MSpacer></MSpacer>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-magnify</MIcon>\r\n            </MButton>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-apps</MIcon>\r\n            </MButton>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-dots-vertical</MIcon>\r\n            </MButton>\r\n        </MToolbar>\r\n\r\n        <MDivider></MDivider>\r\n\r\n        <MCardText Style=\"height: 200px;\"></MCardText>\r\n    </MCard>\r\n</MCard>",
        "Type": "Demos.Components.Bars.children.Toolbar.misc.FlexibleAndCardToolbar",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 1,
        "Name": "variations",
        "Title": "变量",
        "Description": "<p><code>MToolbar</code> 有多个变量，可以应用主题和辅助类。 这些主题包括浅色和深色的主题、彩色和透明。</p>\n",
        "Code": "<MRow>\r\n    @for (var i = 0; i < _bars.Count; i++)\r\n    {\r\n        var bar = _bars[i];\r\n        <MCol @key=\"i\"\r\n          Cols=\"12\"\r\n          Sm=\"12\"\r\n          Md=\"6\"\r\n          Class=\"my-4\">\r\n            <MCard Color=\"grey lighten-4\"\r\n               Flat\r\n               Height=\"200\">\r\n                <MToolbar Color=\"@bar.Class\"\r\n                      Dark=\"@bar.Dark\">\r\n                    <MAppBarNavIcon></MAppBarNavIcon>\r\n                    <MToolbarTitle>Title</MToolbarTitle>\r\n                    <MSpacer></MSpacer>\r\n                    <MButton Icon>\r\n                        <MIcon>mdi-magnify</MIcon>\r\n                    </MButton>\r\n                    <MButton Icon>\r\n                        <MIcon>mdi-heart</MIcon>\r\n                    </MButton>\r\n                    <MButton Icon>\r\n                        <MIcon>mdi-dots-vertical</MIcon>\r\n                    </MButton>\r\n                </MToolbar>\r\n            </MCard>\r\n        </MCol>\r\n    }\r\n</MRow>\r\n\r\n@code {\r\n    class Bar\r\n    {\r\n        public string Class { get; set; }\r\n\r\n        public bool Dark { get; set; }\r\n    }\r\n    private List<Bar> _bars = new List<Bar>\r\n        {\r\n            new Bar\r\n            {\r\n                Class=\"\"\r\n            },\r\n            new Bar\r\n            {\r\n                Class=\"class\",\r\n                Dark=true\r\n            },\r\n            new Bar\r\n            {\r\n                Class=\"primary\",\r\n                Dark=true\r\n            },\r\n            new Bar\r\n            {\r\n                Class=\"elevation-0\"\r\n            }\r\n        };\r\n}",
        "Type": "Demos.Components.Bars.children.Toolbar.misc.Variations",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/buttons",
      "/components/footers",
      "/components/tabs"
    ],
    "Subtitle": "工具栏",
    "Title": "Toolbars",
    "Type": "工具栏"
  },
  {
    "Desc": "<p>将相同类型的两个数据并排显示。</p>\n",
    "Order": 0,
    "OtherDocs": {},
    "LastWriteTime": "2022-10-20T23:42:05.4691417+08:00",
    "DemoList": [
      {
        "Order": 1,
        "Name": "index",
        "Title": "使用",
        "Description": "",
        "Code": "<PBlockText Primary=\"@DateOnly.FromDateTime(DateTime.Now).ToString()\"\r\n            Secondary=\"@TimeOnly.FromDateTime(DateTime.Now).ToString()\">\r\n</PBlockText>",
        "Type": "Demos.Components.BlockText.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "tags",
        "Title": "标签",
        "Description": "",
        "Code": "<PBlockText Primary=\"MASA Blazor\"\r\n            Secondary=\"A UI component library\"\r\n            Tags=\"@tags\">\r\n</PBlockText>\r\n\r\n@code {\r\n\r\n    static IEnumerable<BlockTextTag> tags = new List<BlockTextTag>()\r\n    {\r\n        new(\"Blazor\", \"green\", \"white\"),\r\n        new(\"Material Design\", \"purple\", true)\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.BlockText.props.Tags",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "contents",
        "Title": "自定义内容",
        "Description": "",
        "Code": "<PBlockText>\r\n    <PrimaryContent>\r\n        <PCopyableText>MASA.Blazor</PCopyableText>\r\n    </PrimaryContent>\r\n    <SecondaryContent>\r\n        <PCopyableText>A UI component library</PCopyableText>\r\n    </SecondaryContent>\r\n</PBlockText>",
        "Type": "Demos.Components.BlockText.contents.Contents",
        "Style": "",
        "Debug": false,
        "Group": 2
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/chips",
      "/components/copyable-text",
      "/components/ellipsis-text"
    ],
    "Subtitle": "文本块",
    "Title": "Block text",
    "Type": "文本块",
    "Tag": "preset"
  },
  {
    "Desc": "<p>边框组件可以给任何内容添加一个额外的边框。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MBorder\">MBorder</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.4691417+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "border",
        "Title": "边框定位",
        "Description": "<p>设置 <strong>Border</strong> 属性，可自定义边框的位置。默认值为 <code>Borders.Left</code>。</p>\n",
        "Code": "<MCard MaxWidth=\"300\" Class=\"mx-auto\" Tile>\r\n    <MBorder Offset Border=\"_border\" Rounded=\"true\" Class=\"elevation-2\" WrapperStyle=\"display:inline-block\">\r\n        <MBorder Tag=\"span\" Color=\"pink\" Style=\"border-radius:0;height:50%;margin: auto 0;\">\r\n            <MCardTitle>Card Title</MCardTitle>\r\n            <MCardSubtitle>Card Subtitle</MCardSubtitle>\r\n        </MBorder>\r\n        <MCardText>\r\n            <p>Greyhound divisively hello coldly wonderfully marginally far upon excluding. </p>\r\n        </MCardText>\r\n        <MCardActions>\r\n            <MButton Text Color=\"primary\">\r\n                <MIcon Small>fas fa-edit</MIcon>\r\n                edit\r\n            </MButton>\r\n            <MButton Text Color=\"primary\">\r\n                <MIcon Small>fas fa-share-square</MIcon>\r\n                share\r\n            </MButton>\r\n        </MCardActions>\r\n    </MBorder>\r\n</MCard>\r\n\r\n<div style=\"display:flex;justify-content:center;\">\r\n    <MRadioGroup TValue=\"Borders\" @bind-Value=\"_border\" Row>\r\n        <MRadio Value=\"Borders.Left\" Label=\"left\"></MRadio>\r\n        <MRadio Value=\"Borders.Top\" Label=\"top\"></MRadio>\r\n        <MRadio Value=\"Borders.Right\" Label=\"right\"></MRadio>\r\n        <MRadio Value=\"Borders.Bottom\" Label=\"bottom\"></MRadio>\r\n    </MRadioGroup>\r\n</div>\r\n\r\n@code {\r\n    private Borders _border = Borders.Bottom;\r\n}",
        "Type": "Demos.Components.Border.props.Border",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "offset",
        "Title": "偏移",
        "Description": "<p>添加 <strong>Offset</strong> 属性，可控制边框偏移到子元素之外。</p>\n",
        "Code": "<MCard MaxWidth=\"300\" Class=\"mx-auto\">\r\n    <MList Dense>\r\n        <MSubheader>REPORTS</MSubheader>\r\n        <MListItemGroup @bind-Value=\"selectedItem\"\r\n                        Color=\"primary\">\r\n            @foreach (var item in items)\r\n            {\r\n                <MBorder Value=\"@(selectedItem == item.Text)\" Offset=\"offset\" Width=\"4\">\r\n                    <MListItem Value=\"@item.Text\">\r\n                        <MListItemIcon>\r\n                            <MIcon>@item.Icon</MIcon>\r\n                        </MListItemIcon>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>@item.Text</MListItemTitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                </MBorder>\r\n            }\r\n        </MListItemGroup>\r\n    </MList>\r\n    <MSwitch @bind-Value=\"offset\" Label=\"Offset\"></MSwitch>\r\n</MCard>\r\n\r\n@code{\r\n    readonly Item[] items = new[]\r\n    {\r\n        new Item { Text = \"Real-Time\", Icon = \"mdi-clock\" },\r\n        new Item { Text = \"Audience\", Icon = \"mdi-account\" },\r\n        new Item { Text = \"Conversions\", Icon = \"mdi-flag\" }\r\n    };\r\n    \r\n    bool offset;\r\n    StringNumber selectedItem = \"Audience\";\r\n\r\n    class Item\r\n    {\r\n        public string Text { get; set; }\r\n        public string Icon { get; set; }\r\n    }\r\n}",
        "Type": "Demos.Components.Border.props.Offset",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/cards",
      "/components/lists",
      "/components/radio"
    ],
    "Subtitle": "边框",
    "Title": "Borders",
    "Type": "边框"
  },
  {
    "Desc": "<p><code>MBottomNavigation</code> 组件是侧边栏的替代品。 它主要用于移动应用程序，并且有三个变体：<strong>icons</strong>，<strong>text</strong> 和 <strong>shift</strong>。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MBottomNavigation\">MBottomNavigation</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.473142+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>虽然<code>MBottomNavigation</code>导航旨在与路由一起使用，但您也可以通过使用<strong>Value</strong>属性以编程方式控制按钮的活动状态。使用<code>MBottomNavigation</code>为按钮指定其<em>索引</em>的缺省值。</p>\n",
        "Code": "<MBottomNavigation @bind-Value=\"value\">\r\n    <MButton Value=\"@(\"recent\")\">\r\n        <span>Recent</span>\r\n\r\n        <MIcon>mdi-history</MIcon>\r\n    </MButton>\r\n\r\n    <MButton Value=\"@(\"favorites\")\">\r\n        <span>Favorites</span>\r\n\r\n        <MIcon>mdi-heart</MIcon>\r\n    </MButton>\r\n\r\n    <MButton Value=\"@(\"nearby\")\">\r\n        <span>Nearby</span>\r\n\r\n        <MIcon>mdi-map-marker</MIcon>\r\n    </MButton>\r\n</MBottomNavigation>\r\n\r\n@code {\r\n\r\n    StringNumber value = \"recent\";\r\n\r\n}\r\n",
        "Type": "Demos.Components.BottomNavigation.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "color",
        "Title": "颜色",
        "Description": "<p><strong>Color</strong> 参数将颜色应用于底部导航的背景。我们建议使用 <strong>Light</strong> 和 <strong>Dark</strong> 参数来适当对比文本颜色。</p>\n",
        "Code": "<MBottomNavigation\r\n    @bind-Value=\"value\"\r\n    Color=\"primary\">\r\n    <MButton>\r\n        <span>Recents</span>\r\n\r\n        <MIcon>mdi-history</MIcon>\r\n    </MButton>\r\n\r\n    <MButton>\r\n        <span>Favorites</span>\r\n\r\n        <MIcon>mdi-heart</MIcon>\r\n    </MButton>\r\n\r\n    <MButton>\r\n        <span>Nearby</span>\r\n\r\n        <MIcon>mdi-map-marker</MIcon>\r\n    </MButton>\r\n</MBottomNavigation>\r\n\r\n@code {\r\n\r\n    StringNumber value = 1;\r\n\r\n}\r\n",
        "Type": "Demos.Components.BottomNavigation.props.Color",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "grow",
        "Title": "增长",
        "Description": "<p>使用 <strong>Grow</strong> 参数强制 <a href=\"/components/buttons\">MButton</a> 组件填充所有可用空间。根据<a href=\"https://material.io/components/bottom-navigation#specs\">底部导航MD规范</a>，按钮的最大宽度为 <strong>168px</strong>。</p>\n",
        "Code": "<MBottomNavigation\r\n    @bind-Value=\"value\"\r\n    Color=\"teal\"\r\n    Grow>\r\n    <MButton>\r\n        <span>Recents</span>\r\n\r\n        <MIcon>mdi-history</MIcon>\r\n    </MButton>\r\n\r\n    <MButton>\r\n        <span>Favorites</span>\r\n\r\n        <MIcon>mdi-heart</MIcon>\r\n    </MButton>\r\n\r\n    <MButton>\r\n        <span>Nearby</span>\r\n\r\n        <MIcon>mdi-map-marker</MIcon>\r\n    </MButton>\r\n</MBottomNavigation>\r\n\r\n@code {\r\n\r\n    StringNumber value = 1;\r\n\r\n}\r\n",
        "Type": "Demos.Components.BottomNavigation.props.Grow",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "hideOnScroll",
        "Title": "滚动时隐藏",
        "Description": "<p>使用 <strong>HideOnScroll</strong> 参数时，<code>MBottomNavigation</code>组件在向上滚动时隐藏。这类似于<a href=\"/components/app-bars\">MAppBar</a>中支持的<a href=\"https://material.io/archive/guidelines/patterns/scrolling-techniques.html\">滚动技术</a>。在下面的示例中，上下滚动以查看此行为。</p>\n",
        "Code": "<MCard\r\n    Class=\"overflow-hidden mx-auto\"\r\n    Height=\"200\"\r\n    MaxWidth=\"500\">\r\n    <MBottomNavigation\r\n        Absolute\r\n        HideOnScroll\r\n        Horizontal\r\n        ScrollTarget=\"#hide-on-scroll-example\">\r\n        <MButton\r\n            Color=\"deep-purple accent-4\"\r\n            Text>\r\n            <span>Recents</span>\r\n\r\n            <MIcon>mdi-history</MIcon>\r\n        </MButton>\r\n\r\n        <MButton\r\n            Color=\"deep-purple accent-4\"\r\n            Text>\r\n            <span>Favorites</span>\r\n\r\n            <MIcon>mdi-heart</MIcon>\r\n        </MButton>\r\n\r\n        <MButton\r\n            Color=\"deep-purple accent-4\"\r\n            Text>\r\n            <span>Nearby</span>\r\n\r\n            <MIcon>mdi-map-marker</MIcon>\r\n        </MButton>\r\n    </MBottomNavigation>\r\n\r\n    <MResponsive\r\n        Id=\"hide-on-scroll-example\"\r\n        Class=\"overflow-y-auto\"\r\n        MaxHeight=\"600\">\r\n        <MResponsive Height=\"1500\"></MResponsive>\r\n    </MResponsive>\r\n</MCard>\r\n",
        "Type": "Demos.Components.BottomNavigation.props.HideOnScroll",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "horizontal",
        "Title": "水平布局",
        "Description": "<p>使用 <strong>Horizontal</strong> 参数调整按钮和图标的样式。此选项将按钮文本定位为与提供的<a href=\"/components/icons\">MIcon</a>内联。</p>\n",
        "Code": "<MBottomNavigation\r\n    @bind-Value=\"value\"\r\n    Color=\"primary\"\r\n    Horizontal>\r\n    <MButton>\r\n        <span>Recents</span>\r\n\r\n        <MIcon>mdi-history</MIcon>\r\n    </MButton>\r\n\r\n    <MButton>\r\n        <span>Favorites</span>\r\n\r\n        <MIcon>mdi-heart</MIcon>\r\n    </MButton>\r\n\r\n    <MButton>\r\n        <span>Nearby</span>\r\n\r\n        <MIcon>mdi-map-marker</MIcon>\r\n    </MButton>\r\n</MBottomNavigation>\r\n\r\n@code {\r\n\r\n    StringNumber value = 1;\r\n\r\n}\r\n",
        "Type": "Demos.Components.BottomNavigation.props.Horizontal",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "scrollThreshold",
        "Title": "滚动阈值",
        "Description": "<p>修改 <strong>ScrollThreshold</strong> 参数以增加用户在隐藏<code>MBottomNavigation</code>之前必须滚动的距离。</p>\n",
        "Code": "<MCard\r\n    Class=\"overflow-hidden mx-auto\"\r\n    Height=\"200\"\r\n    MaxWidth=\"500\">\r\n    <MBottomNavigation\r\n        Absolute\r\n        Color=\"white\"\r\n        HideOnScroll\r\n        Horizontal\r\n        ScrollTarget=\"#scroll-threshold-example\"\r\n        ScrollThreshold=\"500\">\r\n        <MButton\r\n            Color=\"deep-purple accent-4\"\r\n            Text>\r\n            <span>Recents</span>\r\n\r\n            <MIcon>mdi-history</MIcon>\r\n        </MButton>\r\n\r\n        <MButton\r\n            Color=\"deep-purple accent-4\"\r\n            Text>\r\n            <span>Favorites</span>\r\n\r\n            <MIcon>mdi-heart</MIcon>\r\n        </MButton>\r\n\r\n        <MButton\r\n            Color=\"deep-purple accent-4\"\r\n            Text>\r\n            <span>Nearby</span>\r\n\r\n            <MIcon>mdi-map-marker</MIcon>\r\n        </MButton>\r\n    </MBottomNavigation>\r\n\r\n    <MResponsive\r\n        Id=\"scroll-threshold-example\"\r\n        Class=\"overflow-y-auto pb-16\"\r\n        MaxHeight=\"600\">\r\n        <MResponsive Height=\"1500\"></MResponsive>\r\n    </MResponsive>\r\n</MCard>\r\n",
        "Type": "Demos.Components.BottomNavigation.props.ScrollThreshold",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "shift",
        "Title": "位移",
        "Description": "<p>未激活时，<strong>Shift</strong> 参数会隐藏按钮文本。这为<code>MBottomNavigation</code>提供了另一种视觉样式。</p>\n",
        "Code": "<MBottomNavigation\r\n    @bind-Value=\"value\"\r\n    BackgroundColor=\"@color\"\r\n    Dark\r\n    Shift>\r\n    <MButton>\r\n        <span>Video</span>\r\n\r\n        <MIcon>mdi-television-play</MIcon>\r\n    </MButton>\r\n\r\n    <MButton>\r\n        <span>Music</span>\r\n\r\n        <MIcon>mdi-music-note</MIcon>\r\n    </MButton>\r\n\r\n    <MButton>\r\n        <span>Book</span>\r\n\r\n        <MIcon>mdi-book</MIcon>\r\n    </MButton>\r\n\r\n    <MButton>\r\n        <span>Image</span>\r\n\r\n        <MIcon>mdi-image</MIcon>\r\n    </MButton>\r\n</MBottomNavigation>\r\n\r\n@code {\r\n\r\n    StringNumber value = 1;\r\n\r\n    string color\r\n    {\r\n        get\r\n        {\r\n            if (value == 0) return \"blue-grey\";\r\n            if (value == 1) return \"teal\";\r\n            if (value == 2) return \"brown\";\r\n            if (value == 3) return \"indigo\";\r\n            return \"blue-grey\";\r\n        }\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.BottomNavigation.props.Shift",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "toggle",
        "Title": "切换",
        "Description": "<p>可以使用 <strong>InputValue</strong> 参数切换 <code>MBottomNavigation</code> 的显示状态。您还可以使用 <strong>@bind-Value</strong> 控制当前活动的按钮。</p>\n",
        "Code": "<div class=\"overflow-hidden\">\r\n\r\n    <div class=\"text-center mb-8\">\r\n        <MButton\r\n            Color=\"deep-purple\"\r\n            Outlined\r\n            OnClick=\"() => active = !active\">\r\n            Toggle Navigation\r\n        </MButton>\r\n    </div>\r\n\r\n    <MBottomNavigation\r\n        @bind-Value=\"value\"\r\n        InputValue=\"active\"\r\n        Color=\"indigo\">\r\n        <MButton>\r\n            <span>Recents</span>\r\n\r\n            <MIcon>mdi-history</MIcon>\r\n        </MButton>\r\n\r\n        <MButton>\r\n            <span>Favorites</span>\r\n\r\n            <MIcon>mdi-heart</MIcon>\r\n        </MButton>\r\n\r\n        <MButton>\r\n            <span>Nearby</span>\r\n\r\n            <MIcon>mdi-map-marker</MIcon>\r\n        </MButton>\r\n    </MBottomNavigation>\r\n\r\n</div>\r\n\r\n@code {\r\n\r\n    StringNumber value = 1;\r\n    bool active = true;\r\n\r\n}\r\n",
        "Type": "Demos.Components.BottomNavigation.props.Toggle",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/buttons",
      "/components/icons",
      "/components/tabs"
    ],
    "Subtitle": "底部导航栏",
    "Title": "Bottom navigation",
    "Type": "底部导航栏"
  },
  {
    "Desc": "<p>底部表单是一个经过修改的 <code>MDialog</code> , 从屏幕的底部滑出，类似于 <code>MBottomNavigation</code>。 底部导航组件用于按钮和特定的应用程序级操作，而底部工作表可以包含任何内容。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MBottomSheet\">MBottomSheet</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.4771417+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>在这里，我们将显示一个示例操作列表，它可能出现在应用程序中。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MBottomSheet @bind-Value=\"sheet\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"purple\" Dark @attributes=\"@context.Attrs\">Open Playground</MButton>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <MSheet Class=\"text-center\" Height=\"200\">\r\n                <MButton Class=\"mt-6\" Color=\"error\" OnClick=\"() => sheet = !sheet\">Close</MButton>\r\n            </MSheet>\r\n        </ChildContent>\r\n    </MBottomSheet>\r\n</div>\r\n\r\n@code {\r\n\r\n    bool sheet;\r\n\r\n}",
        "Type": "Demos.Components.BottomSheets.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "inset",
        "Title": "嵌入",
        "Description": "<p>底部工作表可以被嵌入，将桌面上的最大宽度减少到70%。 可以使用 <strong>Width</strong> 参数来进一步手动减少这种情况。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MBottomSheet\r\n        @bind-Value=\"sheet\"\r\n        Inset>\r\n        <ActivatorContent>\r\n            <MButton\r\n                Color=\"orange\"\r\n                Dark\r\n                @attributes=\"@context.Attrs\">\r\n                Open Inset\r\n            </MButton>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <MSheet\r\n                Class=\"text-center\"\r\n                Height=\"200\">\r\n                <MButton\r\n                    Class=\"mt-6\"\r\n                    Text\r\n                    Color=\"error\"\r\n                    OnClick=\"() => sheet = !sheet\">\r\n                    close\r\n                </MButton>\r\n                <div class=\"my-3\">\r\n                    This is a bottom sheet using the inset prop\r\n                </div>\r\n            </MSheet>\r\n        </ChildContent>\r\n    </MBottomSheet>\r\n</div>\r\n\r\n@code {\r\n\r\n    bool sheet;\r\n\r\n}",
        "Type": "Demos.Components.BottomSheets.props.Inset",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "model",
        "Title": "模型",
        "Description": "<p>底部工作表可以使用 <strong>@bind-Value</strong> 来控制。 你可以使用它来关闭他们，或者如果你不能使用 <code>ActivatorContent</code> 插槽。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MButton\r\n        Color=\"blue\"\r\n        Dark\r\n        OnClick=\"() => sheet = !sheet\">\r\n        Open bind-Value\r\n    </MButton>\r\n    <MBottomSheet @bind-Value=\"sheet\">\r\n        <MSheet\r\n            Class=\"text-center\"\r\n            Height=\"200\">\r\n            <MButton\r\n                Class=\"mt-6\"\r\n                Text\r\n                Color=\"red\"\r\n                OnClick=\"() => sheet = !sheet\">\r\n                close\r\n            </MButton>\r\n            <div class=\"py-3\">\r\n                This is a bottom sheet using the controlled by v-model instead of activator\r\n            </div>\r\n        </MSheet>\r\n    </MBottomSheet>\r\n</div>\r\n\r\n@code {\r\n\r\n    bool sheet;\r\n\r\n}",
        "Type": "Demos.Components.BottomSheets.props.Model",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "persistent",
        "Title": "保留",
        "Description": "<p>保留的底部工作表无法通过在外部单击来关闭。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MBottomSheet\r\n        @bind-Value=\"sheet\"\r\n        Persistent>\r\n        <ActivatorContent>\r\n            <MButton\r\n                Color=\"green\"\r\n                Dark\r\n                @attributes=\"@context.Attrs\">\r\n                Open Persistent\r\n            </MButton>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <MSheet\r\n                Class=\"text-center\"\r\n                Height=\"200\">\r\n                <MButton\r\n                    Class=\"mt-6\"\r\n                    Text\r\n                    Color=\"error\"\r\n                    OnClick=\"() => sheet = !sheet\">\r\n                    close\r\n                </MButton>\r\n                <div class=\"py-3\">\r\n                    This is a bottom sheet using the persistent prop\r\n                </div>\r\n            </MSheet>\r\n        </ChildContent>\r\n    </MBottomSheet>\r\n</div>\r\n\r\n@code {\r\n\r\n    bool sheet;\r\n\r\n}",
        "Type": "Demos.Components.BottomSheets.props.Persistent",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "musicPlayer",
        "Title": "音乐播放器",
        "Description": "<p>使用嵌入式底部工作表，你可以制作一些实用的组件，比如这个简单的音乐播放器。</p>\n",
        "Code": "@inject MasaBlazor MasaBlazor\r\n\r\n<div class=\"text-center\">\r\n    <MBottomSheet Inset>\r\n        <ActivatorContent>\r\n            <MButton\r\n                Color=\"red\"\r\n                Dark\r\n                @attributes=\"@context.Attrs\">\r\n                Open Player\r\n            </MButton>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <MCard Tile>\r\n                <MProgressLinear\r\n                    Value=\"50\"\r\n                    Class=\"my-0\"\r\n                    Height=\"3\">\r\n                </MProgressLinear>\r\n\r\n                <MList>\r\n                    <MListItem>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>The Walker</MListItemTitle>\r\n                            <MListItemSubtitle>Fitz & The Trantrums</MListItemSubtitle>\r\n                        </MListItemContent>\r\n\r\n                        <MSpacer></MSpacer>\r\n\r\n                        <MListItemIcon>\r\n                            <MButton Icon>\r\n                                <MIcon>mdi-rewind</MIcon>\r\n                            </MButton>\r\n                        </MListItemIcon>\r\n\r\n                        <MListItemIcon Class=\"@(MasaBlazor.Breakpoint.MdAndUp ? \"mx-5\" : \"\")\">\r\n                            <MButton Icon>\r\n                                <MIcon>mdi-pause</MIcon>\r\n                            </MButton>\r\n                        </MListItemIcon>\r\n\r\n                        <MListItemIcon\r\n                            Class=\"@($\"ml-0 {(MasaBlazor.Breakpoint.MdAndUp ? \"mr-3\" : \"\")}\")\">\r\n                            <MButton Icon>\r\n                                <MIcon>mdi-fast-forward</MIcon>\r\n                            </MButton>\r\n                        </MListItemIcon>\r\n                    </MListItem>\r\n                </MList>\r\n            </MCard>\r\n        </ChildContent>\r\n    </MBottomSheet>\r\n</div>",
        "Type": "Demos.Components.BottomSheets.misc.MusicPlayer",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 0,
        "Name": "openInList",
        "Title": "在列表中打开",
        "Description": "<p>通过将功能列表合并到底部表单中，您可以创建一个简单的 ‘open in’ 组件。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MBottomSheet @bind-Value=\"sheet\">\r\n        <ActivatorContent>\r\n            <MButton\r\n                Color=\"purple\"\r\n                Dark\r\n                @attributes=\"@context.Attrs\">\r\n                Open In\r\n            </MButton>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <MList>\r\n                <MSubheader>Open in</MSubheader>\r\n                @foreach (var tile in tiles)\r\n                {\r\n                    <MListItem @key=\"@tile\"\r\n                               OnClick=\"() => sheet = false\">\r\n                        <MListItemAvatar>\r\n                            <MAvatar\r\n                                Size=\"32\"\r\n                                Tile>\r\n                                <img\r\n                                    src=\"@($\"https://cdn.vuetifyjs.com/images/bottom-sheets/{tile.img}\")\"\r\n                                    alt=\"@tile.title\">\r\n                            </MAvatar>\r\n                        </MListItemAvatar>\r\n                        <MListItemTitle>@tile.title</MListItemTitle>\r\n                    </MListItem>\r\n                }\r\n            </MList>\r\n        </ChildContent>\r\n    </MBottomSheet>\r\n</div>\r\n\r\n@code {\r\n\r\n    bool sheet;\r\n\r\n    static readonly List<(string img, string title)> tiles = new()\r\n    {\r\n        (\"keep.png\", \"Keep\"),\r\n        (\"inbox.png\", \"Inbox\"),\r\n        (\"hangouts.png\", \"Hangouts\"),\r\n        (\"messenger.png\", \"Messenger\"),\r\n        (\"google.png\", \"Google+\"),\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.BottomSheets.misc.OpenInList",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/dialogs",
      "/components/lists",
      "/components/menus"
    ],
    "Subtitle": "底部工作表",
    "Title": "Bottom sheets",
    "Type": "底部工作表"
  },
  {
    "Desc": "<p>Breadcrumbs 组件适用于页面层级导航</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MBreadcrumbs\">MBreadcrumbs</a></li>\n<li><a href=\"/api/MBreadcrumbsItem\">MBreadcrumbsItem</a></li>\n</ul>\n",
      "注意": "\n<!--alert:info-->\n<p>默认情况下，<code>MBreadcrumbs</code> 将禁用路由联动。可以通过 <strong>Linkage</strong> 属性开启路由联动。</p>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.4801416+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>默认情况下，面包屑导航使用文本分隔符。 可以是任何字符串。</p>\n",
        "Code": "<div class=\"d-flex align-center\">\r\n    Items:\r\n    <MBreadcrumbs Items=\"items\"></MBreadcrumbs>\r\n</div>\r\n\r\n<div class=\"d-flex align-center\">\r\n    Markup:\r\n    <MBreadcrumbs>\r\n        <MBreadcrumbsItem Href=\"/components/breadcrumbs\">Dashboard</MBreadcrumbsItem>\r\n        <MBreadcrumbsItem Href=\"/components/breadcrumbs\" Text=\"Link 1\"></MBreadcrumbsItem>\r\n        <MBreadcrumbsItem Href=\"/components/breadcrumbs\" Disabled>Link 2</MBreadcrumbsItem>\r\n    </MBreadcrumbs>\r\n</div>\r\n\r\n    @code {\r\n\r\n    List<BreadcrumbItem> items = new()\r\n        {\r\n            new BreadcrumbItem() { Text = \"Dashboard\", Disabled = false, Href = \"/components/breadcrumbs\" },\r\n            new BreadcrumbItem() { Text = \"Link 1\", Disabled = false, Href = \"/components/breadcrumbs\" },\r\n            new BreadcrumbItem() { Text = \"Link 2\", Disabled = true, Href = \"/components/breadcrumbs\" }\r\n        };\r\n    }\r\n",
        "Type": "Demos.Components.Breadcrumbs.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "divider",
        "Title": "分隔线",
        "Description": "<p>可以使用 divider 属性来设置面包屑分隔符。</p>\n",
        "Code": "<div>\r\n    <MBreadcrumbs Items=\"items\" Divider=\".\"></MBreadcrumbs>\r\n\r\n    <MBreadcrumbs Items=\"items\" Divider=\"-\"></MBreadcrumbs>\r\n</div>\r\n\r\n@code {\r\n\r\n    List<BreadcrumbItem> items = new()\r\n    {\r\n        new BreadcrumbItem() {Text = \"Dashboard\", Disabled = false, Href = \"/components/breadcrumbs\"},\r\n        new BreadcrumbItem() {Text = \"Link 1\", Disabled = false, Href = \"/components/breadcrumbs\"},\r\n        new BreadcrumbItem() {Text = \"Link 2\", Disabled = true, Href = \"/components/breadcrumbs\"}\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.Breadcrumbs.props.Divider",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "large",
        "Title": "大号",
        "Description": "<p>大的面包屑具有较大的字体。</p>\n",
        "Code": "<div>\r\n    <MBreadcrumbs Items=\"items\"></MBreadcrumbs>\r\n\r\n    <MBreadcrumbs Items=\"items\" Large></MBreadcrumbs>\r\n</div>\r\n\r\n@code {\r\n\r\n    List<BreadcrumbItem> items = new()\r\n    {\r\n        new BreadcrumbItem() {Text = \"Dashboard\", Disabled = false, Href = \"/components/breadcrumbs\"},\r\n        new BreadcrumbItem() {Text = \"Link 1\", Disabled = false, Href = \"/components/breadcrumbs\"},\r\n        new BreadcrumbItem() {Text = \"Link 2\", Disabled = true, Href = \"/components/breadcrumbs\"}\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.Breadcrumbs.props.Large",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "linkage",
        "Title": "路由联动",
        "Description": "",
        "Code": "<MBreadcrumbs Items=\"items\" Linkage></MBreadcrumbs>\r\n\r\n@code {\r\n\r\n    List<BreadcrumbItem> items = new()\r\n    {\r\n        new BreadcrumbItem() { Text = \"Masa.Blazor\", Href = \"/\", Exact = true },\r\n        new BreadcrumbItem() { Text = \"Borders\", Href = \"/components/borders\", Exact = true },\r\n        new BreadcrumbItem() { Text = \"Breadcrumbs\", Href = \"/components/breadcrumbs\" }\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.Breadcrumbs.props.Linkage",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 10,
        "Name": "icon-dividers",
        "Title": "图标分隔符",
        "Description": "<p>对于图标变量，面包屑可以使用Material设计中的任何图标。</p>\n",
        "Code": "<div>\r\n    <MBreadcrumbs Items=\"items\">\r\n        <DividerContent>\r\n            <MIcon>mdi-forward</MIcon>\r\n        </DividerContent>\r\n    </MBreadcrumbs>\r\n\r\n    <MBreadcrumbs Items=\"items\">\r\n        <DividerContent>\r\n            <MIcon>mdi-chevron-right</MIcon>\r\n        </DividerContent>\r\n    </MBreadcrumbs>\r\n</div>\r\n\r\n@code {\r\n\r\n    List<BreadcrumbItem> items = new()\r\n    {\r\n        new BreadcrumbItem() {Text = \"Dashboard\", Disabled = false, Href = \"/components/breadcrumbs\"},\r\n        new BreadcrumbItem() {Text = \"Link 1\", Disabled = false, Href = \"/components/breadcrumbs\"},\r\n        new BreadcrumbItem() {Text = \"Link 2\", Disabled = true, Href = \"/components/breadcrumbs\"}\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.Breadcrumbs.contents.IconDividers",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 11,
        "Name": "item",
        "Title": "项目",
        "Description": "<p>您可以使用 <code>item</code> 插槽自定义每个面包屑。</p>\n",
        "Code": "<MBreadcrumbs Items=\"items\">\r\n    <ItemContent>\r\n        <MBreadcrumbsItem Href=\"@context.Href\" Disabled=\"context.Disabled\" Context=\"itemContext\">\r\n            @context.Text.ToUpper()\r\n        </MBreadcrumbsItem>\r\n    </ItemContent>\r\n</MBreadcrumbs>\r\n\r\n@code {\r\n\r\n    List<BreadcrumbItem> items = new()\r\n    {\r\n        new BreadcrumbItem() {Text = \"Dashboard\", Disabled = false, Href = \"/components/breadcrumbs\"},\r\n        new BreadcrumbItem() {Text = \"Link 1\", Disabled = false, Href = \"/components/breadcrumbs\"},\r\n        new BreadcrumbItem() {Text = \"Link 2\", Disabled = true, Href = \"/components/breadcrumbs\"}\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.Breadcrumbs.contents.Item",
        "Style": "",
        "Debug": false,
        "Group": 2
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/buttons",
      "/components/navigation-drawers",
      "/components/icons"
    ],
    "Subtitle": "面包屑导航",
    "Title": "Breadcrumbs",
    "Type": "面包屑导航"
  },
  {
    "Desc": "<p><code>MButton</code>（按钮）组件采 Material Design 设计主题风格，并增加众多的配置选项替换了标准的 html 按钮。 任何颜色助手类都可以用来改变背景或文字颜色。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MButton\">MButton</a></li>\n<li><a href=\"/api/MButtonGroup\">MButtonGroup</a></li>\n</ul>\n",
      "注意": "\n<!--alert:warning--> \n<p>当使用 <strong>Dark</strong> 属性时，<code>MButton</code> 是唯一一种拥有不同行为的组件。 通常来说，组件使用 <strong>Dark</strong> 属性来表示他们将有深色背景，文本也需要是白色的。 虽然这对\n<code>MButton</code> 也是起作用的，但由于禁用状态与白色背景容易造成混淆，建议仅在按钮<strong>为</strong>彩色背景时使用此属性。 If you need white text, simply add the <code>white--text</code> class.</p>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.4851418+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>最简单的按钮包含大写文本、轻微的仰角、悬停效果和单击时的波纹效果。</p>\n",
        "Code": "<MRow Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n    <MButton Elevation=\"2\">Click Me</MButton>\r\n</MRow>",
        "Type": "Demos.Components.Button.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "block",
        "Title": "块状",
        "Description": "<p>添加 <strong>Block</strong> 属性，按钮将延占满可用的宽度。</p>\n",
        "Code": "<MButton Block>Block Button</MButton>",
        "Type": "Demos.Components.Button.props.Block",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "depressed",
        "Title": "凹陷",
        "Description": "<p><strong>Depressed</strong> 按钮依然保持其背景色，但没有框阴影。</p>\n",
        "Code": "<MRow Align=\"@AlignTypes.Center\"\r\n      Justify=\"@JustifyTypes.SpaceAround\">\r\n    <MButton Depressed>\r\n        Normal\r\n    </MButton>\r\n    <MButton Depressed Color=\"primary\">\r\n        Primary\r\n    </MButton>\r\n    <MButton Depressed Color=\"error\">\r\n        Error\r\n    </MButton>\r\n    <MButton Depressed Disabled>\r\n        Disabled\r\n    </MButton>\r\n</MRow>",
        "Type": "Demos.Components.Button.props.Depressed",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "floating",
        "Title": "浮动",
        "Description": "<p>浮动按钮是圆形的，通常包含一个图标。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MButton class=\"mx-2\"\r\n             Fab\r\n             Small\r\n             Dark\r\n             Color=\"primary\">\r\n        <MIcon>\r\n            mdi-minus\r\n        </MIcon>\r\n    </MButton>\r\n\r\n    <MButton class=\"mx-2\"\r\n             Fab\r\n             Small\r\n             Dark\r\n             Color=\"pink\">\r\n        <MIcon>mdi-heart</MIcon>\r\n    </MButton>\r\n\r\n    <MButton class=\"mx-2\"\r\n             Fab\r\n             Dark\r\n             Color=\"indigo\">\r\n        <MIcon>mdi-plus</MIcon>\r\n    </MButton>\r\n\r\n    <MButton class=\"mx-2\"\r\n             Fab\r\n             Dark\r\n             Color=\"teal\">\r\n        <MIcon>mdi-format-list-bulleted-square</MIcon>\r\n    </MButton>\r\n\r\n    <MButton class=\"mx-2\"\r\n             Fab\r\n             Dark\r\n             Large\r\n             Color=\"cyan\">\r\n        <MIcon>mdi-pencil</MIcon>\r\n    </MButton>\r\n\r\n    <MButton class=\"mx-2\"\r\n             Fab\r\n             Dark\r\n             Large\r\n             Color=\"purple\">\r\n        <MIcon>\r\n            mdi-android\r\n        </MIcon>\r\n    </MButton>\r\n</div>\r\n",
        "Type": "Demos.Components.Button.props.Floating",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 3,
        "Name": "icon",
        "Title": "图标",
        "Description": "<p>图标可作为按钮的主要内容。此属性使按钮变圆并应用 <strong>Text</strong> 属性样式。</p>\n",
        "Code": "<MCard Flat>\r\n    <MCardText>\r\n        <MContainer Fluid Class=\"pa-0\">\r\n            <MRow>\r\n                <MCol Cols=\"12\">\r\n                    <p>Normal</p>\r\n                </MCol>\r\n                \r\n                <MCol Cols=\"12\" Sm=\"3\">\r\n                    <MButton Icon Color=\"pink\">\r\n                        <MIcon>mdi-heart</MIcon>\r\n                    </MButton>\r\n                </MCol>\r\n                <MCol Cols=\"12\" Sm=\"3\">\r\n                    <MButton Icon Color=\"indigo\">\r\n                        <MIcon>mdi-star</MIcon>\r\n                    </MButton>\r\n                </MCol>\r\n                <MCol Cols=\"12\" Sm=\"3\">\r\n                    <MButton Icon Color=\"green\">\r\n                        <MIcon>mdi-cached</MIcon>\r\n                    </MButton>\r\n                </MCol>\r\n                <MCol Cols=\"12\" Sm=\"3\">\r\n                    <MButton Icon Color=\"deep-orange\">\r\n                        <MIcon>mdi-thumb-up</MIcon>\r\n                    </MButton>\r\n                </MCol>\r\n            </MRow>\r\n            <MRow class=\"mt-12\">\r\n                <MCol Cols=\"12\">\r\n                    <p>Disabled</p>\r\n                </MCol>\r\n                \r\n                <MCol Cols=\"12\" Sm=\"3\">\r\n                    <MButton Icon Disabled>\r\n                        <MIcon>mdi-heart</MIcon>\r\n                    </MButton>\r\n                </MCol>\r\n                <MCol Cols=\"12\" Sm=\"3\">\r\n                    <MButton Icon Disabled>\r\n                        <MIcon>mdi-star</MIcon>\r\n                    </MButton>\r\n                </MCol>\r\n                <MCol Cols=\"12\" Sm=\"3\">\r\n                    <MButton Icon Disabled>\r\n                        <MIcon>mdi-cached</MIcon>\r\n                    </MButton>\r\n                </MCol>\r\n                <MCol Cols=\"12\" Sm=\"3\">\r\n                    <MButton Icon Disabled>\r\n                        <MIcon>mdi-thumb-up</MIcon>\r\n                    </MButton>\r\n                </MCol>\r\n            </MRow>\r\n        </MContainer>\r\n    </MCardText>\r\n</MCard>",
        "Type": "Demos.Components.Button.props.Icon",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 4,
        "Name": "loaders",
        "Title": "加载",
        "Description": "<p>使用加载道具，可以通知用户正在进行处理。默认行为是使用 <code>MProgressCircular</code> 组件，但这可以自定义。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MButton class=\"ma-2\"\r\n             Loading=\"loading\"\r\n             Disabled=\"loading\"\r\n             Color=\"secondary\"\r\n             OnClick=\"OnClick\">\r\n        Accept Terms\r\n    </MButton>\r\n\r\n    <MButton class=\"ma-2 white--text\"\r\n             Loading=\"loading2\"\r\n             Disabled=\"loading2\"\r\n             Color=\"blue-grey\"\r\n             OnClick=\"OnClick2\">\r\n        Upload\r\n        <MIcon Right Dark>\r\n            mdi-cloud-upload\r\n        </MIcon>\r\n    </MButton>\r\n\r\n    <MButton class=\"ma-2\"\r\n             Loading=\"loading3\"\r\n             Disabled=\"loading3\"\r\n             Color=\"success\"\r\n             OnClick=\"OnClick3\">\r\n        <LoaderContent>\r\n            <span>Loading...</span>\r\n        </LoaderContent>\r\n        <ChildContent>\r\n            Custom Loader\r\n        </ChildContent>\r\n    </MButton>\r\n\r\n    <MButton class=\"ma-2\"\r\n             Loading=\"loading4\"\r\n             Disabled=\"loading4\"\r\n             Color=\"info\"\r\n             OnClick=\"OnClick4\">\r\n        <LoaderContent>\r\n            <span class=\"custom-loader\"><MIcon>mdi-cached</MIcon></span>\r\n        </LoaderContent>\r\n        <ChildContent>\r\n            Icon Loader\r\n        </ChildContent>\r\n    </MButton>\r\n\r\n    <MButton class=\"ma-2 white--text\"\r\n             Loading=\"loading5\"\r\n             Disabled=\"loading5\"\r\n             Color=\"blue-grey\"\r\n             Fab\r\n             OnClick=\"OnClick5\">\r\n        <MIcon Dark>\r\n            mdi-cloud-upload\r\n        </MIcon>\r\n    </MButton>\r\n</div>\r\n\r\n@code {\r\n    private bool loading = false;\r\n    private void OnClick()\r\n    {\r\n        loading = true;\r\n        Task.Run(async () =>\r\n        {\r\n            await Task.Delay(1000);\r\n            loading = false;\r\n            await InvokeAsync(StateHasChanged);\r\n        });\r\n    }\r\n\r\n    private bool loading2 = false;\r\n    private void OnClick2()\r\n    {\r\n        loading2 = true;\r\n        Task.Run(async () =>\r\n        {\r\n            await Task.Delay(1000);\r\n            loading2 = false;\r\n            await InvokeAsync(StateHasChanged);\r\n        });\r\n    }\r\n\r\n    private bool loading3 = false;\r\n    private void OnClick3()\r\n    {\r\n        loading3 = true;\r\n        Task.Run(async () =>\r\n        {\r\n            await Task.Delay(1000);\r\n            loading3 = false;\r\n            await InvokeAsync(StateHasChanged);\r\n        });\r\n    }\r\n\r\n    private bool loading4 = false;\r\n    private void OnClick4()\r\n    {\r\n        loading4 = true;\r\n        Task.Run(async () =>\r\n        {\r\n            await Task.Delay(1000);\r\n            loading4 = false;\r\n            await InvokeAsync(StateHasChanged);\r\n        });\r\n    }\r\n\r\n    private bool loading5 = false;\r\n    private void OnClick5()\r\n    {\r\n        loading5 = true;\r\n        Task.Run(async () =>\r\n        {\r\n            await Task.Delay(1000);\r\n            loading5 = false;\r\n            await InvokeAsync(StateHasChanged);\r\n        });\r\n    }\r\n}\r\n\r\n<style>\r\n\t.custom-loader {\r\n\t\tanimation: loader 1s infinite;\r\n\t\tdisplay: flex;\r\n\t}\r\n\r\n\t@(\"@-moz-keyframes\") loader {\r\n\t\tfrom {\r\n\t\ttransform: rotate(0);\r\n\t\t}\r\n\r\n\t\tto {\r\n\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t@(\"@-webkit-keyframes\") loader {\r\n\t\tfrom {\r\n\t\ttransform: rotate(0);\r\n\t\t}\r\n\r\n\t\tto {\r\n\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t@(\"@-o-keyframes\") loader {\r\n\t\tfrom {\r\n\t\ttransform: rotate(0);\r\n\t\t}\r\n\r\n\t\tto {\r\n\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\r\n\t@(\"@keyframes\") loader {\r\n\t\tfrom {\r\n\t\ttransform: rotate(0);\r\n\t\t}\r\n\r\n\t\tto {\r\n\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n</style>\r\n",
        "Type": "Demos.Components.Button.props.Loaders",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 5,
        "Name": "outlined",
        "Title": "轮廓",
        "Description": "<p>添加 <strong>Outlined</strong> 属性，按钮的边框颜色将继承自当前应用的按钮颜色。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MButton class=\"ma-2\"\r\n             Outlined\r\n             Color=\"indigo\">\r\n        Outlined Button\r\n    </MButton>\r\n    <MButton class=\"ma-2\"\r\n             Outlined\r\n             Fab\r\n             Color=\"teal\">\r\n        <MIcon>mdi-format-list-bulleted-square</MIcon>\r\n    </MButton>\r\n    <MButton class=\"ma-2\"\r\n             Outlined\r\n             Large\r\n             Fab\r\n             Color=\"indigo\">\r\n        <MIcon>mdi-pencil</MIcon>\r\n    </MButton>\r\n</div>",
        "Type": "Demos.Components.Button.props.Outlined",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 6,
        "Name": "plain",
        "Title": "Plain(朴实)",
        "Description": "<p>应用 <strong>Plain</strong> 属性， 按钮将会有较低的基准不透明度, 以响应 <strong>hover(悬停)</strong> 和 <strong>focus(聚焦)</strong> 事件。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MSheet Class=\"px-7 pt-7 pb-4 mx-auto text-center d-inline-block\"\r\n            Color=\"blue-grey darken-3\"\r\n            Dark>\r\n\r\n        <div class=\"grey--text text--lighten-1 text-body-2 mb-4\">\r\n            Are you sure you want to delete this album?\r\n        </div>\r\n\r\n        <MButton Disabled=\"loading\"\r\n                 class=\"ma-1\"\r\n                 Color=\"grey\"\r\n                 Plain>\r\n            Cancel\r\n        </MButton>\r\n\r\n        <MButton Loading=\"loading\"\r\n                 class=\"ma-1\"\r\n                 Color=\"error\"\r\n                 Plain\r\n                 OnClick=\"Remove\">\r\n            Delete\r\n        </MButton>\r\n    </MSheet>\r\n</div>\r\n\r\n@code {\r\n\r\n    bool loading = false;\r\n\r\n    private async Task Remove()\r\n    {\r\n        loading = true;\r\n\r\n        await Task.Delay(3000);\r\n\r\n        loading = false;\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.Button.props.Plain",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 7,
        "Name": "rounded",
        "Title": "圆角",
        "Description": "<p><strong>Rounded</strong> 按钮的行为与常规按钮相同，但具有圆形边缘。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MButton Rounded Color=\"primary\" Dark>Rounded Button</MButton>\r\n</div>",
        "Type": "Demos.Components.Button.props.Rounded",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 8,
        "Name": "size",
        "Title": "大小",
        "Description": "<p>可以为按钮提供不同的大小调整选项，以适应多种场景。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MRow Align=\"@AlignTypes.Center\">\r\n        <MCol Cols=\"12\" Sm=\"6\">\r\n            <div class=\"text-center\">\r\n                <div class=\"my-2\">\r\n                    <MButton XSmall Color=\"secondary\">XSmall Button</MButton>\r\n                </div>\r\n                <div class=\"my-2\">\r\n                    <MButton Small Color=\"primary\">Small Button</MButton>\r\n                </div>\r\n                <div class=\"my-2\">\r\n                    <MButton Color=\"warning\">Normal Button</MButton>\r\n                </div>\r\n                <div class=\"my-2\">\r\n                    <MButton Large Color=\"error\">Large Button</MButton>\r\n                </div>\r\n                <div class=\"my-2\">\r\n                    <MButton XLarge Color=\"success\">XLarge Button</MButton>\r\n                </div>\r\n            </div>\r\n        </MCol>\r\n        <MCol Cols=\"12\" Sm=\"6\">\r\n            <div class=\"text-center\">\r\n                <div class=\"my-2\">\r\n                    <MButton XSmall Fab Color=\"secondary\">\r\n                        <MIcon>mdi-television</MIcon>\r\n                    </MButton>\r\n                </div>\r\n                <div class=\"my-2\">\r\n                    <MButton Small Fab Color=\"primary\">\r\n                        <MIcon>mdi-pencil</MIcon>\r\n                    </MButton>\r\n                </div>\r\n                <div class=\"my-2\">\r\n                    <MButton Fab Color=\"warning\">\r\n                        <MIcon>mdi-account-circle</MIcon>\r\n                    </MButton>\r\n                </div>\r\n                <div class=\"my-2\">\r\n                    <MButton Large Fab Color=\"error\">\r\n                        <MIcon>mdi-alarm</MIcon>\r\n                    </MButton>\r\n                </div>\r\n                <div class=\"my-2\">\r\n                    <MButton XLarge Fab Color=\"success\">\r\n                        <MIcon>mdi-domain</MIcon>\r\n                    </MButton>\r\n                </div>\r\n            </div>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>",
        "Type": "Demos.Components.Button.props.Size",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 9,
        "Name": "text",
        "Title": "文本",
        "Description": "<p>文本按钮没有框阴影和背景。只在悬停时显示按钮的容器。与 <strong>Color</strong> 属性一起使用时，提供的颜色将应用于按钮文本而不是背景。</p>\n",
        "Code": "<MRow Align=\"@AlignTypes.Center\" Justify=\"@JustifyTypes.SpaceAround\">\r\n    <MButton Text>\r\n        Normal\r\n    </MButton>\r\n    <MButton Text Color=\"primary\">\r\n        Primary\r\n    </MButton>\r\n    <MButton Text Color=\"error\">\r\n        Error\r\n    </MButton>\r\n    <MButton Text Disabled>\r\n        Disabled\r\n    </MButton>\r\n</MRow>\r\n",
        "Type": "Demos.Components.Button.props.Text",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 10,
        "Name": "tile",
        "Title": "方块",
        "Description": "<p><strong>Tile</strong> 按钮的行为与常规按钮相同，但没有边框半径。</p>\n",
        "Code": "<MRow Align=\"@AlignTypes.Center\" Justify=\"@JustifyTypes.SpaceAround\">\r\n    <MButton Tile Color=\"success\">\r\n        <MIcon Left>mdi-pencil</MIcon>\r\n        Edit\r\n    </MButton>\r\n</MRow>",
        "Type": "Demos.Components.Button.props.Tile",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 11,
        "Name": "raised",
        "Title": "突起",
        "Description": "<p><strong>Raised</strong>按钮有一个框阴影，单击时会增加。这是默认样式。</p>\n",
        "Code": "<MRow Align=\"@AlignTypes.Center\" Justify=\"@JustifyTypes.SpaceAround\">\r\n    <MButton>Normal</MButton>\r\n    <MButton Color=\"primary\">Primary</MButton>\r\n    <MButton Color=\"error\">Error</MButton>\r\n    <MButton Disabled>Disabled</MButton>\r\n</MRow>",
        "Type": "Demos.Components.Button.misc.Raised",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/button-groups",
      "/components/icons",
      "/components/floating-action-buttons"
    ],
    "Subtitle": "按钮",
    "Title": "Buttons",
    "Type": "按钮"
  },
  {
    "Desc": "<p><code>MCard</code> 组件是一个可用于从面板到静态图像的多功能组件。 卡 组件有许多帮助程序组件来尽可能简单地进行标记。 没有列出选项的组件使用Blazor的功能组件来更快渲染并充当标记糖以使建筑变得更加容易。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MCard\">MCard</a></li>\n<li><a href=\"/api/MCardActions\">MCardActions</a></li>\n<li><a href=\"/api/MCardSubtitle\">MCardSubtitle</a></li>\n<li><a href=\"/api/MCardText\">MCardText</a></li>\n<li><a href=\"/api/MCardTitle\">MCardTitle</a></li>\n</ul>\n",
      "功能组件": "\n<ul>\n<li><code>MCardActions</code>：用于为卡片放置 动作 的容器，如 <a href=\"/components/buttons\">MButton</a> 或 <a href=\"/components/menus\">MMenu</a>。 同时在按钮上使用 个特殊边距\n，以便它们与其他卡片内容区域的匹配。</li>\n<li><code>MCardSubtitle</code>：为卡片字幕提供默认的 <strong>字体大小</strong> 和 <strong>填充</strong>。 字体大小可以以 <a href=\"/stylesandanimations/text-and-typography\">排版类</a> 覆盖。</li>\n<li><code>MCardText</code>：主要用于卡片中的 <strong>文本内容</strong>。 对文本应用填充，将其字体大小减少为 .875rem。</li>\n<li><code>MCardTitle</code>：为卡片字幕提供默认的 字体大小 和 填充。 字体大小可以以 <a href=\"/stylesandanimations/text-and-typography\">排版类</a> 覆盖。</li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.4901417+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "basic",
        "Title": "使用",
        "Description": "<p>卡中有4个基本组件。 <code>MCardTitle</code>, <code>MCardSubtitle</code>, <code>MCardText</code> 和 <code>MCardActions</code></p>\n",
        "Code": "<MCard Elevation=\"2\">\r\n    <MCardTitle>Card title</MCardTitle>\r\n    <MCardSubtitle>Subtitle text</MCardSubtitle>\r\n    <MCardText> Greyhound divisively hello coldly wonderfully marginally far upon excluding. </MCardText>\r\n    <MCardActions>\r\n        <MButton Text Color=\"primary\">Action 1</MButton>\r\n        <MButton Text Color=\"primary\">Action 2</MButton>\r\n    </MCardActions>\r\n</MCard>",
        "Type": "Demos.Components.Card.usage.Basic",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "loading",
        "Title": "加载",
        "Description": "<p>处理用户操作时，卡片可以设置为加载状态。 这会禁用进一步的操作，并通过 <a href=\"/components/progress-linear\">MProgressLinear</a> 提供视觉反馈</p>\n",
        "Code": "<MCard Class=\"mx-auto my-12\" MaxWidth=\"374\" Loading=@_loading>\r\n    <ProgressContent>\r\n        <MProgressLinear Color=\"deep-purple\" Height=\"10\" Indeterminate />\r\n    </ProgressContent>\r\n\r\n    <ChildContent>\r\n\r\n        <MImage Alt=\"example\" Height=\"250\" Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/cards/cooking.png\" />\r\n\r\n        <MCardTitle>Cafe Badilico</MCardTitle>\r\n\r\n        <MCardText>\r\n            <MRow Align=@AlignTypes.Center Class=\"mx-0\">\r\n                <MRating Value=4.5 Color=\"amber\" Dense HalfIncrements Readonly Size=14></MRating>\r\n                <div class=\"grey--text ms-4\">4.5 (413)</div>\r\n            </MRow>\r\n            <div class=\"my-4 text-subtitle-1\">$ • Italian, Cafe </div>\r\n            <div>Small plates, salads & sandwiches - an intimate setting with 12 indoor seats plus patio seating.</div>\r\n        </MCardText>\r\n\r\n        <MDivider Class=\"mx-4\"></MDivider>\r\n\r\n        <MCardTitle>Tonight's availability</MCardTitle>\r\n\r\n        <MCardText>\r\n            <MChipGroup Value=@_selection ActiveClass=\"deep-purple accent-4 white--text\" Column>\r\n                <MChip OnClick=\"()=>_selection=0\">5:30PM</MChip>\r\n                <MChip OnClick=\"()=>_selection=1\">7:30PM</MChip>\r\n                <MChip OnClick=\"()=>_selection=2\">8:00PM</MChip>\r\n                <MChip OnClick=\"()=>_selection=3\">9:00PM</MChip>\r\n            </MChipGroup>\r\n        </MCardText>\r\n\r\n        <MCardActions>\r\n            <MButton Color=\"deep-purple lighten-2\" Text @onclick=\"Reserve\">Reserve</MButton>\r\n        </MCardActions>\r\n\r\n    </ChildContent>\r\n</MCard>\r\n\r\n@code {\r\n    StringBoolean _loading;\r\n\r\n    int _selection = 1;\r\n\r\n    async Task Reserve()\r\n    {\r\n        _loading = true;\r\n        await Task.Delay(2000);\r\n        _loading = false;\r\n    }\r\n}",
        "Type": "Demos.Components.Card.props.Loading",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "outlined",
        "Title": "轮廓",
        "Description": "<p>带轮廓具有0高程并包含软边框的卡片。</p>\n",
        "Code": "<MCard Class=\"mx-auto\" MaxWidth=\"344\" Outlined>\r\n    <MListItem ThreeLine>\r\n        <MListItemContent>\r\n            <div class=\"text-overline mb-4\">\r\n                OVERLINE\r\n            </div>\r\n            <MListItemTitle Class=\"text-h5 mb-1\">\r\n                Headline 5\r\n            </MListItemTitle>\r\n            <MListItemSubtitle>Greyhound divisely hello coldly fonwderfully</MListItemSubtitle>\r\n        </MListItemContent>\r\n        <MListItemAvatar Tile Size=80 Color=\"grey\"> </MListItemAvatar>\r\n    </MListItem>\r\n    <MCardActions>\r\n        <MButton Outlined Rounded Text>Button</MButton>\r\n    </MCardActions>\r\n</MCard>",
        "Type": "Demos.Components.Card.props.Outlined",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "cardReveal",
        "Title": "卡片显示",
        "Description": "<p>使用 <a href=\"/stylesandanimations/transitions\">ExpandTransition</a> 和 @click 事件，您的卡片可以获得单击按钮就会激活显示隐藏卡片从而展示更多信息的功能。</p>\n",
        "Code": "<MCard Class=\"mx-auto card-misc-reveal\" MaxWidth=\"344\" Outlined>\r\n    <MCardText>\r\n        <div>Word of the Day</div>\r\n        <p class=\"text-h4 text--primary\">\r\n            el·ee·mos·y·nar·y\r\n        </p>\r\n        <p>adjective</p>\r\n        <div class=\"text--primary\">\r\n            relating to or dependent on charity; charitable.<br>\r\n            \"an eleemosynary educational institution.\"\r\n        </div>\r\n    </MCardText>\r\n\r\n    <MCardActions>\r\n        <MButton Text Color=\"teal accent-4\" OnClick=\"() => _reveal = true\">Learn More</MButton>\r\n    </MCardActions>\r\n\r\n    <ExpandTransition>\r\n        <MCard Show=\"@_reveal\" Class=\"transition-fast-in-fast-out m-card--reveal\" Style=\"height: 100%\">\r\n            <MCardText Class=\"pb-0\">\r\n                <p class=\"text-h4 text--primary\">\r\n                    Origin\r\n                </p>\r\n                <p>late 16th century (as a noun denoting a place where alms were distributed): from medieval Latin eleemosynarius, from late Latin eleemosyna ‘alms’, from Greek eleēmosunē ‘compassion’ </p>\r\n            </MCardText>\r\n            <MCardActions Class=\"pb-0\">\r\n                <MButton Text Color=\"teal accent-4\" OnClick=\"() => _reveal = false\">Close</MButton>\r\n            </MCardActions>\r\n        </MCard>\r\n    </ExpandTransition>\r\n</MCard>\r\n\r\n<style>\r\n    .card-misc-reveal .m-card--reveal {\r\n        bottom: 0;\r\n        opacity: 1 !important;\r\n        position: absolute;\r\n        width: 100%;\r\n    }\r\n</style>\r\n\r\n@code {\r\n    bool _reveal;\r\n}",
        "Type": "Demos.Components.Card.misc.CardReveal",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 3,
        "Name": "contentWrapping",
        "Title": "包含内容",
        "Description": "<p>MCard 组件可用于包装内容。</p>\n",
        "Code": "<MContainer>\r\n    <MRow Justify=JustifyTypes.SpaceAround>\r\n        <MCard Width=\"400\">\r\n\r\n            <MImage Height=\"200\" Src=\"https://cdn.pixabay.com/photo/2020/07/12/07/47/bee-5396362_1280.jpg\">\r\n\r\n                <MAppBar Flat Color=\"rgba(0, 0, 0, 0)\">\r\n                    <MAppBarNavIcon Color=\"white\"></MAppBarNavIcon>\r\n                    <MToolbarTitle Class=\"text-h6 white--text pl-0\"> Messages</MToolbarTitle>\r\n                    <MSpacer></MSpacer>\r\n                    <MButton Color=\"white\" Icon>\r\n                        <MIcon>mdi-dots-vertical</MIcon>\r\n                    </MButton>\r\n                </MAppBar>\r\n\r\n                <MCardTitle Class=\"white--text mt-8\">\r\n                    <MAvatar Size=56>\r\n                        <MImage Src=\"https://cdn.pixabay.com/photo/2020/06/24/19/12/cabbage-5337431_1280.jpg\"></MImage>\r\n                    </MAvatar>\r\n                    <p class=\"ml-3\">\r\n                        John Doe\r\n                    </p>\r\n                </MCardTitle>\r\n\r\n            </MImage>\r\n\r\n            <MCardText>\r\n                <div class=\"font-weight-bold ml-8 mb-2\">\r\n                    Today\r\n                </div>\r\n                <MTimeline AlignTop Dense>\r\n                    @foreach (var message in _messages)\r\n                    {\r\n                        <MTimelineItem key=\"@message.Time\" Color=\"@message.Color\" Small>\r\n                            <div>\r\n                                <div class=\"font-weight-normal\">\r\n                                    <strong>@message.From</strong>@message.Time\r\n                                </div>\r\n                                <div>@message.Message</div>\r\n                            </div>\r\n                        </MTimelineItem>\r\n                    }\r\n                </MTimeline>\r\n            </MCardText>\r\n\r\n        </MCard>\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code {\r\n    MessageDto[] _messages = new[]\r\n    {\r\n        new MessageDto\r\n        {\r\n            From=\"You\",\r\n            Message=\"Sure, I'll see you later.\",\r\n            Time=\"10:42am\",\r\n            Color=\"deep-purple lighten-1\"\r\n        },\r\n        new MessageDto\r\n        {\r\n            From=\"John Doe\",\r\n            Message=\"Yeah, sure. Does 1:00pm work?\",\r\n            Time=\"10:37am\",\r\n            Color=\"green\"\r\n        },\r\n        new MessageDto\r\n        {\r\n            From=\"You\",\r\n            Message=\"Did you still want to grab lunch today?\",\r\n            Time=\"9:47am\",\r\n            Color=\"deep-purple lighten-1\"\r\n        }\r\n    };\r\n\r\n    class MessageDto\r\n    {\r\n        public string From { get; set; }\r\n        public string Message { get; set; }\r\n        public string Time { get; set; }\r\n        public string Color { get; set; }\r\n    }\r\n}",
        "Type": "Demos.Components.Card.misc.ContentWrapping",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 4,
        "Name": "customActions",
        "Title": "自定义操作",
        "Description": "<p>使用简单的条件，您就可以轻松添加隐藏的补充文本直到您开启显示。</p>\n",
        "Code": "<MCard Class=\"mx-auto\" MaxWidth=\"344\" Outlined>\r\n\r\n    <MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/cards/sunshine.jpg\" Height=\"200\"></MImage>\r\n\r\n    <MCardTitle>\r\n        Top western road trips\r\n    </MCardTitle>\r\n\r\n    <MCardSubtitle>\r\n        1,000 miles of wonder\r\n    </MCardSubtitle>\r\n\r\n    <MCardActions>\r\n        <MButton Color=\"orange lighten-2\" Text>Explore</MButton>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Icon OnClick=\"() => show = !show\">\r\n            <MIcon>@(show ? \"mdi-chevron-down\" : \"mdi-chevron-up\")</MIcon>\r\n        </MButton>\r\n\r\n    </MCardActions>\r\n    <div style=\"@(show ? \"display:none\" : \"\")\">\r\n        <MDivider></MDivider>\r\n        <MCardText>\r\n            I'm a thing. But, like most politicians, he promised more than he could deliver. You won't have time for sleeping, soldier, not with all the bed making you'll be doing. Then we'll go with that data file! Hey, you add a one and two zeros to that or we walk! You're going to do his laundry? I've got to find a way to escape.\r\n        </MCardText>\r\n    </div>\r\n\r\n</MCard>\r\n\r\n@code {\r\n    bool show = true;\r\n}",
        "Type": "Demos.Components.Card.misc.CustomActions",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 5,
        "Name": "grids",
        "Title": "栅格",
        "Description": "<p>使用网格，您可以创建漂亮的布局。</p>\n",
        "Code": "<MCard Class=\"mx-auto\" MaxWidth=500>\r\n\r\n    <MSystemBar Color=\"indigo darken-2\" Dark>\r\n        <MSpacer></MSpacer>\r\n        <MIcon>mdi-window-minimize</MIcon>\r\n        <MIcon>mdi-window-maximize</MIcon>\r\n        <MIcon>mdi-close</MIcon>\r\n    </MSystemBar>\r\n\r\n    <MToolbar Color=\"indigo\" Dark>\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n        <MToolbarTitle>Discover</MToolbarTitle>\r\n        <MSpacer></MSpacer>\r\n        <MButton Icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n    </MToolbar>\r\n\r\n    <MContainer Fluid>\r\n        <MRow Dense>\r\n            @foreach (var card in _cards)\r\n            {\r\n                <MCol key=\"@card.Title\" Cols=@card.Flex>\r\n                    <MCard>\r\n                        <MImage Src=\"@card.Src\" Class=\"white--text align-end\" Gradient=\"to bottom, rgba(0,0,0,.1), rgba(0,0,0,.5)\" Height=200>\r\n                            <MCardTitle>@card.Title</MCardTitle>\r\n                        </MImage>\r\n\r\n                        <MCardActions>\r\n                            <MSpacer></MSpacer>\r\n                            <MButton Icon>\r\n                                <MIcon>mdi-heart</MIcon>\r\n                            </MButton>\r\n                            <MButton Icon>\r\n                                <MIcon>mdi-bookmark</MIcon>\r\n                            </MButton>\r\n                            <MButton Icon>\r\n                                <MIcon>mdi-share-variant</MIcon>\r\n                            </MButton>\r\n                        </MCardActions>\r\n                    </MCard>\r\n                </MCol>\r\n            }\r\n        </MRow>\r\n    </MContainer>\r\n\r\n</MCard>\r\n\r\n@code {\r\n    Card[] _cards = new Card[]\r\n                {\r\n        new Card\r\n        {\r\n            Title=\"Pre-fab homes\",\r\n            Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/cards/house.jpg\",\r\n            Flex=12,\r\n        },\r\n         new Card\r\n        {\r\n            Title=\"Favorite road trips\",\r\n            Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/cards/road.jpg\",\r\n            Flex=6,\r\n        },\r\n         new Card\r\n        {\r\n            Title=\"Best airlines\",\r\n            Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/cards/plane.jpg\",\r\n            Flex=6,\r\n        }\r\n                };\r\n\r\n    class Card\r\n    {\r\n        public string Title { get; set; }\r\n        public string Src { get; set; }\r\n        public int Flex { get; set; }\r\n    }\r\n}",
        "Type": "Demos.Components.Card.misc.Grids",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 6,
        "Name": "horizontalCards",
        "Title": "水平卡片",
        "Description": "<p>使用 MCol，您可以创建自定义的水平卡片。 使用 contain 属性缩小 MImage 以适应容器内部，而不是覆盖。</p>\n",
        "Code": "<MCard Class=\"mx-auto\" MaxWidth=\"400\">\r\n\r\n    <MSystemBar Color=\"pink darken-2\" Dark>\r\n        <MSpacer></MSpacer>\r\n        <MIcon>mdi-window-minimize</MIcon>\r\n        <MIcon>mdi-window-maximize</MIcon>\r\n        <MIcon>mdi-close</MIcon>\r\n    </MSystemBar>\r\n\r\n    <MAppBar Dark Color=\"pink\">\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n        <MToolbarTitle>My Music</MToolbarTitle>\r\n        <MSpacer></MSpacer>\r\n        <MButton Icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n    </MAppBar>\r\n\r\n    <MContainer>\r\n        <MRow Dense>\r\n\r\n            <MCol Cols=12>\r\n                <MCard Color=\"#385F73\" Dark>\r\n                    <MCardText Class=\"text-h5\">Unlimited music now</MCardText>\r\n                    <MCardSubtitle>Listen to your favorite artists and albums whenever and wherever, online and offline.</MCardSubtitle>\r\n                    <MCardActions>\r\n                        <MButton Text>\r\n                            Listen Now\r\n                        </MButton>\r\n                    </MCardActions>\r\n                </MCard>\r\n            </MCol>\r\n            @for (var i = 0; i < _cards.Length; i++)\r\n            {\r\n                var card = _cards[i];\r\n\r\n                <MCol key=\"@i\" Cols=12>\r\n                    <MCard Color=\"@card.Color\" Dark>\r\n                        <div class=\"d-flex flex-no-wrap justify-space-between\">\r\n                            <div>\r\n\r\n                                <MCardTitle Class=\"text-h5\">\r\n                                    @card.Title\r\n                                </MCardTitle>\r\n\r\n                                <MCardSubtitle>\r\n                                    @card.Artist\r\n                                </MCardSubtitle>\r\n\r\n                                <MCardActions>\r\n                                    @if (card.Artist == \"Ellie Goulding\")\r\n                                    {\r\n                                        <MButton Class=\"ml-2 mt-3\" Fab Icon Height=40 Right Width=40>\r\n                                            <MIcon>mdi-play</MIcon>\r\n                                        </MButton>\r\n                                    }\r\n                                    else\r\n                                    {\r\n                                        <MButton Class=\"ml-2 mt-5\" Outlined Rounded Small>START RADIO</MButton>\r\n                                    }\r\n                                </MCardActions>\r\n                            </div>\r\n                            <MAvatar Class=\"ma-3\" Size=125 Tile>\r\n                                <MImage Src=\"@card.Src\"></MImage>\r\n                            </MAvatar>\r\n                        </div>\r\n                    </MCard>\r\n                </MCol>\r\n            }\r\n\r\n        </MRow>\r\n    </MContainer>\r\n\r\n</MCard>\r\n\r\n@code {\r\n    Card[] _cards = new[]\r\n    {\r\n        new Card\r\n        {\r\n            Color=\"#1F7087\",\r\n            Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/cards/foster.jpg\",\r\n            Title=\"Supermodel\",\r\n            Artist=\"Foster the People\"\r\n        },\r\n        new Card\r\n        {\r\n            Color=\"#952175\",\r\n            Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/cards/halcyon.png\",\r\n            Title=\"Halcyon Days\",\r\n            Artist=\"Ellie Goulding\"\r\n        }\r\n    };\r\n\r\n    class Card\r\n    {\r\n        public string Color { get; set; }\r\n        public string Src { get; set; }\r\n        public string Title { get; set; }\r\n        public string Artist { get; set; }\r\n    }\r\n}",
        "Type": "Demos.Components.Card.misc.HorizontalCards",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 7,
        "Name": "informationCard",
        "Title": "信息卡片",
        "Description": "<p>卡片是获取更详细信息的入口点。 为了保持简洁，请确保限制用户可以执行的操作数量。</p>\n",
        "Code": "<MCard Class=\"mx-auto\" MaxWidth=\"344\">\r\n\r\n    <MCardText>\r\n        <div>Word of the Day</div>\r\n        <p class=\"text-h4 text--primary\">\r\n            be•nev•o•lent\r\n        </p>\r\n        <p>adjective</p>\r\n        <div class=\"text--primary\">\r\n            well meaning and kindly.<br>\r\n            \"a benevolent smile\"\r\n        </div>\r\n    </MCardText>\r\n\r\n    <MCardActions>\r\n        <MButton Text Color=\"deep-purple accent-4\">Learn More</MButton>\r\n    </MCardActions>\r\n\r\n</MCard>\r\n",
        "Type": "Demos.Components.Card.misc.InformationCard",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 8,
        "Name": "mediaWithText",
        "Title": "带文字的媒体",
        "Description": "<p>使用布局系统，我们可以在背景中的任何地方添加自定义文本。</p>\n",
        "Code": "<MCard Class=\"mx-auto\" MaxWidth=\"400\">\r\n\r\n     <MImage Class=\"white--text align-end\" Height=200 Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/cards/docks.jpg\">\r\n        <MCardTitle>Top 10 Australian beaches</MCardTitle>\r\n    </MImage>\r\n\r\n    <MCardSubtitle Class=\"pb-0\">\r\n        Number 10\r\n    </MCardSubtitle>\r\n\r\n    <MCardText Class=\"text--primary\">\r\n        <div>Whitehaven Beach</div>\r\n        <div>Whitsunday Island, Whitsunday Islands</div>\r\n    </MCardText>\r\n\r\n    <MCardActions>\r\n        <MButton Color=\"orange\" Text>Share</MButton>\r\n        <MButton Color=\"orange\" Text>Explore</MButton>\r\n    </MCardActions>\r\n\r\n</MCard>\r\n",
        "Type": "Demos.Components.Card.misc.MediaWithText",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 9,
        "Name": "twitterCard",
        "Title": "Twitter卡片",
        "Description": "<p>MCard 组件具有多个子组件，可帮助您构建复杂的示例而无需担心关于间距。 此示例由 MCardTitle、MCardText 和 MCardActions 组件组成。</p>\n",
        "Code": "<MCard Class=\"mx-auto\" Color=\"#26c6da\" Dark MaxWidth=\"400\">\r\n\r\n    <MCardTitle>\r\n        <MIcon Large Left>\r\n            mdi-twitter\r\n        </MIcon>\r\n        <span class=\"text-h6 font-weight-light\">Twitter</span>\r\n    </MCardTitle>\r\n\r\n    <MCardText Class=\"text-h5 font-weight-bold\">\r\n        \"Turns out semicolon-less style is easier and safer in TS because most gotcha edge cases are type invalid as well.\"\r\n    </MCardText>\r\n\r\n    <MCardActions>\r\n        <MListItem Class=\"grow\">\r\n\r\n            <MListItemAvatar Color=\"grey darken-3\">\r\n                <MImage Class=\"elevation-6\"\r\n                        alt=\"\"\r\n                        Src=\"https://avataaars.io/?avatarStyle=Transparent&topType=ShortHairShortCurly&accessoriesType=Prescription02&hairColor=Black&facialHairType=Blank&clotheType=Hoodie&clotheColor=White&eyeType=Default&eyebrowType=DefaultNatural&mouthType=Default&skinColor=Light\">\r\n                </MImage>\r\n            </MListItemAvatar>\r\n\r\n            <MListItemContent>\r\n                <MListItemTitle>Evan You</MListItemTitle>\r\n            </MListItemContent>\r\n\r\n            <MRow Align=AlignTypes.Center Justify=JustifyTypes.End>\r\n                <MIcon Class=\"mr-1\">mdi-heart</MIcon>\r\n                <span class=\"subheading mr-2\">256</span>\r\n                <span class=\"mr-1\">·</span>\r\n                <MIcon Class=\"mr-1\">mdi-share-variant</MIcon>\r\n                <span class=\"subheading\">45</span>\r\n            </MRow>\r\n\r\n        </MListItem>\r\n    </MCardActions>\r\n\r\n</MCard>\r\n",
        "Type": "Demos.Components.Card.misc.TwitterCard",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 10,
        "Name": "weatherCard",
        "Title": "天气卡片",
        "Description": "<p>使用 <a href=\"/components/lists\">MListItem</a> 和 <a href=\"/components/sliders\">MSlider</a>，我们能够创建一个独特的天气卡。\n列表组件确保我们具有一致的间距和功能，而滑块组件允许我们为用户提供有用的选择界面。</p>\n",
        "Code": "<MCard Class=\"mx-auto\" MaxWidth=\"400\">\r\n\r\n    <MListItem TwoLine>\r\n        <MListItemContent>\r\n            <MListItemTitle class=\"text-h5\">\r\n                San Francisco\r\n            </MListItemTitle>\r\n            <MListItemSubtitle>Mon, 12:30 PM, Mostly sunny</MListItemSubtitle>\r\n        </MListItemContent>\r\n    </MListItem>\r\n\r\n    <MCardText>\r\n        <MRow Align=AlignTypes.Center>\r\n            <MCol Class=\"text-h2\" Cols=\"6\">\r\n                23&deg;C\r\n            </MCol>\r\n            <MCol Cols=\"6\">\r\n                <MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/cards/sun.png\" alt=\"Sunny image\" Width=92 />\r\n            </MCol>\r\n        </MRow>\r\n    </MCardText>\r\n\r\n    <MListItem>\r\n        <MListItemIcon>\r\n            <MIcon>mdi-send</MIcon>\r\n        </MListItemIcon>\r\n        <MListItemSubtitle>23 km/h</MListItemSubtitle>\r\n    </MListItem>\r\n\r\n    <MListItem>\r\n        <MListItemIcon>\r\n            <MIcon>mdi-cloud-download</MIcon>\r\n        </MListItemIcon>\r\n        <MListItemSubtitle>48%</MListItemSubtitle>\r\n    </MListItem>\r\n\r\n    <MSlider Value=_time Max=6 TickLabels=_labels Class=\"mx-4\" Ticks=true>\r\n    </MSlider>\r\n    <MList Class=\"transparent\">\r\n        @foreach (var forecast in _forecasts)\r\n        {\r\n            <MListItem key=\"@forecast.Day\">\r\n\r\n                <MListItemTitle>@forecast.Day</MListItemTitle>\r\n\r\n                <MListItemIcon>\r\n                    <MIcon>\r\n                        @forecast.Icon\r\n                    </MIcon>\r\n                </MListItemIcon>\r\n\r\n                <MListItemSubtitle Class=\"text-right\">\r\n                    @forecast.Temp\r\n                </MListItemSubtitle>\r\n\r\n            </MListItem>\r\n        }\r\n    </MList>\r\n\r\n    <MDivider></MDivider>\r\n\r\n    <MCardActions>\r\n        <MButton Text>\r\n            Full Report\r\n        </MButton>\r\n    </MCardActions>\r\n\r\n</MCard>\r\n\r\n@code {\r\n    List<string> _labels = new List<string> { \"SU\", \"MO\", \"TU\", \"WED\", \"TH\", \"FR\", \"SR\" };\r\n\r\n    double _time = 0;\r\n\r\n    Forecast[] _forecasts = new[]\r\n        {\r\n        new Forecast\r\n        {\r\n            Day=\"Tuesday\",\r\n            Icon=\"mdi-white-balance-sunny\",\r\n            Temp=\"24\\xB0/12\\xB0\"\r\n        },\r\n         new Forecast\r\n        {\r\n            Day=\"Wednesday\",\r\n            Icon=\"mdi-white-balance-sunny\",\r\n            Temp=\"22\\xB0/14\\xB0\"\r\n        },\r\n         new Forecast\r\n        {\r\n            Day=\"Thursday\",\r\n            Icon=\"mdi-cloud\",\r\n            Temp=\"25\\xB0/15\\xB0\"\r\n        },\r\n    };\r\n\r\n    class Forecast\r\n    {\r\n        public string Day { get; set; }\r\n        public string Icon { get; set; }\r\n        public string Temp { get; set; }\r\n    }\r\n}",
        "Type": "Demos.Components.Card.misc.WeatherCard",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/buttons",
      "/components/images",
      "/stylesandanimations/text-and-typography"
    ],
    "Subtitle": "卡片",
    "Title": "Cards",
    "Type": "卡片"
  },
  {
    "Desc": "<p><code>MCarousel</code> 组件用于在循环计时器上显示大量可视内容。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MCarousel\">MCarousel</a></li>\n<li><a href=\"/api/MCarouselItem\">MCarouselItem</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.494142+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p><code>MCarousel</code> 组件通过提供用于显示图像的附加功能扩展了 <code>MWindow</code>。</p>\n",
        "Code": "<MCarousel @bind-Value=\"value\" Height=\"480\">\r\n    @for (var i = 0; i < colors.Length; i++)\r\n    {\r\n        var index = i;\r\n\r\n        <MCarouselItem>\r\n            <MSheet Color=\"@colors[index]\" Height=\"@(\"100%\")\" Tile>\r\n                <MRow NoGutters Class=\"fill-height\" Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n                    <div class=\"text-h2\">Slide @(index + 1)</div>\r\n                </MRow>\r\n            </MSheet>\r\n        </MCarouselItem>\r\n    }\r\n</MCarousel>\r\n\r\n@code {\r\n\r\n    private StringNumber value;\r\n\r\n    private string[] colors = new[]\r\n    {\r\n        \"primary\",\r\n        \"secondary\",\r\n        \"yellow darken-2\",\r\n        \"red\",\r\n        \"orange\",\r\n    };\r\n\r\n}\r\n",
        "Type": "Demos.Components.Carousel.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "customDelimiters",
        "Title": "自定义分隔符",
        "Description": "<p>使用任何可用的图标来改变轮播的滑动分隔符。</p>\n",
        "Code": "<MCard\r\n    Elevation=\"24\"\r\n    MaxWidth=\"444\"\r\n    Class=\"mx-auto\">\r\n    <MSystemBar LightsOut></MSystemBar>\r\n    <MCarousel\r\n        Continuous=\"false\"\r\n        Cycle=\"@cycle\"\r\n        ShowArrows=\"false\"\r\n        HideDelimiterBackground\r\n        DelimiterIcon=\"mdi-minus\"\r\n        Height=\"300\">\r\n        @for (int i = 0; i < slides.Length; i++)\r\n        {\r\n            var index = i;\r\n            <MCarouselItem>\r\n                <MSheet\r\n                    Color=\"@colors[index]\"\r\n                    Height=\"@(\"100%\")\"\r\n                    Tile>\r\n                    <MRow\r\n                        NoGutters\r\n                        Class=\"fill-height\"\r\n                        Align=\"AlignTypes.Center\"\r\n                        Justify=\"JustifyTypes.Center\">\r\n                        <div class=\"text-h2\">\r\n                            @slides[index] Slide\r\n                        </div>\r\n                    </MRow>\r\n                </MSheet>\r\n            </MCarouselItem>\r\n        }\r\n\r\n    </MCarousel>\r\n    <MList TwoLine>\r\n        <MListItem>\r\n            <MListItemAvatar>\r\n                <MImage src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/doddgu.png\"></MImage>\r\n            </MListItemAvatar>\r\n            <MListItemContent>\r\n                <MListItemTitle>doddgu</MListItemTitle>\r\n                <MListItemSubtitle>CTO</MListItemSubtitle>\r\n            </MListItemContent>\r\n            <MListItemAction>\r\n                <MSwitch\r\n                    @bind-Value=\"cycle\"\r\n                    Label=\"Cycle Slides\"\r\n                    Inset>\r\n                </MSwitch>\r\n            </MListItemAction>\r\n        </MListItem>\r\n    </MList>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    private string[] colors = new[]\r\n    {\r\n        \"green\",\r\n        \"secondary\",\r\n        \"yellow darken-4\",\r\n        \"red lighten-2\",\r\n        \"orange darken-1\",\r\n    };\r\n\r\n    private bool cycle = false;\r\n\r\n    private string[] slides = new[]\r\n    {\r\n        \"First\",\r\n        \"Second\",\r\n        \"Third\",\r\n        \"Fourth\",\r\n        \"Fifth\"\r\n    };\r\n\r\n}\r\n",
        "Type": "Demos.Components.Carousel.props.CustomDelimiters",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "customizedArrows",
        "Title": "自定义箭头按钮",
        "Description": "<p>可以用 <strong>PrevContent</strong> 和 <strong>NextContent</strong> 插槽来自定义窗口中的箭头部分。</p>\n",
        "Code": "<MCarousel\r\n    Cycle\r\n    Height=\"400\"\r\n    HideDelimiterBackground\r\n    ShowArrowsOnHover>\r\n    <PrevContent>\r\n        <MButton Color=\"success\" OnClick=\"context\">Previous slide</MButton>\r\n    </PrevContent>\r\n    <NextContent>\r\n        <MButton Color=\"info\" OnClick=\"context\">Next slide</MButton>\r\n    </NextContent>\r\n    <ChildContent>\r\n        @for (int i = 0; i < slides.Length; i++)\r\n        {\r\n            var index = i;\r\n            <MCarouselItem>\r\n                <MSheet\r\n                    Color=\"@colors[index]\"\r\n                    Height=\"@(\"100%\")\">\r\n                    <MRow\r\n                        NoGutters\r\n                        Class=\"fill-height\"\r\n                        Align=\"AlignTypes.Center\"\r\n                        Justify=\"JustifyTypes.Center\">\r\n                        <div class=\"text-h2\">\r\n                            @slides[index] Slide\r\n                        </div>\r\n                    </MRow>\r\n                </MSheet>\r\n            </MCarouselItem>\r\n        }\r\n    </ChildContent>\r\n</MCarousel>\r\n\r\n@code {\r\n\r\n    private string[] colors = new[]\r\n    {\r\n        \"indigo\",\r\n        \"warning\",\r\n        \"pink darken-2\",\r\n        \"red lighten-1\",\r\n        \"deep-purple accent-4\",\r\n    };\r\n\r\n    private string[] slides = new[]\r\n    {\r\n        \"First\",\r\n        \"Second\",\r\n        \"Third\",\r\n        \"Fourth\",\r\n        \"Fifth\"\r\n    };\r\n\r\n}\r\n",
        "Type": "Demos.Components.Carousel.props.CustomizedArrows",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "customTransition",
        "Title": "自定义过渡",
        "Description": "<p><code>MCarouselItem</code> 组件可以有它独有的 <strong>transition/reverse-transition</strong> 过渡.</p>\n",
        "Code": "<MCarousel>\r\n    @foreach (var item in items)\r\n    {\r\n        <MCarouselItem\r\n            Src=\"@item\"\r\n            ReverseTransition=\"fade-transition\"\r\n            Transition=\"fade-transition\">\r\n        </MCarouselItem>\r\n    }\r\n</MCarousel>\r\n\r\n@code\r\n{\r\n    private string[] items = new[]\r\n    {\r\n        \"https://cdn.masastack.com/stack/images/website/masa-blazor/carousel/squirrel.jpg\",\r\n        \"https://cdn.masastack.com/stack/images/website/masa-blazor/carousel/sky.jpg\",\r\n        \"https://cdn.masastack.com/stack/images/website/masa-blazor/carousel/bird.jpg\",\r\n        \"https://cdn.masastack.com/stack/images/website/masa-blazor/carousel/planet.jpg\",\r\n    };\r\n}\r\n",
        "Type": "Demos.Components.Carousel.props.CustomTransition",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "cycle",
        "Title": "周期",
        "Description": "<p>使用 <strong>Cycle</strong> 参数，您可以设置幻灯片每 6 s (默认)自动过渡到下一个可用的。</p>\n",
        "Code": "<MCarousel\r\n    Cycle\r\n    Height=\"400\"\r\n    HideDelimiterBackground\r\n    ShowArrowsOnHover>\r\n    @for (int i = 0; i < slides.Length; i++)\r\n    {\r\n        var index = i;\r\n        <MCarouselItem>\r\n            <MSheet\r\n                Color=\"@colors[index]\"\r\n                Height=\"@(\"100%\")\">\r\n                <MRow\r\n                    NoGutters\r\n                    Class=\"fill-height\"\r\n                    Align=\"AlignTypes.Center\"\r\n                    Justify=\"JustifyTypes.Center\">\r\n                    <div class=\"text-h2\">\r\n                        @slides[index] Slide\r\n                    </div>\r\n                </MRow>\r\n            </MSheet>\r\n        </MCarouselItem>\r\n    }\r\n\r\n</MCarousel>\r\n\r\n@code {\r\n\r\n    private string[] colors = new[]\r\n    {\r\n        \"indigo\",\r\n        \"warning\",\r\n        \"pink darken-2\",\r\n        \"red lighten-1\",\r\n        \"deep-purple accent-4\",\r\n    };\r\n\r\n    private string[] slides = new[]\r\n    {\r\n        \"First\",\r\n        \"Second\",\r\n        \"Third\",\r\n        \"Fourth\",\r\n        \"Fifth\"\r\n    };\r\n\r\n}\r\n",
        "Type": "Demos.Components.Carousel.props.Cycle",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "hideControls",
        "Title": "隐藏控件",
        "Description": "<p>您可以使用 <code>ShowArrows=&quot;false&quot;</code> 隐藏轮播导航控件。</p>\n",
        "Code": "<MCarousel ShowArrows=\"false\" @bind-Value=\"value\">\r\n    @foreach (var item in items)\r\n    {\r\n        <MCarouselItem Src=\"@item\" @key=\"item\">\r\n        </MCarouselItem>\r\n    }\r\n</MCarousel>\r\n\r\n@code {\r\n\r\n    private string[] items = new[]\r\n    {\r\n        \"https://cdn.masastack.com/stack/images/website/masa-blazor/carousel/squirrel.jpg\",\r\n        \"https://cdn.masastack.com/stack/images/website/masa-blazor/carousel/sky.jpg\",\r\n        \"https://cdn.masastack.com/stack/images/website/masa-blazor/carousel/bird.jpg\",\r\n        \"https://cdn.masastack.com/stack/images/website/masa-blazor/carousel/planet.jpg\",\r\n    };\r\n\r\n    private StringNumber value = 0;\r\n}\r\n",
        "Type": "Demos.Components.Carousel.props.HideControls",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "hideDelimiters",
        "Title": "隐藏分隔符",
        "Description": "<p>您可以使用 <strong>HideDelimiters</strong> 参数隐藏底部控件。</p>\n",
        "Code": "<MCarousel HideDelimiters>\r\n    @foreach (var item in items)\r\n    {\r\n        <MCarouselItem Src=\"@item\">\r\n        </MCarouselItem>\r\n    }\r\n</MCarousel>\r\n\r\n@code {\r\n\r\n    private string[] items = new[]\r\n    {\r\n        \"https://cdn.masastack.com/stack/images/website/masa-blazor/carousel/squirrel.jpg\",\r\n        \"https://cdn.masastack.com/stack/images/website/masa-blazor/carousel/sky.jpg\",\r\n        \"https://cdn.masastack.com/stack/images/website/masa-blazor/carousel/bird.jpg\",\r\n        \"https://cdn.masastack.com/stack/images/website/masa-blazor/carousel/planet.jpg\",\r\n    };\r\n\r\n}\r\n",
        "Type": "Demos.Components.Carousel.props.HideDelimiters",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "model",
        "Title": "模型",
        "Description": "<p>你可以用 <strong>Value</strong> 控制旋转木马。</p>\n",
        "Code": "<div>\r\n    <MRow Justify=\"JustifyTypes.SpaceAround\" NoGutters>\r\n        <MIcon OnClick=\"() => Value--\">\r\n            mdi-minus\r\n        </MIcon>\r\n        @Value\r\n        <MIcon OnClick=\"() => Value++\">\r\n            mdi-plus\r\n        </MIcon>\r\n    </MRow>\r\n    <MCarousel Value=\"Value\" ValueChanged=\"v => Value = v.AsT1\">\r\n        @for (var i = 0; i < colors.Length; i++)\r\n        {\r\n            var index = i;\r\n\r\n            <MCarouselItem>\r\n                <MSheet Color=\"@colors[index]\" Height=\"@(\"100%\")\" Tile>\r\n                    <MRow NoGutters Class=\"fill-height\" Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n                        <div class=\"text-h2\">Slide @(index + 1)</div>\r\n                    </MRow>\r\n                </MSheet>\r\n            </MCarouselItem>\r\n        }\r\n    </MCarousel>\r\n</div>\r\n\r\n@code {\r\n\r\n    private int _value;\r\n\r\n    private string[] colors = new[]\r\n    {\r\n        \"primary\",\r\n        \"secondary\",\r\n        \"yellow darken-2\",\r\n        \"red\",\r\n        \"orange\",\r\n    };\r\n\r\n    private int Value\r\n    {\r\n        get => _value;\r\n        set\r\n        {\r\n            if (value >= colors.Length)\r\n            {\r\n                _value = 0;\r\n            }\r\n            else if (value < 0)\r\n            {\r\n                _value = colors.Length - 1;\r\n            }\r\n            else\r\n            {\r\n                _value = value;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.Carousel.props.Model",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/parallax",
      "/components/images",
      "/components/windows"
    ],
    "Subtitle": "轮播",
    "Title": "Carousels",
    "Type": "轮播"
  },
  {
    "Desc": "<p><code>MChip</code> 组件用于传送小信息。 使用 <strong>Close</strong> 属性，纸片将变为交互式，允许用户进行交互。 此组件由 <a href=\"/components/chip-groups\">MChipGroup</a> 用于高级选择选项。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MChip\">MChip</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.5001419+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "basic",
        "Title": "使用",
        "Description": "<p>纸片有以下几种变化：封闭式、过滤式、轮廓式、药丸式。 <code>MChip</code> 的默认插槽也接受文本旁边的头像和图标。</p>\n",
        "Code": "<MRow Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n    <MChip> Chip Component </MChip>\r\n</MRow>",
        "Type": "Demos.Components.Chip.usage.Basic",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "closable",
        "Title": "可关闭",
        "Description": "<p>可关闭的纸片默认使用Close控制。 如果您想知道纸片何时关闭也可以侦听OnCloseClick事件。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    @if (!_chip1 && !_chip2 && !_chip3 && !_chip4)\r\n    {\r\n        <MButton Color=\"primary\"\r\n                 Dark\r\n                 OnClick=\"() => { _chip1 = true; _chip2 = true; _chip3 = true; _chip4 = true; }\">\r\n            Reset Chips\r\n        </MButton>\r\n    }\r\n\r\n    @if (_chip1)\r\n    {\r\n        <MChip Class=\"ma-2\"\r\n               Close\r\n               OnCloseClick=\"()=> _chip1 = false\">\r\n            Closable\r\n        </MChip>\r\n    }\r\n\r\n    @if (_chip2)\r\n    {\r\n        <MChip Class=\"ma-2\"\r\n               Close\r\n               Color=\"red\"\r\n               TextColor=\"white\"\r\n               OnCloseClick=\"()=>_chip2 = false\">\r\n            Remove\r\n        </MChip>\r\n    }\r\n\r\n    @if (_chip3)\r\n    {\r\n        <MChip Class=\"ma-2\"\r\n               Close\r\n               Color=\"green\"\r\n               Outlined\r\n               OnCloseClick=\"()=>_chip3 = false\">\r\n            Success\r\n        </MChip>\r\n    }\r\n\r\n    @if (_chip4)\r\n    {\r\n        <MChip Class=\"ma-2\"\r\n               Close\r\n               Color=\"orange\"\r\n               Label\r\n               Outlined\r\n               OnCloseClick=\"()=>_chip4 = false\">\r\n            Complete\r\n        </MChip>\r\n    }\r\n</div>\r\n\r\n@code{\r\n    private bool _chip1 = true;\r\n    private bool _chip2 = true;\r\n    private bool _chip3 = true;\r\n    private bool _chip4 = true;\r\n}",
        "Type": "Demos.Components.Chip.props.Closable",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "colored",
        "Title": "色彩",
        "Description": "<p>Material Design 调色板中的任何颜色都可用于更改纸片颜色。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MChip Class=\"ma-2\">\r\n        Default\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\"\r\n           Color=\"primary\">\r\n        Primary\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\"\r\n           Color=\"secondary\">\r\n        Secondary\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\"\r\n           Color=\"red\"\r\n           TextColor=\"white\">\r\n        Red Chip\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\"\r\n           TextColor=\"white\"\r\n           Color=\"green\">\r\n        Green Chip\r\n    </MChip>\r\n</div>",
        "Type": "Demos.Components.Chip.props.Colored",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "draggable",
        "Title": "可拖动",
        "Description": "<p><code>Draggable</code> <code>MChip</code> 组件可以被鼠标拖拽。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\" Align=\"AlignTypes.Center\">\r\n    <MChip Draggable>Default</MChip>\r\n</MRow>",
        "Type": "Demos.Components.Chip.props.Draggable",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 3,
        "Name": "filter",
        "Title": "过滤器",
        "Description": "<p>MChip 组件有 Filter 选项，在chip处于活动状态时向您显示额外的图标。 可以使用 FilterIcon 来自定义。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.SpaceAround\" Align=\"AlignTypes.Center\">\r\n    <MChip Class=\"ma-2\" IsActive=\"@_active\" Filter>\r\n        I'm MChip\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\" IsActive=\"@_active\" Filter FilterIcon=\"mdi-plus\">\r\n        I'm MChip\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\" IsActive=\"@_active\" Filter FilterIcon=\"mdi-minus\">\r\n        I'm MChip\r\n    </MChip>\r\n\r\n    <MSwitch Label=\"Active\" @bind-Value=\"_active\"></MSwitch>\r\n</MRow>\r\n\r\n@code\r\n{\r\n    private bool _active = false;\r\n}",
        "Type": "Demos.Components.Chip.props.Filter",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 4,
        "Name": "label",
        "Title": "标签",
        "Description": "<p>纸片标签的使用</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MChip Class=\"ma-2\"\r\n           Label>\r\n        Label\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\"\r\n           Color=\"pink\"\r\n           TextColor=\"white\"\r\n           Label>\r\n        <MIcon Left>\r\n            mdi-label\r\n        </MIcon>\r\n        Tags\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\"\r\n           Color=\"primary\"\r\n           TextColor=\"white\"\r\n           Label>\r\n        <MIcon Left>\r\n            mdi-account-circle-outline\r\n        </MIcon>\r\n        MASA\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\"\r\n           Close\r\n           Color=\"cyan\"\r\n           TextColor=\"white\"\r\n           Label>\r\n        <MIcon Left>\r\n            mdi-twitter\r\n        </MIcon>\r\n        New Tweets\r\n    </MChip>\r\n</div>",
        "Type": "Demos.Components.Chip.props.Label",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 5,
        "Name": "noRipple",
        "Title": "无波纹",
        "Description": "<p>MChip 可以在 ripple prop 被设置为 false 情况下不渲染波纹效果</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\" Align=\"AlignTypes.Center\">\r\n    <MChip Ripple=\"false\">Default</MChip>\r\n</MRow>",
        "Type": "Demos.Components.Chip.props.NoRipple",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 6,
        "Name": "outlined",
        "Title": "轮廓",
        "Description": "<p>轮廓纸片从当前文本颜色继承其边框颜色。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MChip Class=\"ma-2\"\r\n           Color=\"success\"\r\n           Outlined>\r\n        <MIcon Left>\r\n            mdi-server-plus\r\n        </MIcon>\r\n        Server Status\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\"\r\n           Color=\"primary\"\r\n           Outlined>\r\n        User Account\r\n        <MIcon Right>\r\n            mdi-account-outline\r\n        </MIcon>\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\"\r\n           Color=\"deep-purple accent-4\"\r\n           Outlined>\r\n        <MIcon Left>\r\n            mdi-wrench\r\n        </MIcon>\r\n        Update Settings\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\"\r\n           Close\r\n           Color=\"indigo darken-3\"\r\n           Outlined>\r\n        <MIcon Left>\r\n            mdi-fire\r\n        </MIcon>\r\n        New Posts Available\r\n    </MChip>\r\n</div>",
        "Type": "Demos.Components.Chip.props.Outlined",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 7,
        "Name": "sizes",
        "Title": "大小",
        "Description": "<p>MChip 组件可以有从 XSmall 到 XLarge 不同的大小.</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MChip Class=\"ma-2\"\r\n           XSmall>\r\n        x-small chip\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\"\r\n           Small>\r\n        small chip\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\">\r\n        Default\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\"\r\n           Large>\r\n        large chip\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\"\r\n           XLarge>\r\n        x-large chip\r\n    </MChip>\r\n</div>",
        "Type": "Demos.Components.Chip.props.Sizes",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "actionChips",
        "Title": "行为纸片",
        "Description": "<p>纸片可以用作可操作的项目。 只要有 click 事件，纸片就会变成可交互并且可以调用方法。</p>\n",
        "Code": "<MCard Class=\"mx-auto\" MaxWidth=\"450\">\r\n    <MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/cards/house.jpg\" AspectRatio=\"16 / 9\"></MImage>\r\n    <MCardTitle>\r\n        <div class=\"text-h4 mb-2\">Welcome Home...</div>\r\n        <div class=\"text-h6 font-weight-regular grey--text\">Monday, 12:30 PM, Mostly Sunny</div>\r\n    </MCardTitle>\r\n    <MRow Class=\"px-4 grey--text\" Align=\"AlignTypes.Center\">\r\n        <MAvatar Size=\"24\" Class=\"mr-4\">\r\n            <MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/weather/part-cloud-48px.png\" Contain></MImage>\r\n        </MAvatar>\r\n\r\n        <span>81° / 62°</span>\r\n    </MRow>\r\n    \r\n    <MDivider Class=\"mt-6 mx-4\"></MDivider>\r\n\r\n    <MCardText>\r\n        <MChip Class=\"mr-2\" OnClick=\"Lights\">\r\n            <MIcon Left>mdi-brightness-5</MIcon>\r\n            Turn on Lights\r\n        </MChip>\r\n        <MChip Class=\"mr-2\" OnClick=\"Alarm\">\r\n            <MIcon Left>mdi-alarm-check</MIcon>\r\n            Set alarm\r\n        </MChip>\r\n        <MChip Class=\"mr-2\" OnClick=\"Blinds\">\r\n            <MIcon Left>mdi-blinds</MIcon>\r\n            Close blinds\r\n        </MChip>\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code\r\n{\r\n    [Inject]\r\n    private IJSRuntime Js { get; set; }\r\n\r\n    private void Alarm()\r\n    {\r\n        Js.InvokeVoidAsync(\"alert\", \"Toggling lights...\");\r\n    }\r\n\r\n    private void Blinds()\r\n    {\r\n        Js.InvokeVoidAsync(\"alert\", \"Toggling lights...\");\r\n    }\r\n\r\n    private void Lights()\r\n    {\r\n        Js.InvokeVoidAsync(\"alert\", \"Toggling lights...\");\r\n    }\r\n}",
        "Type": "Demos.Components.Chip.events.ActionChips",
        "Style": "",
        "Debug": false,
        "Group": 1
      },
      {
        "Order": 2,
        "Name": "icon",
        "Title": "图标",
        "Description": "<p>纸片可以使用文本或 Material Icons 字体库中可用的任何图标。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MChip Class=\"ma-2\" Color=\"indigo\" TextColor=\"white\">\r\n        <MAvatar Left>\r\n            <MIcon>mdi-account-circle</MIcon>\r\n        </MAvatar>\r\n        Mike\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\" Color=\"orange\" TextColor=\"white\">\r\n        Premium\r\n        <MIcon Right>mdi-star</MIcon>\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\" Color=\"primary\" TextColor=\"white\">\r\n        1 Year\r\n        <MIcon Right>mdi-cake-variant</MIcon>\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\" Color=\"green\" TextColor=\"white\">\r\n        <MAvatar Left Class=\"green darken-4\">\r\n            1\r\n        </MAvatar>\r\n        Years\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\" Close Color=\"teal\" TextColor=\"white\" OnCloseClick=\"Close\">\r\n        <MAvatar Left>\r\n            <MIcon>mdi-checkbox-marked-circle</MIcon>\r\n        </MAvatar>\r\n        Confirmed\r\n    </MChip>\r\n\r\n    <MChip Class=\"ma-2\" Close Color=\"teal\" TextColor=\"white\" CloseIcon=\"mdi-delete\" OnCloseClick=\"Close\">\r\n        <MAvatar Left>\r\n            <MIcon>mdi-checkbox-marked-circle</MIcon>\r\n        </MAvatar>\r\n        Confirmed\r\n    </MChip>\r\n</div>\r\n\r\n@code\r\n{\r\n    [Inject]\r\n    private IJSRuntime Js { get; set; }\r\n\r\n    private void Close()\r\n    {\r\n        Js.InvokeVoidAsync(\"alert\", \"Chip close clicked\");\r\n    }\r\n}",
        "Type": "Demos.Components.Chip.contents.Icon",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 0,
        "Name": "customList",
        "Title": "自定义列表",
        "Description": "<p>使用自定义列表使我们能够始终显示可用的选项，同时提供相同的搜索和选择功能。TODO 暂无OnInput事件</p>\n",
        "Code": "@using System.Timers;\r\n@using Timer = System.Timers.Timer;\r\n\r\n<MCard Class=\"mx-auto\" MaxWidth=\"500\">\r\n    <MToolbar Flat Color=\"transparent\">\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n        <MToolbarTitle>Photo Info</MToolbarTitle>\r\n        <MSpacer></MSpacer>\r\n        <MButton Icon OnClick=\"()=> _search.InputElement.FocusAsync()\">\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n    </MToolbar>\r\n\r\n    <MContainer Class=\"py-0\">\r\n        <MRow Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Start\">\r\n            @foreach (var item in Selections())\r\n            {\r\n                <MCol Class=\"shrink\" Id=\"@item.Text\">\r\n                    <MChip Disabled=\"loading\" Close OnCloseClick=\"() => Selected?.Remove(Selected.FirstOrDefault(x => x.Text == item.Text))\">\r\n                        <MIcon Left>@item.Icon</MIcon>\r\n                        @item.Text\r\n                    </MChip>\r\n                </MCol>\r\n            }\r\n            @if (!allSelected())\r\n            {\r\n                <MCol Cols=\"12\">\r\n                    <MTextField @bind-Value=\"search\" FullWidth HideDetails=\"true\" Label=\"Search\" SingleLine @ref=\"_search\"></MTextField>\r\n                </MCol>\r\n            }\r\n        </MRow>\r\n    </MContainer>\r\n\r\n    @if (allSelected())\r\n    {\r\n        <MDivider></MDivider>\r\n    }\r\n\r\n    <MList>\r\n        @foreach (var item in Categories())\r\n        {\r\n            @if (!Selected.Any(x => x.Text.Equals(item.Text)))\r\n            {\r\n                <MListItem Id=\"@item.Text\" Disabled=\"loading\" OnClick=\"() =>{ Selected.Add(item);search=string.Empty;}\">\r\n                    <MListItemAvatar>\r\n                        <MIcon Disabled=\"loading\">@item.Icon</MIcon>\r\n                    </MListItemAvatar>\r\n                    <MListItemTitle>@item.Text</MListItemTitle>\r\n                </MListItem>\r\n            }\r\n        }\r\n    </MList>\r\n\r\n    <MDivider></MDivider>\r\n\r\n    <MCardActions>\r\n        <MSpacer></MSpacer>\r\n        <MButton Disabled=\"Selected.Count == 0\" Loading=\"loading\" Color=\"purple\" Text OnClick=\"Next\">\r\n            Next\r\n        </MButton>\r\n    </MCardActions>\r\n</MCard>\r\n\r\n@code\r\n{\r\n    private Timer Timer { get; set; }\r\n    private bool loading = false;\r\n    private string search = string.Empty;\r\n    private MTextField<string> _search;\r\n    private List<Selection> _selected = new();\r\n\r\n    private class Selection\r\n    {\r\n        public string Text { get; set; }\r\n        public string Icon { get; set; }\r\n    }\r\n\r\n    private List<Selection> Items = new()\r\n        {\r\n            new() { Text = \"Nature\", Icon = \"mdi-nature\" },\r\n            new() { Text = \"Nightlife\", Icon = \"mdi-glass-wine\" },\r\n            new() { Text = \"November\", Icon = \"mdi-calendar-range\" },\r\n            new() { Text = \"Portland\", Icon = \"mdi-map-marker\" },\r\n            new() { Text = \"Biking\", Icon = \"mdi-bike\" }\r\n        };\r\n\r\n    private List<Selection> Selected\r\n    {\r\n        get\r\n        {\r\n            return _selected;\r\n        }\r\n        set\r\n        {\r\n            search = \"\";\r\n            _selected = value;\r\n        }\r\n    }\r\n\r\n    private bool allSelected() => Selected.Count == Items.Count;\r\n\r\n    private List<Selection> Categories()\r\n    {\r\n        var ent = search.ToLower();\r\n        if (string.IsNullOrWhiteSpace(ent))\r\n        {\r\n            return Items;\r\n        }\r\n\r\n        return Items.Where(x => x.Text.ToLower().Contains(ent)).ToList();\r\n    }\r\n\r\n    private List<Selection> Selections() => Selected;\r\n\r\n    private void Next()\r\n    {\r\n        loading = true;\r\n\r\n        if (Timer == null)\r\n        {\r\n            Timer = new Timer\r\n                {\r\n                    Interval = 2000\r\n                };\r\n            Timer.Elapsed += Timer_Elapsed;\r\n        }\r\n\r\n        Timer.Start();\r\n    }\r\n\r\n    private async void Timer_Elapsed(object sender, ElapsedEventArgs e)\r\n    {\r\n        await InvokeAsync(() =>\r\n        {\r\n            search = string.Empty;\r\n            Selected = new();\r\n            loading = false;\r\n            Timer.Stop();\r\n\r\n            StateHasChanged();\r\n        });\r\n    }\r\n}",
        "Type": "Demos.Components.Chip.misc.CustomList",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 1,
        "Name": "expandable",
        "Title": "可展开",
        "Description": "<p>纸片可与MMenu组合使用，为纸片启用一组特定的操作。</p>\n",
        "Code": "<MCard MaxWidth=\"400\" Class=\"mx-auto\">\r\n    <MSystemBar></MSystemBar>\r\n\r\n    <MRow Class=\"px-6 py-3\" Align=\"AlignTypes.Center\">\r\n        <span class=\"mr-4\">To</span>\r\n        <MMenu @bind-Value=\"menu\" Bottom Right Transition=\"scale-transition\" Origin=\"top left\">\r\n            <ActivatorContent>\r\n                <MChip Pill @attributes=\"@context.Attrs\">\r\n                    <MAvatar Left>\r\n                        <MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/jack.png\"></MImage>\r\n                    </MAvatar>\r\n                    MASA\r\n                </MChip>\r\n            </ActivatorContent>\r\n            <ChildContent>\r\n                <MCard Width=\"300\">\r\n                    <MList Dark>\r\n                        <MListItem Dark> @*TODO:Dark没有从MList继承*@\r\n                            <MListItemAvatar>\r\n                                <MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/jack.png\"></MImage>\r\n                            </MListItemAvatar>\r\n                            <MListItemContent>\r\n                                <MListItemTitle>MASA</MListItemTitle>\r\n                                <MListItemSubtitle>wangzengxing@masastack.com</MListItemSubtitle>\r\n                            </MListItemContent>\r\n                            <MListItemAction>\r\n                                <MButton Icon OnClick=\"() => menu = false\" Dark> @*TODO:Dark没有从MList继承*@\r\n                                    <MIcon>mdi-close-circle</MIcon>\r\n                                </MButton>\r\n                            </MListItemAction>\r\n                        </MListItem>\r\n                    </MList>\r\n                    <MList>\r\n                        <MListItem OnClick=\"() => { }\">\r\n                            <MListItemAction>\r\n                                <MIcon>mdi-briefcase</MIcon>\r\n                            </MListItemAction>\r\n                            <MListItemSubtitle>john@gmail.com</MListItemSubtitle>\r\n                        </MListItem>\r\n                    </MList>\r\n                </MCard>\r\n            </ChildContent>\r\n        </MMenu>\r\n    </MRow>\r\n\r\n    <MDivider></MDivider>\r\n\r\n    <MTextField FullWidth Value=\"@(\"Re: Vacation Request\")\" Label=\"Subject\" SingleLine></MTextField>\r\n\r\n    <MTextarea FullWidth SingleLine Label=\"Message\"></MTextarea>\r\n</MCard>\r\n\r\n@code\r\n{\r\n    bool menu = false;\r\n}",
        "Type": "Demos.Components.Chip.misc.Expandable",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 2,
        "Name": "filtering",
        "Title": "过滤",
        "Description": "<p>纸片非常适合为特定任务提供辅助操作。 在本例中，我们搜索一个项目列表并收集一个子集信息以显示可用的关键字。 TODO 暂无OnInput事件</p>\n",
        "Code": "<MCard Class=\"mx-auto mt-12\" MaxWidth=\"450\">\r\n    <MSystemBar></MSystemBar>\r\n\r\n    <MToolbar Flat Color=\"transparent\">\r\n        <MButton Icon>\r\n            <MIcon>mdi-arrow-left</MIcon>\r\n        </MButton>\r\n\r\n        <MTextField @bind-Value=\"search\" AppendIcon=\"mdi-magnify\" Label=\"Search News\" SingleLine></MTextField>\r\n    </MToolbar>\r\n\r\n    <MCardText Class=\"py-0\">\r\n        @foreach (var keyword in Keywords())\r\n        {\r\n            <MChip Class=\"mr-2\">@keyword</MChip>\r\n        }\r\n    </MCardText>\r\n\r\n    <MList ThreeLine>\r\n        @foreach (var item in Searching())\r\n        {\r\n            <MListItem Ripple OnClick=\"() => {}\">\r\n                <MImage Src=\"@item.Image\" Class=\"mr-4\" MaxWidth=\"64\" MinWidth=\"64\"></MImage>\r\n\r\n                <MListItemContent>\r\n                    <span class=\"text-uppercase font-weight-regular text-caption\">@item.Category</span>\r\n                    <div>@item.Title</div>\r\n                </MListItemContent>\r\n            </MListItem>\r\n        }\r\n    </MList>\r\n</MCard>\r\n\r\n@code\r\n{\r\n    private string search = string.Empty;\r\n    private class DataDemo\r\n    {\r\n        public string Image { get; set; }\r\n        public string Title { get; set; }\r\n        public string Category { get; set; }\r\n        public string KeyWord { get; set; }\r\n    }\r\n    private List<DataDemo> Items = new()\r\n    {\r\n        new()\r\n        {\r\n            Image = \"https://cdn-images-1.medium.com/max/1024/1*9C9hLji68wV373tk8okLYA.jpeg\",\r\n            Title = \"TBI’s 5 Best: SF Mocktails to Finish Dry January Strong\",\r\n            Category = \"Travel\",\r\n            KeyWord = \"Drinks\"\r\n        },\r\n        new()\r\n        {\r\n            Image = \"https://cdn-images-1.medium.com/max/1024/1*BBNtYUieAqHoXKjiJ2mMjQ.png\",\r\n            Title = \"PWAs on iOS 12.2 beta: the good, the bad, and the “not sure yet if good”\",\r\n            Category = \"Technology\",\r\n            KeyWord = \"Phones\"\r\n        },\r\n        new()\r\n        {\r\n            Image = \"https://cdn-images-1.medium.com/max/1024/1*rTEtei1UEmNqbq6evRsExw.jpeg\",\r\n            Title = \"How to Get Media Mentions for Your Business\",\r\n            Category = \"Media\",\r\n            KeyWord = \"Social\"\r\n        },\r\n        new()\r\n        {\r\n            Image = \"https://cdn-images-1.medium.com/max/1024/1*FD2nkJewVeQnGf0ommQfrw.jpeg\",\r\n            Title = \"The Pitfalls Of Outsourcing Self-Awareness To Artificial Intelligence\",\r\n            Category = \"Technology\",\r\n            KeyWord = \"Military\"\r\n        },\r\n        new()\r\n        {\r\n            Image = \"https://cdn-images-1.medium.com/max/1024/1*eogFpsVgNzXQLCVgFzT_-A.jpeg\",\r\n            Title = \"Degrees of Freedom and Sudoko\",\r\n            Category = \"Travel\",\r\n            KeyWord = \"Social\"\r\n        }\r\n    };\r\n\r\n    private List<string> Keywords()\r\n    {\r\n        if (string.IsNullOrWhiteSpace(search))\r\n        {\r\n            return new List<string>();\r\n        }\r\n\r\n        return Searching()?.Select(x => x.KeyWord).ToList();\r\n    }\r\n\r\n    private List<DataDemo> Searching()\r\n    {\r\n        if (string.IsNullOrWhiteSpace(search))\r\n        {\r\n            return Items;\r\n        }\r\n\r\n        var searchLow = search.ToLower();\r\n\r\n        return Items.Where(x => x.Title.ToLower().Contains(searchLow)).ToList();\r\n    }\r\n}",
        "Type": "Demos.Components.Chip.misc.Filtering",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 3,
        "Name": "inSelects",
        "Title": "选中(TODO)",
        "Description": "<p>选择可以使用纸片显示所选数据。 尝试在下方添加您自己的标签。</p>\n",
        "Code": "TODO",
        "Type": "Demos.Components.Chip.misc.InSelects",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/avatars",
      "/components/icons",
      "/components/selects"
    ],
    "Subtitle": "纸片",
    "Title": "Chips",
    "Type": "纸片"
  },
  {
    "Desc": "<p>在文本后提供可以复制内容的图标按钮。</p>\n",
    "Order": 0,
    "OtherDocs": {},
    "LastWriteTime": "2022-10-20T23:42:05.5033283+08:00",
    "DemoList": [
      {
        "Order": 1,
        "Name": "index",
        "Title": "使用",
        "Description": "",
        "Code": "<PCopyableText>\r\n    There is a text that can be copied.\r\n</PCopyableText>",
        "Type": "Demos.Components.CopyableText.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "icon",
        "Title": "图标",
        "Description": "",
        "Code": "<PCopyableText CopyIcon=\"mdi-clipboard-text\"\r\n               CopyIconColor=\"orange\"\r\n               CopiedIcon=\"mdi-check-circle\">\r\n    Custom icons.\r\n</PCopyableText>",
        "Type": "Demos.Components.CopyableText.props.Icon",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "text",
        "Title": "复制的内容",
        "Description": "",
        "Code": "<PCopyableText Text=\"Text that you specific\">\r\n    Copy the text that you specific by parameter Text.\r\n</PCopyableText>",
        "Type": "Demos.Components.CopyableText.props.Text",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "textTruncate",
        "Title": "文本截断",
        "Description": "",
        "Code": "<div style=\"width: 150px;\">\r\n    <PCopyableText ContentClass=\"text-truncate\"\r\n                   ContentStyle=\"display:inline-block;vertical-align:top;width:100%;\">\r\n        There is a text that can be copied.\r\n    </PCopyableText>\r\n</div>",
        "Type": "Demos.Components.CopyableText.props.TextTruncate",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "tooltip",
        "Title": "提示",
        "Description": "",
        "Code": "<PCopyableText Tooltip=\"Do you wanna copy?\"\r\n               TooltipClass=\"orange\">\r\n    Custom tooltip.\r\n</PCopyableText>",
        "Type": "Demos.Components.CopyableText.props.Tooltip",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/icons",
      "/components/tooltips",
      "/components/block-text"
    ],
    "Subtitle": "可复制的文本",
    "Title": "Copyable text",
    "Type": "可复制的文本",
    "Tag": "preset"
  },
  {
    "Order": 0,
    "OtherDocs": {},
    "LastWriteTime": "2022-10-20T23:42:05.5043281+08:00",
    "DemoList": [
      {
        "Order": 1,
        "Name": "index",
        "Title": "使用",
        "Description": "",
        "Code": "@using System.Text\r\n@using BlazorComponent.I18n\r\n\r\n<PCron Value=\"@_cronValue\" ValueChanged=\"OnCronValueChanged\">\r\n</PCron>\r\n\r\n<div>\r\n    <MTextField Value=\"_cronValue\" TValue=\"string\" ValueChanged=\"OnCronValueChanged\" Label=\"@i18n.T(\"$masaBlazor.cron.demo.cronExpressionLabel\")\" Outlined Dense></MTextField>\r\n    <MTextarea @bind-Value=\"_nextTenRunTime\" Readonly Outlined Rows=\"11\" Label=\"@i18n.T(\"$masaBlazor.cron.demo.nextTenRunTime\")\">\r\n    </MTextarea>\r\n</div>\r\n\r\n@code {\r\n    [Inject]\r\n    I18n i18n { get; set; }\r\n\r\n    [CascadingParameter(Name = \"TimezoneOffset\")]\r\n    public TimeSpan TimezoneOffset { get; set; }\r\n\r\n    string _cronValue = string.Empty;\r\n    string _nextTenRunTime = string.Empty;\r\n    StringBuilder sb = new ();\r\n\r\n    private Task OnCronValueChanged(string cronValue)\r\n    {\r\n        if(_cronValue != cronValue)\r\n        {\r\n            _cronValue = cronValue;\r\n\r\n            GetNextTenRunTime();\r\n        }\r\n        return Task.CompletedTask;\r\n    }\r\n\r\n    private void GetNextTenRunTime()\r\n    {\r\n        sb.Clear();\r\n        _nextTenRunTime = string.Empty;\r\n\r\n        var startTime = DateTimeOffset.Now;\r\n\r\n        var cronExpression = new CronExpression(_cronValue);\r\n\r\n        var allTimeZone = TimeZoneInfo.GetSystemTimeZones();\r\n\r\n        var timezoneInfo = allTimeZone.FirstOrDefault(p => p.BaseUtcOffset == TimezoneOffset);\r\n\r\n        cronExpression.TimeZone = timezoneInfo;\r\n\r\n        for (int i = 0; i < 10; i++)\r\n        {\r\n            var nextExecuteTime = cronExpression.GetNextValidTimeAfter(startTime);\r\n\r\n            if (nextExecuteTime.HasValue)\r\n            {\r\n                startTime = nextExecuteTime.Value;\r\n                sb.AppendLine(startTime.ToOffset(TimezoneOffset).ToString(\"yyyy-MM-dd HH:mm:ss\"));\r\n            }\r\n        }\r\n\r\n        if(sb.Length == 0)\r\n        {\r\n            _nextTenRunTime = \"No more next run time\";\r\n        }\r\n        else\r\n        {\r\n            _nextTenRunTime = sb.ToString();\r\n        }\r\n    }\r\n}",
        "Type": "Demos.Components.Cron.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/text-fields",
      "/components/select",
      "/components/radio-button"
    ],
    "Subtitle": "Cron表达式生成器",
    "Title": "Cron Expression Generator",
    "Type": "Cron表达式生成器",
    "Tag": "preset"
  },
  {
    "Desc": "<p><code>Dialog</code>组件通知用户有关特定任务，且可能包含关键信息、需要决策或涉及多个任务。减少使用对话框的频率，因为它们具有干扰性。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MDialog\">MDialog</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.509328+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "Index",
        "Title": "使用",
        "Description": "<p>对话框包含两个插槽，一个用于它的激活器，另一个用于它的内容（默认）。 有利于隐私政策。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MDialog\r\n        @bind-Value=\"dialog\"\r\n        Width=\"500\">\r\n        <ActivatorContent>\r\n            <MButton\r\n                Color=\"red lighten-2\"\r\n                Dark\r\n                @attributes=\"@context.Attrs\">\r\n                Click Me\r\n            </MButton>\r\n        </ActivatorContent>\r\n\r\n        <ChildContent>\r\n            <MCard>\r\n                <MCardTitle Class=\"text-h5 grey lighten-2\">\r\n                    Privacy Policy\r\n                </MCardTitle>\r\n\r\n                <MCardText>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n                </MCardText>\r\n\r\n                <MDivider></MDivider>\r\n\r\n                <MCardActions>\r\n                    <MSpacer></MSpacer>\r\n                    <MButton\r\n                        Color=\"primary\"\r\n                        Text\r\n                        OnClick=\"() => dialog = false\">\r\n                        I accept\r\n                    </MButton>\r\n                </MCardActions>\r\n            </MCard>\r\n        </ChildContent>\r\n    </MDialog>\r\n</div>\r\n\r\n@code {\r\n\r\n    bool dialog;\r\n\r\n}",
        "Type": "Demos.Components.Dialog.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "fullscreen",
        "Title": "全屏对话框",
        "Description": "<p>由于屏幕空间有限，相对于使用普通对话框的大屏设备，全屏对话框更适合移动设备。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\">\r\n    <MDialog @bind-Value=\"dialog\"\r\n             Fullscreen\r\n             Transition=\"dialog-bottom-transition\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\"\r\n                     Dark\r\n                     @attributes=\"@context.Attrs\">\r\n                Open Dialog\r\n            </MButton>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <MCard>\r\n                <MToolbar Dark\r\n                          Color=\"primary\">\r\n                    <MButton Icon\r\n                             Dark\r\n                             OnClick=\"() => dialog = false\">\r\n                        <MIcon>mdi-close</MIcon>\r\n                    </MButton>\r\n                    <MToolbarTitle>Settings</MToolbarTitle>\r\n                    <MSpacer></MSpacer>\r\n                    <MToolbarItems>\r\n                        <MButton Dark\r\n                                 Text\r\n                                 OnClick=\"() => dialog = false\">\r\n                            Save\r\n                        </MButton>\r\n                    </MToolbarItems>\r\n                </MToolbar>\r\n                <MList ThreeLine\r\n                       Subheader>\r\n                    <MSubheader>User Controls</MSubheader>\r\n                    <MListItem>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>Content filtering</MListItemTitle>\r\n                            <MListItemSubtitle>Set the content filtering level to restrict apps that can be downloaded</MListItemSubtitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                    <MListItem>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>Password</MListItemTitle>\r\n                            <MListItemSubtitle>Require password for purchase or use password to restrict purchase</MListItemSubtitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                </MList>\r\n                <MDivider></MDivider>\r\n                <MList ThreeLine\r\n                       Subheader>\r\n                    <MSubheader>General</MSubheader>\r\n                    <MListItem>\r\n                        <MListItemAction>\r\n                            <MCheckbox @bind-Value=\"notifications\"></MCheckbox>\r\n                        </MListItemAction>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>Notifications</MListItemTitle>\r\n                            <MListItemSubtitle>Notify me about updates to apps or games that I downloaded</MListItemSubtitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                    <MListItem>\r\n                        <MListItemAction>\r\n                            <MCheckbox @bind-Value=\"sound\"></MCheckbox>\r\n                        </MListItemAction>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>Sound</MListItemTitle>\r\n                            <MListItemSubtitle>Auto-update apps at any time. Data charges may apply</MListItemSubtitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                    <MListItem>\r\n                        <MListItemAction>\r\n                            <MCheckbox @bind-Value=\"widgets\"></MCheckbox>\r\n                        </MListItemAction>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>Auto-add widgets</MListItemTitle>\r\n                            <MListItemSubtitle>Automatically add home screen widgets</MListItemSubtitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                </MList>\r\n            </MCard>\r\n        </ChildContent>\r\n    </MDialog>\r\n</MRow>\r\n\r\n@code {\r\n    private bool dialog = false;\r\n    private bool notifications = false;\r\n    private bool sound = true;\r\n    private bool widgets = false;\r\n}",
        "Type": "Demos.Components.Dialog.props.Fullscreen",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 3,
        "Name": "persistent",
        "Title": "保留",
        "Description": "<p>与普通对话框相似，但当用户点击对话框外部或按下 esc 键时，对话框不会关闭。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.Center\">\r\n    <MDialog @bind-Value=\"dialog\"\r\n             Persistent\r\n             MaxWidth=\"290\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\"\r\n                     Dark\r\n                     @attributes=\"@context.Attrs\">\r\n                Open Dialog\r\n            </MButton>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <MCard>\r\n                <MCardTitle>\r\n                    Use Google'location service?\r\n                </MCardTitle>\r\n                <MCardText>Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.</MCardText>\r\n                <MCardActions>\r\n                    <MSpacer></MSpacer>\r\n                    <MButton Color=\"green darken-1\"\r\n                             Text\r\n                             OnClick=\"() => dialog = false\">\r\n                        Disagree\r\n                    </MButton>\r\n                    <MButton Color=\"green darken-1\"\r\n                             Text\r\n                             OnClick=\"() => dialog = false\">\r\n                        Agree\r\n                    </MButton>\r\n                </MCardActions>\r\n            </MCard>\r\n        </ChildContent>\r\n    </MDialog>\r\n</MRow>\r\n\r\n@code {\r\n    bool dialog = false;\r\n}",
        "Type": "Demos.Components.Dialog.props.Persistent",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 4,
        "Name": "scrollable",
        "Title": "可滚动",
        "Description": "<p>一个可滚动内容的对话框示例。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.Center\">\r\n    <MDialog @bind-Value=\"dialog\"\r\n             Scrollable\r\n             MaxWidth=\"300\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Dark @attributes=\"@context.Attrs\">Open Dialog</MButton>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <MCard>\r\n                <MCardTitle>Select Country</MCardTitle>\r\n                <MDivider></MDivider>\r\n                <MCardText Style=\"height: 300px;\">\r\n                    <MCheckbox Label=\"Bahamas\"></MCheckbox>\r\n                    <MCheckbox Label=\"Bahrain\"></MCheckbox>\r\n                    <MCheckbox Label=\"Bangladesh\"></MCheckbox>\r\n                    <MCheckbox Label=\"Barbados\"></MCheckbox>\r\n                    <MCheckbox Label=\"Belarus\"></MCheckbox>\r\n                    <MCheckbox Label=\"Belgium\"></MCheckbox>\r\n                    <MCheckbox Label=\"Belize\"></MCheckbox>\r\n                    <MCheckbox Label=\"Benin\"></MCheckbox>\r\n                    <MCheckbox Label=\"Bhutan\"></MCheckbox>\r\n                    <MCheckbox Label=\"Bolivia\"></MCheckbox>\r\n                    <MCheckbox Label=\"Bosnia and Herzegovina\"></MCheckbox>\r\n                    <MCheckbox Label=\"Botswana\"></MCheckbox>\r\n                    <MCheckbox Label=\"Brazil\"></MCheckbox>\r\n                    <MCheckbox Label=\"Brunei\"></MCheckbox>\r\n                    <MCheckbox Label=\"Bulgaria\"></MCheckbox>\r\n                    <MCheckbox Label=\"Burkina Faso\"></MCheckbox>\r\n                    <MCheckbox Label=\"Burma\"></MCheckbox>\r\n                    <MCheckbox Label=\"Burundi\"></MCheckbox>\r\n                </MCardText>\r\n                <MDivider></MDivider>\r\n                <MCardActions>\r\n                    <MButton Color=\"blue darken-1\"\r\n                             Text\r\n                             OnClick=\"() => dialog = false\">\r\n                        Close\r\n                    </MButton>\r\n                    <MButton Color=\"blue darken-1\"\r\n                             Text\r\n                             OnClick=\"() => dialog = false\">\r\n                        Save\r\n                    </MButton>\r\n                </MCardActions>\r\n            </MCard>\r\n        </ChildContent>\r\n    </MDialog>\r\n</MRow>\r\n\r\n@code {\r\n    bool dialog = false;\r\n}",
        "Type": "Demos.Components.Dialog.props.Scrollable",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "transitions",
        "Title": "过渡动画",
        "Description": "<p>您可以让对话框从顶部或底部出现。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.SpaceAround\">\r\n    <MCol Cols=\"@(\"auto\")\">\r\n        <MDialog @bind-Value=\"dialog\"\r\n                 Transition=\"dialog-bottom-transition\"\r\n                 MaxWidth=\"600\">\r\n            <ActivatorContent>\r\n                <MButton Color=\"primary\"\r\n                         @attributes=\"@context.Attrs\">\r\n                    From the bottom\r\n                </MButton>\r\n            </ActivatorContent>\r\n            <ChildContent>\r\n                <MCard>\r\n                    <MToolbar Color=\"primary\"\r\n                              Dark>\r\n                        Opening from the bottom\r\n                    </MToolbar>\r\n                    <MCardText>\r\n                        <div class=\"text-h2 pa-12\">Hello world!</div>\r\n                    </MCardText>\r\n                    <MCardActions Class=\"justify-end\">\r\n                        <MButton Text\r\n                                 OnClick=\"() => dialog = false\">\r\n                            Close\r\n                        </MButton>\r\n                    </MCardActions>\r\n                </MCard>\r\n            </ChildContent>\r\n        </MDialog>\r\n    </MCol>\r\n\r\n    <MCol Cols=\"@(\"auto\")\">\r\n        <MDialog @bind-Value=\"dialog2\"\r\n                 Transition=\"dialog-top-transition\"\r\n                 MaxWidth=\"600\">\r\n            <ActivatorContent>\r\n                <MButton Color=\"primary\"\r\n                         @attributes=\"@context.Attrs\">\r\n                    From the top\r\n                </MButton>\r\n            </ActivatorContent>\r\n            <ChildContent>\r\n                <MCard>\r\n                    <MToolbar Color=\"primary\"\r\n                              Dark>\r\n                        Opening from the top\r\n                    </MToolbar>\r\n                    <MCardText>\r\n                        <div class=\"text-h2 pa-12\">Hello world!</div>\r\n                    </MCardText>\r\n                    <MCardActions Class=\"justify-end\">\r\n                        <MButton Text\r\n                                 OnClick=\"() => dialog2 = false\">\r\n                            Close\r\n                        </MButton>\r\n                    </MCardActions>\r\n                </MCard>\r\n            </ChildContent>\r\n        </MDialog>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n    bool dialog = false;\r\n    bool dialog2 = false;\r\n}",
        "Type": "Demos.Components.Dialog.props.Transitions",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 5,
        "Name": "form",
        "Title": "表单",
        "Description": "<p>一个简单的表单对话框的例子。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\">\r\n    <MDialog @bind-Value=\"dialog\"\r\n             Persistent\r\n             MaxWidth=\"600\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\"\r\n                     Dark\r\n                     @attributes=\"@context.Attrs\">\r\n                Open Dialog\r\n            </MButton>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <MCard>\r\n                <MCardTitle>\r\n                    <span class=\"text-h5\">User Profile</span>\r\n                </MCardTitle>\r\n                <MCardText>\r\n                    <MContainer>\r\n                        <MRow>\r\n                            <MCol Cols=\"12\"\r\n                                  Sm=\"6\"\r\n                                  Md=\"4\">\r\n                                <MTextField Label=\"Legal first name*\" TValue=\"string\"></MTextField>\r\n                            </MCol>\r\n                            <MCol Cols=\"12\"\r\n                                  Sm=\"6\"\r\n                                  Md=\"4\">\r\n                                <MTextField Label=\"Legal middle name\"\r\n                                            TValue=\"string\"\r\n                                            Hint=\"example of helper text only on focus\">\r\n                                </MTextField>\r\n                            </MCol>\r\n                            <MCol Cols=\"12\"\r\n                                  Sm=\"6\"\r\n                                  Md=\"4\">\r\n                                <MTextField Label=\"Legal last name*\"\r\n                                            TValue=\"string\"\r\n                                            Hint=\"example of persistent helper text\"\r\n                                            PersistentHint>\r\n                                </MTextField>\r\n                            </MCol>\r\n                            <MCol Cols=\"12\">\r\n                                <MTextField Label=\"Email*\" TValue=\"string\"></MTextField>\r\n                            </MCol>\r\n                            <MCol Cols=\"12\">\r\n                                <MTextField Label=\"Password*\"\r\n                                            TValue=\"string\"\r\n                                            Type=\"password\">\r\n                                </MTextField>\r\n                            </MCol>\r\n                            <MCol Cols=\"12\"\r\n                                  Sm=\"6\">\r\n                                <MSelect Items=\"_items\"\r\n                                         TItem=\"string\"\r\n                                         TItemValue=\"string\"\r\n                                         TValue=\"string\"\r\n                                         Label=\"Age*\"\r\n                                         ItemValue=\"r => r\"\r\n                                         ItemText=\"r => r\">\r\n                                </MSelect>\r\n                            </MCol>\r\n                            <MCol Cols=\"12\"\r\n                                  Sm=\"6\">\r\n                                <MAutocomplete @bind-Value=\"_values\"\r\n                                               Items=\"_items2\"\r\n                                               Label=\"Interests\"\r\n                                               ItemValue=\"r => r\"\r\n                                               ItemText=\"r => r\"\r\n                                               Multiple>\r\n                                </MAutocomplete>\r\n                            </MCol>\r\n                        </MRow>\r\n                    </MContainer>\r\n                    <small>*indicates required field</small>\r\n                </MCardText>\r\n                <MCardActions>\r\n                    <MSpacer></MSpacer>\r\n                    <MButton Color=\"blue darken-1\"\r\n                             Text\r\n                             OnClick=\"() => dialog = false\">\r\n                        Close\r\n                    </MButton>\r\n                    <MButton Color=\"blue darken-1\"\r\n                             Text\r\n                             OnClick=\"() => dialog = false\">\r\n                        Save\r\n                    </MButton>\r\n                </MCardActions>\r\n            </MCard>\r\n        </ChildContent>\r\n    </MDialog>\r\n</MRow>\r\n\r\n@code {\r\n    bool dialog = false;\r\n    List<string> _values = new List<string>();\r\n    List<string> _items = new() {\"0-17\", \"18-29\", \"30-54\", \"54+\"};\r\n    List<string> _items2 = new() {\"Skiing\", \"Ice hockey\", \"Soccer\", \"Basketball\", \"Hockey\", \"Reading\", \"Writing\", \"Coding\", \"Basejump\"};\r\n}",
        "Type": "Demos.Components.Dialog.misc.Form",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 6,
        "Name": "loader",
        "Title": "加载器",
        "Description": "<p><code>MDialog</code> 组件可以轻松为您的应用程序创建自定义加载体验。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MButton Disabled=\"dialog\"\r\n             Loading=\"dialog\"\r\n             Class=\"white--text\"\r\n             Color=\"purple darken-2\"\r\n             OnClick=\"()=>dialog = true\">\r\n        Start loading\r\n    </MButton>\r\n    <MDialog @bind-Value=\"dialog\"\r\n             Persistent\r\n             Width=\"300\">\r\n        <MCard Color=\"primary\"\r\n               Dark>\r\n            <MCardText>\r\n                Please stand by\r\n                <MProgressLinear Indeterminate\r\n                                 Color=\"white\"\r\n                                 Class=\"mb-0\"></MProgressLinear>\r\n            </MCardText>\r\n        </MCard>\r\n    </MDialog>\r\n</div>\r\n\r\n@code {\r\n    bool dialog = false;\r\n    protected override async Task OnAfterRenderAsync(bool firstRender)\r\n    {\r\n        if (dialog)\r\n        {\r\n            await Task.Delay(4000);\r\n            dialog = false;\r\n\r\n            StateHasChanged();\r\n        }\r\n    }\r\n}",
        "Type": "Demos.Components.Dialog.misc.Loader",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 7,
        "Name": "nesting",
        "Title": "嵌套",
        "Description": "<p>对话框可以嵌套：可以从一个对话框打开另一个对话框。</p>\n",
        "Code": "<div>\r\n<MRow Justify=\"JustifyTypes.Center\">\r\n    <MButton Color=\"primary\"\r\n             Class=\"ma-2\"\r\n             Dark\r\n             OnClick=\"() => dialog = true\">\r\n        Open Dialog 1\r\n    </MButton>\r\n<MButton Color=\"primary\"\r\n         Class=\"ma-2\"\r\n         Dark\r\n         OnClick=\"() => dialog2 = true\">\r\n    Open Dialog 2\r\n</MButton>\r\n<MButton Color=\"primary\"\r\n         Class=\"ma-2\"\r\n         Dark\r\n         OnClick=\"() => dialog3 = true\">\r\n    Open Dialog 3\r\n</MButton>\r\n\r\n\r\n<MMenu Bottom\r\n       OffsetY>\r\n    <ActivatorContent>\r\n        <MButton Class=\"ma-2\" @attributes=\"@context.Attrs\">\r\n            A Menu\r\n        </MButton>\r\n    </ActivatorContent>\r\n    <ChildContent>\r\n        <MList>\r\n            @foreach (var item in items)\r\n            {\r\n                <MListItem OnClick=\"() => { }\">\r\n                    <MListItemTitle>@item</MListItemTitle>\r\n                </MListItem>\r\n            }\r\n        </MList>\r\n    </ChildContent>\r\n</MMenu>\r\n<MDialog @bind-Value=\"dialog\"\r\n         Fullscreen\r\n         Transition=\"dialog-bottom-transition\"\r\n         Scrollable>\r\n    <MCard Tile>\r\n        <MToolbar Flat\r\n                  Dark\r\n                  Color=\"primary\">\r\n            <MButton Icon\r\n                     Dark\r\n                     OnClick=\"() => dialog = false\">\r\n                <MIcon>mdi-close</MIcon>\r\n            </MButton>\r\n            <MToolbarTitle>Settings</MToolbarTitle>\r\n            <MSpacer></MSpacer>\r\n            <MToolbarItems>\r\n                <MButton Dark\r\n                         text\r\n                         OnClick=\"() => dialog = false\">\r\n                    Save\r\n                </MButton>\r\n            </MToolbarItems>\r\n            <MMenu Bottom\r\n                   OffsetY \r\n                   Right>\r\n                <ActivatorContent>\r\n                    <MButton Dark Icon @attributes=\"@context.Attrs\">\r\n                        <MIcon>mdi-dots-vertical</MIcon>\r\n                    </MButton>\r\n                </ActivatorContent>\r\n                <ChildContent>\r\n                    <MList>\r\n                        @foreach (var item in items)\r\n                        {\r\n                            <MListItem OnClick=\"() => { }\">\r\n                                <MListItemTitle>@item</MListItemTitle>\r\n                            </MListItem>\r\n                        }\r\n                    </MList>\r\n                </ChildContent>\r\n            </MMenu>\r\n        </MToolbar>\r\n        <MCardText>\r\n            <MButton Color=\"primary\"\r\n                     Dark\r\n                     Class=\"ma-2\"\r\n                     OnClick=\"() => dialog2 = !dialog2\">\r\n                Open Dialog 2\r\n            </MButton>\r\n            <MTooltip Right>\r\n                <ActivatorContent>\r\n                    <MButton Class=\"ma-2\" @attributes=\"@context.Attrs\">\r\n                        Tool Tip Activator\r\n                    </MButton>\r\n                </ActivatorContent>\r\n                <ChildContent>\r\n                    <span>Tool Tip</span>\r\n                </ChildContent>\r\n            </MTooltip>\r\n            <MList ThreeLine\r\n                   Subheader>\r\n                <MSubheader>User Controls</MSubheader>\r\n                <MListItem>\r\n                    <MListItemContent>\r\n                        <MListItemTitle>Content filtering</MListItemTitle>\r\n                        <MListItemSubtitle>Set the content filtering level to restrict apps that can be downloaded</MListItemSubtitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n                <MListItem>\r\n                    <MListItemContent>\r\n                        <MListItemTitle>Password</MListItemTitle>\r\n                        <MListItemSubtitle>Require password for purchase or use password to restrict purchase</MListItemSubtitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            </MList>\r\n            <MDivider></MDivider>\r\n            <MList ThreeLine\r\n                   Subheader>\r\n                <MSubheader>General</MSubheader>\r\n                <MListItem>\r\n                    <MListItemAction>\r\n                        <MCheckbox @bind-Value=\"notifications\"></MCheckbox>\r\n                    </MListItemAction>\r\n                    <MListItemContent>\r\n                        <MListItemTitle>Notifications</MListItemTitle>\r\n                        <MListItemSubtitle>Notify me about updates to apps or games that I downloaded</MListItemSubtitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n                <MListItem>\r\n                    <MListItemAction>\r\n                        <MCheckbox @bind-Value=\"sound\"></MCheckbox>\r\n                    </MListItemAction>\r\n                    <MListItemContent>\r\n                        <MListItemTitle>Sound</MListItemTitle>\r\n                        <MListItemSubtitle>Auto-update apps at any time. Data charges may apply</MListItemSubtitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n                <MListItem>\r\n                    <MListItemAction>\r\n                        <MCheckbox @bind-Value=\"widgets\"></MCheckbox>\r\n                    </MListItemAction>\r\n                    <MListItemContent>\r\n                        <MListItemTitle>Auto-add widgets</MListItemTitle>\r\n                        <MListItemSubtitle>Automatically add home screen widgets</MListItemSubtitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            </MList>\r\n        </MCardText>\r\n\r\n        <div style=\"flex: 1 1 auto;\"></div>\r\n    </MCard>\r\n</MDialog>\r\n\r\n<MDialog @bind-Value=\"dialog2\"\r\n         MaxWidth=\"500\">\r\n    <MCard>\r\n        <MCardTitle>\r\n            Dialog 2\r\n        </MCardTitle>\r\n        <MCardText>\r\n            <MButton Color=\"primary\"\r\n                     Dark\r\n                     OnClick=\"() => dialog3 = !dialog3\">\r\n                Open Dialog 3\r\n            </MButton>\r\n            <MSelect Items=\"_items\"\r\n                     TItem=\"string\"\r\n                     TItemValue=\"string\"\r\n                     TValue=\"string\"\r\n                     Label=\"Age*\"\r\n                     ItemValue=\"r => r\"\r\n                     ItemText=\"r => r\">\r\n            </MSelect>\r\n        </MCardText>\r\n        <MCardActions>\r\n            <MButton Color=\"primary\"\r\n                     Text\r\n                     OnClick=\"() => dialog2 = false\">\r\n                Close\r\n            </MButton>\r\n        </MCardActions>\r\n    </MCard>\r\n</MDialog>\r\n\r\n\r\n<MDialog @bind-Value=\"dialog3\"\r\n         MaxWidth=\"500\">\r\n    <MCard>\r\n        <MCardTitle>\r\n            <span>Dialog 3</span>\r\n            <MSpacer></MSpacer>\r\n            <MMenu Bottom\r\n                   Left>\r\n                <ActivatorContent>\r\n                    <MButton Icon @attributes=\"@context.Attrs\">\r\n                        <MIcon>mdi-dots-vertical</MIcon>\r\n                    </MButton>\r\n                </ActivatorContent>\r\n                <ChildContent>\r\n                    <MList>\r\n                        @foreach (var item in items)\r\n                        {\r\n                            <MListItem OnClick=\"() => { }\">\r\n                                <MListItemTitle>@item</MListItemTitle>\r\n                            </MListItem>\r\n                        }\r\n                    </MList>\r\n                </ChildContent>\r\n            </MMenu>\r\n        </MCardTitle>\r\n        <MCardActions>\r\n            <MButton Color=\"primary\"\r\n                     Text\r\n                     OnClick=\"() => dialog3 = false\">\r\n                Close\r\n            </MButton>\r\n        </MCardActions>\r\n    </MCard>\r\n</MDialog>\r\n</MRow>\r\n</div>\r\n\r\n@code {\r\n    bool dialog = false;\r\n    bool dialog2 = false;\r\n    bool dialog3 = false;\r\n    bool notifications = false;\r\n    bool sound = true;\r\n    bool widgets = false;\r\n\r\n    List<string> _items = new() {\"0-17\", \"18-29\", \"30-54\", \"54+\"};\r\n    List<string> items = new() {\"Click Me\", \"Click Me\", \"Click Me\", \"Click Me\"};\r\n}",
        "Type": "Demos.Components.Dialog.misc.Nesting",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 8,
        "Name": "overflowed",
        "Title": "溢出",
        "Description": "<p>若对话框内容溢出，将在对话框内显示滚动条。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\">\r\n    <MDialog @bind-Value=\"dialog\"\r\n             Width=\"600\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\"\r\n                     Dark\r\n                     @attributes=\"@context.Attrs\">\r\n                Open Dialog\r\n            </MButton>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <MCard>\r\n                <MCardTitle>\r\n                    <span class=\"text-h5\">Use Google's location service?</span>\r\n                </MCardTitle>\r\n                <MCardText>\r\n                    Lorem ipsum dolor sit amet, semper quis, sapien id natoque elit. Nostra urna at, magna at neque sed sed ante imperdiet, dolor mauris cursus velit, velit non, sem nec. Volutpat sem ridiculus placerat leo, augue in, duis erat proin condimentum in a eget, sed fermentum sed vestibulum varius ac, vestibulum volutpat orci ut elit eget tortor. Ultrices nascetur nulla gravida ante arcu. Pharetra rhoncus morbi ipsum, nunc tempor debitis, ipsum pellentesque, vitae id quam ut mauris dui tempor, aptent non. Quisque turpis. Phasellus quis lectus luctus orci eget rhoncus. Amet donec vestibulum mattis commodo, nulla aliquet, nibh praesent, elementum nulla. Sit lacus pharetra tempus magna neque pellentesque, nulla vel erat.\r\n                    Justo ex quisque nulla accusamus venenatis, sed quis. Nibh phasellus gravida metus in, fusce aenean ut erat commodo eros. Ut turpis, dui integer, nonummy pede placeat nec in sit leo. Faucibus porttitor illo taciti odio, amet viverra scelerisque quis quis et tortor, curabitur morbi a. Enim tempor at, rutrum elit condimentum, amet rutrum vitae tempor torquent nunc. Praesent vestibulum integer maxime felis. Neque aenean quia vitae nostra, tempus elit enim id dui, at egestas pulvinar. Integer libero vestibulum, quis blandit scelerisque mattis fermentum nulla, tortor donec vestibulum dolor amet eget, elit nullam. Aliquam leo phasellus aliquam curabitur metus a, nulla justo mattis duis interdum vel, mollis vitae et id, vestibulum erat ridiculus sit pulvinar justo sed. Vehicula convallis, et nulla wisi, amet vestibulum risus, quam ac egestas.\r\n                    Et vitae, nulla gravida erat scelerisque nullam nunc pellentesque, a dictumst cras augue, purus imperdiet non. Varius montes cursus varius vel tortor, nec leo a qui, magni cras, velit vel consectetuer lobortis vel. Nibh erat et wisi felis leo porttitor, sapien nibh sapien pede mi, sed eget porttitor, repellendus arcu ac quis. Luctus vulputate aut est sem magna, placerat accumsan nunc vestibulum ipsum ac auctor, maecenas lorem in ut nec mauris tortor, doloribus varius sem tortor vestibulum mollis, eleifend tortor felis tempus lacus eu eu. Eleifend vel eu, nullam maecenas mauris nec nunc euismod, tortor porta ridiculus potenti, massa tristique nam magna, et wisi placerat et erat ante. Eget pede erat in facilisis, fermentum venenatis sodales. Ac tortor sociis et non animi tristique, rhoncus malesuada, ut arcu volutpat scelerisque sollicitudin, elit curabitur dui pede purus dolor, integer aenean risus taciti nulla eleifend accumsan. At pulvinar diam parturient, interdum mi velit aliquet et a. Arcu at ac placerat eget justo semper, purus sociis curabitur mi ipsum consequat ut, mollis vestibulum, est ante ornare lacus sem. Neque magna mauris, commodo quisque, praesent semper suscipit lobortis nam. Justo malesuada cursus ac nunc litora nunc. Tellus ac, in lobortis nunc, montes lectus purus fermentum.\r\n                    Ac sit wisi. Sodales aliquam, sed vestibulum nullam arcu sit risus arcu, id luctus vitae lorem nibh, integer nec nullam class cursus mi, purus arcu lectus. Vel ante suscipit volutpat potenti mattis sed, wisi eu placerat aliquam erat, lectus morbi lobortis at assumenda. Consequat neque purus ipsum voluptas odio, netus vestibulum ut nec, suspendisse pellentesque nec enim in. Wisi dictum sed semper a, ipsum erat tellus habitasse est, erat sem ornare, vitae quisque ultricies. Dui sed blandit. Tempor et faucibus justo sed luctus, nec vitae vitae. Nunc nibh pede, ipsum vestibulum aenean leo ante ultricies, nam cras quis sed penatibus amet. In mauris a. Integer metus mauris tortor, et rutrum vestibulum ultricies, ut phasellus in ullamcorper ut mollit, eu justo. Cursus pretium venenatis.\r\n                    Cras pellentesque vel sodales accumsan aenean. Feugiat metus sit nec in aliquet amet, porttitor pretium vulputate massa. Consequat ipsum luctus quisque adipiscing libero. Wisi sollicitudin. Eget vitae ac lobortis, lorem natoque vestibulum et, aliquet faucibus at morbi nibh, vel condimentum. Massa unde orci sed id sed, odio donec congue nec praesent amet. Hymenaeos velit lacus, quis vivamus libero tempus duis, eu nisi eu, ipsum at accumsan pede justo morbi donec, massa et libero sit risus neque tortor. Ut sed sed etiam hendrerit dapibus, quis metus suspendisse nibh.\r\n                    Fringilla tempor felis augue magna. Cum arcu a, id vitae. Pellentesque pharetra in cras sociis adipiscing est. Nibh nec mattis at maecenas, nisl orci aliquam nulla justo egestas venenatis, elementum duis vel porta eros, massa vitae, eligendi imperdiet amet. Nec neque luctus suscipit, justo sem praesent, ut nisl quisque, volutpat torquent wisi tellus aliquam reprehenderit, curabitur cras at quis massa porttitor mauris. Eros sed ultrices. Amet dignissim justo urna feugiat mauris litora, etiam accumsan, lobortis a orci suspendisse. Semper ac mauris, varius bibendum pretium, orci urna nunc ullamcorper auctor, saepe sem integer quam, at feugiat egestas duis. Urna ligula ante. Leo elementum nonummy. Sagittis mauris est in ipsum, nulla amet non justo, proin id potenti platea posuere sit ut, nunc sit erat bibendum. Nibh id auctor, ab nulla vivamus ultrices, posuere morbi nunc tellus gravida vivamus.\r\n                    Mauris nec, facilisi quam fermentum, ut mauris integer, orci tellus tempus diam ut in pellentesque. Wisi faucibus tempor et odio leo diam, eleifend quis integer curabitur sit scelerisque ac, mauris consequat luctus quam penatibus fringilla dis, vitae lacus in, est eu ac tempus. Consectetuer amet ipsum amet dui, sed blandit id sed. Tellus integer, dignissim id pede sodales quis, felis dolorem id mauris orci, orci tempus ut. Nullam hymenaeos. Curabitur in a, tortor ut praesent placerat tincidunt interdum, ac dignissim metus nonummy hendrerit wisi, etiam ut.\r\n                    Semper praesent integer fusce, tortor suspendisse, augue ligula orci ante asperiores ullamcorper. In sit per mi sed sed, mi vestibulum mus nam, morbi mauris neque vitae aliquam proin senectus. Ac amet arcu mollis ante congue elementum, inceptos eget optio quam pellentesque quis lobortis, sollicitudin sed vestibulum sollicitudin, lectus parturient nullam, leo orci ligula ultrices. At tincidunt enim, suspendisse est sit sem ac. Amet tellus molestie est purus magna augue, non etiam et in wisi id. Non commodo, metus lorem facilisi lobortis ac velit, montes neque sed risus consectetuer fringilla dolor. Quam justo et integer aliquam, cursus nulla enim orci, nam cursus adipiscing, integer torquent non, fringilla per maecenas. Libero ipsum sed tellus purus et. Duis molestie placerat erat donec ut. Dolor enim erat massa faucibus ultrices in, ante ultricies orci lacus, libero consectetuer mauris magna feugiat neque dapibus, donec pretium et. Aptent dui, aliquam et et amet nostra ligula.\r\n                    Augue curabitur duis dui volutpat, tempus sed ut pede donec. Interdum luctus, lectus nulla aenean elit, id sit magna, vulputate ultrices pellentesque vel id fermentum morbi. Tortor et. Adipiscing augue lorem cum non lacus, rutrum sodales laoreet duis tortor, modi placerat facilisis et malesuada eros ipsum, vehicula tempus. Ac vivamus amet non aliquam venenatis lectus, sociosqu adipiscing consequat nec arcu odio. Blandit orci nec nec, posuere in pretium, enim ut, consectetuer nullam urna, risus vel. Nullam odio vehicula massa sed, etiam sociis mauris, lacus ullamcorper, libero imperdiet non sodales placerat justo vehicula. Nec morbi imperdiet. Fermentum sem libero iaculis bibendum et eros, eget maecenas non nunc, ad pellentesque. Ut nec diam elementum interdum. Elementum vitae tellus lacus vitae, ipsum phasellus, corporis vehicula in ac sed massa vivamus, rutrum elit, ultricies metus volutpat.\r\n                    Semper wisi et, sollicitudin nunc vestibulum, cursus accumsan nunc pede tempus mi ipsum, ligula sed. Non condimentum ac dolor sit. Mollis eu aliquam, vel mattis mollis massa ut dolor ante, tempus lacinia arcu. Urna vestibulum lorem, nulla fermentum, iaculis ut congue ac vivamus. Nam libero orci, pulvinar nulla, enim pellentesque consectetuer leo, feugiat rhoncus rhoncus vel. Magna sociosqu donec, dictum cursus ullamcorper viverra. Ultricies quis orci lorem, suspendisse ut vestibulum integer, purus sed lorem pulvinar habitasse turpis.\r\n                    +\r\n                </MCardText>\r\n                <MCardActions>\r\n                    <MSpacer></MSpacer>\r\n                    <MButton Color=\"green darken-1\"\r\n                             Text\r\n                             OnClick=\"() => dialog = false\">\r\n                        Disagree\r\n                    </MButton>\r\n                    <MButton Color=\"green darken-1\"\r\n                             Text\r\n                             OnClick=\"() => dialog = false\">\r\n                        Agree\r\n                    </MButton>\r\n                </MCardActions>\r\n            </MCard>\r\n        </ChildContent>\r\n    </MDialog>\r\n</MRow>\r\n\r\n@code {\r\n    bool dialog = false;\r\n}",
        "Type": "Demos.Components.Dialog.misc.Overflowed",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 9,
        "Name": "withoutActivator",
        "Title": "没有激活器",
        "Description": "<p>如果因为某些原因不能使用激活器插槽，请确保将 <code>StopPropagation</code> 修饰符添加到触发对话框的事件。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\">\r\n    <MButton Color=\"primary\"\r\n             Dark\r\n             StopPropagation\r\n             OnClick=\"()=> dialog = true\">\r\n        Open Dialog\r\n    </MButton>\r\n\r\n    <MDialog @bind-Value=\"dialog\"\r\n             MaxWidth=\"290\">\r\n        <MCard>\r\n            <MCardTitle Class=\"text-h5\">\r\n                Use Google's location service?\r\n            </MCardTitle>\r\n\r\n            <MCardText>\r\n                Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\r\n            </MCardText>\r\n\r\n            <MCardActions>\r\n                <MSpacer></MSpacer>\r\n\r\n                <MButton Color=\"green darken-1\"\r\n                         Text\r\n                         OnClick=\"()=> dialog = false\">\r\n                    Disagree\r\n                </MButton>\r\n\r\n                <MButton Color=\"green darken-1\"\r\n                         Text\r\n                         OnClick=\"()=> dialog = false\">\r\n                    Agree\r\n                </MButton>\r\n            </MCardActions>\r\n        </MCard>\r\n    </MDialog>\r\n</MRow>\r\n\r\n@code {\r\n    bool dialog = false;\r\n}",
        "Type": "Demos.Components.Dialog.misc.WithoutActivator",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/buttons",
      "/components/cards",
      "/components/menus"
    ],
    "Subtitle": "对话框",
    "Title": "Dialogs",
    "Type": "对话框"
  },
  {
    "Desc": "<p><code>MDivider</code> 组件用于分隔列表或布局的各个部分。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MDivider\">MDivider</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.5123285+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "Index",
        "Title": "使用",
        "Description": "<p>最简单的分隔线显示一条水平线。</p>\n",
        "Code": "<MDivider></MDivider>",
        "Type": "Demos.Components.Divider.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "inset",
        "Title": "缩进",
        "Description": "<p>inset属性令分隔线向右缩进72px。 这将使他们与列表项保持一致。</p>\n",
        "Code": "<MRow>\r\n    <MCol Cols=\"12\" Sm=\"6\" OffsetSm=\"3\">\r\n        <MCard>\r\n            <MList TwoLine>\r\n                @foreach (var item in _items)\r\n                {\r\n                    if (!string.IsNullOrWhiteSpace(item.Header))\r\n                    {\r\n                        <MSubheader>@item.Header</MSubheader>\r\n                    }\r\n                    else if (item.Divider)\r\n                    {\r\n                        <MDivider Inset=\"@item.Inset\"></MDivider>\r\n                    }\r\n                    else\r\n                    {\r\n                        <MListItem>\r\n                            <MListItemAvatar>\r\n                                <MImage Src=\"@item.Avatar\"></MImage>\r\n                            </MListItemAvatar>\r\n                            <MListItemContent>\r\n                                <MListItemTitle>@((MarkupString)item.Title)</MListItemTitle>\r\n                                <MListItemSubtitle>@((MarkupString)item.SubTtile)</MListItemSubtitle>\r\n                            </MListItemContent>\r\n                        </MListItem>\r\n                    }\r\n                }\r\n            </MList>\r\n        </MCard>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code\r\n{\r\n    private class DataDemo\r\n    {\r\n        public string Header { get; set; }\r\n        public string Avatar { get; set; }\r\n        public string Title { get; set; }\r\n        public string SubTtile { get; set; }\r\n        public bool Divider { get; set; }\r\n        public bool Inset { get; set; }\r\n    }\r\n\r\n    private List<DataDemo> _items = new List<DataDemo>()\r\n    {\r\n        new DataDemo\r\n        {\r\n            Header = \"Today\"\r\n        },\r\n        new DataDemo\r\n        {\r\n            Avatar = \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/1.png\",\r\n            Title = \"Brunch this weekend?\",\r\n            SubTtile = \"<span class=\\\"font-weight-bold\\\">Ali Connors</span> &mdash; I'll be in your neighborhood doing errands this weekend. Do you want to hang out?\"\r\n        },\r\n        new DataDemo\r\n        {\r\n            Divider = true,\r\n            Inset = true\r\n        },\r\n        new DataDemo\r\n        {\r\n            Avatar = \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/2.png\",\r\n            Title = \"Summer BBQ <span class=\\\"grey--text text--lighten-1\\\">4</span>\",\r\n            SubTtile = \"<span class=\\\"font-weight-bold\\\">to Alex, Scott, Jennifer</span> &mdash; Wish I could come, but I'm out of town this weekend.\"\r\n        },\r\n        new DataDemo\r\n        {\r\n            Divider = true,\r\n            Inset = true\r\n        },\r\n        new DataDemo\r\n        {\r\n            Avatar = \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/3.png\",\r\n            Title = \"Oui oui\",\r\n            SubTtile = \"<span class=\\\"font-weight-bold\\\">Sandra Adams</span> &mdash; Do you have Paris recommendations? Have you ever been?\"\r\n        }\r\n    };\r\n}\r\n",
        "Type": "Demos.Components.Divider.props.Inset",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "vertical",
        "Title": "垂直",
        "Description": "<p>垂直分隔线为您提供了更多用于独特布局的工具。</p>\n",
        "Code": "<MToolbar Color=\"purple\" Dark>\r\n    <MToolbarTitle>Title</MToolbarTitle>\r\n\r\n    <MDivider Vertical Class=\"mx-4\"></MDivider>\r\n\r\n    <span class=\"subheading\">My Home</span>\r\n\r\n    <MSpacer></MSpacer>\r\n\r\n    <MToolbarItems Class=\"hidden-sm-and-down\">\r\n        <MButton Text>News</MButton>\r\n\r\n        <MDivider Vertical></MDivider>\r\n\r\n        <MButton Text>Blog</MButton>\r\n\r\n        <MDivider Vertical></MDivider>\r\n\r\n        <MButton Text>Music</MButton>\r\n\r\n        <MDivider Vertical></MDivider>\r\n    </MToolbarItems>\r\n\r\n    <MAppBarNavIcon></MAppBarNavIcon>\r\n</MToolbar>\r\n",
        "Type": "Demos.Components.Divider.props.Vertical",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "childContent",
        "Title": "ChildContent",
        "Description": "",
        "Code": "<MDivider>Default</MDivider>\r\n\r\n<MDivider Left>Left</MDivider>\r\n\r\n<MDivider Center>Center</MDivider>\r\n\r\n<MDivider Right>Right</MDivider>\r\n\r\n<MDivider Height=\"40\">\r\n    <MIcon Color=\"red\" Left Style=\"line-height: inherit;\">mdi-heart</MIcon>\r\n    Favorites\r\n</MDivider>",
        "Type": "Demos.Components.Divider.contents.ChildContent",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 1,
        "Name": "subheaders",
        "Title": "副标题",
        "Description": "<p>分割线和副标题可以帮助分解内容，并可以使用相同的 inset 属性来相互对齐。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\">\r\n    <MCol Cols=\"12\" Sm=\"8\" Md=\"6\">\r\n        <MCard>\r\n            <MToolbar Color=\"orange lighten-1\" Dark>\r\n                <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n                <MToolbarTitle>Message Board</MToolbarTitle>\r\n\r\n                <MSpacer></MSpacer>\r\n\r\n                <MButton Icon>\r\n                    <MIcon>mdi-magnify</MIcon>\r\n                </MButton>\r\n            </MToolbar>\r\n\r\n            <MList TwoLine>\r\n                @foreach (var item in _items)\r\n                {\r\n                    if (!string.IsNullOrWhiteSpace(item.Header))\r\n                    {\r\n                        <MSubheader Inset>@item.Header</MSubheader>\r\n                    }\r\n                    else if (item.Divider)\r\n                    {\r\n                        <MDivider Inset></MDivider>\r\n                    }\r\n                    else\r\n                    {\r\n                        <MListItem Ripple>\r\n                            <MListItemAvatar>\r\n                                <MImage Src=\"@item.Avatar\"></MImage>\r\n                            </MListItemAvatar>\r\n                            <MListItemContent>\r\n                                <MListItemTitle>@((MarkupString)item.Title)</MListItemTitle>\r\n                                <MListItemSubtitle>@((MarkupString)item.SubTtile)</MListItemSubtitle>\r\n                            </MListItemContent>\r\n                        </MListItem>\r\n                    }\r\n                }\r\n            </MList>\r\n        </MCard>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code\r\n{\r\n    private class DataDemo\r\n    {\r\n        public string Header { get; set; }\r\n        public string Avatar { get; set; }\r\n        public string Title { get; set; }\r\n        public string SubTtile { get; set; }\r\n        public bool Divider { get; set; }\r\n    }\r\n\r\n    private List<DataDemo> _items = new List<DataDemo>()\r\n    {\r\n        new DataDemo\r\n        {\r\n            Header = \"Today\"\r\n        },\r\n        new DataDemo\r\n        {\r\n            Divider = true\r\n        },\r\n        new DataDemo\r\n        {\r\n            Avatar = \"https://picsum.photos/250/300?image=660\",\r\n            Title = \"Meeting @ Noon\",\r\n            SubTtile = \"<span class=\\\"font-weight-bold\\\">Spike Lee</span> &mdash; I'll be in your neighborhood\"\r\n        },\r\n        new DataDemo\r\n        {\r\n            Avatar = \"https://picsum.photos/250/300?image=821\",\r\n            Title = \"Summer BBQ <span class=\\\"grey--text text--lighten-1\\\"></span>\",\r\n            SubTtile = \"<span class=\\\"font-weight-bold\\\">to Operations support</span> &mdash; Wish I could come.\"\r\n        },\r\n        new DataDemo\r\n        {\r\n            Avatar = \"https://picsum.photos/250/300?image=783\",\r\n            Title = \"Yes yes\",\r\n            SubTtile = \"<span class=\\\"font-weight-bold\\\">Bella</span> &mdash; Do you have Paris recommendations\"\r\n        },\r\n        new DataDemo\r\n        {\r\n            Header = \"Yesterday\"\r\n        },\r\n        new DataDemo\r\n        {\r\n            Divider = true\r\n        },\r\n        new DataDemo\r\n        {\r\n            Avatar = \"https://picsum.photos/250/300?image=1006\",\r\n            Title = \"Dinner tonight?\",\r\n            SubTtile = \"<span class=\\\"font-weight-bold\\\">LaToya</span> &mdash; Do you want to hang out?\"\r\n        },\r\n        new DataDemo\r\n        {\r\n            Avatar = \"https://picsum.photos/250/300?image=146\",\r\n            Title = \"So long\",\r\n            SubTtile = \"<span class=\\\"font-weight-bold\\\">Nancy</span> &mdash; Do you see what time it is?\"\r\n        },\r\n        new DataDemo\r\n        {\r\n            Header = \"Last Week\"\r\n        },\r\n        new DataDemo\r\n        {\r\n            Divider = true\r\n        },\r\n        new DataDemo\r\n        {\r\n            Avatar = \"https://picsum.photos/250/300?image=1008\",\r\n            Title = \"Breakfast?\",\r\n            SubTtile = \"<span class=\\\"font-weight-bold\\\">LaToya</span> &mdash; Do you want to hang out?\"\r\n        },\r\n        new DataDemo\r\n        {\r\n            Avatar = \"https://picsum.photos/250/300?image=839\",\r\n            Title = \"Winter Porridge <span class=\\\"grey--text text--lighten-1\\\"></span>\",\r\n            SubTtile = \"<span class=\\\"font-weight-bold\\\">cc: Daniel</span> &mdash; Tell me more...\"\r\n        },\r\n        new DataDemo\r\n        {\r\n            Avatar = \"https://picsum.photos/250/300?image=145\",\r\n            Title = \"Oui oui\",\r\n            SubTtile = \"<span class=\\\"font-weight-bold\\\">Nancy</span> &mdash; Do you see what time it is?\"\r\n        }\r\n    };\r\n}",
        "Type": "Demos.Components.Divider.misc.SubHeaders",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 0,
        "Name": "view",
        "Title": "纵向视图",
        "Description": "<p>创建自定义卡片以适应任何用例。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\">\r\n    <MCol Cols=\"12\" Sm=\"8\">\r\n        <MCard>\r\n            <MCardTitle Class=\"cyan darken-1\">\r\n                <span class=\"text-h5 white--text\">Sarah Mcbeal</span>\r\n\r\n                <MSpacer></MSpacer>\r\n\r\n                <MButton Dark Icon>\r\n                    <MIcon>mdi-chevron-left</MIcon>\r\n                </MButton>\r\n\r\n                <MButton Dark Icon>\r\n                    <MIcon>mdi-pencil</MIcon>\r\n                </MButton>\r\n\r\n                <MButton Dark Icon>\r\n                    <MIcon>mdi-dots-vertical</MIcon>\r\n                </MButton>\r\n            </MCardTitle>\r\n\r\n            <MList>\r\n                <MListItem>\r\n                    <MListItemAction>\r\n                        <MIcon>mdi-phone</MIcon>\r\n                    </MListItemAction>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>(650) 555-1234</MListItemTitle>\r\n                    </MListItemContent>\r\n\r\n                    <MListItemAction>\r\n                        <MIcon>mdi-message-text</MIcon>\r\n                    </MListItemAction>\r\n                </MListItem>\r\n\r\n                <MDivider Inset></MDivider>\r\n\r\n                <MListItem>\r\n                    <MListItemAction>\r\n                        <MIcon>mdi-phone</MIcon>\r\n                    </MListItemAction>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>(323) 555-6789</MListItemTitle>\r\n                    </MListItemContent>\r\n\r\n                    <MListItemAction>\r\n                        <MIcon>mdi-message-text</MIcon>\r\n                    </MListItemAction>\r\n                </MListItem>\r\n\r\n                <MDivider Inset></MDivider>\r\n\r\n                <MListItem>\r\n                    <MListItemAction>\r\n                        <MIcon>mdi-email</MIcon>\r\n                    </MListItemAction>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>mcbeal@example.com</MListItemTitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n\r\n                <MDivider Inset></MDivider>\r\n\r\n                <MListItem>\r\n                    <MListItemAction>\r\n                        <MIcon>mdi-map-marker</MIcon>\r\n                    </MListItemAction>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>Orlando, FL 79938</MListItemTitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            </MList>\r\n\r\n            <MImage Src=\"https://picsum.photos/700?image=996\" Height=\"200\"></MImage>\r\n        </MCard>\r\n    </MCol>\r\n</MRow>",
        "Type": "Demos.Components.Divider.misc.View",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/lists",
      "/components/navigation-drawers",
      "/components/toolbars"
    ],
    "Subtitle": "分隔线",
    "Title": "Dividers",
    "Type": "分隔线"
  },
  {
    "Desc": "<p><code>MDragZone</code>组件基于<a href=\"https://github.com/SortableJS/Sortable\">Sorttable.js</a>实现的可拖放功能</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MDragZone\">MDragZone</a></li>\n</ul>\n<!--alert:info-->\n<p>使用前需要引入 <code>Sorttable.js</code>：\n<br />\n<code>&lt;script src=&quot;https://cdn.masastack.com/npm/sortable/Sortable.min.js&quot;&gt;&lt;/script&gt;</code>。</p>\n<!--/alert:info-->\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.516328+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>拖拽组件和dom对象。</p>\n",
        "Code": "<style>\r\n    .item {\r\n        margin: 5px;\r\n        padding: 0.75rem 1.25rem;\r\n        margin-bottom: -1px;\r\n        border: 1px solid rgba(0,0,0,.125);\r\n    }\r\n</style>\r\n<MContainer>\r\n    <MRow>\r\n        <MCol Cols=12>\r\n            <MDragZone>\r\n                <MDragItem>\r\n                    <div class=\"white-color item\">item1.1</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"white-color item\">item1.2</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"white-color item\">item1.3</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"white-color item\">item1.4</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"white-color item\">item1.5</div>\r\n                </MDragItem>\r\n            </MDragZone>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>",
        "Type": "Demos.Components.DragZone.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "group",
        "Title": "拖拉区域名称",
        "Description": "<p>拖拉区域名称。</p>\n",
        "Code": "<style>\r\n    .group-item {\r\n        margin: 5px;\r\n        padding: 0.75rem 1.25rem;\r\n        margin-bottom: -1px;\r\n        border: 1px solid rgba(0,0,0,.125);\r\n    }\r\n</style>\r\n\r\n<MDragZone Group=\"group_example\">\r\n    <MDragItem>\r\n        <div class=\"group-item\">item1</div>\r\n    </MDragItem>\r\n    <MDragItem>\r\n        <div class=\"group-item\">item2</div>\r\n    </MDragItem>\r\n    <MDragItem>\r\n        <div class=\"group-item\">item3</div>\r\n    </MDragItem>\r\n    <MDragItem>\r\n        <div class=\"group-item\">item4</div>\r\n    </MDragItem>\r\n    <MDragItem>\r\n        <div class=\"group-item\">item5</div>\r\n    </MDragItem>\r\n</MDragZone>",
        "Type": "Demos.Components.DragZone.props.Group",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "options",
        "Title": "参数配置",
        "Description": "<p>参数配置。</p>\n",
        "Code": "<style>\r\n    .config-item {\r\n        margin: 5px;\r\n        padding: 0.75rem 1.25rem;\r\n        margin-bottom: -1px;\r\n        border: 1px solid rgba(0,0,0,.125);\r\n    }\r\n</style>\r\n\r\n<MDragZone Options=SetOptions>\r\n    <MDragItem>\r\n        <div class=\"config-item\">item1</div>\r\n    </MDragItem>\r\n    <MDragItem>\r\n        <div class=\"config-item\">item2</div>\r\n    </MDragItem>\r\n    <MDragItem>\r\n        <div class=\"config-item\">item3</div>\r\n    </MDragItem>\r\n    <MDragItem>\r\n        <div class=\"config-item\">item4</div>\r\n    </MDragItem>\r\n    <MDragItem>\r\n        <div class=\"config-item\">item5</div>\r\n    </MDragItem>\r\n</MDragZone>\r\n\r\n@code {\r\n\r\n    private void SetOptions(SorttableOptions options)\r\n    {\r\n        options.Group = \"group_onconfigure\";\r\n    }\r\n}",
        "Type": "Demos.Components.DragZone.props.Options",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "pull",
        "Title": "拖拉",
        "Description": "<p>拖拉配置 <code>true</code> 允许拖拉，<code>false</code>禁止拖拉，<code>clone</code> 克隆。</p>\n",
        "Code": "<style>\r\n    .pull-item {\r\n        margin: 5px;\r\n        padding: 0.75rem 1.25rem;\r\n        margin-bottom: -1px;\r\n        border: 1px solid rgba(0,0,0,.125);\r\n    }\r\n</style>\r\n\r\n<MContainer>\r\n    <MRow>\r\n        <MCol Cols=6>\r\n            <div>enable drag</div>\r\n            <MDragZone Group=\"pull_example\" Pull=\"true\">\r\n                <MDragItem>\r\n                    <div class=\"pull-item\">item1.1</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"pull-item\">item1.2</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"pull-item\">item1.3</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"pull-item\">item1.4</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"pull-item\">item1.5</div>\r\n                </MDragItem>\r\n            </MDragZone>\r\n        </MCol>\r\n        <MCol Cols=6>\r\n            <div>disable drag</div>\r\n            <MDragZone Group=\"pull_example\" Pull=\"false\">\r\n                <MDragItem>\r\n                    <div class=\"pull-item\">item2.1</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"pull-item\">item2.2</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"pull-item\">item2.3</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"pull-item\">item2.4</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"pull-item\">item2.5</div>\r\n                </MDragItem>\r\n            </MDragZone>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>",
        "Type": "Demos.Components.DragZone.props.Pull",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "put",
        "Title": "拖放",
        "Description": "<p>拖放配置：<code>true</code> 允许拖放 ，<code>false</code>禁止拖放，<code>group1,group2</code> 允许指定区域的元素拖放。</p>\n",
        "Code": "<style>\r\n    .put-item {\r\n        margin: 5px;\r\n        padding: 0.75rem 1.25rem;\r\n        margin-bottom: -1px;\r\n        border: 1px solid rgba(0,0,0,.125);\r\n    }\r\n</style>\r\n\r\n<MContainer>\r\n    <MRow>\r\n        <MCol Cols=6>\r\n            <div>enable drop</div>\r\n            <MDragZone Group=\"put_example\" Put=\"true\">\r\n                <MDragItem>\r\n                    <div class=\"put-item\">item1-1</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"put-item\">item1-2</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"put-item\">item1-3</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"put-item\">item1-4</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"put-item\">item1-5</div>\r\n                </MDragItem>\r\n            </MDragZone>\r\n        </MCol>\r\n        <MCol Cols=6>\r\n            <div>disable drop</div>\r\n            <MDragZone Group=\"put_example\" Put=\"false\">\r\n                <MDragItem>\r\n                    <div class=\"put-item\">item2.1</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"put-item\">item2.2</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"put-item\">item2.3</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"put-item\">item2.4</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"put-item\">item2.5</div>\r\n                </MDragItem>\r\n            </MDragZone>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>",
        "Type": "Demos.Components.DragZone.props.Put",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "sort",
        "Title": "子元素是否可以排序",
        "Description": "<p>子元素是否可以排序。</p>\n",
        "Code": "<style>\r\n    .sort-item {\r\n        margin: 5px;\r\n        padding: 0.75rem 1.25rem;\r\n        margin-bottom: -1px;\r\n        border: 1px solid rgba(0,0,0,.125);\r\n    }\r\n</style>\r\n\r\n<MContainer>\r\n    <MRow>\r\n        <MCol Cols=6>\r\n            <div>enable sort</div>\r\n            <MDragZone Group=\"sort_example\" Sort=true>\r\n                <MDragItem>\r\n                    <div class=\"sort-item\">item1</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"sort-item\">item2</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"sort-item\">item3</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"sort-item\">item4</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"sort-item\">item5</div>\r\n                </MDragItem>\r\n            </MDragZone>\r\n        </MCol>\r\n        <MCol Cols=6>\r\n            <div>disable sort</div>\r\n            <MDragZone  Group=\"sort_example\" Sort=false>\r\n                <MDragItem>\r\n                    <div class=\"sort-item\">item2.1</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"sort-item\">item2.2</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"sort-item\">item2.3</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"sort-item\">item2.4</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"sort-item\">item2.5</div>\r\n                </MDragItem>\r\n            </MDragZone>\r\n\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code {\r\n    private void EnableSort(SorttableOptions options)\r\n    {\r\n        options.Group = \"group_enable\";\r\n        options.Sort = true;\r\n    }\r\n\r\n    private void DisableSort(SorttableOptions options)\r\n    {\r\n        options.Group = \"group_disable\";\r\n        options.Sort = false;\r\n    }\r\n}",
        "Type": "Demos.Components.DragZone.props.Sort",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "clone",
        "Title": "克隆",
        "Description": "<p>选中的元素克隆拖放。</p>\n",
        "Code": "<style>\r\n    .clone-parent {\r\n        background-color: #eee;\r\n        min-height: 40px;\r\n        padding: 5px 0 10px 0\r\n    }\r\n\r\n    .clone-item {\r\n        margin: 5px;\r\n        padding: 0.75rem 1.25rem;\r\n        margin-bottom: -1px;\r\n        border: 1px solid rgba(0,0,0,.125);\r\n    }\r\n\r\n    .clone-white-color {\r\n        background-color: #ffffff;\r\n    }\r\n\r\n    .clone-blue-color {\r\n        background-color: #5CBBF6;\r\n    }\r\n\r\n</style>\r\n\r\n<MButton OnClick=@(()=>{ AddData(mDragZone1,1); })> container1 add</MButton>\r\n<MButton OnClick=@(()=>{ AddData(mDragZone2,2); })> container2 add</MButton>\r\n<MContainer>\r\n    <MRow>\r\n        <MCol Cols=6>\r\n            <MDragZone Group=\"group_oninit\" Pull=\"clone\" @ref=mDragZone1>\r\n                <MDragItem>\r\n                    <MCard Class=\"clone-item\">\r\n                        <MCardTitle>item1 init title1</MCardTitle>\r\n                        <MCardText>item1 init text1</MCardText>\r\n                    </MCard>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <MCard Class=\"clone-item\">\r\n                        <MCardTitle>item1 init title2</MCardTitle>\r\n                        <MCardText>tem1 init text2</MCardText>\r\n                    </MCard>\r\n                </MDragItem>\r\n            </MDragZone>\r\n        </MCol>\r\n        <MCol Cols=6>\r\n            <MDragZone Group=\"group_oninit\" Pull=\"clone\" @ref=mDragZone2>\r\n                <MDragItem>\r\n                    <MCard Class=\"clone-item\">\r\n                        <MCardTitle>item2 init title1</MCardTitle>\r\n                        <MCardText>item1 init text1</MCardText>\r\n                    </MCard>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <MCard Class=\"clone-item\">\r\n                        <MCardTitle>item2 init title2</MCardTitle>\r\n                        <MCardText>tem2 init text2</MCardText>\r\n                    </MCard>\r\n                </MDragItem>\r\n            </MDragZone>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n\r\n@code {\r\n    private MDragZone mDragZone1;\r\n    private MDragZone mDragZone2;\r\n    private int total = 3;\r\n\r\n    private void AddData(MDragZone container, int index)\r\n    {\r\n        var insert = new MDragItem\r\n            {\r\n                Id = Guid.NewGuid().ToString(\"N\"),\r\n                ChildContent = CreateCard(container, \"-\", index, total++)\r\n            };\r\n\r\n        container.Add(insert);\r\n        StateHasChanged();\r\n    }\r\n\r\n    private RenderFragment CreateCard(MDragZone container, string split, int containerIndex, int index) => builder =>\r\n          {\r\n              int i = 0;\r\n              builder.OpenComponent<MCard>(i++);\r\n              builder.AddAttribute(i++, \"IsDark\", container.IsDark);\r\n              builder.AddAttribute(i++, \"Class\", \"clone-item\");\r\n              builder.AddAttribute(i++, \"ChildContent\", CreateComponent(\"-\", containerIndex, index));\r\n              builder.CloseComponent();\r\n          };\r\n\r\n    private RenderFragment CreateComponent(string split, int containerIndex, int index) => builder =>\r\n         {\r\n             int i = 0;\r\n             builder.OpenComponent<MCardTitle>(i++);\r\n             builder.AddAttribute(i++, \"ChildContent\", CreateText($\"item {containerIndex} title {split}{index}\"));\r\n             builder.CloseComponent();\r\n\r\n             builder.OpenComponent<MCardText>(i++);\r\n             builder.AddAttribute(i++, \"ChildContent\", CreateText($\"item {containerIndex} text {split}{index}\"));\r\n             builder.CloseComponent();\r\n         };\r\n\r\n    private RenderFragment CreateText(string name) => builder =>\r\n        {\r\n            builder.AddContent(0, $\"{name}\");\r\n        };\r\n}",
        "Type": "Demos.Components.DragZone.misc.Clone",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 3,
        "Name": "filter",
        "Title": "过滤",
        "Description": "<p>对元素进行过滤，不符合的不能拖放。</p>\n",
        "Code": "<style>\r\n    div.ignore-drag {\r\n        background-color: red\r\n    }\r\n\r\n    .filter-item {\r\n        margin: 5px;\r\n        position: relative;\r\n        display: block;\r\n        padding: 0.75rem 1.25rem;\r\n        margin-bottom: -1px;\r\n        border: 1px solid rgba(0,0,0,.125);\r\n    }\r\n\r\n</style>\r\n<MContainer>\r\n    <MRow>\r\n        <MCol Cols=12>\r\n            <MDragZone Options=SetOptions>\r\n                <MDragItem>\r\n                    <div class=\"filter-item\">item1.1</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"filter-item ignore-drag\">item1.2</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"filter-item\">item1.3</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"filter-item ignore-drag\">item1.4</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"filter-item\">item1.5</div>\r\n                </MDragItem>\r\n            </MDragZone>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n@code {\r\n    private void SetOptions(SorttableOptions options)\r\n    {\r\n        options.Group = \"group_f1\";\r\n        options.Filter = \".ignore-drag\";\r\n    }\r\n}",
        "Type": "Demos.Components.DragZone.misc.Filter",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 1,
        "Name": "multiyZone",
        "Title": "多区域",
        "Description": "<p>多区域跨区域拖放。</p>\n",
        "Code": "<style>\r\n    .multi-item {\r\n        margin: 5px;\r\n        position: relative;\r\n        display: block;\r\n        padding: 0.75rem 1.25rem;\r\n        margin-bottom: -1px;\r\n        border: 1px solid rgba(0,0,0,.125);\r\n    }\r\n</style>\r\n<MContainer>\r\n    <MRow>\r\n        <MCol Cols=6>\r\n            <MDragZone Group=\"multiy_example\">\r\n                <MDragItem>\r\n                    <div class=\"multi-item\">item1.1</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"multi-item\">item1.2</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"multi-item\">item1.3</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"multi-item\">item1.4</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"multi-item\">item1.5</div>\r\n                </MDragItem>\r\n            </MDragZone>\r\n        </MCol>\r\n        <MCol Cols=6>\r\n            <MDragZone Group=\"multiy_example\" >\r\n                <MDragItem>\r\n                    <div class=\"multi-item\">item2.1</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"multi-item\">item2.2</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"multi-item\">item2.3</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"multi-item\">item2.4</div>\r\n                </MDragItem>\r\n                <MDragItem>\r\n                    <div class=\"multi-item\">item2.5</div>\r\n                </MDragItem>\r\n            </MDragZone>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>",
        "Type": "Demos.Components.DragZone.misc.MultiyZone",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Subtitle": "拖放",
    "Title": "DragZone",
    "Type": "拖放",
    "Tag": "js-proxy"
  },
  {
    "Order": 0,
    "OtherDocs": {},
    "LastWriteTime": "2022-10-20T23:42:05.5203283+08:00",
    "DemoList": [
      {
        "Order": 1,
        "Name": "index",
        "Title": "使用",
        "Description": "",
        "Code": "<PDrawer Title=\"Title\" Width=\"500\">\r\n    <ActivatorContent>\r\n        <MButton @attributes=\"@context.Attrs\">Activator</MButton>\r\n    </ActivatorContent>\r\n    <ChildContent>\r\n        Content\r\n    </ChildContent>\r\n</PDrawer>",
        "Type": "Demos.Components.Drawer.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "actionProps",
        "Title": "操作属性",
        "Description": "",
        "Code": "<PDrawer @bind-Value=\"value\"\r\n         Persistent\r\n         Title=\"Title\"\r\n         Width=\"500\"\r\n         SaveProps=\"props => props.Outlined = true\"\r\n         CancelProps=\"@(props => props.Color = \"orange\")\"\r\n         DeleteProps=\"@(props => props.Style = \"font-weight:bold;\")\"\r\n         OnSave=\"OnSave\"\r\n         OnCancel=\"OnCancel\"\r\n         OnDelete=\"OnDelete\">\r\n    <ActivatorContent>\r\n        <MButton @attributes=\"@context.Attrs\">Activator</MButton>\r\n    </ActivatorContent>\r\n    <ChildContent>\r\n        Content\r\n    </ChildContent>\r\n</PDrawer>\r\n\r\n@code {\r\n\r\n    private bool value;\r\n\r\n    private async Task OnSave()\r\n    {\r\n        await Task.Delay(1000);\r\n\r\n        value = false;\r\n    }\r\n\r\n    private void OnCancel()\r\n    {\r\n        value = false;\r\n    }\r\n\r\n    private void OnDelete()\r\n    {\r\n        value = false;\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.Drawer.props.ActionProps",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "actions",
        "Title": "操作",
        "Description": "",
        "Code": "<MSwitch @bind-Value=\"hideCancelAction\" Label=\"HideCancelAction\"></MSwitch>\r\n\r\n<PDrawer @bind-Value=\"value\"\r\n         HideCancelAction=\"hideCancelAction\"\r\n         Persistent\r\n         Title=\"Title\"\r\n         Width=\"500\"\r\n         OnSave=\"OnSave\"\r\n         OnCancel=\"OnCancel\"\r\n         OnDelete=\"OnDelete\">\r\n    <ActivatorContent>\r\n        <MButton @attributes=\"@context.Attrs\">Activator</MButton>\r\n    </ActivatorContent>\r\n    <ChildContent>\r\n        Content\r\n    </ChildContent>\r\n</PDrawer>\r\n\r\n@code {\r\n\r\n    private bool value;\r\n    private bool hideCancelAction;\r\n\r\n    private async Task OnSave()\r\n    {\r\n        await Task.Delay(1000);\r\n\r\n        value = false;\r\n    }\r\n\r\n    private void OnCancel()\r\n    {\r\n        value = false;\r\n    }\r\n\r\n    private void OnDelete()\r\n    {\r\n        value = false;\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.Drawer.props.Actions",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "formModel",
        "Title": "表单对象",
        "Description": "",
        "Code": "@using System.ComponentModel.DataAnnotations\r\n\r\n<MSwitch @bind-Value=\"throwException\" Label=\"throw exception when calling OnSave\"></MSwitch>\r\n\r\n<MButton OnClick=\"ShowModal\">Show Modal</MButton>\r\n@if (user != null)\r\n{\r\n    <div>\r\n        @System.Text.Json.JsonSerializer.Serialize(user)\r\n        <MButton Color=\"primary\" Text OnClick=\"EditModal\">edit</MButton>\r\n    </div>\r\n}\r\n\r\n<PDrawer @bind-Value=\"value\"\r\n         FormModel=\"userModel\"\r\n         Persistent\r\n         Title=\"Title\"\r\n         Width=\"500\"\r\n         OnSave=\"HandleOnSave\"\r\n         OnCancel=\"HandleOnCancel\">\r\n    <MRow>\r\n        <MCol Cols=\"12\">\r\n            <MTextField @bind-Value=\"userModel.UserName\"\r\n                        Label=\"UserName\"\r\n                        Dense\r\n                        Outlined\r\n                        HideDetails=\"@(\"auto\")\" />\r\n        </MCol>\r\n        <MCol Cols=\"12\">\r\n            <MTextField @bind-Value=\"userModel.City\"\r\n                        Label=\"City\"\r\n                        Dense\r\n                        Outlined\r\n                        HideDetails=\"@(\"auto\")\" />\r\n        </MCol>\r\n        <MCol Cols=\"12\">\r\n            <MRadioGroup @bind-Value=\"userModel.Gender\"\r\n                         Label=\"Gender:\"\r\n                         Row\r\n                         Dense\r\n                         Style=\"margin-top: 0\"\r\n                         HideDetails=\"@(\"auto\")\">\r\n                <MRadio Label=\"Male\" Value=\"0\"></MRadio>\r\n                <MRadio Label=\"Female\" Value=\"1\"></MRadio>\r\n            </MRadioGroup>\r\n        </MCol>\r\n        <MCol Cols=\"12\">\r\n            <MAutocomplete @bind-Value=\"userModel.Favorites\"\r\n                           Items=\"favorites\"\r\n                           Label=\"Favorites\"\r\n                           Multiple\r\n                           ItemValue=\"r => r\"\r\n                           ItemText=\"r => r\"\r\n                           Dense\r\n                           Outlined\r\n                           HideDetails=\"@(\"auto\")\">\r\n            </MAutocomplete>\r\n        </MCol>\r\n        @if (exception != null)\r\n        {\r\n            <MCol Cols=\"12\">\r\n                @exception.Message\r\n            </MCol>\r\n        }\r\n    </MRow>\r\n</PDrawer>\r\n\r\n@code {\r\n\r\n    readonly List<string> favorites = new() { \"Basketball\", \"Football\", \"Ping-pong\", \"Badminton\" };\r\n\r\n    User user;\r\n    User userModel;\r\n\r\n    private bool value;\r\n    private bool throwException;\r\n    private Exception exception;\r\n\r\n    private void ShowModal()\r\n    {\r\n        userModel = new User();\r\n        value = true;\r\n    }\r\n\r\n    private void EditModal()\r\n    {\r\n        userModel = user.ShallowCopy();\r\n        value = true;\r\n    }\r\n\r\n    private async Task HandleOnSave(ModalActionEventArgs args)\r\n    {\r\n        try\r\n        {\r\n            // logic in real world here\r\n            await Task.Delay(1000);\r\n\r\n            if (throwException)\r\n            {\r\n                throw new Exception(\"Something wrong here!\");\r\n            }\r\n\r\n            user = userModel.ShallowCopy();\r\n\r\n            value = false;\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            args.Cancel();\r\n            exception = e;\r\n        }\r\n    }\r\n\r\n    private void HandleOnCancel()\r\n    {\r\n        value = false;\r\n        exception = null;\r\n    }\r\n\r\n    public class User : IShallowCopy<User>\r\n    {\r\n        [Required]\r\n        public string UserName { get; set; }\r\n\r\n        [Range(0, 1)]\r\n        public int Gender { get; set; }\r\n\r\n        [Required]\r\n        public string City { get; set; }\r\n\r\n        [Required]\r\n        public List<string> Favorites { get; set; }\r\n\r\n        public User ShallowCopy()\r\n        {\r\n            var user = (User)this.MemberwiseClone();\r\n            user.Favorites = Favorites;\r\n            return user;\r\n        }\r\n    }\r\n\r\n    public interface IShallowCopy<T> where T : new() \r\n    {\r\n        T ShallowCopy();\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.Drawer.props.FormModel",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "left",
        "Title": "抽屉",
        "Description": "",
        "Code": "<MSwitch @bind-Value=\"left\" Label=\"Left\"></MSwitch>\r\n\r\n<PDrawer Left=\"left\"\r\n         Title=\"Drawer here!\">\r\n    <ActivatorContent>\r\n        <MButton @attributes=\"@context.Attrs\">Activator</MButton>\r\n    </ActivatorContent>\r\n    <ChildContent>\r\n        <MSimpleTable Dense>\r\n            <thead>\r\n            <tr>\r\n                <th class=\"text-left\">\r\n                    Name\r\n                </th>\r\n                <th class=\"text-left\">\r\n                    Calories\r\n                </th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            @foreach (var item in _desserts)\r\n            {\r\n                <tr @key=\"item\">\r\n                    <td>@item.name</td>\r\n                    <td>@item.calories</td>\r\n                </tr>\r\n            }\r\n            </tbody>\r\n        </MSimpleTable>\r\n    </ChildContent>\r\n</PDrawer>\r\n\r\n@code {\r\n\r\n    bool left;\r\n\r\n    private List<(string name, int calories)> _desserts = new()\r\n    {\r\n        (\"Frozen Yogurt\", 159),\r\n        (\"Ice cream sandwich\", 237),\r\n        (\"Eclair\", 262),\r\n        (\"Cupcake\", 305),\r\n        (\"Gingerbread\", 356),\r\n        (\"Jelly bean\", 375),\r\n        (\"Lollipop\", 392),\r\n        (\"Honeycomb\", 408),\r\n        (\"Donut\", 452),\r\n        (\"KitKat\", 518),\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.Drawer.props.Left",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "scrollToTopOnHide",
        "Title": "自动滚动到顶部",
        "Description": "",
        "Code": "<MSwitch @bind-Value=\"autoScrollToTop\" Label=\"AutoScrollToTop\"></MSwitch>\r\n\r\n<PDrawer @bind-Value=\"value\"\r\n         AutoScrollToTop=\"autoScrollToTop\"\r\n         Title=\"Title\"\r\n         Width=\"500\"\r\n         BodyStyle=\"height: 250px\"\r\n         OnCancel=\"() => value = false\">\r\n    <ActivatorContent>\r\n        <MButton @attributes=\"@context.Attrs\">Activator</MButton>\r\n    </ActivatorContent>\r\n    <ChildContent>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n    </ChildContent>\r\n</PDrawer>\r\n\r\n@code {\r\n\r\n    private bool value;\r\n    private bool autoScrollToTop;\r\n\r\n}",
        "Type": "Demos.Components.Drawer.props.ScrollToTopOnHide",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "withoutActivator",
        "Title": "没有触发器",
        "Description": "",
        "Code": "<MButton OnClick=\"() => value = true\">Show Modal</MButton>\r\n\r\n<PDrawer @bind-Value=\"value\"\r\n         Title=\"Title\"\r\n         Width=\"500\"\r\n         OnCancel=\"() => value = false\">\r\n    Content\r\n</PDrawer>\r\n\r\n@code {\r\n\r\n    private bool value;\r\n\r\n}",
        "Type": "Demos.Components.Drawer.props.WithoutActivator",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "customActions",
        "Title": "自定义操作",
        "Description": "",
        "Code": "<PDrawer @bind-Value=\"value\"\r\n         Persistent\r\n         Title=\"Title\"\r\n         Width=\"500\"\r\n         OnSave=\"OnSave\"\r\n         OnCancel=\"OnCancel\"\r\n         OnDelete=\"OnDelete\">\r\n    <ActivatorContent>\r\n        <MButton @attributes=\"@context.Attrs\">Activator</MButton>\r\n    </ActivatorContent>\r\n    <ChildContent>\r\n        Content\r\n    </ChildContent>\r\n    <DeleteContent Context=\"delete\">\r\n        <MButton Icon Color=\"error\" OnClick=\"delete.Click\" Disabled=\"delete.Loading\">\r\n            <MIcon>mdi-delete</MIcon>\r\n        </MButton>\r\n    </DeleteContent>\r\n    <CancelContent Context=\"cancel\">\r\n        <MButton Icon OnClick=\"cancel.Click\" Disabled=\"cancel.Loading\">\r\n            <MIcon>mdi-cancel</MIcon>\r\n        </MButton>\r\n    </CancelContent>\r\n    <SaveContent Context=\"save\">\r\n        <MButton Icon Color=\"primary\" OnClick=\"save.Click\" Disabled=\"save.Loading\" Loading=\"save.Loading\">\r\n            <MIcon>mdi-check</MIcon>\r\n        </MButton>\r\n    </SaveContent>\r\n</PDrawer>\r\n\r\n@code {\r\n\r\n    private bool value;\r\n\r\n    private async Task OnSave()\r\n    {\r\n        await Task.Delay(1000);\r\n        value = false;\r\n    }\r\n\r\n    private void OnCancel()\r\n    {\r\n        value = false;\r\n    }\r\n\r\n    private void OnDelete()\r\n    {\r\n        value = false;\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.Drawer.contents.CustomActions",
        "Style": "",
        "Debug": false,
        "Group": 2
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/dialogs",
      "/components/buttons",
      "/components/icons"
    ],
    "Subtitle": "抽屉",
    "Title": "Drawers",
    "Type": "抽屉",
    "Tag": "preset"
  },
  {
    "Desc": "<p><a href=\"https://echarts.apache.org/examples/zh/index.html\">ECharts</a></p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MECharts\">MECharts</a></li>\n</ul>\n<!--alert:info-->\n<p>使用前需要先引用ECharts的包：\n<br />\n<code>&lt;script src=&quot;https://cdn.masastack.com/npm/echarts/5.1.1/echarts.min.js&quot;&gt;&lt;/script&gt;</code>。</p>\n<!--/alert:info-->\n"
    },
    "LastWriteTime": "2022-11-18T22:51:07.121203+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "basic",
        "Title": "使用",
        "Description": "<p>图表示例</p>\n",
        "Code": "<MECharts Option=\"_option\" Height=\"400\">\r\n</MECharts>\r\n\r\n@code{\r\n\r\n    private object _option = new\r\n    {\r\n        Title = new\r\n        {\r\n            Left = \"center\",\r\n            Text = \"Getting started\"\r\n        },\r\n        Tooltip = new { },\r\n        Legend = new\r\n        {\r\n            Data = new[] { \"Sales\" }\r\n        },\r\n        XAxis = new\r\n        {\r\n            Data = new[] { \"Shirt\", \"Cardigan\", \"Chiffon shirt\", \"Pants\", \"High heel\", \"Sock\" }\r\n        },\r\n        YAxis = new { },\r\n        Series = new[]\r\n        {\r\n            new\r\n            {\r\n                Name = \"sales\",\r\n                Type = \"bar\",\r\n                Data = new[] { 5, 20, 36, 10, 10, 20 }\r\n            }\r\n        }\r\n    };\r\n\r\n}\r\n",
        "Type": "Demos.Components.ECharts.usage.Basic",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "dark",
        "Title": "暗色主题",
        "Description": "<p>使用 <code>Dark</code> 属性切换到暗色主题。</p>\n",
        "Code": "<MECharts Option=\"option\" Height=\"400\" Dark></MECharts>\r\n\r\n@code{\r\n\r\n    private object option = new\r\n    {\r\n        Title = new\r\n        {\r\n            Left = \"center\",\r\n            Text = \"Getting started\"\r\n        },\r\n        Tooltip = new { },\r\n        Legend = new\r\n        {\r\n            Right = \"20px\",\r\n            Data = new[] { \"Sales\" }\r\n        },\r\n        XAxis = new\r\n        {\r\n            Data = new[] { \"Shirt\", \"Cardigan\", \"Chiffon shirt\", \"Pants\", \"High heel\", \"Sock\" }\r\n        },\r\n        YAxis = new { },\r\n        Series = new[]\r\n        {\r\n            new\r\n            {\r\n                Name = \"sales\",\r\n                Type = \"bar\",\r\n                Data = new[] { 5, 20, 36, 10, 10, 20 }\r\n            }\r\n        }\r\n    };\r\n\r\n}\r\n",
        "Type": "Demos.Components.ECharts.props.Dark",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "heightAndWidth",
        "Title": "高度和宽度",
        "Description": "<p>通过 <strong>Height</strong>,<strong>Width</strong> 属性设置宽高</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\">\r\n    <MCol Cols=\"12\" Class=\"text-center\">\r\n        Aspect ratio: 400/300\r\n    </MCol>\r\n    <MCol Cols=\"12\">\r\n        <MECharts Width=\"400\"\r\n                  Height=\"300\"\r\n                  Style=\"margin: 0 auto\"\r\n                  Option=\"_option\">\r\n        </MECharts>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n\r\n    private object _option = new\r\n    {\r\n        Title = new\r\n        {\r\n            Text = \"Getting started\"\r\n        },\r\n        Tooltip = new { },\r\n        Legend = new\r\n        {\r\n            Data = new[] { \"Sales\" }\r\n        },\r\n        XAxis = new\r\n        {\r\n            Data = new[] { \"Shirt\", \"Cardigan\", \"Chiffon shirt\", \"Pants\", \"High heel\", \"Sock\" }\r\n        },\r\n        YAxis = new { },\r\n        Series = new[]\r\n        {\r\n            new\r\n            {\r\n                Name = \"sales\",\r\n                Type = \"bar\",\r\n                Data = new[] { 5, 20, 36, 10, 10, 20 }\r\n            }\r\n        }\r\n    };\r\n\r\n}\r\n",
        "Type": "Demos.Components.ECharts.props.HeightAndWidth",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "locale",
        "Title": "本地化",
        "Description": "<p>指定使用的语言。详细使用请参考<a href=\"https://echarts.apache.org/en/api.html#echarts.init\">ECharts官方文档</a>。</p>\n",
        "Code": "@using BlazorComponent.I18n\r\n@inject I18n I18n\r\n\r\n<div class=\"d-flex flex-column align-center justify-center\">\r\n    <MECharts Option=\"option\"\r\n              InitOptions=\"opt => opt.Locale = locale\"\r\n              Height=\"400\"\r\n              @ref=\"echarts\">\r\n    </MECharts>\r\n\r\n    <MRadioGroup TValue=\"string\" Value=\"locale\" ValueChanged=\"SetLocale\" Row>\r\n        <MRadio Label=\"ZH\"\r\n                Value=\"@(\"zh\")\">\r\n        </MRadio>\r\n        <MRadio Label=\"EN\"\r\n                Value=\"@(\"en\")\">\r\n        </MRadio>\r\n    </MRadioGroup>\r\n</div>\r\n\r\n@code{\r\n    private MECharts echarts;\r\n    private string locale;\r\n\r\n    private object option = new();\r\n\r\n    private async Task SetLocale(string val)\r\n    {\r\n        if (locale != val && echarts is not null)\r\n        {\r\n            await echarts.DisposeECharts();\r\n        }\r\n\r\n        locale = val;\r\n    }\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        locale = I18n.Culture.TwoLetterISOLanguageName;\r\n\r\n        var data = new List<Data>();\r\n        for (int i = 0; i < 1000; i++)\r\n        {\r\n            data.Add(RandomData());\r\n        }\r\n\r\n        option = new\r\n        {\r\n            Title = new\r\n            {\r\n                text = \"Time Axis\"\r\n            },\r\n            Tooltip = new\r\n            {\r\n                Trigger = \"axis\",\r\n                axisPointer = new\r\n                {\r\n                    animation = false\r\n                }\r\n            },\r\n            xAxis = new\r\n            {\r\n                type = \"time\",\r\n                splitLine = new\r\n                {\r\n                    show = false\r\n                }\r\n            },\r\n            yAxis = new\r\n            {\r\n                type = \"value\",\r\n                boundaryGap = new object[] { 0, \"100%\" },\r\n                splitLine = new\r\n                {\r\n                    show = false\r\n                }\r\n            },\r\n            series = new object[]\r\n            {\r\n                new\r\n                {\r\n                    name = \"Fake Data\",\r\n                    type = \"line\",\r\n                    showSymbol = false,\r\n                    data = data\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    private DateTime _now = new DateTime(1997, 9, 3);\r\n\r\n    private Random _ran = new();\r\n\r\n    private int _lastRandomValue = 10;\r\n\r\n    private Data RandomData()\r\n    {\r\n        _now = _now.AddDays(1);\r\n        _lastRandomValue += _ran.Next(1, 100) - 50;\r\n        return new Data(_now.ToString(\"yyyy/MM/dd\"), new object[] { _now.ToString(\"yyyy/MM/dd\"), _lastRandomValue });\r\n    }\r\n\r\n    private record Data(string Name, object[] Value);\r\n\r\n}\r\n",
        "Type": "Demos.Components.ECharts.props.Locale",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "theme",
        "Title": "主题",
        "Description": "<p>指定使用的主题，默认支持亮和暗主题。 你可以使用<a href=\"https://echarts.apache.org/handbook/zh/concepts/style/#%E9%A2%9C%E8%89%B2%E4%B8%BB%E9%A2%98%EF%BC%88theme%EF%BC%89\">自定义主题</a>，例如本示例，在HTML引入vintage.js文件后可以设置<strong>vintage</strong>主题。</p>\n",
        "Code": "<div class=\"d-flex flex-column align-center justify-center\">\r\n    <MECharts Option=\"option\" Theme=\"@theme\" Height=\"400\" @ref=\"echarts\"></MECharts>\r\n\r\n    <MRadioGroup TValue=\"string\" Value=\"theme\" ValueChanged=\"SetTheme\" Row>\r\n        <MRadio Label=\"default\"\r\n                Value=\"@(\"\")\">\r\n        </MRadio>\r\n        <MRadio Label=\"light\"\r\n                Value=\"@(\"light\")\">\r\n        </MRadio>\r\n        <MRadio Label=\"dark\"\r\n                Value=\"@(\"dark\")\">\r\n        </MRadio>\r\n        <MRadio Label=\"vintage\"\r\n                Value=\"@(\"vintage\")\">\r\n        </MRadio>\r\n    </MRadioGroup>\r\n</div>\r\n\r\n@code{\r\n    private MECharts echarts;\r\n    private string theme = string.Empty;\r\n\r\n    private object option = new\r\n    {\r\n        Title = new\r\n        {\r\n            Left = \"center\",\r\n            Text = \"Getting started\"\r\n        },\r\n        Tooltip = new { },\r\n        Legend = new\r\n        {\r\n            Right = \"20px\",\r\n            Data = new[] { \"Sales\" }\r\n        },\r\n        XAxis = new\r\n        {\r\n            Data = new[] { \"Shirt\", \"Cardigan\", \"Chiffon shirt\", \"Pants\", \"High heel\", \"Sock\" }\r\n        },\r\n        YAxis = new { },\r\n        Series = new[]\r\n        {\r\n            new\r\n            {\r\n                Name = \"sales\",\r\n                Type = \"bar\",\r\n                Data = new[] { 5, 20, 36, 10, 10, 20 }\r\n            }\r\n        }\r\n    };\r\n\r\n    private async Task SetTheme(string val)\r\n    {\r\n        if (theme != null && echarts != null)\r\n        {\r\n            await echarts.DisposeECharts();\r\n        }\r\n\r\n        theme = val;\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.ECharts.props.Theme",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "liveUpdate",
        "Title": "实时更新",
        "Description": "",
        "Code": "@using System.Timers\r\n@implements IDisposable\r\n\r\n<MECharts Option=\"_option\" Height=\"400\"></MECharts>\r\n\r\n@code{\r\n\r\n    private Timer _timer;\r\n    private object _option = GenOption(MakeRandomData());\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        base.OnInitialized();\r\n\r\n        if (_timer == null)\r\n        {\r\n            _timer = new Timer\r\n            {\r\n                Interval = 2000\r\n            };\r\n\r\n            _timer.Elapsed += TimerOnElapsed;\r\n\r\n            _timer.Start();\r\n        }\r\n    }\r\n\r\n    private void TimerOnElapsed(object sender, ElapsedEventArgs e)\r\n    {\r\n        InvokeAsync(() =>\r\n        {\r\n            // new instance will trigger the echarts.setOption()\r\n            _option = GenOption(MakeRandomData());\r\n            StateHasChanged();\r\n        });\r\n    }\r\n\r\n    private static object GenOption(IEnumerable<PieDataItem> data)\r\n    {\r\n        return new\r\n        {\r\n            Series = new[]\r\n            {\r\n                new\r\n                {\r\n                    Radius = new[] { \"0\", \"50%\" },\r\n                    Type = \"pie\",\r\n                    Data = data\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    private static IEnumerable<PieDataItem> MakeRandomData()\r\n    {\r\n        return new[] { \"A\", \"B\", \"C\" }.Select(item => new PieDataItem(item, Random.Shared.Next(10, 99)));\r\n    }\r\n\r\n    record PieDataItem(string Name, int Value);\r\n\r\n    public void Dispose()\r\n    {\r\n        _timer?.Dispose();\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.ECharts.misc.LiveUpdate",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Subtitle": "图表",
    "Title": "ECharts",
    "Type": "图表",
    "Tag": "js-proxy"
  },
  {
    "Desc": "<p>基于<a href=\"https://quilljs.com/\">Quill</a>封装的富文本编辑器</p>\n",
    "Order": 0,
    "OtherDocs": {
      "css文件": "\n<pre><code class=\"language-html\">&lt;link href=&quot;https://cdn.masastack.com/npm/quill/1.3.6/quill.snow.css&quot; rel=&quot;stylesheet&quot;&gt;\n&lt;link href=&quot;https://cdn.masastack.com/npm/quill/1.3.6/quill.bubble.css&quot; rel=&quot;stylesheet&quot;&gt;\n&lt;link href=&quot;https://cdn.masastack.com/npm/quill/1.3.6/quill-emoji.css&quot; rel=&quot;stylesheet&quot;&gt;\n&lt;link href=&quot;https://cdn.masastack.com/npm/quill/1.3.6/quilljs-markdown-common-style.css&quot; rel=&quot;stylesheet&quot;&gt;\n</code></pre>\n",
      "js文件": "\n<pre><code class=\"language-html\">&lt;script src=&quot;https://cdn.masastack.com/npm/quill/1.3.6/quill.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://cdn.masastack.com/npm/quill/1.3.6/quilljs-markdown.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://cdn.masastack.com/npm/quill/1.3.6/quill-emoji.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n",
      "API": "\n<ul>\n<li><a href=\"/api/MEditor\">MEditor</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.5283265+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "basic",
        "Title": "使用",
        "Description": "<p>富文本编辑器示例</p>\n",
        "Code": "<MEditor @bind-Value=\"_editorContent\">\r\n</MEditor>\r\n<MAlert Border=\"Borders.Top\"\r\n        ColoredBorder\r\n        Type=\"AlertTypes.Info\"\r\n        Elevation=\"2\"\r\n        Class=\"overflow-auto mt-10\">\r\n    @_editorContent\r\n</MAlert>\r\n@code {\r\n    string _editorContent = \"Hello MEditor!\";\r\n}",
        "Type": "Demos.Components.Editor.usage.Basic",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "height",
        "Title": "自定义高度",
        "Description": "<p>通过 <strong>ElementStyle</strong> 属性设置高度</p>\n",
        "Code": "<MEditor ContentStyle=\"height:200px\">\r\n</MEditor>",
        "Type": "Demos.Components.Editor.props.Height",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "markdown",
        "Title": "markdown",
        "Description": "<p>支持markdown解析。</p>\n",
        "Code": "<MEditor Markdown>\r\n</MEditor>",
        "Type": "Demos.Components.Editor.props.Markdown",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "module",
        "Title": "模块",
        "Description": "<p>模块允许定制<strong>Quill</strong>的行为和功能。例如使用第三方模块 <a href=\"https://github.com/Fandom-OSS/quill-blot-formatter\">quill-blot-formatter</a> 可以实现调整图片大小的功能。</p>\n<!--alert:warning-->\n<p>此文档已经引用了<strong>quill-blot-formatter.min.js</strong>包，并且在<strong>Blazor</strong>启动后给<strong>Quill</strong>注册了<strong>blotFormatter</strong>模块，因此可以直接使用。具体可参考<a href=\"https://github.com/BlazorComponent/MASA.Blazor/blob/main/src/Doc/Masa.Blazor.Doc.Server/Pages/_Host.cshtml\">源码</a>。</p>\n<!--alert:warning-->\n",
        "Code": "<MEditor @bind-Value=\"_editorContent\"\r\n         AdditionalModules=\"blotFormatter\">\r\n</MEditor>\r\n\r\n@code {\r\n    string _editorContent = @\"<p><img src=\"\"https://cdn.masastack.com/stack/images/website/masa-blazor/parallax/material.jpg\"\"></p>\";\r\n}\r\n",
        "Type": "Demos.Components.Editor.props.Module",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "placeholder",
        "Title": "自定义提示信息",
        "Description": "<p>通过设置 <strong>Placeholder</strong> 属性来设置空值时的提示消息。</p>\n",
        "Code": "<MEditor Placeholder=\"please input\">\r\n</MEditor>",
        "Type": "Demos.Components.Editor.props.Placeholder",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "readOnly",
        "Title": "只读",
        "Description": "<p>是否将编辑器实例设置为只读模式。</p>\n",
        "Code": "<MEditor ReadOnly>\r\n</MEditor>",
        "Type": "Demos.Components.Editor.props.ReadOnly",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "theme",
        "Title": "主题",
        "Description": "<p>使用主题的名称。这个内置的选项是&quot;bubble&quot;或&quot;snow&quot;。注意，主题的样式表需要手动包含。</p>\n",
        "Code": "<MEditor Theme=\"bubble\" @bind-Value=\"editorContent\">\r\n    <ToolbarContent>\r\n        <select class=\"ql-header mt-2\">\r\n            <option selected=\"\"></option>\r\n            <option value=\"1\"></option>\r\n            <option value=\"2\"></option>\r\n            <option value=\"3\"></option>\r\n            <option value=\"4\"></option>\r\n            <option value=\"5\"></option>\r\n        </select>\r\n        <span class=\"ql-formats\">\r\n            <button class=\"ql-bold\"></button>\r\n            <button class=\"ql-italic\"></button>\r\n            <button class=\"ql-underline\"></button>\r\n            <button class=\"ql-strike\"></button>\r\n        </span>\r\n        <span class=\"ql-formats\">\r\n            <select class=\"ql-color\"></select>\r\n            <select class=\"ql-background\"></select>\r\n        </span>\r\n        <span class=\"ql-formats\">\r\n            <button class=\"ql-list\" value=\"ordered\"></button>\r\n            <button class=\"ql-list\" value=\"bullet\"></button>\r\n        </span>\r\n        <span class=\"ql-formats\">\r\n            <button class=\"ql-link\"></button>\r\n        </span>\r\n    </ToolbarContent>\r\n</MEditor>\r\n\r\n@code {\r\n\r\n    string editorContent = \"<p><b>This is a bubble theme.</b></p>\";\r\n\r\n}",
        "Type": "Demos.Components.Editor.props.Theme",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "toolBar",
        "Title": "自定义工具栏",
        "Description": "<p>通过<strong>ToolbarContent</strong>插槽自定义工具栏。</p>\n",
        "Code": "<MEditor>\r\n    <ToolbarContent>\r\n        <select class=\"ql-header\">\r\n            <option selected=\"\"></option>\r\n            <option value=\"1\"></option>\r\n            <option value=\"2\"></option>\r\n            <option value=\"3\"></option>\r\n            <option value=\"4\"></option>\r\n            <option value=\"5\"></option>\r\n        </select>\r\n        <span class=\"ql-formats\">\r\n            <button class=\"ql-bold\"></button>\r\n            <button class=\"ql-italic\"></button>\r\n            <button class=\"ql-underline\"></button>\r\n            <button class=\"ql-strike\"></button>\r\n        </span>\r\n        <span class=\"ql-formats\">\r\n            <select class=\"ql-color\"></select>\r\n            <select class=\"ql-background\"></select>\r\n        </span>\r\n        <span class=\"ql-formats\">\r\n            <button class=\"ql-list\" value=\"ordered\"></button>\r\n            <button class=\"ql-list\" value=\"bullet\"></button>\r\n        </span>\r\n        <span class=\"ql-formats\">\r\n            <button class=\"ql-link\"></button>\r\n        </span>\r\n        <span class=\"ql-formats\">\r\n            <button class=\"ql-image\"></button>\r\n        </span>\r\n    </ToolbarContent>\r\n</MEditor>",
        "Type": "Demos.Components.Editor.props.ToolBar",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "uploadPicture",
        "Title": "上传图片",
        "Description": "<p>这里只是演示如何配置<strong>Upload</strong>参数，请修改你的上传api地址。</p>\n",
        "Code": "@using Masa.Blazor.Components.Editor\r\n<MEditor Upload=\"_upload\">\r\n</MEditor>\r\n@code {\r\n    private MEditorUpload _upload = new MEditorUpload\r\n    {\r\n        Action = \"/api/upload\",//Please change your upload address\r\n        TokenName = \"authorization\",\r\n        Token = \"Your token\",\r\n        Name=\"file\",\r\n        Accept = \"image/png, image/gif, image/jpeg, image/bmp, image/x-icon\",\r\n        PathKey = \"path\"//Action result image path property\r\n    };\r\n}",
        "Type": "Demos.Components.Editor.props.UploadPicture",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "beforeAllUpload",
        "Title": "文件上传前事件",
        "Description": "<p>文件上传之前的钩子，你可以自己处理上传逻辑。</p>\n<pre><code class=\"language-javascript\">//Call JS to handle the upload example\nwindow.Demo.Quill = {\n    uploadFilePic: (quillElement, element, index) =&gt; {\n        let _that = this;\n        let quill = quillElement.__quill;//get quill editor\n        let fileInput = element.querySelector('input.ql-image[type=file]')//get fileInput\n        //Here is the upload logic. This is just an example. You can write your own processing logic\n        let formData = new FormData()\n        let files = fileInput.files;\n        formData.append('file', files[index])\n        let oReq = new XMLHttpRequest();\n        oReq.onreadystatechange = function () {\n            if (oReq.readyState == 4 &amp;&amp; oReq.status == 200) {\n                let json = JSON.parse(oReq.responseText);\n                let url = json.Path;\n                let length = quill.getSelection().index;\n                quill.insertEmbed(length, 'image', url);//Insert the uploaded picture into the editor\n                quill.setSelection(length + 1);\n                index += 1;\n                if (index &lt; files.length) {\n                    _that.Demo.Quill.uploadFilePic(quillElement, element, index);\n                }\n                else {\n                    fileInput.value = '';\n                }\n            }\n        }\n        oReq.open('POST', &quot;/api/upload&quot;);//Please change your upload API address\n        oReq.send(formData);\n    }\n};\n</code></pre>\n",
        "Code": "@using Masa.Blazor.Components.Editor;\r\n<MEditor @ref=\"Ref\" BeforeAllUploadAsync=\"BeforeAllUploadAsync\">\r\n</MEditor>\r\n@code {\r\n    [Inject]\r\n    private IJSRuntime JS { get; set; }\r\n    private MEditor Ref { get; set; }\r\n\r\n    private async Task<bool> BeforeAllUploadAsync(List<EditorUploadFileItem> flist)\r\n    {\r\n        //Please cancel this comment\r\n        //await JS.InvokeVoidAsync(\"Demo.Quill.uploadFilePic\", Ref.ContentRef, Ref.Ref, 0);\r\n        return true;\r\n    }\r\n}\r\n\r\n",
        "Type": "Demos.Components.Editor.events.BeforeAllUpload",
        "Style": "",
        "Debug": false,
        "Group": 1
      },
      {
        "Order": 5,
        "Name": "method",
        "Title": "方法",
        "Description": "<p>一些方法示例。</p>\n",
        "Code": "<MEditor @ref=\"@_editor\" @bind-Value=\"_editorContent\" Placeholder=\"请输入内容\" ContentStyle=\"height:100px\">\r\n</MEditor>\r\n<MRow Align=\"@AlignTypes.Center\"\r\n      Justify=\"@JustifyTypes.SpaceAround\" Class=\"mt-10\">\r\n      <MButton Depressed Color=\"primary\" @onclick=\"GetTextAsync\">\r\n        获取文本\r\n    </MButton>\r\n    <MButton Depressed Color=\"primary\" @onclick=\"GetContentAsync\">\r\n        获取内容\r\n    </MButton>\r\n    <MButton Depressed Color=\"primary\" @onclick=\"GetHtmlAsync\">\r\n        获取html\r\n    </MButton>\r\n    <MButton Depressed Color=\"primary\" @onclick=\"SetHtmlAsync\">\r\n        设置html\r\n    </MButton>\r\n    <MButton Depressed Color=\"primary\" @onclick=\"DisableAsync\">\r\n        禁用\r\n    </MButton>\r\n    <MButton Depressed Color=\"primary\" @onclick=\"EnableAsync\">\r\n        启用\r\n    </MButton>\r\n</MRow>\r\n<MAlert Border=\"Borders.Top\"\r\n            ColoredBorder\r\n            Type=\"AlertTypes.Info\"\r\n            Elevation=\"2\" \r\n            Class=\"overflow-auto mt-10\">\r\n        @_viewContent\r\n</MAlert>\r\n\r\n@code {\r\n    private MEditor _editor;\r\n    private string _editorContent = @\"Hello MEditor\";\r\n    private string _viewContent;\r\n\r\n    public async Task GetTextAsync()\r\n    {\r\n        _viewContent = await this._editor.GetTextAsync();\r\n    }\r\n    public async Task GetContentAsync()\r\n    {\r\n        _viewContent = await this._editor.GetContentAsync();\r\n    }\r\n    public async Task GetHtmlAsync()\r\n    {\r\n        _viewContent = await this._editor.GetHtmlAsync();\r\n    }\r\n\r\n    public async Task SetHtmlAsync()\r\n    {\r\n        string html =\r\n            @\"<a href='https://www.baidu.com/'>\" +\r\n            \"<img src='https://www.baidu.com/img/flexible/logo/pc/result.png' /></a>\";\r\n\r\n        await this._editor.SetHtmlAsync(html);\r\n    }\r\n    public async Task DisableAsync()\r\n    {\r\n        await this._editor.DisableAsync();\r\n    }\r\n    public async Task EnableAsync()\r\n    {\r\n        await this._editor.EnableAsync();\r\n    }\r\n}",
        "Type": "Demos.Components.Editor.misc.Method",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Subtitle": "富文本编辑器",
    "Title": "Editor",
    "Type": "富文本编辑器",
    "Tag": "js-proxy"
  },
  {
    "Desc": "<p><code>MErrorHandler</code>组件用来处理<code>blazor</code>组件数据加载和render时的异常信息。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MErrorHandler\">MErrorHandler</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.5303263+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "异常处理",
        "Description": "<p>异常统一处理：</p>\n<ol>\n<li><code>balzor</code>生命周期内的异常，无法处理，直接传递到<code>ErrorBoundry</code>处理；</li>\n<li>非MASA Blazor组件产生的异常，无法处理，直接传递到<code>ErrorBoundry</code>处理；</li>\n<li>MASA Blazor组件非生命周期方法产生的异常，都可以处理，默认展示<code>Exception.Message</code>，也可以配置其它选项显示异常堆栈或自定义处理异常</li>\n</ol>\n",
        "Code": "<MErrorHandler>\r\n    <MButton @onclick=\"BtnClick\">Throw test</MButton>\r\n</MErrorHandler>\r\n@code\r\n{\r\n    private void BtnClick()\r\n    {\r\n        throw new Exception(\"throw error!\");\r\n    }\r\n}",
        "Type": "Demos.Components.ErrorHandler.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "onErrorHandleAsync",
        "Title": "自定义异常处理",
        "Description": "<p>自定义异常处理<code>Func&lt;Exception,Task&gt;</code>，点击按钮触发异常后，按钮背景色变为红色文字颜色改为白色。</p>\n",
        "Code": "<MErrorHandler OnErrorHandleAsync=\"CustomErrorHandleAsync\">   \r\n    <MButton OnClick=\"BtnClick\" Class=\"@colorClass\">Custom handler exception test</MButton>\r\n    <MButton OnClick=\"BtnReset\">Reset</MButton>\r\n</MErrorHandler>\r\n@code\r\n{\r\n    private string colorClass= \"white black--text\";\r\n    private void BtnClick()\r\n    {\r\n        throw new Exception(\"throw error!\");\r\n    }\r\n\r\n    private void BtnReset()\r\n    {\r\n        colorClass= \"white black--text\";\r\n    }\r\n\r\n    private async Task CustomErrorHandleAsync(Exception exception)\r\n    {\r\n        //todo\r\n        colorClass = \"red white--text\";\r\n        StateHasChanged();\r\n        await Task.CompletedTask;\r\n    }\r\n}",
        "Type": "Demos.Components.ErrorHandler.props.OnErrorHandleAsync",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "showAlert",
        "Title": "是否显示告警",
        "Description": "<p><code>true</code>显示错误信息，并保留当前已填写的表单内容，<code>false</code>不显示错误，将异常向上传递到ErrorBoundry处理错误；\n如果在生命周期加载过程发生了错误，当前razor是否被包含在上级的Error handler中：</p>\n<ol>\n<li>包含，将先显示异常，并将当前页面内容呈现为默认的ErrorBoundry错误处理处理内容；</li>\n<li>不包含，当前页面直接内容呈现为默认的ErrorBoundry错误处理内容；</li>\n</ol>\n",
        "Code": "<MErrorHandler ShowAlert=_isShow>\r\n    <MSwitch @bind-Value=\"_isShow\" Label=\"@($\"Show: {_isShow}\")\"></MSwitch>\r\n    <MTextField Label=\"Input a num\" Value=\"num\" />\r\n    <MButton OnClick=\"BtnClick\">Normal error</MButton>\r\n    <MButton OnClick=\"BtnClickLifeCycle\">Life cycle error</MButton>\r\n</MErrorHandler>\r\n@code\r\n{\r\n    private bool _isShow = true;\r\n    private int num = 1;\r\n\r\n    private void BtnClick()\r\n    {\r\n        throw new Exception(\"BtnClickThrow Error!\");\r\n    }\r\n\r\n    private void BtnClickLifeCycle()\r\n    {\r\n        num = 0;\r\n    }\r\n\r\n    protected override void OnAfterRender(bool firstRender)\r\n    {\r\n        num /= num;\r\n    }\r\n}",
        "Type": "Demos.Components.ErrorHandler.props.ShowAlert",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "showDetail",
        "Title": "是否显示异常详细信息",
        "Description": "<p><code>true</code> 显示，<code>false</code> 不显示， 默认不显示</p>\n",
        "Code": "<MSwitch @bind-Value=\"_isShow\" Label=\"@($\"ShowDetail: {_isShow}\")\"></MSwitch>\r\n<MErrorHandler ShowDetail=\"_isShow\">\r\n    <MButton @onclick=\"BtnClick\">Throw test</MButton>\r\n</MErrorHandler>\r\n@code\r\n{\r\n    private bool _isShow = false;\r\n    private void BtnClick()\r\n    {\r\n        throw new Exception(\"throw error!\");\r\n    }\r\n}",
        "Type": "Demos.Components.ErrorHandler.props.ShowDetail",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Subtitle": "异常处理",
    "Title": "Error handler",
    "Type": "异常处理"
  },
  {
    "Desc": "<p><code>MExpansionPanel</code> 组件有助于减少大量信息的垂直空间占用。 组件的默认功能是仅显示一个扩展面板； 然而，使用 <strong>Multiple</strong> 属性后，扩展面板可以保持打开，直到显式地关闭。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MExpansionPanels\">MExpansionPanels</a></li>\n<li><a href=\"/api/MExpansionPanel\">MExpansionPanel</a></li>\n<li><a href=\"/api/MExpansionPanelHeader\">MExpansionPanelHeader</a></li>\n<li><a href=\"/api/MExpansionPanelContent\">MExpansionPanelContent</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.5353344+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>最简单的扩展面板显示可扩展项目的列表。</p>\n",
        "Code": "<MExpansionPanels>\r\n    @foreach (var _ in Enumerable.Range(0, 5))\r\n    {\r\n        <MExpansionPanel>\r\n            <MExpansionPanelHeader>\r\n                Item\r\n            </MExpansionPanelHeader>\r\n            <MExpansionPanelContent>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n            </MExpansionPanelContent>\r\n        </MExpansionPanel>\r\n    }\r\n</MExpansionPanels>",
        "Type": "Demos.Components.ExpansionPanels.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "accordion",
        "Title": "手风琴",
        "Description": "<p><code>Accordion</code> 属性激活时，当前扩展面板周围不会有边距。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\">\r\n    <MExpansionPanels accordion>\r\n        @foreach (var _ in Enumerable.Range(0, 5))\r\n        {\r\n            <MExpansionPanel>\r\n                <MExpansionPanelHeader>Item</MExpansionPanelHeader>\r\n                <MExpansionPanelContent>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                </MExpansionPanelContent>\r\n            </MExpansionPanel>\r\n        }\r\n    </MExpansionPanels>\r\n</MRow>",
        "Type": "Demos.Components.ExpansionPanels.props.Accordion",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "disabled",
        "Title": "禁用",
        "Description": "<p>ExpansionPanels  扩展面板及其内容都可以使用 disabled 属性禁用。</p>\n",
        "Code": "<div>\r\n    <div class=\"d-flex\">\r\n        <MCheckbox @bind-Value=\"disabled\" Label=\"Disabled\"></MCheckbox>\r\n    </div>\r\n\r\n    <MExpansionPanels @bind-Values=\"panel\" Disabled=\"disabled\" Multiple>\r\n        <MExpansionPanel>\r\n            <MExpansionPanelHeader>Panel 1</MExpansionPanelHeader>\r\n            <MExpansionPanelContent>\r\n                Some content\r\n            </MExpansionPanelContent>\r\n        </MExpansionPanel>\r\n\r\n        <MExpansionPanel>\r\n            <MExpansionPanelHeader>Panel 2</MExpansionPanelHeader>\r\n            <MExpansionPanelContent>\r\n                Some content\r\n            </MExpansionPanelContent>\r\n        </MExpansionPanel>\r\n\r\n        <MExpansionPanel>\r\n            <MExpansionPanelHeader>Panel 3</MExpansionPanelHeader>\r\n            <MExpansionPanelContent>\r\n                Some content\r\n            </MExpansionPanelContent>\r\n        </MExpansionPanel>\r\n    </MExpansionPanels>\r\n</div>\r\n\r\n\r\n@code {\r\n    bool disabled;\r\n    List<StringNumber> panel = new() {0, 1};\r\n}",
        "Type": "Demos.Components.ExpansionPanels.props.Disabled",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 3,
        "Name": "focusable",
        "Title": "调焦",
        "Description": "<p>扩展面板头部可以使用 focusable 属性使其可以聚焦。</p>\n",
        "Code": "<MExpansionPanels Focusable>\r\n    @foreach (var _ in Enumerable.Range(0, 5))\r\n    {\r\n        <MExpansionPanel>\r\n            <MExpansionPanelHeader>\r\n                Item\r\n            </MExpansionPanelHeader>\r\n            <MExpansionPanelContent>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n            </MExpansionPanelContent>\r\n        </MExpansionPanel>\r\n    }\r\n</MExpansionPanels>\r\n",
        "Type": "Demos.Components.ExpansionPanels.props.Focusable",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 4,
        "Name": "inset",
        "Title": "缩进",
        "Description": "<p>inset 属性激活时，当前扩张面板变得更小。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\">\r\n    <MExpansionPanels Inset>\r\n        @foreach (var _ in Enumerable.Range(0, 5))\r\n        {\r\n            <MExpansionPanel>\r\n                <MExpansionPanelHeader>Item</MExpansionPanelHeader>\r\n                <MExpansionPanelContent>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                </MExpansionPanelContent>\r\n            </MExpansionPanel>\r\n        }\r\n    </MExpansionPanels>\r\n</MRow>",
        "Type": "Demos.Components.ExpansionPanels.props.Inset",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 5,
        "Name": "model",
        "Title": "外部控制",
        "Description": "<p>可以通过修改 @bind-Value 来从外部控制扩展面板。 它的值对应于当前打开的扩展面板索引（从0开始）。 如果使用 multiple 属性，则是一个包含打开项索引的数组。</p>\n",
        "Code": "<div>\r\n    <div class=\"text-center d-flex pb-4\">\r\n        <MButton OnClick=\"All\">\r\n            all\r\n        </MButton>\r\n        <div>[@string.Join(\",\", panel)]</div>\r\n        <MButton OnClick=\"None\">\r\n            none\r\n        </MButton>\r\n    </div>\r\n\r\n    <MExpansionPanels\r\n        @bind-Values=\"panel\"\r\n        Multiple>\r\n        @foreach (var i in Enumerable.Range(0, items))\r\n        {\r\n            <MExpansionPanel Value=\"@i\">\r\n                <MExpansionPanelHeader>Header @(i + 1)</MExpansionPanelHeader>\r\n                <MExpansionPanelContent>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                </MExpansionPanelContent>\r\n            </MExpansionPanel>\r\n        }\r\n    </MExpansionPanels>\r\n</div>\r\n\r\n@code {\r\n\r\n    List<StringNumber> panel = new();\r\n\r\n    int items = 5;\r\n\r\n    void All()\r\n    {\r\n        panel = Enumerable.Range(0, 5).Select(i => (StringNumber)i).ToList();\r\n    }\r\n\r\n    void None()\r\n    {\r\n        panel.Clear();\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.ExpansionPanels.props.Model",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 6,
        "Name": "popout",
        "Title": "弹出",
        "Description": "<p>扩展面板还具有 popout 设计。 如果扩展面板激活popout属性，扩张面板将会在激活时扩大。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\">\r\n    <MExpansionPanels Popout>\r\n        @foreach (var _ in Enumerable.Range(0, 5))\r\n        {\r\n            <MExpansionPanel>\r\n                <MExpansionPanelHeader>Item</MExpansionPanelHeader>\r\n                <MExpansionPanelContent>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                </MExpansionPanelContent>\r\n            </MExpansionPanel>\r\n        }\r\n    </MExpansionPanels>\r\n</MRow>",
        "Type": "Demos.Components.ExpansionPanels.props.Popout",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 7,
        "Name": "readonly",
        "Title": "只读",
        "Description": "<p>readonly 属性做了与 disabled 相同的事情，但不涉及样式。</p>\n",
        "Code": "<div>\r\n    <div class=\"d-flex\">\r\n        <MCheckbox @bind-Value=\"_readonly\" Label=\"Readonly\"></MCheckbox>\r\n    </div>\r\n\r\n    <MExpansionPanels @bind-Values=\"panel\" Readonly=\"_readonly\" Multiple>\r\n        <MExpansionPanel>\r\n            <MExpansionPanelHeader>Panel 1</MExpansionPanelHeader>\r\n            <MExpansionPanelContent>\r\n                Some content\r\n            </MExpansionPanelContent>\r\n        </MExpansionPanel>\r\n\r\n        <MExpansionPanel>\r\n            <MExpansionPanelHeader>Panel 2</MExpansionPanelHeader>\r\n            <MExpansionPanelContent>\r\n                Some content\r\n            </MExpansionPanelContent>\r\n        </MExpansionPanel>\r\n\r\n        <MExpansionPanel>\r\n            <MExpansionPanelHeader>Panel 3</MExpansionPanelHeader>\r\n            <MExpansionPanelContent>\r\n                Some content\r\n            </MExpansionPanelContent>\r\n        </MExpansionPanel>\r\n    </MExpansionPanels>\r\n</div>\r\n\r\n\r\n@code {\r\n    List<StringNumber> panel = new() {0, 1};\r\n\r\n    bool _readonly;\r\n}",
        "Type": "Demos.Components.ExpansionPanels.props.Readonly",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 8,
        "Name": "advanced",
        "Title": "高级版",
        "Description": "<p>扩展面板为构建真正高级的实现提供了丰富的平台。 在这里，我们可以利用 <code>MExpansionPanelHeader</code> 组件中的插槽，通过淡入淡出内容来响应打开或关闭的状态。</p>\n",
        "Code": "<MExpansionPanels>\r\n    <MExpansionPanel>\r\n        <MExpansionPanelHeader>\r\n            <MRow NoGutters>\r\n                <MCol Cols=\"4\">\r\n                    Trip name\r\n                </MCol>\r\n                <MCol Cols=\"8\"\r\n                      Class=\"text--secondary\">\r\n                    <FadeTransition LeaveAbsolute>\r\n                        <IfTransitionElement Tag=\"span\" Value=\"context\">\r\n                            Enter a name for the trip\r\n                        </IfTransitionElement>\r\n                        <IfTransitionElement Tag=\"span\" Value=\"!context\">\r\n                            @trip.name\r\n                        </IfTransitionElement>\r\n                    </FadeTransition>\r\n                </MCol>\r\n            </MRow>\r\n        </MExpansionPanelHeader>\r\n        <MExpansionPanelContent>\r\n            <MTextField @bind-Value=\"@trip.name\"\r\n                        placeholder=\"Caribbean Cruise\">\r\n            </MTextField>\r\n        </MExpansionPanelContent>\r\n    </MExpansionPanel>\r\n\r\n    <MExpansionPanel>\r\n        <MExpansionPanelHeader>\r\n            <MRow NoGutters>\r\n                <MCol Cols=\"4\">\r\n                    Location\r\n                </MCol>\r\n                <MCol Cols=\"8\"\r\n                      Class=\"text--secondary\">\r\n                    <FadeTransition LeaveAbsolute>\r\n                        <IfTransitionElement Tag=\"span\" Value=\"context\">\r\n                            Select trip destination\r\n                        </IfTransitionElement>\r\n                        <IfTransitionElement Tag=\"span\" Value=\"!context\">\r\n                            @trip.location\r\n                        </IfTransitionElement>\r\n                    </FadeTransition>\r\n                </MCol>\r\n            </MRow>\r\n        </MExpansionPanelHeader>\r\n        <MExpansionPanelContent>\r\n            <MRow NoGutters>\r\n                <MSpacer></MSpacer>\r\n                <MCol Cols=\"5\">\r\n                    <MSelect @bind-Value=\"trip.location\"\r\n                             Items=\"locations\"\r\n                             ItemValue=\"item => item\"\r\n                             ItemText=\"item => item\"\r\n                             Chips\r\n                             Flat\r\n                             Solo>\r\n                    </MSelect>\r\n                </MCol>\r\n\r\n                <MDivider Vertical\r\n                          Class=\"mx-4\">\r\n                </MDivider>\r\n\r\n                <MCol Cols=\"3\">\r\n                    Select your destination of choice\r\n                    <br>\r\n                    <a href=\"/components/expansion-panels\">Learn more</a>\r\n                </MCol>\r\n            </MRow>\r\n\r\n            <MCardActions>\r\n                <MSpacer></MSpacer>\r\n                <MButton Text\r\n                         Color=\"secondary\">\r\n                    Cancel\r\n                </MButton>\r\n                <MButton Text\r\n                         Color=\"primary\">\r\n                    Save\r\n                </MButton>\r\n            </MCardActions>\r\n        </MExpansionPanelContent>\r\n    </MExpansionPanel>\r\n\r\n    <MExpansionPanel>\r\n        <MExpansionPanelHeader>\r\n            <MRow NoGutters>\r\n                <MCol Cols=\"4\">\r\n                    Start and end dates\r\n                </MCol>\r\n                <MCol Cols=\"8\"\r\n                      Class=\"text--secondary\">\r\n                    <FadeTransition LeaveAbsolute>\r\n                        <IfTransitionElement Tag=\"span\" Value=\"context\">\r\n                            When do you want to travel?\r\n                        </IfTransitionElement>\r\n                        @*TODO: refactor BRow to support IfElse*@\r\n                        <IfTransitionElement Tag=\"div\" Style=\"width:100%\" Value=\"!context\">\r\n                            <MRow NoGutters\r\n                                  Style=\"width: 100%\">\r\n                                <MCol Cols=\"6\">\r\n                                    Start date: @(trip.start ?? \"Not set\")\r\n                                </MCol>\r\n                                <MCol Cols=\"6\">\r\n                                    End date: @(trip.end ?? \"Not set\")\r\n                                </MCol>\r\n                            </MRow>\r\n                        </IfTransitionElement>\r\n                    </FadeTransition>\r\n                </MCol>\r\n            </MRow>\r\n        </MExpansionPanelHeader>\r\n        <MExpansionPanelContent>\r\n            <MRow Justify=\"JustifyTypes.SpaceAround\"\r\n                  NoGutters>\r\n                <MCol Cols=\"3\">\r\n                    <MMenu @bind-Value=\"visible\"\r\n                           CloseOnContentClick=\"false\"\r\n                           OffsetY\r\n                           MinWidth=\"290\">\r\n                        <ActivatorContent>\r\n                            <MTextField @bind-Value=\"trip.start\"\r\n                                        Label=\"Start date\"\r\n                                        PrependIcon=\"mdi-calendar\"\r\n                                        Readonly\r\n                                        @attributes=\"@context.Attrs\">\r\n                            </MTextField>\r\n                        </ActivatorContent>\r\n                        <ChildContent>\r\n                            <MDatePicker @bind-Value=\"date\"\r\n                                         NoTitle\r\n                                         Scrollable>\r\n                                <MSpacer></MSpacer>\r\n                                <MButton Text\r\n                                         Color=\"primary\"\r\n                                         OnClick=\"() => visible = false\">\r\n                                    Cancel\r\n                                </MButton>\r\n                                <MButton Text\r\n                                         Color=\"primary\"\r\n                                         OnClick=\"() => { trip.start = date.ToShortDateString(); visible = false;}\">\r\n                                    OK\r\n                                </MButton>\r\n                            </MDatePicker>\r\n                        </ChildContent>\r\n                    </MMenu>\r\n                </MCol>\r\n\r\n                <MCol Cols=\"3\">\r\n                    <MMenu @bind-Value=\"visible2\"\r\n                           CloseOnContentClick=\"false\"\r\n                           OffsetY\r\n                           MinWidth=\"290\">\r\n                        <ActivatorContent>\r\n                            <MTextField @bind-Value=\"trip.end\"\r\n                                        Label=\"End date\"\r\n                                        PrependIcon=\"mdi-calendar\"\r\n                                        Readonly\r\n                                        @attributes=\"@context.Attrs\">\r\n                            </MTextField>\r\n                        </ActivatorContent>\r\n                        <ChildContent>\r\n                            <MDatePicker @bind-Value=\"date2\"\r\n                                         NoTitle\r\n                                         Scrollable>\r\n                                <MSpacer></MSpacer>\r\n                                <MButton Text\r\n                                         Color=\"primary\"\r\n                                         OnClick=\"() => visible2 = false\">\r\n                                    Cancel\r\n                                </MButton>\r\n                                <MButton Text\r\n                                         Color=\"primary\"\r\n                                         OnClick=\"() => { trip.end = date2.ToShortDateString(); visible2 = false; }\">\r\n                                    OK\r\n                                </MButton>\r\n                            </MDatePicker>\r\n                        </ChildContent>\r\n                    </MMenu>\r\n                </MCol>\r\n            </MRow>\r\n        </MExpansionPanelContent>\r\n    </MExpansionPanel>\r\n</MExpansionPanels>\r\n\r\n@code {\r\n\r\n    DateOnly date = DateOnly.FromDateTime(DateTime.Now);\r\n    DateOnly date2 = DateOnly.FromDateTime(DateTime.Now);\r\n\r\n    List<string> locations = new() { \"Australia\", \"Barbados\", \"Chile\", \"Denmark\", \"Ecuador\", \"France\" };\r\n\r\n    Trip trip = new();\r\n\r\n    bool visible = false;\r\n    bool visible2 = false;\r\n\r\n    class Trip\r\n    {\r\n        public string name { get; set; }\r\n        public string location { get; set; }\r\n        public string start { get; set; }\r\n        public string end { get; set; }\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.ExpansionPanels.misc.Advanced",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 9,
        "Name": "customIcon",
        "Title": "自定义图标",
        "Description": "<p>展开操作的图标可以使用 <code>ExpandIcon</code> 属性或 <code>ActionsContent</code> 定义。</p>\n",
        "Code": "<div>\r\n    <MExpansionPanels Class=\"mb-6\">\r\n        @foreach (var item in Enumerable.Range(0, 5))\r\n        {\r\n            <MExpansionPanel @key=\"item\">\r\n                <MExpansionPanelHeader ExpandIcon=\"mdi-menu-down\">\r\n                    Item\r\n                </MExpansionPanelHeader>\r\n                <MExpansionPanelContent>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</MExpansionPanelContent>\r\n            </MExpansionPanel>\r\n        }\r\n    </MExpansionPanels>\r\n\r\n    <MExpansionPanels>\r\n        <MExpansionPanel>\r\n            <MExpansionPanelHeader>\r\n                <ChildContent>\r\n                    Item\r\n                </ChildContent>\r\n                <ActionsContent>\r\n                    <MIcon Color=\"primary\">\r\n                        mdi-chevron-down\r\n                    </MIcon>\r\n                </ActionsContent>\r\n            </MExpansionPanelHeader>\r\n            <MExpansionPanelContent>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n            </MExpansionPanelContent>\r\n        </MExpansionPanel>\r\n\r\n        <MExpansionPanel>\r\n            <MExpansionPanelHeader DisableIconRotate>\r\n                <ChildContent>\r\n                    Item\r\n                </ChildContent>\r\n                <ActionsContent>\r\n                    <MIcon Color=\"teal\">\r\n                        mdi-check\r\n                    </MIcon>\r\n                </ActionsContent>\r\n            </MExpansionPanelHeader>\r\n            <MExpansionPanelContent>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n            </MExpansionPanelContent>\r\n        </MExpansionPanel>\r\n\r\n        <MExpansionPanel>\r\n            <MExpansionPanelHeader DisableIconRotate>\r\n                <ChildContent>\r\n                    Item\r\n                </ChildContent>\r\n                <ActionsContent>\r\n                    <MIcon Color=\"error\">\r\n                        mdi-alert-circle\r\n                    </MIcon>\r\n                </ActionsContent>\r\n            </MExpansionPanelHeader>\r\n            <MExpansionPanelContent>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n            </MExpansionPanelContent>\r\n        </MExpansionPanel>\r\n    </MExpansionPanels>\r\n</div>",
        "Type": "Demos.Components.ExpansionPanels.misc.CustomIcon",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/cards",
      "/components/data-tables",
      "/components/lists"
    ],
    "Subtitle": "扩展面板",
    "Title": "Expansion panels",
    "Type": "扩展面板"
  },
  {
    "Desc": "<p><code>MButton</code> 组件可以用作浮动动作按钮。 这提供了一个具有主要行为点的应用程序。 结合 <code>MSpeedDial</code> 组件, 您可以创建一组可供用户使用的功能</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MButton\">MButton</a></li>\n<li><a href=\"/api/MSpeedDial\">MSpeedDial</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.5383346+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>浮动动作按钮可以附加到material上来表示应用程序中的提升操作。 在大多数情况下，将使用默认大小，而 <code>Small</code> 变量可用于与大小相似的元素保持连续性。</p>\n",
        "Code": "<MRow Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n    <MButton Elevation=\"2\" Fab>\r\n        <MIcon>\r\n            mdi-beta\r\n        </MIcon>\r\n    </MButton>\r\n</MRow>",
        "Type": "Demos.Components.FloatingActionButton.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 11,
        "Name": "animation",
        "Title": "显示时的动画",
        "Description": "<p>当第一次显示时，浮动动作按钮应该在屏幕上显示动画。 这里我们使用 <code>FabTransition</code> 。 您也可以使用由Masa Blazor或自己提供的自定义过度。</p>\n",
        "Code": "<MContainer fluid>\r\n    <MRow>\r\n        <MCol Cols=\"12\"\r\n              Sm=\"12\"\r\n              Md=\"6\"\r\n              OffsetMd=\"3\">\r\n            <MCard>\r\n                <MToolbar Extended>\r\n                    <ChildContent>\r\n                        <MAppBarNavIcon></MAppBarNavIcon>\r\n                    </ChildContent>\r\n                    <ExtensionContent>\r\n                        <FabTransition>\r\n                            <MButton Color=\"pink\"\r\n                                     Show=\"!hidden\"\r\n                                     Fab\r\n                                     Dark\r\n                                     Small\r\n                                     Absolute\r\n                                     Bottom\r\n                                     Left>\r\n                                <MIcon>mdi-plus</MIcon>\r\n                            </MButton>\r\n                        </FabTransition>\r\n                    </ExtensionContent>\r\n                </MToolbar>\r\n                <MCardText Style=\"height: 300px;\" Class=\"grey lighten-5 text-center\">\r\n                    <MButton Color=\"primary\"\r\n                             OnClick=\"()=> hidden = !hidden\">\r\n                        @(hidden? \"Show\": \"Hide\")\r\n                    </MButton>\r\n                </MCardText>\r\n\r\n                <MCardText Style=\"height: 100px; position: relative\">\r\n                    <FabTransition>\r\n                        <MButton Color=\"pink\"\r\n                                 Show=\"!hidden\"\r\n                                 Dark\r\n                                 Absolute\r\n                                 Top\r\n                                 Right\r\n                                 Fab>\r\n                            <MIcon>\r\n                                mdi-plus\r\n                            </MIcon>\r\n                        </MButton>\r\n                    </FabTransition>\r\n                </MCardText>\r\n            </MCard>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code {\r\n    bool hidden = false;\r\n}",
        "Type": "Demos.Components.FloatingActionButton.misc.Animation",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 11,
        "Name": "lateralScreens",
        "Title": "横向屏幕切换",
        "Description": "<p>当更改按钮的默认操作时，建议您显示一个过度来表示更改。 我们通过将<code>Key</code>属性绑定到一段数据上，该数据可以正确地向Masa Blazor过度系统发出操作变化的信号。 虽然您可以为此使用自定义转换，但请确保将<code>Mode</code>设置为 <code>OutIn</code>。</p>\n",
        "Code": "<MCard Id=\"lateral\">\r\n    <MToolbar Dark\r\n              Flat\r\n              Color=\"indigo\">\r\n        <ChildContent>\r\n            <MAppBarNavIcon></MAppBarNavIcon>\r\n            <MToolbarTitle>Page title</MToolbarTitle>\r\n            <MSpacer></MSpacer>\r\n            <MButton Icon>\r\n                <MIcon>mdi-magnify</MIcon>\r\n            </MButton>\r\n            <MButton Icon>\r\n                <MIcon>mdi-dots-vertical</MIcon>\r\n            </MButton>\r\n        </ChildContent>\r\n        <ExtensionContent>\r\n            <MTabs @bind-Value=\"tab\" AlignWithTitle SliderColor=\"pink\" @key=\"tab\">\r\n                <MTab Value=\"@(\"one\")\">\r\n                    Item One\r\n                </MTab>\r\n                <MTab Value=\"@(\"two\")\">\r\n                    Item Two\r\n                </MTab>\r\n                <MTab Value=\"@(\"three\")\">\r\n                    Item Three\r\n                </MTab>\r\n            </MTabs>\r\n        </ExtensionContent>\r\n    </MToolbar>\r\n    <MCardText>\r\n        <MTabsItems @bind-Value=\"tab\">\r\n            @foreach (var item in Items)\r\n            {\r\n                <MTabItem Value=\"item\" @key=\"item\">\r\n                    <MCard Height=\"@(\"200px\")\" Flat>\r\n                    </MCard>\r\n                </MTabItem>\r\n            }\r\n        </MTabsItems>\r\n    </MCardText>\r\n    <FabTransition Mode=\"@TransitionMode.OutIn\">\r\n        <MButton Color=\"@GetActiveFabColor()\" Fab Large Dark Bottom Left Class=\"m-btn--example\" Key=\"@GetActiveFabIcon()\">\r\n            <MIcon> @GetActiveFabIcon() </MIcon>\r\n        </MButton>\r\n    </FabTransition>\r\n</MCard>\r\n\r\n<style type=\"text/css\">\r\n    #lateral .m-btn--example {\r\n        bottom: 0;\r\n        position: absolute;\r\n        margin: 0 0 16px 16px;\r\n    }\r\n</style>\r\n\r\n@code {\r\n    private StringNumber tab = \"one\";\r\n\r\n    List<string> Items = new List<string>() { \"one\", \"two\", \"three\" };\r\n\r\n    private dynamic ComputedActiveFab()\r\n    {\r\n        switch (tab.AsT0)\r\n        {\r\n            case \"one\":\r\n                return new { Color = \"success\", Icon = \"mdi-share-variant\" };\r\n            case \"two\":\r\n                return new { Color = \"red\", Icon = \"mdi-pencil\" };\r\n            case \"three\":\r\n                return new { Color = \"green\", Icon = \"mdi-chevron-up\" };\r\n            default:\r\n                return new { Color = \"\", Icon = \"\" };\r\n        }\r\n    }\r\n\r\n    public string GetActiveFabColor()\r\n    {\r\n        var activeFab = ComputedActiveFab();\r\n        return activeFab.Color;\r\n    }\r\n\r\n    public string GetActiveFabIcon()\r\n    {\r\n        var activeFab = ComputedActiveFab();\r\n        return activeFab.Icon;\r\n    }\r\n}\r\n",
        "Type": "Demos.Components.FloatingActionButton.misc.LateralScreens",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 11,
        "Name": "smallVariant",
        "Title": "小型按钮",
        "Description": "<p>为了达到更好的视觉效果，我们可以使用小型按钮以适配列表的头像。</p>\n",
        "Code": "<MRow>\r\n    <MCol Cols=\"12\"\r\n          Sm=\"6\"\r\n          OffsetSm=\"3\">\r\n        <MCard>\r\n            <MToolbar Color=\"light-blue\"\r\n                      Light\r\n                      Extended>\r\n                <ChildContent>\r\n                    <MAppBarNavIcon></MAppBarNavIcon>\r\n                    <MToolbarTitle class=\"white--text\">\r\n                        My files\r\n                    </MToolbarTitle>\r\n                    <MSpacer></MSpacer>\r\n                    <MButton Icon>\r\n                        <MIcon>mdi-magnify</MIcon>\r\n                    </MButton>\r\n                    <MButton Icon>\r\n                        <MIcon>mdi-view-module</MIcon>\r\n                    </MButton>\r\n                </ChildContent>\r\n\r\n                <ExtensionContent>\r\n                    <MButton Fab\r\n                             Color=\"cyan accent-2\"\r\n                             Bottom\r\n                             Left\r\n                             Absolute\r\n                             OnClick=\"()=> dialog = !dialog\">\r\n                        <MIcon>mdi-plus</MIcon>\r\n                    </MButton>\r\n                </ExtensionContent>\r\n            </MToolbar>\r\n            <MList TwoLine\r\n                   Subheader>\r\n                <MSubheader Inset>\r\n                    Folders\r\n                </MSubheader>\r\n                @foreach (var item in items)\r\n                {\r\n                    <MListItem @key=\"item.Title\" Link>\r\n                        <MListItemAvatar>\r\n                            <MIcon Class=\"@item.IconClass\">\r\n                                @item.Icon\r\n                            </MIcon>\r\n                        </MListItemAvatar>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>\r\n                                @item.Title\r\n                            </MListItemTitle>\r\n                            <MListItemSubtitle>\r\n                                @item.SubTitle\r\n                            </MListItemSubtitle>\r\n                        </MListItemContent>\r\n                        <MListItemAction>\r\n                            <MButton Icon>\r\n                                <MIcon color=\"grey lighten-1\">\r\n                                    mdi-information\r\n                                </MIcon>\r\n                            </MButton>\r\n                        </MListItemAction>\r\n                    </MListItem>\r\n                }\r\n\r\n                <MDivider Inset></MDivider>\r\n\r\n                <MSubheader Inset>\r\n                    Files\r\n                </MSubheader>\r\n\r\n                @foreach (var item in items2)\r\n                {\r\n                    <MListItem @key=\"item.Title\" Link>\r\n                        <MListItemAvatar>\r\n                            <MIcon Class=\"@item.IconClass\">\r\n                                @item.Icon\r\n                            </MIcon>\r\n                        </MListItemAvatar>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>\r\n                                @item.Title\r\n                            </MListItemTitle>\r\n                            <MListItemSubtitle>\r\n                                @item.SubTitle\r\n                            </MListItemSubtitle>\r\n                        </MListItemContent>\r\n                        <MListItemAction>\r\n                            <MButton Icon Ripple>\r\n                                <MIcon color=\"grey lighten-1\">\r\n                                    mdi-information\r\n                                </MIcon>\r\n                            </MButton>\r\n                        </MListItemAction>\r\n                    </MListItem>\r\n                }\r\n            </MList>\r\n\r\n            <MDialog Value=\"dialog\"\r\n                     MaxWidth=\"500\">\r\n                <MCard>\r\n                    <MCardText>\r\n                        <MTextField TValue=\"string\" Label=\"File name\"></MTextField>\r\n\r\n                        <small class=\"grey--text\">* This doesn't actually save.</small>\r\n                    </MCardText>\r\n\r\n                    <MCardActions>\r\n                        <MSpacer></MSpacer>\r\n\r\n                        <MButton Text\r\n                                 Color=\"primary\"\r\n                                 OnClick=\"()=> dialog = false\">\r\n                            Submit\r\n                        </MButton>\r\n                    </MCardActions>\r\n                </MCard>\r\n            </MDialog>\r\n        </MCard>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n    private bool dialog;\r\n\r\n    private List<dynamic> items = new List<dynamic>()\r\n    {\r\n        new\r\n        {\r\n            Icon =\"mdi-folder\",\r\n            IconClass =\"grey lighten-1 white--text\",\r\n            Title =\"Photos\",\r\n            SubTitle= \"Jan 9, 2014\"\r\n        },\r\n        new\r\n        {\r\n            Icon =\"mdi-folder\",\r\n            IconClass =\"grey lighten-1 white--text\",\r\n            Title =\"Recipes\",\r\n            SubTitle= \"Jan 17, 2014\"\r\n        },\r\n        new\r\n        {\r\n            Icon =\"mdi-folder\",\r\n            IconClass =\"grey lighten-1 white--text\",\r\n            Title =\"Work\",\r\n            SubTitle= \"Jan 28, 2014\"\r\n        }\r\n    };\r\n\r\n    private List<dynamic> items2 = new List<dynamic>()\r\n    {\r\n        new\r\n        {\r\n            Icon =\"mdi-clipboard-text\",\r\n            IconClass =\"blue white--text\",\r\n            Title =\"Vacation itinerary\",\r\n            SubTitle= \"Jan 20, 2014\"\r\n        },\r\n        new\r\n        {\r\n            Icon =\"mdi-gesture-tap-button\",\r\n            IconClass =\"amber white--text\",\r\n            Title =\"Kitchen remodel\",\r\n            SubTitle= \"Jan 10, 2014\"\r\n        }\r\n    };\r\n  }",
        "Type": "Demos.Components.FloatingActionButton.misc.SmallVariant",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 11,
        "Name": "speedDial",
        "Title": "快速拨号",
        "Description": "<p><code>MSpeedDial</code> 组件为浮动动作按钮提供了强大的 api，你可以尽情定制你想要的效果。</p>\n",
        "Code": "<MCard Id=\"create\">\r\n    <MContainer fluid>\r\n        <MRow Class=\"child-flex\">\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\"\r\n                  Md=\"4\">\r\n                <MSubheader>Options</MSubheader>\r\n                <MCheckbox @bind-Value=\"hover\"\r\n                           Label=\"Open on hover\"\r\n                           HideDetails=\"true\"></MCheckbox>\r\n            </MCol>\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\"\r\n                  Md=\"4\">\r\n                <MSubheader>FAB location</MSubheader>\r\n                <MCheckbox @bind-Value=\"Top\"\r\n                           Label=\"Top\"\r\n                           HideDetails=\"true\"></MCheckbox>\r\n                <MCheckbox @bind-Value=\"Right\"\r\n                           Label=\"Right\"\r\n                           HideDetails=\"true\"></MCheckbox>\r\n                <MCheckbox @bind-Value=\"Bottom\"\r\n                           Label=\"Bottom\"\r\n                           HideDetails=\"true\"></MCheckbox>\r\n                <MCheckbox @bind-Value=\"Left\"\r\n                           Label=\"Left\"\r\n                           HideDetails=\"true\"></MCheckbox>\r\n            </MCol>\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\"\r\n                  Md=\"4\">\r\n                <MSubheader>Speed dial direction</MSubheader>\r\n                <MRadioGroup @bind-Value=\"direction\"\r\n                             HideDetails=\"true\">\r\n                    <MRadio Value=\"@(\"top\")\"\r\n                            Label=\"Top\"></MRadio>\r\n                    <MRadio Value=\"@(\"right\")\"\r\n                            Label=\"Right\"></MRadio>\r\n                    <MRadio Value=\"@(\"bottom\")\"\r\n                            Label=\"Bottom\"></MRadio>\r\n                    <MRadio Value=\"@(\"left\")\"\r\n                            Label=\"Left\"></MRadio>\r\n                </MRadioGroup>\r\n            </MCol>\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\"\r\n                  Md=\"4\">\r\n                <MSubheader>Transition</MSubheader>\r\n                <MRadioGroup @bind-Value=\"@transition\"\r\n                             HideDetails=\"true\">\r\n                    <MRadio Value=\"@(\"slide-y-transition\")\"\r\n                            Label=\"Slide y\"></MRadio>\r\n                    <MRadio Value=\"@(\"slide-y-reverse-transition\")\"\r\n                            Label=\"Slide y reverse\"></MRadio>\r\n                    <MRadio Value=\"@(\"slide-x-transition\")\"\r\n                            Label=\"Slide x\"></MRadio>\r\n                    <MRadio Value=\"@(\"slide-x-reverse-transition\")\"\r\n                            Label=\"Slide x reverse\"></MRadio>\r\n                    <MRadio Value=\"@(\"scale-transition\")\"\r\n                            Label=\"Scale\"></MRadio>\r\n                </MRadioGroup>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n    <MSpeedDial @bind-Value=\"fab\"\r\n                Top=\"top\"\r\n                Bottom=\"bottom\"\r\n                Right=\"right\"\r\n                Left=\"left\"\r\n                Direction=\"@direction\"\r\n                OpenOnHover=\"hover\"\r\n                Style=\"position: absolute;\"\r\n                Transition=\"@transition\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"blue darken-2\" Dark Fab @attributes=\"@context.Attrs\">\r\n                <MIcon>\r\n                    @ComputeIcon()\r\n                </MIcon>\r\n            </MButton>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <MButton Color=\"green\" Dark Fab Small>\r\n                <MIcon>\r\n                    mdi-pencil\r\n                </MIcon>\r\n            </MButton>\r\n            <MButton Color=\"indigo\" Dark Fab Small>\r\n                <MIcon>\r\n                    mdi-plus\r\n                </MIcon>\r\n            </MButton>\r\n            <MButton Color=\"red\" Dark Fab Small>\r\n                <MIcon>\r\n                    mdi-delete\r\n                </MIcon>\r\n            </MButton>\r\n        </ChildContent>\r\n    </MSpeedDial>\r\n</MCard>\r\n\r\n@code {\r\n    private bool hover;\r\n\r\n    private bool top;\r\n\r\n    public bool Top\r\n    {\r\n        get\r\n        {\r\n            return top;\r\n        }\r\n        set\r\n        {\r\n            top = value;\r\n            bottom = !top;\r\n            StateHasChanged();\r\n        }\r\n    }\r\n\r\n    private bool right = true;\r\n\r\n    public bool Right\r\n    {\r\n        get\r\n        {\r\n            return right;\r\n        }\r\n        set\r\n        {\r\n            right = value;\r\n            left = !right;\r\n            StateHasChanged();\r\n        }\r\n    }\r\n\r\n    private bool bottom = true;\r\n\r\n    public bool Bottom\r\n    {\r\n        get\r\n        {\r\n            return bottom;\r\n        }\r\n\r\n        set\r\n        {\r\n            bottom = value;\r\n            top = !bottom;\r\n            StateHasChanged();\r\n        }\r\n    }\r\n\r\n    private bool left;\r\n\r\n    public bool Left\r\n    {\r\n        get\r\n        {\r\n            return left;\r\n        }\r\n        set\r\n        {\r\n            left = value;\r\n            right = !left;\r\n            StateHasChanged();\r\n        }\r\n    }\r\n\r\n    private string direction = \"top\";\r\n\r\n    private string transition = \"slide-y-reverse-transition\";\r\n\r\n    private bool fab;\r\n\r\n    public string ComputeIcon()\r\n    {\r\n        return fab ? \"mdi-close\" : \" mdi-account-circle\";\r\n    }\r\n}\r\n",
        "Type": "Demos.Components.FloatingActionButton.misc.SpeedDial",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/button",
      "/components/icons",
      "/stylesandanimations/transitions"
    ],
    "Subtitle": "浮动动作按钮",
    "Title": "Floating Action Buttons",
    "Type": "浮动动作按钮"
  },
  {
    "Desc": "<p>MFooter组件用于显示用户可能想要从网站中的任何页面都能访问到的公共信息。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MFooter\">MFooter</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.5413346+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>最简单形式的 MFooter 组件是一个容器。</p>\n",
        "Code": "<MCard Height=\"400\">\r\n    <MFooter Padless=\"_padless\" @attributes=\"LocalAttrs\">\r\n        <MCard Flat Tile Width=\"@(\"100%\")\" Class=\"red lighten-1 text-center\">\r\n            <MCardText>\r\n                @foreach (var icon in _icons)\r\n                {\r\n                    <MButton Class=\"mx-4\" Icon>\r\n                        <MIcon Size=\"24\">\r\n                            @icon\r\n                        </MIcon>\r\n                    </MButton>\r\n                }\r\n            </MCardText>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MCardText Class=\"white--text\">\r\n                @DateTime.Now.Year - <strong>MASA Blazor</strong>\r\n            </MCardText>\r\n        </MCard>\r\n    </MFooter>\r\n\r\n    <MRow Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\" Class=\"ma-12\">\r\n        <MCol Cols=\"12\" Md=\"8\">\r\n            <MSelect @bind-Value=\"_variant\" Items=\"_items\" Label=\"Variant\" ItemText=\"x => x\" ItemValue=\"x => x\"></MSelect>\r\n\r\n            <MCheckbox @bind-Value=\"_padless\" HideDetails=\"true\" Label=\"Padless\"></MCheckbox>\r\n        </MCol>\r\n    </MRow>\r\n</MCard>\r\n\r\n@code\r\n{\r\n    private string[] _icons = new string[4] { \"mdi-home\", \"mdi-email\", \"mdi-calendar\", \"mdi-delete\" };\r\n    private List<string> _items = new List<string> { \"Default\", \"Absolute\", \"Fixed\" };\r\n    private bool _padless = false;\r\n    private string _variant = \"Default\";\r\n\r\n    private Dictionary<string, object> LocalAttrs\r\n    {\r\n        get\r\n        {\r\n            var dic = new Dictionary<string, object>();\r\n            if (_variant == \"Default\")\r\n            {\r\n                dic.Add(\"Absolute\", false);\r\n                dic.Add(\"Fixed\", false);\r\n            }\r\n            else if (_variant == \"Absolute\")\r\n            {\r\n                dic.Add(\"Default\", false);\r\n                dic.Add(\"Fixed\", false);\r\n            }\r\n            else\r\n            {\r\n                dic.Add(\"Default\", false);\r\n                dic.Add(\"Absolute\", false);\r\n            }\r\n            \r\n            dic.Add(_variant, true);\r\n\r\n            return dic;\r\n        }\r\n    }\r\n}",
        "Type": "Demos.Components.Footer.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "padless",
        "Title": "无内边距的页脚",
        "Description": "<p>Padless属性移除页脚组件所有默认的内边距。</p>\n",
        "Code": "<MFooter Padless>\r\n    <MCol Class=\"text-center\" Cols=\"12\">\r\n        @DateTime.Now.Year - <strong>MASA Blazor</strong>\r\n    </MCol>\r\n</MFooter>",
        "Type": "Demos.Components.Footer.props.Padless",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "company",
        "Title": "公司页脚",
        "Description": "<p>页脚组件可以作为带有链接的基本公司页脚。</p>\n",
        "Code": "<MFooter Color=\"primary lighten-1\" Padless>\r\n    <MRow Justify=\"JustifyTypes.Center\" NoGutters>\r\n        @foreach (var link in _links)\r\n        {\r\n            <MButton Color=\"white\" Text Rounded Class=\"my-2\">\r\n                @link\r\n            </MButton>\r\n        }\r\n        <MCol Class=\"primary lighten-2 py-4 text-center white--text\" Cols=\"12\">\r\n            @DateTime.Now.Year - <strong>MASA Blazor</strong>\r\n        </MCol>\r\n    </MRow>\r\n</MFooter>\r\n\r\n@code\r\n{\r\n    private string[] _links = new string[6] { \"Home\", \"About Us\", \"Team\", \"Services\", \"Blog\", \"Contact Us\" };\r\n}",
        "Type": "Demos.Components.Footer.misc.Company",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 2,
        "Name": "indigo",
        "Title": "靛蓝色页脚",
        "Description": "<p>靛蓝背景色、带有社交媒体图标和按钮的页脚组件。</p>\n",
        "Code": "<MFooter Dark Padless>\r\n    <MCard Flat Tile Class=\"indigo lighten-1 white--text text-center\">\r\n        <MCardText>\r\n            @foreach (var icon in _icons)\r\n            {\r\n                <MButton Class=\"mx-4 white--text\" Icon>\r\n                    <MIcon Size=\"24\">@icon</MIcon>\r\n                </MButton>\r\n            }\r\n        </MCardText>\r\n\r\n        <MCardText Class=\"white--text pt-0\">\r\n            @_description\r\n        </MCardText>\r\n        \r\n         <MDivider></MDivider>\r\n\r\n        <MCardText Class=\"white--text\">\r\n            @DateTime.Now.Year - <strong>MASA Blazor</strong>\r\n        </MCardText>\r\n    </MCard>\r\n</MFooter>\r\n\r\n@code\r\n{\r\n    private string[] _icons = new string[4] { \"mdi-facebook\", \"mdi-twitter\", \"mdi-linkedin\", \"mdi-instagram\" };\r\n    private const string _description = \"Phasellus feugiat arcu sapien, et iaculis ipsum elementum sit amet. \" +\r\n        \"Mauris cursus commodo interdum. Praesent ut risus eget metus luctus accumsan id ultrices nunc. \" + \r\n        \"Sed at orci sed massa consectetur dignissim a sit amet dui. Duis commodo vitae velit et faucibus. \" +\r\n        \"Morbi vehicula lacinia malesuada. Nulla placerat augue vel ipsum ultrices, cursus iaculis dui sollicitudin. \" +\r\n        \"Vestibulum eu ipsum vel diam elementum tempor vel ut orci. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\";\r\n}",
        "Type": "Demos.Components.Footer.misc.Indigo",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 2,
        "Name": "teal",
        "Title": "蓝绿色页脚",
        "Description": "<p>蓝绿背景色的头部、带有多列链接的页脚组件。</p>\n",
        "Code": "<MFooter Padless Dark>\r\n    <MCard Flat Tile Dark Class=\"flex\">\r\n        <MCardTitle Class=\"teal\">\r\n            <strong class=\"subheading\">Get connected with us on social networks!</strong>\r\n\r\n            <MSpacer></MSpacer>\r\n\r\n            @foreach (var icon in _icons)\r\n            {\r\n                <MButton Class=\"mx-4\" Dark Icon>\r\n                    <MIcon Size=\"24\">@icon</MIcon>\r\n                </MButton>\r\n            }\r\n        </MCardTitle>\r\n\r\n        <MCardText Class=\"py-2 white--text text-center\">\r\n            @DateTime.Now.Year - <strong>MASA Blazor</strong>\r\n        </MCardText>\r\n    </MCard>\r\n</MFooter>\r\n\r\n@code\r\n{\r\n    private string[] _icons = new string[4] { \"mdi-facebook\", \"mdi-twitter\", \"mdi-linkedin\", \"mdi-instagram\" };\r\n}",
        "Type": "Demos.Components.Footer.misc.Teal",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/grid-system",
      "/components/buttons",
      "/components/toolbars"
    ],
    "Subtitle": "页脚",
    "Title": "Footers",
    "Type": "页脚"
  },
  {
    "Desc": "<p><code>MAutocomplete</code> 组件提供简单且灵活的自动补全功能 且支持查找大规模数据甚至是从API请求的动态数据</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MAutocomplete\">MAutocomplete</a></li>\n</ul>\n",
      "注意": "\n<!--alert:error--> \n<p>当使用一个Object(对象) 作为<strong>Items</strong>的属性时，你必须使用<strong>ItemText</strong>和<strong>ItemValue</strong>与传入的对象关联起来。 这些值默认为 <strong>Text</strong> 和 <strong>Value</strong> 且可以更改。</p>\n<!--/alert:error--> \n<!--alert:warning--> \n<p><strong>MenuProps</strong> 的 <strong>Auto</strong> 属性只支持默认输入样式。</p>\n<!--/alert:warning--> \n<!--alert:info--> \n<p>浏览器自动补全默认设置为关闭，可能因不同的浏览器而变化或忽略。 <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\">MDN</a></strong></p>\n<!--/alert:info--> \n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.5453341+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>自动补全组件拓展了 <code>MSelect</code> 并且添加了过滤项目的功能</p>\n",
        "Code": "<MAutocomplete Items=\"_items\" @bind-Value=\"_value\"\r\n               ItemText=\"r=>r\"\r\n               ItemValue=\"r=>r\"></MAutocomplete>\r\n\r\n@code {\r\n    private List<string> _items = new List<string>()\r\n    {\r\n        \"Alabama\", \"Alaska\", \"American Samoa\", \"Arizona\",\r\n        \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\",\r\n        \"Delaware\", \"District of Columbia\", \"Federated States of Micronesia\",\r\n        \"Florida\", \"Georgia\", \"Guam\", \"Hawaii\", \"Idaho\",\r\n        \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\",\r\n        \"Louisiana\", \"Maine\", \"Marshall Islands\", \"Maryland\",\r\n        \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\",\r\n        \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\",\r\n        \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\",\r\n        \"North Carolina\", \"North Dakota\", \"Northern Mariana Islands\", \"Ohio\",\r\n        \"Oklahoma\", \"Oregon\", \"Palau\", \"Pennsylvania\", \"Puerto Rico\",\r\n        \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\",\r\n        \"Texas\", \"Utah\", \"Vermont\", \"Virgin Island\", \"Virginia\",\r\n        \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"\r\n    };\r\n    private string _value;\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Autocomplete.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "dense",
        "Title": "紧凑",
        "Description": "<p>你可以使用<strong>dense</strong>属性来降低自动补全的高度和缩小列表项的最大高度。</p>\n",
        "Code": "<MCard Flat>\r\n    <MContainer Fluid>\r\n        <MRow Align=\"@AlignTypes.Center\">\r\n            <MCol Cols=\"12\">\r\n                <MAutocomplete @bind-Value=\"_values\"\r\n                               Items=\"_items\"\r\n                               ItemText=\"r=>r\"\r\n                               ItemValue=\"r=>r\"\r\n                               Outlined\r\n                               Dense\r\n                               Chips\r\n                               SmallChips\r\n                               Label=\"Outlined\"\r\n                               Multiple></MAutocomplete>\r\n            </MCol>\r\n            <MCol Cols=\"12\">\r\n                <MAutocomplete @bind-Value=\"_values\"\r\n                               Items=\"_items\"\r\n                               ItemText=\"r=>r\"\r\n                               ItemValue=\"r=>r\"\r\n                               Dense\r\n                               Chips\r\n                               Label=\"Solo\"\r\n                               Multiple\r\n                               Solo></MAutocomplete>\r\n            </MCol>\r\n            <MCol Cols=\"12\">\r\n                <MAutocomplete @bind-Value=\"_value\"\r\n                               Items=\"_items\"\r\n                               ItemText=\"r=>r\"\r\n                               ItemValue=\"r=>r\"\r\n                               Dense\r\n                               Filled\r\n                               Label=\"Filled\"></MAutocomplete>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MCard>\r\n\r\n@code{\r\n    private List<string> _items = new List<string>\r\n    {\r\n        \"foo\", \"bar\", \"fizz\", \"buzz\"\r\n    };\r\n    private List<string> _values = new List<string>\r\n    {\r\n        \"foo\", \"bar\"\r\n    };\r\n    private string _value = \"foo\";\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Autocomplete.props.Dense",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "filter",
        "Title": "过滤器",
        "Description": "<p><strong>filter</strong>属性可以用自定义的逻辑来过滤单独的项目 在这个例子中我们使用name来过滤项目</p>\n",
        "Code": "<MCard Class=\"overflow-hidden\"\r\n       Color=\"purple lighten-1\"\r\n       Dark>\r\n    <MToolbar Flat\r\n              Color=\"purple\">\r\n        <MIcon>mdi-account</MIcon>\r\n        <MToolbarTitle class=\"font-weight-light\">\r\n            User Profile\r\n        </MToolbarTitle>\r\n        <MSpacer></MSpacer>\r\n        <MButton Color=\"purple darken-3\"\r\n                 Fab\r\n                 Small\r\n                 OnClick=\"()=>_isEditing = !_isEditing\">\r\n            @if (_isEditing)\r\n            {\r\n                <MIcon>\r\n                    mdi-close\r\n                </MIcon>\r\n            }\r\n            else\r\n            {\r\n                <MIcon>\r\n                    mdi-pencil\r\n                </MIcon>\r\n            }\r\n        </MButton>\r\n    </MToolbar>\r\n    <MCardText>\r\n        <MTextField TValue=\"string\"\r\n                    Disabled=\"!_isEditing\"\r\n                    Color=\"white\"\r\n                    Label=\"Name\"></MTextField>\r\n        <MAutocomplete TItem=\"Model\"\r\n                       TValue=\"int\"\r\n                       TItemValue=\"int\"\r\n                       Disabled=\"!_isEditing\"\r\n                       Items=\"_states\"\r\n                       Filter=\"CustomFilter\"\r\n                       Color=\"white\"\r\n                       ItemText=\"r=>r.Name\"\r\n                       ItemValue=\"r=>r.Id\"\r\n                       Label=\"State\"></MAutocomplete>\r\n    </MCardText>\r\n    <MDivider></MDivider>\r\n    <MCardActions>\r\n        <MSpacer></MSpacer>\r\n        <MButton Disabled=\"!_isEditing\"\r\n                 Color=\"success\"\r\n                 OnClick=\"Save\">\r\n            Save\r\n        </MButton>\r\n    </MCardActions>\r\n    <MSnackbar @bind-Value=\"_hasSaved\"\r\n               Timeout=\"2000\"\r\n               Absolute\r\n               Bottom\r\n               Left>\r\n        Your profile has been updated\r\n    </MSnackbar>\r\n</MCard>\r\n\r\n@code {\r\n    public class Model\r\n    {\r\n        public int Id { get; set; }\r\n        public string Name { get; set; }\r\n        public string Abbr { get; set; }\r\n    }\r\n\r\n    private bool _hasSaved;\r\n    private bool _isEditing;\r\n    private List<Model> _states = new List<Model>\r\n        {\r\n            new Model\r\n            {\r\n                Name=\"Florida\",\r\n                Abbr=\"FL\",\r\n                Id=1\r\n            },\r\n            new Model\r\n            {\r\n                Name=\"Georgia\",\r\n                Abbr=\"GA\",\r\n                Id=2\r\n            },\r\n            new Model\r\n            {\r\n                Name=\"Nebraska\",\r\n                Abbr=\"NE\",\r\n                Id=3\r\n            },\r\n            new Model\r\n            {\r\n                Name=\"California\",\r\n                Abbr=\"CA\",\r\n                Id=4\r\n            },\r\n            new Model\r\n            {\r\n                Name=\"New York\",\r\n                Abbr=\"NY\",\r\n                Id=5\r\n            }\r\n        };\r\n\r\n    public bool CustomFilter(Model item, string queryText, string text)\r\n    {\r\n        var textOne = item.Name.ToLowerInvariant();\r\n        var textTwo = item.Abbr.ToLowerInvariant();\r\n        var searchText = queryText.ToLowerInvariant();\r\n\r\n        return textOne.IndexOf(searchText) > -1 ||\r\n          textTwo.IndexOf(searchText) > -1;\r\n    }\r\n\r\n    public void Save()\r\n    {\r\n        _isEditing = !_isEditing;\r\n        _hasSaved = true;\r\n    }\r\n}",
        "Type": "Demos.Components.FormInputs.children.Autocomplete.props.Filter",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "itemAndSelection",
        "Title": "项目和选择项",
        "Description": "<p>你可以使用插槽自定义被选中时的视觉效果。 在这个示例中，我们为 <code>chips</code> 和 <code>list-item</code> 添加了头像。</p>\n",
        "Code": "<MCard Color=\"blue-grey darken-1\"\r\n       Dark\r\n       Loading=\"IsUpdating\">\r\n    <ProgressContent>\r\n        <MProgressLinear Absolute\r\n                         Color=\"green lighten-3\"\r\n                         Height=\"4\"\r\n                         Indeterminate>\r\n        </MProgressLinear>\r\n    </ProgressContent>\r\n    <ChildContent>\r\n        <MImage Height=\"200\"\r\n                Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/cards/dark-beach.jpg\">\r\n            <MRow>\r\n                <MCol Class=\"text-right\"\r\n                      Cols=\"12\">\r\n                    <MMenu Bottom\r\n                           Left\r\n                           Transition=\"slide-y-transition\">\r\n                        <ActivatorContent>\r\n                            <MButton Icon\r\n                                     @attributes=\"context.Attrs\">\r\n                                <MIcon>mdi-dots-vertical</MIcon>\r\n                            </MButton>\r\n                        </ActivatorContent>\r\n                        <ChildContent>\r\n                            <MList>\r\n                                <MListItem OnClick=\"() => IsUpdating = true\">\r\n                                    <MListItemAction>\r\n                                        <MIcon>mdi-cog</MIcon>\r\n                                    </MListItemAction>\r\n                                    <MListItemContent>\r\n                                        <MListItemTitle>Update</MListItemTitle>\r\n                                    </MListItemContent>\r\n                                </MListItem>\r\n                            </MList>\r\n                        </ChildContent>\r\n                    </MMenu>\r\n                </MCol>\r\n                <MRow Class=\"pa-4\"\r\n                      Align=\"AlignTypes.Center\"\r\n                      Justify=\"JustifyTypes.Center\">\r\n                    <MCol Class=\"text-center\">\r\n                        <h3 class=\"text-h5\">\r\n                            @_name\r\n                        </h3>\r\n                        <span class=\"grey--text text--lighten-1\">@_title</span>\r\n                    </MCol>\r\n                </MRow>\r\n            </MRow>\r\n        </MImage>\r\n        <MForm>\r\n            <MContainer>\r\n                <MRow>\r\n                    <MCol Cols=\"12\"\r\n                          Md=\"6\">\r\n                        <MTextField @bind-Value=\"_name\"\r\n                                    Disabled=\"IsUpdating\"\r\n                                    Filled\r\n                                    Color=\"blue-grey lighten-2\"\r\n                                    Label=\"Name\">\r\n                        </MTextField>\r\n                    </MCol>\r\n                    <MCol Cols=\"12\"\r\n                          Md=\"6\">\r\n                        <MTextField @bind-Value=\"_title\"\r\n                                    Disabled=\"IsUpdating\"\r\n                                    Filled\r\n                                    Color=\"blue-grey lighten-2\"\r\n                                    Label=\"Title\">\r\n                        </MTextField>\r\n                    </MCol>\r\n                    <MCol Cols=\"12\">\r\n                        <MAutocomplete @bind-Value=\"_friends\"\r\n                                       Disabled=\"IsUpdating\"\r\n                                       Items=\"_people\"\r\n                                       Filled\r\n                                       Chips\r\n                                       Color=\"blue-grey lighten-2\"\r\n                                       Label=\"Select\"\r\n                                       ItemText=\"r => r.Name\"\r\n                                       ItemValue=\"r => r.Name\"\r\n                                       Multiple>\r\n                            <SelectionContent Context=\"data\">\r\n                                <MChip Close\r\n                                       IsActive=\"@data.Selected\"\r\n                                       OnCloseClick=\"() => Remove(data.Item)\">\r\n                                    <MAvatar Left>\r\n                                        <MImage Src=\"@data.Item.Avatar\"></MImage>\r\n                                    </MAvatar>\r\n                                    @data.Item.Name\r\n                                </MChip>\r\n                            </SelectionContent>\r\n                            <ItemContent Context=\"data\">\r\n                                @if (data.Item is not object)\r\n                                {\r\n                                    <MListItemContent>@data.Item</MListItemContent>\r\n                                }\r\n                                else\r\n                                {\r\n                                    <MListItemAvatar>\r\n                                        <img src=\"@data.Item.Avatar\">\r\n                                    </MListItemAvatar>\r\n                                    <MListItemContent>\r\n                                        <MListItemTitle>\r\n                                            @((MarkupString)data.Item.Name)\r\n                                        </MListItemTitle>\r\n                                        <MListItemSubtitle>\r\n                                            @((MarkupString)data.Item.Group)\r\n                                        </MListItemSubtitle>\r\n                                    </MListItemContent>\r\n                                }\r\n                            </ItemContent>\r\n                        </MAutocomplete>\r\n                    </MCol>\r\n                </MRow>\r\n            </MContainer>\r\n        </MForm>\r\n        <MDivider></MDivider>\r\n        <MCardActions>\r\n            <MSwitch @bind-Value=\"_autoUpdate\"\r\n                     Disabled=\"IsUpdating\"\r\n                     Class=\"mt-0\"\r\n                     Color=\"green lighten-2\"\r\n                     HideDetails=\"true\"\r\n                     Label=\"Auto Update\">\r\n            </MSwitch>\r\n            <MSpacer></MSpacer>\r\n            <MButton Disabled=\"_autoUpdate\"\r\n                     Loading=\"IsUpdating\"\r\n                     Color=\"blue-grey darken-3\"\r\n                     Depressed\r\n                     OnClick=\"() => IsUpdating = true\">\r\n                <MIcon Left>\r\n                    mdi-update\r\n                </MIcon>\r\n                Update Now\r\n            </MButton>\r\n        </MCardActions>\r\n    </ChildContent>\r\n</MCard>\r\n\r\n@code {\r\n    private bool _autoUpdate = true;\r\n\r\n    private List<string> _friends = new()\r\n    {\r\n        \"Sandra Adams\",\r\n        \"Britta Holt\"\r\n    };\r\n\r\n    private bool _isUpdating;\r\n    private string _name = \"Midnight Crew\";\r\n\r\n    public class Person\r\n    {\r\n        public string Header { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public string Group { get; set; }\r\n\r\n        public string Avatar { get; set; }\r\n\r\n        public bool Divider { get; set; }\r\n    }\r\n\r\n    private List<Person> _people = new List<Person>\r\n    {\r\n        new Person\r\n        {\r\n            Header = \"Group 1\",\r\n            Name = \"Group 1\"\r\n        },\r\n        new Person\r\n        {\r\n            Name = \"Sandra Adams\",\r\n            Group = \"Group 1\",\r\n            Avatar = \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/1.png\"\r\n        },\r\n        new Person\r\n        {\r\n            Name = \"Ali Connors\",\r\n            Group = \"Group 1\",\r\n            Avatar = \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/2.png\"\r\n        },\r\n        new Person\r\n        {\r\n            Name = \"Trevor Hansen\",\r\n            Group = \"Group 1\",\r\n            Avatar = \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/3.png\"\r\n        },\r\n        new Person\r\n        {\r\n            Name = \"Tucker Smith\",\r\n            Group = \"Group 1\",\r\n            Avatar = \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/2.png\"\r\n        },\r\n        new Person\r\n        {\r\n            Divider = true,\r\n            Name = \"Group 1\"\r\n        },\r\n        new Person\r\n        {\r\n            Header = \"Group 2\",\r\n            Name = \"Group 1\"\r\n        },\r\n        new Person\r\n        {\r\n            Name = \"Britta Holt\",\r\n            Group = \"Group 2\",\r\n            Avatar = \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/4.png\"\r\n        },\r\n        new Person\r\n        {\r\n            Name = \"Jane Smith \",\r\n            Group = \"Group 2\",\r\n            Avatar = \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/5.png\"\r\n        },\r\n        new Person\r\n        {\r\n            Name = \"John Smith\",\r\n            Group = \"Group 2\",\r\n            Avatar = \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/1.png\"\r\n        },\r\n        new Person\r\n        {\r\n            Name = \"Sandra Williams\",\r\n            Group = \"Group 2\",\r\n            Avatar = \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/3.png\"\r\n        }\r\n    };\r\n\r\n    private string _title = \"The summer breeze\";\r\n\r\n    protected bool IsUpdating\r\n    {\r\n        get { return _isUpdating; }\r\n        set\r\n        {\r\n            _isUpdating = value;\r\n            _ = Task.Run(async () =>\r\n            {\r\n                await Task.Delay(3000);\r\n                _isUpdating = false;\r\n                await InvokeAsync(StateHasChanged);\r\n            });\r\n        }\r\n    }\r\n\r\n    public void Remove(Person item)\r\n    {\r\n        var index = _friends.IndexOf(item.Name);\r\n        if (index >= 0)\r\n        {\r\n            _friends.RemoveAt(index);\r\n        }\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Autocomplete.contents.ItemAndSelection",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 0,
        "Name": "apiSearch",
        "Title": "API查找",
        "Description": "<p>轻松绑定动态数据并创建独特的体验。 <code>MAutocomplete</code> 的扩展支持列表使得很容易调节每个方面的输入。</p>\n",
        "Code": "<MCard Color=\"red lighten-2\"\r\n       Dark>\r\n    <MCardTitle Class=\"text-h5 red lighten-3\">\r\n        Search for Public APIs\r\n    </MCardTitle>\r\n    <MCardText>\r\n        Explore hundreds of free API's ready for consumption! For more information visit\r\n        <a class=\"grey--text text--lighten-3\"\r\n           href=\"https://github.com/toddmotto/public-apis\"\r\n           target=\"_blank\">the GitHub repository</a>.\r\n    </MCardText>\r\n    <MCardText>\r\n        <MAutocomplete TItem=\"Item\"\r\n                       TValue=\"string\"\r\n                       TItemValue=\"string\"\r\n                       @bind-Value=\"_value\"\r\n                       Items=\"Items\"\r\n                       Loading=\"_isLoading\"\r\n                       OnSearchInputUpdate=\"UpdateSearchInputAsync\"\r\n                       OnSelectedItemUpdate=\"UpdateItemAsync\"\r\n                       Color=\"white\"\r\n                       HideNoData\r\n                       HideSelected\r\n                       ItemText=\"r=>r.Description\"\r\n                       ItemValue=\"r=>r.API\"\r\n                       Label=\"Public APIs\"\r\n                       Placeholder=\"Start typing to Search\"\r\n                       PrependIcon=\"mdi-database-search\"></MAutocomplete>\r\n    </MCardText>\r\n    <MDivider></MDivider>\r\n    <ExpandTransition>\r\n        <MList If=\"@_show\"\r\n               class=\"red lighten-3\">\r\n            @for (var i = 0; i < Fields.Count; i++)\r\n            {\r\n                var field = Fields.ElementAt(i);\r\n                <MListItem @key=\"i\">\r\n                    <MListItemContent>\r\n                        <MListItemTitle>\r\n                            @field.Value\r\n                        </MListItemTitle>\r\n                        <MListItemSubtitle>\r\n                            @field.Key\r\n                        </MListItemSubtitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            }\r\n        </MList>\r\n    </ExpandTransition>\r\n    <MCardActions>\r\n        <MSpacer></MSpacer>\r\n        <MButton Disabled=\"_model==null\"\r\n                 Color=\"grey darken-3\"\r\n                 OnClick=\"Clear\">\r\n            Clear\r\n            <MIcon Right>\r\n                mdi-close-circle\r\n            </MIcon>\r\n        </MButton>\r\n    </MCardActions>\r\n</MCard>\r\n\r\n@code {\r\n    public class Item\r\n    {\r\n        public string API { get; set; }\r\n\r\n        public string Description { get; set; }\r\n\r\n        public string Auth { get; set; }\r\n\r\n        public string HTPPS { get; set; }\r\n\r\n        public string Cors { get; set; }\r\n\r\n        public string Link { get; set; }\r\n\r\n        public string Category { get; set; }\r\n    }\r\n\r\n    public class Result\r\n    {\r\n        public int Count { get; set; }\r\n\r\n        public List<Item> Entries { get; set; }\r\n    }\r\n\r\n    private int _descriptionLimit = 60;\r\n    private List<Item> _entries = new List<Item>();\r\n    private bool _isLoading;\r\n    private Item _model;\r\n    private string _value;\r\n    private bool _show => !string.IsNullOrEmpty(_value);\r\n\r\n    [Inject]\r\n    public HttpClient HttpClient { get; set; }\r\n\r\n    protected List<Item> Items\r\n    {\r\n        get\r\n        {\r\n            return _entries.Select(entry =>\r\n            {\r\n                var item = new Item();\r\n\r\n                item.API = entry.API;\r\n                item.Auth = entry.Auth;\r\n                item.Category = entry.Category;\r\n                item.Cors = entry.Cors;\r\n                item.Description = entry.Description.Length > _descriptionLimit ? entry.Description.Substring(0, _descriptionLimit) + \"...\" : entry.Description;\r\n                item.HTPPS = entry.HTPPS;\r\n                item.Link = entry.Link;\r\n\r\n                return item;\r\n            }).ToList();\r\n        }\r\n    }\r\n\r\n    protected Dictionary<string, object> Fields\r\n    {\r\n        get\r\n        {\r\n            if (_model == null)\r\n            {\r\n                return new Dictionary<string, object>();\r\n            }\r\n\r\n            return new Dictionary<string, object>\r\n                {\r\n                    {\"API\",_model.API},\r\n                    {\"Auth\",_model.Auth},\r\n                    {\"Category\",_model.Category},\r\n                    {\"Cors\",_model.Cors},\r\n                    {\"Description\",_model.Description},\r\n                    {\"HTPPS\",_model.HTPPS},\r\n                    {\"Link\",_model.Link}\r\n                };\r\n        }\r\n    }\r\n\r\n    public async Task UpdateSearchInputAsync(string val)\r\n    {\r\n        if (Items.Count > 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if (_isLoading)\r\n        {\r\n            return;\r\n        }\r\n\r\n        _isLoading = true;\r\n\r\n        var res = await HttpClient.GetFromJsonAsync<Result>(\"https://api.publicapis.org/entries\");\r\n        _entries = res.Entries.Take(20).ToList();//We can't process too many items now\r\n\r\n        _isLoading = false;\r\n    }\r\n\r\n    public async Task UpdateItemAsync(Item item)\r\n    {\r\n        _model = item;\r\n    }\r\n\r\n    public void Clear()\r\n    {\r\n        _model = null;\r\n        _value = null;\r\n    }\r\n }\r\n",
        "Type": "Demos.Components.FormInputs.children.Autocomplete.misc.ApiSearch",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 0,
        "Name": "asynchronousItems",
        "Title": "异步项目",
        "Description": "<p>有时您需要基于搜索查询加载外部的数据。 在赋值autocomplete的属性时使用search-input属性与**.sync**修饰符 我们还使用新的 'cache-items' 属性。 这将保持一个唯一的列表，它的所有项目都被传递到items属性。当使用异步项目和 多个 属性时是必须的 。</p>\n",
        "Code": "<MToolbar Dark\r\n          Color=\"teal\">\r\n    <MToolbarTitle>State selection</MToolbarTitle>\r\n    <MAutocomplete @bind-Value=\"_select\"\r\n                   Loading=\"_loading\"\r\n                   Items=\"_items\"\r\n                   OnSearchInputUpdate=\"QuerySelections\"\r\n                   CacheItems\r\n                   Class=\"mx-4\"\r\n                   Flat\r\n                   HideNoData\r\n                   ItemValue=\"r=>r\"\r\n                   ItemText=\"r=>r\"\r\n                   HideDetails=\"true\"\r\n                   Label=\"What state are you from?\"\r\n                   SoloInverted></MAutocomplete>\r\n    <MButton Icon>\r\n        <MIcon>mdi-dots-vertical</MIcon>\r\n    </MButton>\r\n</MToolbar>\r\n\r\n@code {\r\n    private bool _loading;\r\n    private List<string> _items=new List<string>();\r\n    private List<string> _states = new List<string>()\r\n    {\r\n        \"Alabama\", \"Alaska\", \"American Samoa\", \"Arizona\",\r\n        \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\",\r\n        \"Delaware\", \"District of Columbia\", \"Federated States of Micronesia\",\r\n        \"Florida\", \"Georgia\", \"Guam\", \"Hawaii\", \"Idaho\",\r\n        \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\",\r\n        \"Louisiana\", \"Maine\", \"Marshall Islands\", \"Maryland\",\r\n        \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\",\r\n        \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\",\r\n        \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\",\r\n        \"North Carolina\", \"North Dakota\", \"Northern Mariana Islands\", \"Ohio\",\r\n        \"Oklahoma\", \"Oregon\", \"Palau\", \"Pennsylvania\", \"Puerto Rico\",\r\n        \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\",\r\n        \"Texas\", \"Utah\", \"Vermont\", \"Virgin Island\", \"Virginia\",\r\n        \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"\r\n    };\r\n    private string _select;\r\n\r\n    private async Task QuerySelections(string v)\r\n    {\r\n        if (string.IsNullOrEmpty(v) || v == _select)\r\n        {\r\n            return;\r\n        }\r\n\r\n        _loading = true;\r\n        await Task.Delay(500);\r\n        _items = _states.Where(e => e.ToLowerInvariant().IndexOf(v.ToLowerInvariant()) > -1).ToList();\r\n        _loading = false;\r\n    }\r\n}",
        "Type": "Demos.Components.FormInputs.children.Autocomplete.misc.AsynchronousItems",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 0,
        "Name": "cryptocurrencySelector",
        "Title": "加密货币选择器",
        "Description": "<p><code>MAutocomplete</code> 组件非常灵活，可以适合任何使用情况。 为no-data, item和selection插槽创建自定义的显示样式以提供独特的用户体验. 使用 插槽 使您能够轻松自定义您的应用程序所需的外观。</p>\n",
        "Code": "<MToolbar Color=\"orange accent-1\">\r\n    <ChildContent>\r\n        <MAppBarNavIcon Class=\"hidden-sm-and-down\"></MAppBarNavIcon>\r\n        <MToolbarTitle Class=\"text-h6 mr-6 hidden-sm-and-down\">\r\n            Cryptocurrency\r\n        </MToolbarTitle>\r\n        <MAutocomplete @bind-Value=\"_model\"\r\n                       Items=\"_items\"\r\n                       Loading=\"_isLoading\"\r\n                       OnSearchInputUpdate=\"Search\"\r\n                       Chips\r\n                       Clearable\r\n                       HideDetails=\"true\"\r\n                       HideSelected\r\n                       ItemText=\"r=>r.Name\"\r\n                       ItemValue=\"r=>r.Symbol\"\r\n                       Label=\"Search for a coin...\"\r\n                       Solo>\r\n            <NoDataContent>\r\n                <MListItem>\r\n                    <MListItemTitle>\r\n                        Search for your favorite\r\n                        <strong>Cryptocurrency</strong>\r\n                    </MListItemTitle>\r\n                </MListItem>\r\n            </NoDataContent>\r\n            <SelectionContent Context=\"data\">\r\n                <MChip Color=\"blue-grey\"\r\n                       Class=\"white--text\">\r\n                    <MIcon Left>\r\n                        mdi-bitcoin\r\n                    </MIcon>\r\n                    <span>\r\n                        @data.Item.Name\r\n                    </span>\r\n                </MChip>\r\n            </SelectionContent>\r\n            <ItemContent Context=\"data\">\r\n                <MListItemAvatar Color=\"indigo\"\r\n                                 Class=\"text-h5 font-weight-light white--text\">\r\n                    @data.Item.Name[0]\r\n                </MListItemAvatar>\r\n                <MListItemContent>\r\n                    <MListItemTitle>\r\n                        @data.Item.Name\r\n                    </MListItemTitle>\r\n                    <MListItemSubtitle>\r\n                        @data.Item.Symbol\r\n                    </MListItemSubtitle>\r\n                </MListItemContent>\r\n                <MListItemAction>\r\n                    <MIcon>mdi-bitcoin</MIcon>\r\n                </MListItemAction>\r\n            </ItemContent>\r\n        </MAutocomplete>\r\n    </ChildContent>\r\n    <ExtensionContent>\r\n        <MTabs @bind-Value=\"_tab\"\r\n               HideSlider=\"_model==null\"\r\n               Color=\"blue-grey\"\r\n               SliderColor=\"blue-grey\">\r\n            <MTab Disabled=\"_model==null\">\r\n                News\r\n            </MTab>\r\n            <MTab Disabled=\"_model==null\">\r\n                Trading\r\n            </MTab>\r\n            <MTab Disabled=\"_model==null\">\r\n                Blog\r\n            </MTab>\r\n        </MTabs>\r\n    </ExtensionContent>\r\n</MToolbar>\r\n\r\n@code {\r\n    class Currency\r\n    {\r\n        public string Id { get; set; }\r\n\r\n        public string Symbol { get; set; }\r\n\r\n        public string Name { get; set; }\r\n    }\r\n\r\n    private bool _isLoading;\r\n    private List<Currency> _items = new List<Currency>();\r\n    private string _model;\r\n    private StringNumber _tab;\r\n\r\n    protected string Model\r\n    {\r\n        get\r\n        {\r\n            return _model;\r\n        }\r\n        set\r\n        {\r\n            _model = value;\r\n\r\n            if (value != null)\r\n            {\r\n                _tab = 0;\r\n            }\r\n            else\r\n            {\r\n                _tab = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    [Inject]\r\n    public IHttpClientFactory HttpClientFactory { get; set; }\r\n\r\n    public async Task Search(string val)\r\n    {\r\n        if (_items.Count > 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        _isLoading = true;\r\n        var httpClient = HttpClientFactory.CreateClient(\"doc\");\r\n        var items = await httpClient.GetFromJsonAsync<List<Currency>>(\"/_content/Masa.Blazor.Doc/list.json\");\r\n        _items = items.Take(20).ToList();//TODO:Wait for MSelect update\r\n        _isLoading = false;\r\n    }\r\n}",
        "Type": "Demos.Components.FormInputs.children.Autocomplete.misc.CryptocurrencySelector",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 0,
        "Name": "stateSelector",
        "Title": "状态选择器",
        "Description": "<p>结合使用 <code>MAutocomplete</code> 插槽和过渡，您可以创建一个现代的的可切换的自动补全栏，例如这个状态选择器。</p>\n",
        "Code": "<MCard>\r\n    <MCardTitle Class=\"text-h5 font-weight-regular blue-grey white--text\">\r\n        Profile\r\n    </MCardTitle>\r\n    <MCardText>\r\n        <MSubheader Class=\"pa-0\">\r\n            Where do you live?\r\n        </MSubheader>\r\n        <MAutocomplete @bind-Value=\"_model\"\r\n                       Hint=\"@(!_isEditing ? \"Click the icon to edit\" : \"Click the icon to save\")\"\r\n                       Items=\"_states\"\r\n                       Readonly=\"!_isEditing\"\r\n                       Label=\"@($\"State — {(_isEditing ? \"Editable\" : \"Readonly\")}\")\"\r\n                       PersistentHint\r\n                       ItemValue=\"r=>r\"\r\n                       ItemText=\"r=>r\"\r\n                       PrependIcon=\"mdi-city\">\r\n            <AppendOuterContent>\r\n                <SlideXReverseTransition>\r\n                    <MIcon key=\"@($\"icon-{_isEditing}\")\"\r\n                           Color=\"@(_isEditing ? \"success\" : \"info\")\"\r\n                           OnClick=\"()=>_isEditing = !_isEditing\">\r\n                        @(_isEditing ? \"mdi-check-outline\" : \"mdi-circle-edit-outline\")\r\n                    </MIcon>\r\n                </SlideXReverseTransition>\r\n            </AppendOuterContent>\r\n        </MAutocomplete>\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code{\r\n    private bool _isEditing;\r\n    private string _model;\r\n     private List<string> _states = new List<string>()\r\n    {\r\n        \"Alabama\", \"Alaska\", \"American Samoa\", \"Arizona\",\r\n        \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\",\r\n        \"Delaware\", \"District of Columbia\", \"Federated States of Micronesia\",\r\n        \"Florida\", \"Georgia\", \"Guam\", \"Hawaii\", \"Idaho\",\r\n        \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\",\r\n        \"Louisiana\", \"Maine\", \"Marshall Islands\", \"Maryland\",\r\n        \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\",\r\n        \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\",\r\n        \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\",\r\n        \"North Carolina\", \"North Dakota\", \"Northern Mariana Islands\", \"Ohio\",\r\n        \"Oklahoma\", \"Oregon\", \"Palau\", \"Pennsylvania\", \"Puerto Rico\",\r\n        \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\",\r\n        \"Texas\", \"Utah\", \"Vermont\", \"Virgin Island\", \"Virginia\",\r\n        \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"\r\n    };\r\n}",
        "Type": "Demos.Components.FormInputs.children.Autocomplete.misc.StateSelector",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/combobox",
      "/components/forms",
      "/components/selects"
    ],
    "Subtitle": "自动补全",
    "Title": "Autocompletes",
    "Type": "自动补全"
  },
  {
    "Desc": "<p>级联选择器</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MCascader\">MCascader</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.5488484+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>级联选择器用于选择省市区</p>\n",
        "Code": "<MCascader @bind-Value=\"_value\"\r\n           Items=\"_items\"\r\n           ItemText=\"u => u.Label\"\r\n           ItemValue=\"u => u.Value\"\r\n           ItemChildren=\"u => u.Children\">\r\n</MCascader>\r\n\r\n@code {\r\n    public class CascaderNode\r\n    {\r\n        public string Value { get; set; }\r\n        public string Label { get; set; }\r\n        public List<CascaderNode> Children { get; set; }\r\n    }\r\n    private string _value;\r\n    private List<CascaderNode> _items = new List<CascaderNode>() {\r\n        new CascaderNode()\r\n        {\r\n            Value = \"1\",\r\n            Label = \"湖北\",\r\n            Children = new List<CascaderNode>() {\r\n                    new CascaderNode{ Value = \"11\", Label=\"武汉\", Children = new List<CascaderNode>(){\r\n                        new CascaderNode{ Value = \"111\", Label=\"武昌区\", Children = new List<CascaderNode>(){\r\n                            new CascaderNode{ Value = \"1111\", Label=\"黄鹤楼街道\"},\r\n                            new CascaderNode{ Value = \"1112\", Label=\"白沙洲街道\"}\r\n                        } },\r\n                        new CascaderNode{ Value = \"112\", Label=\"洪山区\"}\r\n                    } },\r\n                    new CascaderNode{ Value = \"12\", Label=\"黄石\"},\r\n                    new CascaderNode{ Value = \"13\", Label=\"宜昌\"}\r\n                }\r\n        }, new CascaderNode()\r\n        {\r\n            Value = \"2\",\r\n            Label = \"浙江\",\r\n            Children = new List<CascaderNode>() {\r\n                    new CascaderNode{ Value = \"21\", Label=\"杭州\"},\r\n                    new CascaderNode{ Value = \"22\", Label=\"温州\"},\r\n                    new CascaderNode{ Value = \"23\", Label=\"义乌\"},\r\n                    new CascaderNode{ Value = \"24\", Label=\"宁波\"}\r\n                }\r\n        }, new CascaderNode()\r\n        {\r\n            Value = \"3\",\r\n            Label = \"上海\",\r\n            Children = new List<CascaderNode>() {\r\n                    new CascaderNode{ Value = \"31\", Label=\"徐汇区\"},\r\n                    new CascaderNode{ Value = \"32\", Label=\"黄浦区\"},\r\n                    new CascaderNode{ Value = \"33\", Label=\"浦东新区\"},\r\n                    new CascaderNode{ Value = \"34\", Label=\"崇明区\"}\r\n                }\r\n        }, new CascaderNode()\r\n        {\r\n            Value = \"4\",\r\n            Label = \"北京\",\r\n            Children = new List<CascaderNode>() {\r\n                    new CascaderNode{ Value = \"41\", Label=\"朝阳\"},\r\n                    new CascaderNode{ Value = \"42\", Label=\"东城\"},\r\n                    new CascaderNode{ Value = \"43\", Label=\"西城\"}\r\n                }\r\n        }, new CascaderNode()\r\n        {\r\n            Value = \"5\",\r\n            Label = \"江苏\",\r\n            Children = new List<CascaderNode>() {\r\n                    new CascaderNode{ Value = \"51\", Label=\"南京\", Children = new List<CascaderNode>(){\r\n                        new CascaderNode{ Value = \"511\", Label=\"鼓楼区\"},\r\n                        new CascaderNode{ Value = \"512\", Label=\"玄武区\"}\r\n                    } },\r\n                    new CascaderNode{ Value = \"52\", Label=\"苏州\"},\r\n                    new CascaderNode{ Value = \"53\", Label=\"无锡\"},\r\n                    new CascaderNode{ Value = \"54\", Label=\"扬州\"}\r\n                }\r\n        }};\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Cascader.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "changeOnSelect",
        "Title": "选择时更变",
        "Description": "<p>允许选择父级。</p>\n",
        "Code": "<MRow Align=\"AlignTypes.Baseline\">\r\n    <MCol Cols=\"12\" Md=\"6\">\r\n        <MCascader @bind-Value=\"_value\"\r\n                   ChangeOnSelect\r\n                   Items=\"_items\"\r\n                   ItemText=\"u => u.Label\"\r\n                   ItemValue=\"u => u.Value\"\r\n                   ItemChildren=\"u => u.Children\">\r\n        </MCascader>\r\n    </MCol>\r\n    <MCol Cols=\"12\" Md=\"6\">\r\n        Selected value is: @_value\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n\r\n    public class CascaderNode\r\n    {\r\n        public string Value { get; set; }\r\n        public string Label { get; set; }\r\n        public List<CascaderNode> Children { get; set; }\r\n    }\r\n\r\n    private string _value;\r\n\r\n    private List<CascaderNode> _items = new List<CascaderNode>()\r\n    {\r\n        new CascaderNode()\r\n        {\r\n            Value = \"1\",\r\n            Label = \"湖北\",\r\n            Children = new List<CascaderNode>()\r\n            {\r\n                new CascaderNode\r\n                {\r\n                    Value = \"11\", Label = \"武汉\", Children = new List<CascaderNode>()\r\n                    {\r\n                        new CascaderNode\r\n                        {\r\n                            Value = \"111\", Label = \"武昌区\", Children = new List<CascaderNode>()\r\n                            {\r\n                                new CascaderNode { Value = \"1111\", Label = \"黄鹤楼街道\" },\r\n                                new CascaderNode { Value = \"1112\", Label = \"白沙洲街道\" }\r\n                            }\r\n                        },\r\n                        new CascaderNode { Value = \"112\", Label = \"洪山区\" }\r\n                    }\r\n                },\r\n                new CascaderNode { Value = \"12\", Label = \"黄石\" },\r\n                new CascaderNode { Value = \"13\", Label = \"宜昌\" }\r\n            }\r\n        },\r\n        new CascaderNode()\r\n        {\r\n            Value = \"2\",\r\n            Label = \"浙江\",\r\n            Children = new List<CascaderNode>()\r\n            {\r\n                new CascaderNode { Value = \"21\", Label = \"杭州\" },\r\n                new CascaderNode { Value = \"22\", Label = \"温州\" },\r\n                new CascaderNode { Value = \"23\", Label = \"义乌\" },\r\n                new CascaderNode { Value = \"24\", Label = \"宁波\" }\r\n            }\r\n        },\r\n        new CascaderNode()\r\n        {\r\n            Value = \"3\",\r\n            Label = \"上海\",\r\n            Children = new List<CascaderNode>()\r\n            {\r\n                new CascaderNode { Value = \"31\", Label = \"徐汇区\" },\r\n                new CascaderNode { Value = \"32\", Label = \"黄浦区\" },\r\n                new CascaderNode { Value = \"33\", Label = \"浦东新区\" },\r\n                new CascaderNode { Value = \"34\", Label = \"崇明区\" }\r\n            }\r\n        },\r\n        new CascaderNode()\r\n        {\r\n            Value = \"4\",\r\n            Label = \"北京\",\r\n            Children = new List<CascaderNode>()\r\n            {\r\n                new CascaderNode { Value = \"41\", Label = \"朝阳\" },\r\n                new CascaderNode { Value = \"42\", Label = \"东城\" },\r\n                new CascaderNode { Value = \"43\", Label = \"西城\" }\r\n            }\r\n        },\r\n        new CascaderNode()\r\n        {\r\n            Value = \"5\",\r\n            Label = \"江苏\",\r\n            Children = new List<CascaderNode>()\r\n            {\r\n                new CascaderNode\r\n                {\r\n                    Value = \"51\", Label = \"南京\", Children = new List<CascaderNode>()\r\n                    {\r\n                        new CascaderNode { Value = \"511\", Label = \"鼓楼区\" },\r\n                        new CascaderNode { Value = \"512\", Label = \"玄武区\" }\r\n                    }\r\n                },\r\n                new CascaderNode { Value = \"52\", Label = \"苏州\" },\r\n                new CascaderNode { Value = \"53\", Label = \"无锡\" },\r\n                new CascaderNode { Value = \"54\", Label = \"扬州\" }\r\n            }\r\n        }\r\n    };\r\n\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Cascader.props.ChangeOnSelect",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "dense",
        "Title": "密集",
        "Description": "<p><strong>Dense</strong> 属性用于减少高度</p>\n",
        "Code": "<MContainer>\r\n    <MRow>\r\n        <MCol Cols=\"4\">\r\n            <MCascader @bind-Value=\"_value\"\r\n                       Dense\r\n                       Items=\"_items\"\r\n                       ItemText=\"u => u.Label\"\r\n                       ItemValue=\"u => u.Value\"\r\n                       ItemChildren=\"u => u.Children\">\r\n            </MCascader>\r\n        </MCol>\r\n        <MSpacer></MSpacer>\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code {\r\n    public class CascaderNode\r\n    {\r\n        public string Value { get; set; }\r\n        public string Label { get; set; }\r\n        public List<CascaderNode> Children { get; set; }\r\n    }\r\n    private string _value;\r\n    private List<CascaderNode> _items = new List<CascaderNode>() {\r\n        new CascaderNode()\r\n        {\r\n            Value = \"1\",\r\n            Label = \"湖北\",\r\n            Children = new List<CascaderNode>() {\r\n                    new CascaderNode{ Value = \"11\", Label=\"武汉\", Children = new List<CascaderNode>(){\r\n                        new CascaderNode{ Value = \"111\", Label=\"武昌区\", Children = new List<CascaderNode>(){\r\n                            new CascaderNode{ Value = \"1111\", Label=\"黄鹤楼街道\"},\r\n                            new CascaderNode{ Value = \"1112\", Label=\"白沙洲街道\"}\r\n                        } },\r\n                        new CascaderNode{ Value = \"112\", Label=\"洪山区\"}\r\n                    } },\r\n                    new CascaderNode{ Value = \"12\", Label=\"黄石\"},\r\n                    new CascaderNode{ Value = \"13\", Label=\"宜昌\"}\r\n                }\r\n        }, new CascaderNode()\r\n        {\r\n            Value = \"2\",\r\n            Label = \"浙江\",\r\n            Children = new List<CascaderNode>() {\r\n                    new CascaderNode{ Value = \"21\", Label=\"杭州\"},\r\n                    new CascaderNode{ Value = \"22\", Label=\"温州\"},\r\n                    new CascaderNode{ Value = \"23\", Label=\"义乌\"},\r\n                    new CascaderNode{ Value = \"24\", Label=\"宁波\"}\r\n                }\r\n        }, new CascaderNode()\r\n        {\r\n            Value = \"3\",\r\n            Label = \"上海\",\r\n            Children = new List<CascaderNode>() {\r\n                    new CascaderNode{ Value = \"31\", Label=\"徐汇区\"},\r\n                    new CascaderNode{ Value = \"32\", Label=\"黄浦区\"},\r\n                    new CascaderNode{ Value = \"33\", Label=\"浦东新区\"},\r\n                    new CascaderNode{ Value = \"34\", Label=\"崇明区\"}\r\n                }\r\n        }, new CascaderNode()\r\n        {\r\n            Value = \"4\",\r\n            Label = \"北京\",\r\n            Children = new List<CascaderNode>() {\r\n                    new CascaderNode{ Value = \"41\", Label=\"朝阳\"},\r\n                    new CascaderNode{ Value = \"42\", Label=\"东城\"},\r\n                    new CascaderNode{ Value = \"43\", Label=\"西城\"}\r\n                }\r\n        }, new CascaderNode()\r\n        {\r\n            Value = \"5\",\r\n            Label = \"江苏\",\r\n            Children = new List<CascaderNode>() {\r\n                    new CascaderNode{ Value = \"51\", Label=\"南京\", Children = new List<CascaderNode>(){\r\n                        new CascaderNode{ Value = \"511\", Label=\"鼓楼区\"},\r\n                        new CascaderNode{ Value = \"512\", Label=\"玄武区\"}\r\n                    } },\r\n                    new CascaderNode{ Value = \"52\", Label=\"苏州\"},\r\n                    new CascaderNode{ Value = \"53\", Label=\"无锡\"},\r\n                    new CascaderNode{ Value = \"54\", Label=\"扬州\"}\r\n                }\r\n        }};\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Cascader.props.Dense",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "loadChildren",
        "Title": "加载子项",
        "Description": "<p>LoadChildren 用于动态加载子项</p>\n",
        "Code": "<MCascader @bind-Value=\"_vaule\"\r\n           Items=\"_items\"\r\n           ItemText=\"u => u.Label\"\r\n           ItemValue=\"u => u.Value\"\r\n           ItemChildren=\"u => u.Children\"\r\n           LoadChildren=\"FetchChildrenAsync\">\r\n</MCascader>\r\n\r\n@code {\r\n    public class BCascaderNode\r\n    {\r\n        public int Value { get; set; }\r\n        public string Label { get; set; }\r\n        public List<BCascaderNode> Children { get; set; } = new();\r\n    }\r\n\r\n    public class Item\r\n    {\r\n        public int Id { get; set; }\r\n        public string Description { get; set; }\r\n        public int ParentId { get; set; }\r\n        public int Level { get; set; }\r\n    }\r\n\r\n    private List<Item> _allItems = new()\r\n        {\r\n            new Item\r\n            {\r\n                Id = 3,\r\n                Description = \"武汉\",\r\n                ParentId = 1,\r\n                Level = 2\r\n            },\r\n            new Item\r\n            {\r\n                Id = 4,\r\n                Description = \"武昌区\",\r\n                ParentId = 3,\r\n                Level = 3\r\n            },\r\n            new Item\r\n            {\r\n                Id = 5,\r\n                Description = \"黄石\",\r\n                ParentId = 1,\r\n                Level = 1\r\n            }\r\n        };\r\n\r\n    private List<BCascaderNode> _items = new List<BCascaderNode>\r\n    {\r\n        new BCascaderNode\r\n        {\r\n            Value=1,\r\n            Label=\"湖北\"\r\n        },\r\n        new BCascaderNode\r\n        {\r\n            Value=2,\r\n            Label=\"浙江\"\r\n        }\r\n    };\r\n\r\n    private int _vaule;\r\n\r\n    public async Task FetchChildrenAsync(BCascaderNode node)\r\n    {\r\n        await Task.Delay(1000);\r\n        var children = _allItems.Where(item => item.ParentId == node.Value)\r\n            .Select(item => new BCascaderNode\r\n                {\r\n                    Value = item.Id,\r\n                    Label = item.Description,\r\n                    Children = item.Level < 3 ? new() : null//We only load children which count equal 0\r\n                });\r\n        node.Children = children.Any() ? children.ToList() : null;//Set to null so we will not load any more\r\n    }\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Cascader.props.LoadChildren",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "showAllLevels",
        "Title": "展示完整路径",
        "Description": "<p><strong>ShowAllLevels</strong> 用于控制展示所有层级,默认为 <code>true</code>。</p>\n",
        "Code": "<MRow>\r\n    <MCol>\r\n        <MCascader @bind-Value=\"_value\"\r\n                   Items=\"_items\"\r\n                   ItemText=\"u => u.Label\"\r\n                   ItemValue=\"u => u.Value\"\r\n                   ItemChildren=\"u => u.Children\">\r\n        </MCascader>\r\n    </MCol>\r\n    <MCol>\r\n        <MCascader @bind-Value=\"_value\"\r\n                   Items=\"_items\"\r\n                   ItemText=\"u => u.Label\"\r\n                   ItemValue=\"u => u.Value\"\r\n                   ItemChildren=\"u => u.Children\"\r\n                   ShowAllLevels=\"false\">\r\n        </MCascader>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n    public class CascaderNode\r\n    {\r\n        public string Value { get; set; }\r\n        public string Label { get; set; }\r\n        public List<CascaderNode> Children { get; set; }\r\n    }\r\n    private string _value;\r\n\r\n    private List<CascaderNode> _items = new List<CascaderNode>() {\r\n        new CascaderNode()\r\n        {\r\n            Value = \"1\",\r\n            Label = \"湖北\",\r\n            Children = new List<CascaderNode>() {\r\n                    new CascaderNode{ Value = \"11\", Label=\"武汉\", Children = new List<CascaderNode>(){\r\n                        new CascaderNode{ Value = \"111\", Label=\"武昌区\", Children = new List<CascaderNode>(){\r\n                            new CascaderNode{ Value = \"1111\", Label=\"黄鹤楼街道\"},\r\n                            new CascaderNode{ Value = \"1112\", Label=\"白沙洲街道\"}\r\n                        } },\r\n                        new CascaderNode{ Value = \"112\", Label=\"洪山区\"}\r\n                    } },\r\n                    new CascaderNode{ Value = \"12\", Label=\"黄石\"},\r\n                    new CascaderNode{ Value = \"13\", Label=\"宜昌\"}\r\n                }\r\n        }, new CascaderNode()\r\n        {\r\n            Value = \"2\",\r\n            Label = \"浙江\",\r\n            Children = new List<CascaderNode>() {\r\n                    new CascaderNode{ Value = \"21\", Label=\"杭州\"},\r\n                    new CascaderNode{ Value = \"22\", Label=\"温州\"},\r\n                    new CascaderNode{ Value = \"23\", Label=\"义乌\"},\r\n                    new CascaderNode{ Value = \"24\", Label=\"宁波\"}\r\n                }\r\n        }, new CascaderNode()\r\n        {\r\n            Value = \"3\",\r\n            Label = \"上海\",\r\n            Children = new List<CascaderNode>() {\r\n                    new CascaderNode{ Value = \"31\", Label=\"徐汇区\"},\r\n                    new CascaderNode{ Value = \"32\", Label=\"黄浦区\"},\r\n                    new CascaderNode{ Value = \"33\", Label=\"浦东新区\"},\r\n                    new CascaderNode{ Value = \"34\", Label=\"崇明区\"}\r\n                }\r\n        }, new CascaderNode()\r\n        {\r\n            Value = \"4\",\r\n            Label = \"北京\",\r\n            Children = new List<CascaderNode>() {\r\n                    new CascaderNode{ Value = \"41\", Label=\"朝阳\"},\r\n                    new CascaderNode{ Value = \"42\", Label=\"东城\"},\r\n                    new CascaderNode{ Value = \"43\", Label=\"西城\"}\r\n                }\r\n        }, new CascaderNode()\r\n        {\r\n            Value = \"5\",\r\n            Label = \"江苏\",\r\n            Children = new List<CascaderNode>() {\r\n                    new CascaderNode{ Value = \"51\", Label=\"南京\", Children = new List<CascaderNode>(){\r\n                        new CascaderNode{ Value = \"511\", Label=\"鼓楼区\"},\r\n                        new CascaderNode{ Value = \"512\", Label=\"玄武区\"}\r\n                    } },\r\n                    new CascaderNode{ Value = \"52\", Label=\"苏州\"},\r\n                    new CascaderNode{ Value = \"53\", Label=\"无锡\"},\r\n                    new CascaderNode{ Value = \"54\", Label=\"扬州\"}\r\n                }\r\n        }};\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Cascader.props.ShowAllLevels",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/treeview",
      "/components/forms",
      "/components/selects"
    ],
    "Subtitle": "级联菜单",
    "Title": "Cascaders",
    "Type": "级联菜单"
  },
  {
    "Desc": "<p><code>MCheckbox</code>组件使用户能够在两个不同的值之间进行选择。它们非常类似于开关，可以用在复杂的表单和检查表中。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MCheckbox\">MCheckbox</a></li>\n<li><a href=\"/api/MSimpleCheckbox\">MSimpleCheckbox</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.5518476+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>最简单形式的<code>Checkbox</code>提供了两个值之间的切换。</p>\n",
        "Code": "<MCheckbox @bind-Value=\"checkbox\" Label=\"@label\"></MCheckbox>\r\n\r\n@code {\r\n    bool checkbox = true;\r\n    string label => $\"Checkbox 1: {checkbox.ToString()}\";\r\n}",
        "Type": "Demos.Components.FormInputs.children.Checkbox.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "boolean",
        "Title": "布尔值",
        "Description": "<p>单个 <code>MChecbox</code> 将有一个布尔值作为其 <strong>value</strong>。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MCheckbox\r\n        @bind-Value=\"checkbox1\"\r\n        Label=\"@($\"Checkbox 1: {checkbox1.ToString()}\")\">\r\n    </MCheckbox>\r\n    <MCheckbox\r\n        @bind-Value=\"checkbox2\"\r\n        Label=\"@($\"Checkbox 2: {checkbox2.ToString()}\")\">\r\n    </MCheckbox>\r\n</MContainer>\r\n\r\n@code {\r\n\r\n    bool checkbox1 = true;\r\n    bool checkbox2 = false;\r\n\r\n}",
        "Type": "Demos.Components.FormInputs.children.Checkbox.props.Boolean",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "color",
        "Title": "颜色",
        "Description": "<p><code>MCheckbox</code> 可以通过使用颜色属性的任何内置颜色和上下文名称来着色。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MRow>\r\n        <MCol Cols=\"4\">\r\n            <MCheckbox @bind-Value=\"_value1\"\r\n                       Label=\"red\"\r\n                       HideDetails=\"true\"\r\n                       Color=\"red\"></MCheckbox>\r\n            <MCheckbox @bind-Value=\"_value2\"\r\n                       Label=\"red darken-3\"\r\n                       HideDetails=\"true\"\r\n                       Color=\"red darken-3\"></MCheckbox>\r\n        </MCol>\r\n        <MCol Cols=\"4\">\r\n            <MCheckbox @bind-Value=\"_value3\"\r\n                       Label=\"indigo\"\r\n                       HideDetails=\"true\"\r\n                       Color=\"indigo\"></MCheckbox>\r\n            <MCheckbox @bind-Value=\"_value4\"\r\n                       Label=\"indigo darken-3\"\r\n                       HideDetails=\"true\"\r\n                       Color=\"indigo darken-3\"></MCheckbox>\r\n        </MCol>\r\n        <MCol Cols=\"4\">\r\n            <MCheckbox @bind-Value=\"_value5\"\r\n                       Label=\"orange\"\r\n                       HideDetails=\"true\"\r\n                       Color=\"orange\"></MCheckbox>\r\n            <MCheckbox @bind-Value=\"_value6\"\r\n                       Label=\"orange darken-3\"\r\n                       HideDetails=\"true\"\r\n                       Color=\"orange darken-3\"></MCheckbox>\r\n        </MCol>\r\n    </MRow>\r\n\r\n    <MRow>\r\n        <MCol Cols=\"4\">\r\n            <MCheckbox @bind-Value=\"_value7\"\r\n                       Label=\"primary\"\r\n                       HideDetails=\"true\"\r\n                       Color=\"primary\"></MCheckbox>\r\n            <MCheckbox @bind-Value=\"_value8\"\r\n                       Label=\"secondary\"\r\n                       HideDetails=\"true\"\r\n                       Color=\"secondary\"></MCheckbox>\r\n        </MCol>\r\n        <MCol Cols=\"4\">\r\n            <MCheckbox @bind-Value=\"_value9\"\r\n                       Label=\"success\"\r\n                       HideDetails=\"true\"\r\n                       Color=\"success\"></MCheckbox>\r\n            <MCheckbox @bind-Value=\"_value10\"\r\n                       Label=\"info\"\r\n                       HideDetails=\"true\"\r\n                       Color=\"info\"></MCheckbox>\r\n        </MCol>\r\n        <MCol Cols=\"4\">\r\n            <MCheckbox @bind-Value=\"_value11\"\r\n                       Label=\"warning\"\r\n                       HideDetails=\"true\"\r\n                       Color=\"warning\"></MCheckbox>\r\n            <MCheckbox @bind-Value=\"_value12\"\r\n                       Label=\"error\"\r\n                       HideDetails=\"true\"\r\n                       Color=\"error\"></MCheckbox>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code {\r\n    private bool _value1 = true;\r\n    private bool _value2 = true;\r\n    private bool _value3 = true;\r\n    private bool _value4 = true;\r\n    private bool _value5 = true;\r\n    private bool _value6 = true;\r\n    private bool _value7 = true;\r\n    private bool _value8 = true;\r\n    private bool _value9 = true;\r\n    private bool _value10 = true;\r\n    private bool _value11 = true;\r\n    private bool _value12 = true;\r\n    }\r\n",
        "Type": "Demos.Components.FormInputs.children.Checkbox.props.Color",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "state",
        "Title": "状态",
        "Description": "<p><code>MCheckbox</code> 可以有不同的状态，例如 <strong>default</strong>,<strong>disabled</strong> 和 <strong>indeterminate</strong>。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MRow class=\"light--text\">\r\n        <MCol Cols=\"4\">\r\n            on\r\n        </MCol>\r\n        <MCol Cols=\"4\">\r\n            off\r\n        </MCol>\r\n        <MCol Cols=\"4\">\r\n            indeterminate\r\n        </MCol>\r\n    </MRow>\r\n    <MRow>\r\n        <MCol Cols=\"4\">\r\n            <MCheckbox @bind-Value=\"checkbox1\"></MCheckbox>\r\n        </MCol>\r\n        <MCol Cols=\"4\">\r\n            <MCheckbox></MCheckbox>\r\n        </MCol>\r\n        <MCol Cols=\"4\">\r\n            <MCheckbox Indeterminate=\"indeterminate\" Value=\"checkbox2\" ValueChanged=\"Checkbox2Changed\"></MCheckbox>\r\n        </MCol>\r\n    </MRow>\r\n    <MRow class=\"light--text\">\r\n        <MCol Cols=\"4\">\r\n            on disabled\r\n        </MCol>\r\n        <MCol Cols=\"4\">\r\n            off disabled\r\n        </MCol>\r\n    </MRow>\r\n    <MRow>\r\n        <MCol Cols=\"4\">\r\n            <MCheckbox @bind-Value=\"checkbox3\" Disabled></MCheckbox>\r\n        </MCol>\r\n        <MCol Cols=\"4\">\r\n            <MCheckbox Disabled></MCheckbox>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code {\r\n\r\n    bool checkbox1 = true;\r\n    bool indeterminate = true;\r\n    bool checkbox2 = true;\r\n    bool checkbox3 = true;\r\n\r\n    void Checkbox2Changed(bool v)\r\n    {\r\n        checkbox2 = v;\r\n        indeterminate = false;\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.FormInputs.children.Checkbox.props.State",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 5,
        "Name": "labelContent",
        "Title": "Label",
        "Description": "<p><code>MCheckbox</code> 文本可以在<strong>LabelContent</strong>中定义-这将允许使用HTML内容。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MCheckbox @bind-Value=\"checkbox\">\r\n        <LabelContent>\r\n            <div>\r\n                I agree that\r\n                <MTooltip Bottom>\r\n                    <ActivatorContent>\r\n                        <a target=\"_blank\" href=\"https://masa-blazor-docs-dev.lonsid.cn\" @attributes=\"@context.Attrs\">Masa.Blazor</a>\r\n                    </ActivatorContent>\r\n                    <ChildContent>\r\n                        Opens in new window\r\n                    </ChildContent>\r\n                </MTooltip>\r\n                is awesome\r\n            </div>\r\n        </LabelContent>\r\n    </MCheckbox>\r\n</MContainer>\r\n\r\n@code {\r\n    bool checkbox = false;\r\n}",
        "Type": "Demos.Components.FormInputs.children.Checkbox.contents.LabelContent",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 5,
        "Name": "inlineTextField",
        "Title": "内联输入文本",
        "Description": "<p>您可以将 <code>MCheckbox</code> 与其他组件（如<code>MTextField</code>）对齐。</p>\n",
        "Code": "<MCard>\r\n    <MCardText>\r\n        <MRow Align=\"AlignTypes.Center\">\r\n            <MCheckbox\r\n                @bind-Value=\"includeFiles\"\r\n                HideDetails=\"@true\"\r\n                Class=\"shrink mr-2 mt-0\">\r\n            </MCheckbox>\r\n            <MTextField Label=\"Include files\" TValue=\"string\"></MTextField>\r\n        </MRow>\r\n        <MRow Align=\"AlignTypes.Center\">\r\n            <MCheckbox\r\n                @bind-Value=\"enabled\"\r\n                HideDetails=\"@true\"\r\n                Class=\"shrink mr-2 mt-0\">\r\n            </MCheckbox>\r\n            <MTextField\r\n                Disabled=\"!enabled\"\r\n                Label=\"I only work if you check the box\"\r\n                TValue=\"string\">\r\n            </MTextField>\r\n        </MRow>\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    bool includeFiles = true;\r\n    bool enabled = false;\r\n\r\n}",
        "Type": "Demos.Components.FormInputs.children.Checkbox.misc.InlineTextField",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/switches",
      "/components/forms",
      "/components/text-fields"
    ],
    "Subtitle": "复选框",
    "Title": "Checkboxes",
    "Type": "复选框"
  },
  {
    "Desc": "<p><code>MFileInput</code> 是一个定制的输入组件，它提供了一个干净的选择界面，显示详细的选择信息和上传进度。 它意在直接取代标准文件输入。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MFileInput\">MFileInput</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.5568478+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p><code>MFileInput</code> 组件的核心是一个基于 <a href=\"/components/text-fields\">MTextField</a> 拓展的基本容器。</p>\n",
        "Code": "<MFileInput TValue=\"IBrowserFile\" OnChange=\"HandleOnChange\"></MFileInput>\r\n\r\n@code {\r\n    private void HandleOnChange(IBrowserFile file)\r\n    {\r\n        //other code\r\n    }\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.FileInput.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "accept",
        "Title": "接收格式",
        "Description": "<p><code>MFileInput</code> 组件可以选择接收你想要的媒体格式/文件类型 查看 <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept\">accept attribute</a> 文档来获取更多信息。</p>\n",
        "Code": "\r\n<MFileInput\r\n    TValue=\"IBrowserFile\"\r\n    Accept=\"image/*\"\r\n    Label=\"File input\"\r\n  ></MFileInput>\r\n\r\n",
        "Type": "Demos.Components.FormInputs.children.FileInput.props.Accept",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "chips",
        "Title": "纸片",
        "Description": "<p>上传的文件可以作为 <a href=\"/components/chips\">chip（纸片）</a> 显示。同时启用 <strong>Chips（纸片）</strong> 和 <strong>Multiple（多选）</strong> 属性时，每个文件作为一个纸片显示（与选中文件数相反）。</p>\n",
        "Code": "\r\n<div>\r\n    <MFileInput TValue=\"List<IBrowserFile>\"\r\n                Chips\r\n                Multiple\r\n                Label=\"File input w/ chips\"></MFileInput>\r\n    <MFileInput TValue=\"List<IBrowserFile>\"\r\n                SmallChips\r\n                Multiple\r\n                Label=\"File input w/ small chips\"></MFileInput>\r\n</div>\r\n\r\n",
        "Type": "Demos.Components.FormInputs.children.FileInput.props.Chips",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "counter",
        "Title": "计数器",
        "Description": "<p>当<strong>ShowSize</strong>属性和<strong>Counter</strong>一同启用时，会下输入框下方显示文件总数和大小。</p>\n",
        "Code": "\r\n<div>\r\n    <MFileInput TValue=\"List<IBrowserFile>\"\r\n                ShowSize\r\n                Multiple\r\n                Counter=true\r\n                Label=\"File input\"></MFileInput>\r\n</div>\r\n\r\n",
        "Type": "Demos.Components.FormInputs.children.FileInput.props.Counter",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "dense",
        "Title": "密集",
        "Description": "<p>您可以使用<strong>Dense</strong>属性降低文件输入高度。</p>\n",
        "Code": "\r\n<div>\r\n    <MFileInput TValue=\"IBrowserFile\"\r\n                Dense\r\n                Outlined\r\n                Label=\"File input\"></MFileInput>\r\n</div>\r\n\r\n",
        "Type": "Demos.Components.FormInputs.children.FileInput.props.Dense",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "multiple",
        "Title": "多选",
        "Description": "<p>启用 <strong>Multiple（多选）</strong> 属性可以使<code>MFileInput</code>同时包含多个文件。</p>\n",
        "Code": "<div>\r\n    <MFileInput TValue=\"List<IBrowserFile>\"\r\n                Multiple\r\n                OnChange=\"HandleOnChange\"\r\n                Label=\"File input\"></MFileInput>\r\n</div>\r\n\r\n@code {\r\n    private void HandleOnChange(List<IBrowserFile> files)\r\n    {\r\n        //Other code\r\n    }\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.FileInput.props.Multiple",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "prependIcon",
        "Title": "前置图标",
        "Description": "<p><code>MFileInput</code>拥有一个默认<strong>PrependIcon</strong>可以设置在组件上或在全局调整。 有关更改全局组件的更多信息，请参见<a href=\"/features/icon-fonts\">自定义图标页面</a>。</p>\n",
        "Code": "\r\n<div>\r\n    <MFileInput TValue=\"IBrowserFile\"\r\n                Filled\r\n                PrependIcon=\"mdi-camera\"\r\n                Label=\"File input\"></MFileInput>\r\n</div>\r\n\r\n",
        "Type": "Demos.Components.FormInputs.children.FileInput.props.PrependIcon",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "showSize",
        "Title": "显示大小",
        "Description": "<p><strong>ShowSize（显示大小）</strong> 属性可以配置显示所选文件的尺寸 显示文件大小可以选择_1024_进位（提供<strong>true</strong>时默认使用）或_1000_进位。</p>\n",
        "Code": "\r\n<div>\r\n    <MFileInput TValue=\"IBrowserFile\"\r\n                ShowSize\r\n                Label=\"File input\"></MFileInput>\r\n</div>\r\n\r\n",
        "Type": "Demos.Components.FormInputs.children.FileInput.props.ShowSize",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "validation",
        "Title": "验证",
        "Description": "<p>与其他输入类似，您可以使用rules 属性来创建您自己的自定义验证参数。</p>\n",
        "Code": "\r\n<MFileInput TValue=\"IBrowserFile\"\r\n            Rules=\"_rules\"\r\n            Accept=\"image/png, image/jpeg, image/bmp\"\r\n            Placeholder=\"Pick an avatar\"\r\n            PrependIcon=\"mdi-camera\"\r\n            Label=\"Avatar\"></MFileInput>\r\n\r\n@code {\r\n    private List<Func<IBrowserFile, StringBoolean>> _rules = new List<Func<IBrowserFile, StringBoolean>>()\r\n        {\r\n            value=>(value==null||value.Size<2000000)?true:\"Avatar size should be less than 2 MB!\"\r\n        };\r\n}",
        "Type": "Demos.Components.FormInputs.children.FileInput.props.Validation",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "selection",
        "Title": "选项",
        "Description": "<p>使用 <strong>SelectionContent</strong>，您可以自定义输入选择的外观。 通常使用 <a href=\"/components/chips\">chips</a>完成，但您可以使用任何组件或标记。</p>\n",
        "Code": "<MFileInput\r\n    @bind-Value=\"_files\"\r\n    Placeholder=\"Upload your documents\"\r\n    Label=\"File input\"\r\n    Multiple\r\n    PrependIcon=\"mdi-paperclip\">\r\n    <SelectionContent Context=\"context\">\r\n        <MChip\r\n            Small\r\n            Label\r\n            Color=\"primary\">\r\n            @_files[context.index].Name\r\n        </MChip>\r\n    </SelectionContent>\r\n</MFileInput>\r\n\r\n@code {\r\n    private List<IBrowserFile> _files = new();\r\n}",
        "Type": "Demos.Components.FormInputs.children.FileInput.contents.Selection",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 1,
        "Name": "complexSelectionContent",
        "Title": "复杂选项插槽",
        "Description": "<p>选项插槽的灵活性使其可以容纳复杂的用途。 在本示例中我们展示了如何只显示前两个文件并将剩余数量以计数器显示（当选中三个以上的文件时）。</p>\n",
        "Code": "<MFileInput\r\n    @bind-Value=\"_files\"\r\n    Color=\"deep-purple accent-4\"\r\n    Counter=\"@true\"\r\n    Label=\"File input\"\r\n    Multiple\r\n    Placeholder=\"Select your files\"\r\n    PrependIcon=\"mdi-paperclip\"\r\n    Outlined\r\n    ShowSize>\r\n    <SelectionContent Context=\"context\">\r\n        @if (context.index < 2)\r\n        {\r\n            <MChip\r\n                Color=\"deep-purple accent-4\"\r\n                Dark\r\n                Label\r\n                Small>\r\n                @context.text\r\n            </MChip>\r\n        }\r\n        else if (context.index == 2)\r\n        {\r\n            <span class=\"text-overline grey--text text--darken-3 mx-2\">\r\n                +@(_files.Count - 2) File(s)\r\n            </span>\r\n        }\r\n    </SelectionContent>\r\n</MFileInput>\r\n\r\n@code {\r\n    private List<IBrowserFile> _files = new();\r\n}",
        "Type": "Demos.Components.FormInputs.children.FileInput.misc.ComplexSelectionContent",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/text-fields",
      "/components/forms",
      "/components/icons"
    ],
    "Subtitle": "文件上传",
    "Title": "File inputs",
    "Type": "文件上传"
  },
  {
    "Desc": "<p>表单验证，使用DataAnnotation。Value改变或者表单提交的时候触发验证，也可以手动触发。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MForm\">MForm</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.5608477+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "basic",
        "Title": "使用",
        "Description": "<p>内部 <code>MForm</code> 组件使得很容易添加验证到表单输入。 所有输入组件都有一个 <strong>规则</strong> prop，它接受不同类型的组 函数, 布尔值 和 字符串。 这些允许您指定输入无效的 __ 或 __ 的条件。 每当输入值被更改时，数组中的每个函数将收到新的值，每个数组元素将被评分。 如果函数或数组元素返回 fals 或 字符串, 验证失败， 字符串 值将作为错误信息显示。</p>\n",
        "Code": "@using System.ComponentModel.DataAnnotations\r\n@using FluentValidation;\r\n\r\n<MForm Model=\"_form\" EnableValidation>\r\n    <MContainer>\r\n        <MRow>\r\n            <MCol Cols=\"12\"\r\n                  Md=\"4\">\r\n                <MTextField @bind-Value=\"_form.Firstname\"\r\n                            Counter=\"10\"\r\n                            Label=\"First name\"\r\n                            required></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Md=\"4\">\r\n                <MTextField @bind-Value=\"_form.Lastname\"\r\n                            Counter=\"10\"\r\n                            Label=\"Last name\"\r\n                            required></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Md=\"4\">\r\n                <MTextField @bind-Value=\"_form.Email\"\r\n                            Label=\"E-mail\"\r\n                            required></MTextField>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MForm>\r\n@code {\r\n    public class Form\r\n    {\r\n        [Required(ErrorMessage = \"Name is required\")]\r\n        [MaxLength(10, ErrorMessage = \"Name must be less than 10 characters\")]\r\n        public string Firstname { get; set; }\r\n\r\n        [Required(ErrorMessage = \"Name is required\")]\r\n        [MaxLength(10, ErrorMessage = \"Name must be less than 10 characters\")]\r\n        public string Lastname { get; set; }\r\n\r\n        [Required(ErrorMessage = \"E-mail is required\")]\r\n        [EmailAddress(ErrorMessage = \"E-mail must be valid\")]\r\n        public string Email { get; set; }\r\n    }\r\n\r\n    private Form _form = new();\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Form.usage.Basic",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "rules",
        "Title": "规则",
        "Description": "<p>规则允许您在所有表单组件上应用自定义验证。 这些都是按顺序验证的，每次会显示一个 <strong>个最大</strong> 个错误，所以请确保你相应地排序规则。</p>\n",
        "Code": "@using System.ComponentModel.DataAnnotations\r\n\r\n<MContainer>\r\n    <MRow Justify=\"JustifyTypes.SpaceBetween\">\r\n        <MCol Cols=\"12\"\r\n              Md=\"4\">\r\n            <MForm @ref=\"_form\">\r\n                <MTextField @bind-Value=\"Model\"\r\n                            Rules=\"ModelRules\"\r\n                            Counter=\"Convert.ToInt32(_max)\"\r\n                            Label=\"First name\"></MTextField>\r\n            </MForm>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"12\"\r\n              Md=\"6\">\r\n            <MSlider @bind-Value=\"Max\"\r\n                     Label=\"Max characters\">\r\n            </MSlider>\r\n\r\n            <MCheckbox @bind-Value=\"_allowSpaces\"\r\n                       Label=\"Allow spaces\"></MCheckbox>\r\n\r\n            <MTextField @bind-Value=\"Match\"\r\n                        Label=\"Value must match\"></MTextField>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code {\r\n    private MForm _form;\r\n    private string _model;\r\n    private string _match;\r\n    private bool _allowSpaces;\r\n    private double _max;\r\n\r\n    protected string Match\r\n    {\r\n        get\r\n        {\r\n            return _match;\r\n        }\r\n        set\r\n        {\r\n            _match = value;\r\n            _form.Validate();\r\n        }\r\n    }\r\n\r\n    protected double Max\r\n    {\r\n        get\r\n        {\r\n            return _max;\r\n        }\r\n        set\r\n        {\r\n            _max = value;\r\n            _form.Validate();\r\n        }\r\n    }\r\n\r\n    protected string Model\r\n    {\r\n        get\r\n        {\r\n            return _model;\r\n        }\r\n        set\r\n        {\r\n            _model = value;\r\n            _form.Validate();\r\n        }\r\n    }\r\n\r\n    protected List<Func<string, StringBoolean>> ModelRules\r\n    {\r\n        get\r\n        {\r\n            var rules = new List<Func<string, StringBoolean>>();\r\n\r\n            if (Max > 0)\r\n            {\r\n                Func<string, StringBoolean> rule = v => v?.Length <= Max ? true : $\"A maximum of {Max} characters is allowed\";\r\n                rules.Add(rule);\r\n            }\r\n\r\n            if (!_allowSpaces)\r\n            {\r\n                Func<string, StringBoolean> rule = v => v?.IndexOf(' ') < 0 ? true : \"No spaces are allowed\";\r\n                rules.Add(rule);\r\n            }\r\n\r\n            if (!string.IsNullOrEmpty(Match))\r\n            {\r\n                Func<string, StringBoolean> rule = v => !string.IsNullOrEmpty(v) && v == Match ? true : \"Values do not match\";\r\n                rules.Add(rule);\r\n            }\r\n\r\n            return rules;\r\n        }\r\n    }\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Form.props.Rules",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "EnableI18n",
        "Title": "启用I18n",
        "Description": "<p>启用I18n以支持验证信息多语言。如何使用<code>II8n</code>请跳转<a href=\"/features/internationalization\">I18n</a>。</p>\n",
        "Code": "@using System.ComponentModel.DataAnnotations\r\n@using FluentValidation;\r\n\r\n<MForm Model=\"_model\" EnableValidation EnableI18n OnValidSubmit=\"HandleOnValidSubmit\"\r\n       OnInvalidSubmit=\"HandleOnInvalidSubmit\">\r\n    <MTextField @bind-Value=\"_model.Name\"\r\n                Counter=\"10\"\r\n                Label=\"Name\"></MTextField>\r\n    <MTextField @bind-Value=\"_model.Email\"\r\n                Label=\"E-mail\"></MTextField>\r\n    <MSelect @bind-Value=\"_model.Item\"\r\n             Items=\"@_items\"\r\n             Label=\"Item\"\r\n             ItemText=\"u => u\"\r\n             ItemValue=\"u => u\"></MSelect>\r\n    <MCheckbox @bind-Value=\"_model.Agree\"\r\n               Label=\"Do you agree?\"></MCheckbox>\r\n    <MButton Type=\"submit\">Submit</MButton>\r\n</MForm>\r\n\r\n@code {\r\n    class Model\r\n    {\r\n        [Required]\r\n        [MaxLength(10, ErrorMessage = \"Name must be at most 10 characters long.\")]\r\n        public string Name { get; set; }\r\n        [Required]\r\n        [EmailAddress]\r\n        public string Email { get; set; }\r\n        [Required]\r\n        public string Item { get; set; }\r\n        [RegularExpression(\"True\", ErrorMessage = \"You must agree to continue!\")]\r\n        public bool Agree { get; set; }\r\n    }\r\n\r\n    private bool _valid = true;\r\n    private MForm _form;\r\n    private Model _model = new();\r\n\r\n    List<string> _items = new()\r\n    {\r\n        \"Item 1\",\r\n        \"Item 2\",\r\n        \"Item 3\",\r\n        \"Item 4\"\r\n    };\r\n\r\n    private void HandleOnValidSubmit()\r\n    {\r\n        //valid\r\n    }\r\n\r\n    private void HandleOnInvalidSubmit()\r\n    {\r\n        //invalid\r\n    }\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Form.misc.EnableI18n",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 0,
        "Name": "validation",
        "Title": "验证",
        "Description": "<p>验证也可以通过submit按钮来触发。</p>\n",
        "Code": "@using System.ComponentModel.DataAnnotations\r\n@using FluentValidation;\r\n\r\n<MForm Model=\"_model\" EnableValidation OnValidSubmit=\"HandleOnValidSubmit\"\r\n       OnInvalidSubmit=\"HandleOnInvalidSubmit\">\r\n    <MTextField @bind-Value=\"_model.Name\"\r\n                Counter=\"10\"\r\n                Label=\"Name\"></MTextField>\r\n    <MTextField @bind-Value=\"_model.Email\"\r\n                Label=\"E-mail\"></MTextField>\r\n    <MSelect @bind-Value=\"_model.Item\"\r\n             Items=\"@_items\"\r\n             Label=\"Item\"\r\n             ItemText=\"u => u\"\r\n             ItemValue=\"u => u\"></MSelect>\r\n    <MCheckbox @bind-Value=\"_model.Agree\"\r\n               Label=\"Do you agree?\"></MCheckbox>\r\n    <MButton Type=\"submit\">Submit</MButton>\r\n</MForm>\r\n\r\n@code {\r\n    class Model\r\n    {\r\n        [Required]\r\n        [MaxLength(10, ErrorMessage = \"Name must be less than 10 characters\")]\r\n        public string Name { get; set; }\r\n        [Required]\r\n        [EmailAddress]\r\n        public string Email { get; set; }\r\n        [Required]\r\n        public string Item { get; set; }\r\n        [RegularExpression(\"True\", ErrorMessage = \"You must agree to continue!\")]\r\n        public bool Agree { get; set; }\r\n    }\r\n\r\n    private bool _valid = true;\r\n    private MForm _form;\r\n    private Model _model = new();\r\n\r\n    List<string> _items = new()\r\n        {\r\n            \"Item 1\",\r\n            \"Item 2\",\r\n            \"Item 3\",\r\n            \"Item 4\"\r\n        };\r\n\r\n    private void HandleOnValidSubmit()\r\n    {\r\n        //valid\r\n    }\r\n\r\n    private void HandleOnInvalidSubmit()\r\n    {\r\n        //invalid\r\n    }\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Form.misc.Validation",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 3,
        "Name": "validationEnumerable",
        "Title": "验证集合(DataAnnotations)",
        "Description": "<p>验证集合属性,注意添加[EnumerableValidation]</p>\n",
        "Code": "@using System.ComponentModel.DataAnnotations\r\n\r\n<MForm Model=\"_order\" EnableValidation>\r\n    <MTextField @bind-Value=\"_order.Title\" Label=\"Title\"></MTextField>\r\n    <MTextField @bind-Value=\"_order.Price\" Label=\"Price\" Type=\"number\"></MTextField>\r\n    @foreach (var person in _order.Persons)\r\n    {\r\n        <MCard Flat>\r\n            <MCardTitle>Person:@person.Id</MCardTitle>\r\n            <MCardText>\r\n                <MTextField @bind-Value=\"person.Name\" Label=\"Name\"></MTextField>\r\n                <MTextField @bind-Value=\"person.Age\" Label=\"Age\" Type=\"number\"></MTextField>\r\n            </MCardText>\r\n        </MCard>\r\n    }\r\n    <MButton OnClick=\"()=>SubmitOrder(context)\" Color=\"success\">Validate</MButton>\r\n</MForm>\r\n\r\n@code {\r\n    public class Order\r\n    {\r\n        public int Id { get; set; }\r\n        [Required]\r\n        public string Title { get; set; }\r\n        [Range(0, 20.00)]\r\n        public decimal Price { get; set; }\r\n\r\n        [EnumerableValidation]\r\n        public List<Person> Persons { get; set; }\r\n    }\r\n\r\n    public class Person\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        [Required]\r\n        public string Name { get; set; }\r\n\r\n        [Range(25, 100)]\r\n        public int Age { get; set; }\r\n    }\r\n\r\n    private Order _order = new()\r\n        {\r\n            Persons = new List<Person>\r\n        {\r\n            new Person\r\n            {\r\n                Id=1\r\n            },\r\n            new Person\r\n            {\r\n                Id=2\r\n            }\r\n        }\r\n        };\r\n\r\n    public async Task SubmitOrder(FormContext context)\r\n    {\r\n        var success = context.Validate();\r\n        if (success)\r\n        {\r\n            //验证成功，操作业务\r\n        }\r\n    }\r\n}",
        "Type": "Demos.Components.FormInputs.children.Form.misc.ValidationEnumerable",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 4,
        "Name": "validationEnumerableWithFluentValidation",
        "Title": "验证集合(FluentValidation)",
        "Description": "<p>MForm支持FluentValidation验证,以验证集合为示例</p>\n",
        "Code": "@using BlazorComponent.I18n\r\n@using FluentValidation;\r\n\r\n<MForm Model=\"_orderDetail\" EnableValidation EnableI18n>\r\n    <MTextField @bind-Value=\"_orderDetail.Title\" Label=\"Title\"></MTextField>\r\n    <MTextField @bind-Value=\"_orderDetail.Price\" Label=\"Price\" Type=\"number\"></MTextField>\r\n    @foreach (var customer in _orderDetail.Customers)\r\n    {\r\n        <MCard Flat>\r\n            <MCardTitle>Customer:@customer.Id</MCardTitle>\r\n            <MCardText>\r\n                <MTextField @bind-Value=\"customer.Name\" Label=\"Name\"></MTextField>\r\n                <MTextField @bind-Value=\"customer.Age\" Label=\"Age\" Type=\"number\"></MTextField>\r\n            </MCardText>\r\n        </MCard>\r\n    }\r\n    <MButton OnClick=\"()=>SubmitOrder(context)\" Color=\"success\">Validate</MButton>\r\n</MForm>\r\n\r\n@code {\r\n    class OrderDetail\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        public string Title { get; set; }\r\n\r\n        public decimal Price { get; set; }\r\n\r\n        public List<Customer> Customers { get; set; }\r\n    }\r\n\r\n    class Customer\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public int Age { get; set; }\r\n    }\r\n\r\n    class OrderDetailValidator : AbstractValidator<OrderDetail>\r\n    {\r\n        public OrderDetailValidator(I18n i18n)\r\n        {\r\n            RuleFor(o => o.Title).NotEmpty();\r\n            RuleFor(o => o.Price).InclusiveBetween(0,20);\r\n            RuleForEach(o => o.Customers).SetValidator(new CustomerValidator());\r\n        }\r\n    }\r\n\r\n    class CustomerValidator : AbstractValidator<Customer>\r\n    {\r\n        public CustomerValidator()\r\n        {\r\n            RuleFor(o => o.Name).NotEmpty();\r\n            RuleFor(o => o.Age).InclusiveBetween(25,100);\r\n        }\r\n    }\r\n\r\n    private OrderDetail _orderDetail = new()\r\n    {\r\n        Customers = new List<Customer>\r\n        {\r\n            new Customer\r\n            {\r\n                Id=1\r\n            },\r\n            new Customer\r\n            {\r\n                Id=2\r\n            }\r\n        }\r\n    };\r\n\r\n    public async Task SubmitOrder(FormContext context)\r\n    {\r\n        var success = context.Validate();\r\n        if (success)\r\n        {\r\n            //验证成功，操作业务\r\n        }\r\n    }\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Form.misc.ValidationEnumerableWithFluentValidation",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 5,
        "Name": "validationEnumerableWithValidationResult",
        "Title": "验证集合(ValidationResult)",
        "Description": "<p>MForm支持ValidationResult，用户可以将服务端表单验证返回的ValidationResult作为FormContext.ParseFormValidation的参数，将验证结果在前端表单展示,以验证集合为示例</p>\n",
        "Code": "@using BlazorComponent.I18n\r\n@using FluentValidation;\r\n\r\n<MForm Model=\"_orderDetail\" EnableValidation EnableI18n>\r\n    <MTextField @bind-Value=\"_orderDetail.Title\" Label=\"Title\"></MTextField>\r\n    <MTextField @bind-Value=\"_orderDetail.Price\" Label=\"Price\" Type=\"number\"></MTextField>\r\n    <MTextField @bind-Value=\"_orderDetail.Category.Name\" Label=\"Name\"></MTextField>\r\n    @foreach (var customer in _orderDetail.Customers)\r\n    {\r\n        <MCard Flat>\r\n            <MCardTitle>Customer:@customer.Id</MCardTitle>\r\n            <MCardText>\r\n                <MTextField @bind-Value=\"customer.Name\" Label=\"Name\"></MTextField>\r\n                <MTextField @bind-Value=\"customer.Age\" Label=\"Age\" Type=\"number\"></MTextField>\r\n            </MCardText>\r\n        </MCard>\r\n    }\r\n    <MButton OnClick=\"()=>SubmitOrder(context)\" Color=\"success\">Validate</MButton>\r\n</MForm>\r\n\r\n@code {\r\n    class OrderDetail\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        public string Title { get; set; }\r\n\r\n        public decimal Price { get; set; }\r\n\r\n        public Category Category { get; set; }\r\n\r\n        public List<Customer> Customers { get; set; }\r\n    }\r\n\r\n    class Customer\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public int Age { get; set; }\r\n    }\r\n\r\n    class Category\r\n    {\r\n        public string Name { get; set; }\r\n    }\r\n\r\n    class OrderDetailValidator : AbstractValidator<OrderDetail>\r\n    {\r\n        public OrderDetailValidator(I18n i18n)\r\n        {\r\n            RuleForEach(o => o.Customers).SetValidator(new CustomerValidator());\r\n        }\r\n    }\r\n\r\n    class CustomerValidator : AbstractValidator<Customer>\r\n    {\r\n        public CustomerValidator()\r\n        {\r\n            RuleFor(o => o.Name).NotEmpty();\r\n        }\r\n    }\r\n\r\n    private OrderDetail _orderDetail = new()\r\n    {\r\n        Category = new Category \r\n        {\r\n\r\n        },\r\n        Customers = new List<Customer>\r\n        {\r\n            new Customer\r\n            {\r\n                Id=1,\r\n                Name = \"customer\"\r\n            },\r\n            new Customer\r\n            {\r\n                Id=1,\r\n                Name = \"customer\"\r\n            }\r\n        }\r\n    };\r\n\r\n    public void SubmitOrder(FormContext context)\r\n    {\r\n        if(context.Validate() && _orderDetail.Customers[0].Name == _orderDetail.Customers[1].Name)\r\n        {\r\n            var validationResult = @\"Validation failed: \r\n                    -- Customers[0].Name: 'Name' cannot be repeated. Severity: Error\r\n                    -- Customers[1].Name: 'Name' cannot be repeated. Severity: Error\";\r\n            context.TryParseFormValidation(validationResult);\r\n        }       \r\n    }\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Form.misc.ValidationEnumerableWithValidationResult",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 2,
        "Name": "validationWithSubmitAndClear",
        "Title": "提交与验证 & 清除",
        "Description": "<p><code>MForm</code> 组件有三个功能，可以通过在组件上设置ref来访问。 ref允许我们访问组件的内部方法，例如 <code>&lt;MForm @ref=&quot;_form&quot;&gt;</code>。 _form.Validate() 将验证所有输入并返回它们是否都有效。 _form.Reset() 将清除所有输入并重置验证错误。 _form.ResetValidation() 将只重置输入验证，不改变他们的状态。</p>\n",
        "Code": "@using System.ComponentModel.DataAnnotations\r\n\r\n<MForm @bind-Value=\"_valid\" Model=\"_model\" EnableValidation @ref=\"_form\">\r\n    <MTextField @bind-Value=\"_model.Name\"\r\n                Counter=\"10\"\r\n                Label=\"Name\"\r\n                required></MTextField>\r\n    <MTextField @bind-Value=\"_model.Email\"\r\n                Label=\"E-mail\"\r\n                required></MTextField>\r\n    <MSelect @bind-Value=\"_model.Item\"\r\n             Items=\"@_items\"\r\n             Label=\"Item\"\r\n             ItemText=\"u => u\"\r\n             ItemValue=\"u => u\"></MSelect>\r\n    <MCheckbox @bind-Value=\"_model.Agree\"\r\n               Label=\"Do you agree?\"\r\n               required></MCheckbox>\r\n    <MButton Disabled=\"!_valid\" Color=\"success\" Class=\"mr-4\" OnClick=\"Validate\">Validate</MButton>\r\n    <MButton Color=\"error\" Class=\"mr-4\" OnClick=\"Reset\">Reset Form</MButton>\r\n    <MButton Color=\"warning\" OnClick=\"ResetValidation\">Reset Validation</MButton>\r\n</MForm>\r\n\r\n@code {\r\n    class Model\r\n    {\r\n        [Required]\r\n        [MaxLength(10, ErrorMessage = \"Name must be less than 10 characters\")]\r\n        public string Name { get; set; }\r\n        [Required]\r\n        [EmailAddress]\r\n        public string Email { get; set; }\r\n        [Required]\r\n        public string Item { get; set; }\r\n        [RegularExpression(\"True\", ErrorMessage = \"You must agree to continue!\")]\r\n        public bool Agree { get; set; }\r\n    }\r\n    private bool _valid = true;\r\n    private MForm _form;\r\n    private Model _model = new();\r\n\r\n    List<string> _items = new()\r\n        {\r\n            \"Item 1\",\r\n            \"Item 2\",\r\n            \"Item 3\",\r\n            \"Item 4\"\r\n        };\r\n\r\n    void Validate()\r\n    {\r\n        _form.Validate();\r\n    }\r\n\r\n    void Reset()\r\n    {\r\n        _form.Reset();\r\n    }\r\n\r\n    void ResetValidation()\r\n    {\r\n        _form.ResetValidation();\r\n    }\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Form.misc.ValidationWithSubmitAndClear",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/selects",
      "/components/selection-controls",
      "/components/text-fields"
    ],
    "Subtitle": "表单",
    "Title": "Forms",
    "Type": "表单"
  },
  {
    "Desc": "<p>该组件是用于MFA校验的一次性密码输入组件</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MOtpInput\">MOtpInput</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.5638478+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>在这里，我们显示了可以在应用程序中使用的设置列表。</p>\n",
        "Code": "<MContainer Class=\"px-0\"\r\n            Fluid>\r\n    <MOtpInput Length=\"6\"></MOtpInput>\r\n</MContainer>\r\n\r\n@code {\r\n    private int _radioGroup = 1;\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.OtpInput.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "darkTheme",
        "Title": "深色主题",
        "Description": "<p>应用深色主题，改变组件的颜色。</p>\n",
        "Code": "<MCard Flat>\r\n    <MCardText>\r\n        <MContainer Fluid class=\"green lighten-2\">\r\n            <MRow>\r\n                <MCol Cols=\"9\">\r\n                    <div class=\"ma-auto\" style=\"max-width: 300px\">\r\n                        <MOtpInput @bind-value=\"@otp\" Length=\"@length\" Dark></MOtpInput>\r\n                    </div>\r\n                </MCol>\r\n                <MCol Cols=\"2\" class=\"my-3\">\r\n                    <MButton Block Disabled=\"!isActive\"> Ready</MButton>\r\n                </MCol>\r\n            </MRow>\r\n        </MContainer>\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code {\r\n    string otp = \"\";\r\n    int length = 7;\r\n    bool isActive => otp.Length == this.length;\r\n}",
        "Type": "Demos.Components.FormInputs.children.OtpInput.props.DarkTheme",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "finishEvent",
        "Title": "输入完成事件",
        "Description": "<p>你可以很容易的编写一个处理程序来接收组件完成输入时的结果。</p>\n",
        "Code": "<div>\r\n    <div class=\"ma-auto position-relative\" style=\"max-width: 300px\">\r\n        <MOtpInput OtpValue=\"@otp\" Disabled=\"@isLoading\" OnFinish=\"OnFinish\"></MOtpInput>\r\n\r\n        <MOverlay Absolute Value=\"@isLoading\">\r\n            <MProgressCircular Indeterminate Color=\"primary\"></MProgressCircular>\r\n        </MOverlay>\r\n    </div>\r\n    <div>\r\n        Expected value: <span class=\"font-weight-bold\"> @expectedOtp </span>\r\n    </div>\r\n    <div class=\"text--caption\">Type or copy/paste.</div>\r\n\r\n    <MSnackbar Color=\"@snackbarColor\" Timeout=\"2000\" Value=\"@snackbar\">\r\n        <ChildContent>\r\n            @text\r\n        </ChildContent>\r\n    </MSnackbar>\r\n</div>\r\n<style type=\"text/css\">\r\n    .position-relative {\r\n        position: relative;\r\n    }\r\n</style>\r\n@code {\r\n    string otp = \"\";\r\n    bool isLoading;\r\n    string expectedOtp = \"133707\";\r\n    string snackbarColor = \"default\";\r\n    bool snackbar = false;\r\n    string text = \"\";\r\n\r\n    public async Task OnFinish(string value)\r\n    {\r\n        this.snackbar = false;\r\n        this.isLoading = true;\r\n        await Task.Delay(3500);\r\n        this.isLoading = false;\r\n        this.snackbarColor = (value == this.expectedOtp) ? \"success\" : \"warning\";\r\n        this.text = $\"Processed OTP with {value} ({snackbarColor})\";\r\n        this.snackbar = true;\r\n    }\r\n}",
        "Type": "Demos.Components.FormInputs.children.OtpInput.props.FinishEvent",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "hiddenInput",
        "Title": "隐藏输入内容",
        "Description": "<p>type=&quot;password&quot;时，会将输入结果隐藏。</p>\n",
        "Code": "<div class=\"ma-auto\" style=\"max-width: 260px\">\r\n    <MOtpInput @OtpValue=\"@otp\" Type=\"OtpInputType.Password\" Length=\"5\" Dark></MOtpInput>\r\n</div>\r\n@code {\r\n    string otp = \"\";\r\n}",
        "Type": "Demos.Components.FormInputs.children.OtpInput.props.HiddenInput",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/textareas",
      "/components/text-fields",
      "/components/forms"
    ],
    "Subtitle": "一次性密码输入",
    "Title": "OTP Input",
    "Type": "一次性密码输入"
  },
  {
    "Desc": "<p><code>MRadio</code> 组件是一个简单的单选按钮。 与 <code>MRadioGroup</code> 组件结合时，您可以提供分组的功能，允许用户从一组预定义的选项中进行选择。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MRadio\">MRadio</a></li>\n<li><a href=\"/api/MRadioGroup\">MRadioGroup</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.5658484+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>虽然 <code>MRadio</code> 可以单独使用，但它最好与 <code>MRadioGroup</code> 一起使用。 在 <code>MRadioGroup</code> 上使用 <strong>@bind-Value</strong>，您可以访问组内所选单选按钮的值。</p>\n",
        "Code": "<MContainer Class=\"px-0\"\r\n            Fluid>\r\n    <MRadioGroup @bind-Value=\"_radioGroup\">\r\n        @for (var i = 0; i < 3; i++)\r\n        {\r\n            var n = i + 1;\r\n            <MRadio @key=\"n\"\r\n                Label=\"@($\"Radio {n}\")\"\r\n                Value=\"n\"></MRadio>\r\n        }\r\n    </MRadioGroup>\r\n</MContainer>\r\n\r\n@code {\r\n    private int _radioGroup = 1;\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Radio.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "color",
        "Title": "颜色",
        "Description": "<p>单选按钮可以使用 <strong>Color</strong> 属性设置颜色，颜色可以是内置颜色和或其上下文名称。</p>\n",
        "Code": "<MCard Flat>\r\n    <MCardText>\r\n        <MContainer Fluid>\r\n            <MRow>\r\n                <MCol Cols=\"12\"\r\n                      Sm=\"6\"\r\n                      Md=\"6\">\r\n                    <MRadioGroup @bind-Value=\"ex7\"\r\n                                 Column>\r\n                        <MRadio Label=\"red\"\r\n                                Color=\"red\"\r\n                                Value=\"@(\"red\")\">\r\n                        </MRadio>\r\n                        <MRadio Label=\"red darken-3\"\r\n                                Color=\"red darken-3\"\r\n                                Value=\"@(\"red darken-3\")\">\r\n                        </MRadio>\r\n                        <MRadio Label=\"indigo\"\r\n                                Color=\"indigo\"\r\n                                Value=\"@(\"indigo\")\">\r\n                        </MRadio>\r\n                        <MRadio Label=\"indigo darken-3\"\r\n                                Color=\"indigo darken-3\"\r\n                                Value=\"@(\"indigo darken-3\")\">\r\n                        </MRadio>\r\n                        <MRadio Label=\"orange\"\r\n                                Color=\"orange\"\r\n                                Value=\"@(\"orange\")\">\r\n                        </MRadio>\r\n                        <MRadio Label=\"orange darken-3\"\r\n                                Color=\"orange darken-3\"\r\n                                Value=\"@(\"orange darken-3\")\">\r\n                        </MRadio>\r\n                    </MRadioGroup>\r\n                </MCol>\r\n                <MCol Cols=\"12\"\r\n                      Sm=\"6\"\r\n                      Md=\"6\">\r\n                    <MRadioGroup @bind-Value=\"ex8\"\r\n                                 Column>\r\n                        <MRadio Label=\"primary\"\r\n                                Color=\"primary\"\r\n                                Value=\"@(\"primary\")\">\r\n                        </MRadio>\r\n                        <MRadio Label=\"secondary\"\r\n                                Color=\"secondary\"\r\n                                Value=\"@(\"secondary\")\">\r\n                        </MRadio>\r\n                        <MRadio Label=\"success\"\r\n                                Color=\"success\"\r\n                                Value=\"@(\"success\")\">\r\n                        </MRadio>\r\n                        <MRadio Label=\"info\"\r\n                                Color=\"info\"\r\n                                Value=\"@(\"info\")\">\r\n                        </MRadio>\r\n                        <MRadio Label=\"warning\"\r\n                                Color=\"warning\"\r\n                                Value=\"@(\"warning\")\">\r\n                        </MRadio>\r\n                        <MRadio Label=\"error\"\r\n                                Color=\"error\"\r\n                                Value=\"@(\"error\")\">\r\n                        </MRadio>\r\n                    </MRadioGroup>\r\n                </MCol>\r\n            </MRow>\r\n        </MContainer>\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code {\r\n    string ex7 = \"red\";\r\n    string ex8 = \"primary\";\r\n}",
        "Type": "Demos.Components.FormInputs.children.Radio.props.Color",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "direction",
        "Title": "布局",
        "Description": "<p>单选框组可以使用 column 或者 row 属性设置为一列或者一行的形式。 默认设置为列。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MRadioGroup @bind-Value=\"column\"\r\n                 Column>\r\n        <MRadio Label=\"Option 1\"\r\n                Value=\"@(\"radio-1\")\">\r\n        </MRadio>\r\n        <MRadio Label=\"Option 2\"\r\n                Value=\"@(\"radio-2\")\">\r\n        </MRadio>\r\n    </MRadioGroup>\r\n    <hr>\r\n    <MRadioGroup @bind-Value=\"row\"\r\n                 Row>\r\n        <MRadio Label=\"Option 1\"\r\n                Value=\"@(\"radio-1\")\">\r\n        </MRadio>\r\n        <MRadio Label=\"Option 2\"\r\n                Value=\"@(\"radio-2\")\">\r\n        </MRadio>\r\n    </MRadioGroup>\r\n</MContainer>\r\n\r\n@code {\r\n    string column;\r\n    string row;\r\n}",
        "Type": "Demos.Components.FormInputs.children.Radio.props.Direction",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "mandatory",
        "Title": "必填项",
        "Description": "<p>默认情况下，按钮组不是必填的。 可以使用 <strong>Mandatory</strong> 属性改变这种状态。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <p>@radios</p>\r\n    <MRadioGroup\r\n        @bind-Value=\"radios\"\r\n        Mandatory>\r\n        <MRadio\r\n            Label=\"Radio 1\"\r\n            Value=\"@(\"radio-1\")\">\r\n        </MRadio>\r\n        <MRadio\r\n            Label=\"Radio 2\"\r\n            Value=\"@(\"radio-2\")\">\r\n        </MRadio>\r\n    </MRadioGroup>\r\n</MContainer>\r\n\r\n@code {\r\n\r\n    string radios;\r\n\r\n}",
        "Type": "Demos.Components.FormInputs.children.Radio.props.Mandatory",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "labelContent",
        "Title": "标签",
        "Description": "<p>单选组标签可以在 <strong>LabelContent</strong> 中定义，允许使用 HTML 内容。</p>\n",
        "Code": "<MContainer fluid>\r\n    <MRadioGroup @bind-Value=\"radios\">\r\n        <LabelContent>\r\n            <div>Your favourite <strong>search engine</strong></div>\r\n        </LabelContent>\r\n        <ChildContent>\r\n            <MRadio Value=\"@(\"Google\")\">\r\n                <LabelContent>\r\n                    <div>Of course it's <strong class=\"success--text\">Google</strong></div>\r\n                </LabelContent>\r\n            </MRadio>\r\n            <MRadio Value=\"@(\"Duckduckgo\")\">\r\n                <LabelContent>\r\n                    <div>Definitely <strong class=\"primary--text\">Duckduckgo</strong></div>\r\n                </LabelContent>\r\n            </MRadio>\r\n        </ChildContent>\r\n    </MRadioGroup>\r\n</MContainer>\r\n\r\n@code {\r\n\r\n    string radios;\r\n\r\n}",
        "Type": "Demos.Components.FormInputs.children.Radio.contents.LabelContent",
        "Style": "",
        "Debug": false,
        "Group": 2
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/button-groups",
      "/components/forms",
      "/components/checkboxes"
    ],
    "Subtitle": "单选按钮",
    "Title": "Radio",
    "Type": "单选按钮"
  },
  {
    "Desc": "<p><code>MRangeSlider</code> 组件是一个更好的可视化数字输入工具。 它用于收集数字数据。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MRangeSlider\">MRangeSlider</a></li>\n<li><a href=\"/api/MSlider\">MSlider</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.569847+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>滑块表示一根条上的一系列值，用户可以从中选择一个值。 滑块组件适用于调节音量、亮度，或者图像滤镜的强度。</p>\n",
        "Code": "<div>\r\n    <MRangeSlider TValue=\"double\" Hint=\"Im a hint\"\r\n                  Max=\"50\"\r\n                  Min=\"-50\"></MRangeSlider>\r\n</div>\r\n\r\n",
        "Type": "Demos.Components.FormInputs.children.RangeSlider.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "disabled",
        "Title": "禁用",
        "Description": "<p>您不能与 <strong>Disabled</strong> 滑块交互。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MRow>\r\n        <MCol Cols=\"12\">\r\n            <MRangeSlider @bind-Value=\"_value\"\r\n                          Disabled\r\n                          Label=\"Disabled\"></MRangeSlider>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code {\r\n    private IList<double> _value = new List<double>\r\n        {\r\n            30,\r\n            60\r\n        };\r\n}\r\n\r\n",
        "Type": "Demos.Components.FormInputs.children.RangeSlider.props.Disabled",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "minAndMax",
        "Title": "最大值和最小值",
        "Description": "<p>您可以通过 <strong>Min</strong> 和 <strong>Max</strong> 设置滑块的最小值和最大值。</p>\n",
        "Code": "<MCard Flat\r\n       Color=\"transparent\">\r\n    <MSubheader>Min and max range slider</MSubheader>\r\n\r\n    <MCardText>\r\n        <MRow>\r\n            <MCol Class=\"px-4\">\r\n                <MRangeSlider @bind-Value=\"_range\"\r\n                              Max=\"_max\"\r\n                              Min=\"_min\"\r\n                              HideDetails=\"true\"\r\n                              Class=\"align-center\">\r\n                    <PrependContent>\r\n                        <MTextField Value=\"_range[0]\"\r\n                                    Class=\"mt-0 pt-0\"\r\n                                    HideDetails=\"true\"\r\n                                    SingleLine\r\n                                    Type=\"number\"\r\n                                    Style=\"width: 60px\"\r\n                                    TValue=\"double\"\r\n                                    OnChange=\"val=>_range[0]=val\"></MTextField>\r\n                    </PrependContent>\r\n                    <AppendContent>\r\n                        <MTextField Value=\"_range[1]\"\r\n                                    Class=\"mt-0 pt-0\"\r\n                                    HideDetails=\"true\"\r\n                                    SingleLine\r\n                                    Type=\"number\"\r\n                                    Style=\"width: 60px\"\r\n                                    TValue=\"double\"\r\n                                    OnChange=\"val=>_range[1]=val\"></MTextField>\r\n                    </AppendContent>\r\n                </MRangeSlider>\r\n            </MCol>\r\n        </MRow>\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code {\r\n    private IList<double> _range = new List<double>\r\n        {\r\n            30,\r\n            60\r\n        };\r\n    private double _min = -50;\r\n    private double _max = 90;\r\n}\r\n\r\n",
        "Type": "Demos.Components.FormInputs.children.RangeSlider.props.MinAndMax",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "step",
        "Title": "步长",
        "Description": "<p><code>MRangeSlider</code> 可以有1以外的步长。 这对您需要更准确地调整值的应用程序可能有帮助。</p>\n",
        "Code": "<MCard>\r\n    <MCardText>\r\n        <MRangeSlider @bind-Value=\"_value\"\r\n                      Step=\"10\"></MRangeSlider>\r\n    </MCardText>\r\n</MCard>\r\n\r\n  @code {\r\n    private IList<double> _value = new List<double>\r\n      {\r\n          20,\r\n          40\r\n      };\r\n  }",
        "Type": "Demos.Components.FormInputs.children.RangeSlider.props.Step",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "verticalSliders",
        "Title": "垂直滑块",
        "Description": "<p>您可以使用 <strong>Vertical</strong> 属性将滑块切换为垂直方向。 如果您需要更改滑块的高度，请使用 CSS。</p>\n",
        "Code": "<MContainer>\r\n    <MRow>\r\n        <MRangeSlider @bind-Value=\"_value\"\r\n                      Vertical\r\n                      Label=\"Range\"></MRangeSlider>\r\n    </MRow>\r\n</MContainer>\r\n\r\n  @code {\r\n    private IList<double> _value = new List<double>\r\n      {\r\n          20,\r\n          40\r\n      };\r\n  }",
        "Type": "Demos.Components.FormInputs.children.RangeSlider.props.VerticalSliders",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "thumbLabel",
        "Title": "Thumb标签",
        "Description": "<p>使用 <strong>TickLabels</strong> 属性和 <code>ThumbLabelContent</code>，您可以创建一个非常自定义的解决方案。</p>\n",
        "Code": "<MRow>\r\n    <MCol Class=\"pa-12\">\r\n        <MRangeSlider TickLabels=\"_seasons\"\r\n                      Value=\"_value\"\r\n                      Min=\"0\"\r\n                      Max=\"3\"\r\n                      Ticks=\"@(\"always\")\"\r\n                      TickSize=\"4\">\r\n            <ThumbLabelContent>\r\n                <MIcon Dark>\r\n                    @($\" {_icons[Convert.ToInt32(context)]} \")\r\n                </MIcon>\r\n            </ThumbLabelContent>\r\n        </MRangeSlider>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n    private IList<double> _value = new List<double>\r\n        {\r\n            0,\r\n            1\r\n        };\r\n    private List<string> _seasons = new List<string>\r\n        {\r\n            \"Winter\",\r\n            \"Spring\",\r\n            \"Summer\",\r\n            \"Fall\"\r\n        };\r\n    private List<string> _icons = new List<string>\r\n        {\r\n            \"mdi-snowflake\",\r\n            \"mdi-leaf\",\r\n            \"mdi-fire\",\r\n            \"mdi-water\"\r\n        };\r\n}\r\n\r\n",
        "Type": "Demos.Components.FormInputs.children.RangeSlider.contents.ThumbLabel",
        "Style": "",
        "Debug": false,
        "Group": 2
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/forms",
      "/components/selects",
      "/components/sliders"
    ],
    "Subtitle": "范围滑块",
    "Title": "Range sliders",
    "Type": "范围滑块"
  },
  {
    "Desc": "<p>选择器组件用于从选项列表中收集用户提供的信息。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MSelect\">MSelect</a></li>\n</ul>\n",
      "注意": "\n<!--alert:info--> \n<p>浏览器自动补全默认设置为关闭，可能因不同的浏览器而变化或忽略。 <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\">MDN</a></strong></p>\n<!--/alert:info--> \n<!--alert:warning--> \n<p><strong>MenuProps</strong> 的 <strong>Auto</strong> 属性只支持默认输入样式。</p>\n<!--/alert:warning--> \n<!--alert:error--> \n<p>当使用一个Object(对象) 作为<strong>Items</strong>的属性时，你必须使用<strong>ItemText</strong>和<strong>ItemValue</strong>与传入的对象关联起来。 这些值默认为 <strong>Text</strong> 和 <strong>Value</strong> 且可以更改。</p>\n<!--/alert:error--> \n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.5748478+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "",
        "Code": "<MRow>\r\n    <MCol Cols=\"6\">\r\n        <MSelect @bind-Value=\"@value1\"\r\n                 Label=\"Standard\"\r\n                 Items=\"@items\"\r\n                 ItemText=\"u => u.Label\"\r\n                 ItemValue=\"u => u.Value\">\r\n        </MSelect>\r\n    </MCol>\r\n    <MCol Cols=\"6\">\r\n        <MSelect @bind-Value=\"@value2\"\r\n                 Items=\"@items\"\r\n                 Label=\"Filled style\"\r\n                 ItemText=\"u => u.Label\"\r\n                 ItemValue=\"u => u.Value\"\r\n                 Filled>\r\n        </MSelect>\r\n    </MCol>\r\n\r\n    <MCol Cols=\"6\">\r\n        <MSelect @bind-Value=\"@value3\"\r\n                 Label=\"Outlined style\"\r\n                 Outlined\r\n                 Items=\"@items\"\r\n                 ItemText=\"u => u.Label\"\r\n                 ItemValue=\"u => u.Value\">\r\n        </MSelect>\r\n    </MCol>\r\n    <MCol Cols=\"6\">\r\n        <MSelect @bind-Value=\"@value4\"\r\n                 Label=\"Solo style\"\r\n                 Solo\r\n                 Items=\"@items\"\r\n                 ItemText=\"u => u.Label\"\r\n                 ItemValue=\"u => u.Value\">\r\n        </MSelect>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n    private string value1;\r\n    private string value2;\r\n    private string value3;\r\n    private string value4;\r\n\r\n    public class Item\r\n    {\r\n        public string Label { get; set; }\r\n        public string Value { get; set; }\r\n\r\n        public Item(string label, string value)\r\n        {\r\n            Label = label;\r\n            Value = value;\r\n        }\r\n    }\r\n\r\n    List<Item> items = new()\r\n    {\r\n        new Item(\"Foo\", \"1\"),\r\n        new Item(\"Bar\", \"2\"),\r\n        new Item(\"Fizz\", \"3\"),\r\n        new Item(\"Buzz\", \"4\"),\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.FormInputs.children.Select.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "customTextAndValue",
        "Title": "自定义选项的文本和值",
        "Description": "<p>您可以在您的项目中指定特定属性的值和文本字段相对应。 默认情况下，将是属性 text 和 value相对应。 而在这个示例中，我们将应用 return-object 属性的方式来返回所选项目的整个对象值。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MRow Align=\"AlignTypes.Center\">\r\n        <MCol Cols=\"6\">\r\n            <MSubheader>\r\n                Custom items\r\n            </MSubheader>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"6\">\r\n            <MSelect TItem=\"Model\"\r\n                     TItemValue=\"string\"\r\n                     TValue=\"string\"\r\n                     @bind-Value=\"_select\"\r\n                     Hint=\"@($\"{_selected.State}, {_selected.Abbr}\")\"\r\n                     Items=\"_states\"\r\n                     ItemText=\"r=>r.State\"\r\n                     ItemValue=\"r=>r.Abbr\"\r\n                     Label=\"Select\"\r\n                     PersistentHint\r\n                     OnSelectedItemUpdate=\"item=>_selected=item\"\r\n                     SingleLine></MSelect>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n  @code {\r\n    public class Model\r\n    {\r\n        public int Id { get; set; }\r\n        public string State { get; set; }\r\n        public string Abbr { get; set; }\r\n    }\r\n    private string _select = \"FL\";\r\n    private Model _selected = new Model()\r\n        {\r\n            State = \"Florida\",\r\n            Abbr = \"FL\"\r\n        };\r\n    private List<Model> _states = new List<Model>\r\n        {\r\n            new Model\r\n            {\r\n                State=\"Florida\",\r\n                Abbr=\"FL\",\r\n                Id=1\r\n            },\r\n            new Model\r\n            {\r\n                State=\"Georgia\",\r\n                Abbr=\"GA\",\r\n                Id=2\r\n            },\r\n            new Model\r\n            {\r\n                State=\"Nebraska\",\r\n                Abbr=\"NE\",\r\n                Id=3\r\n            },\r\n            new Model\r\n            {\r\n                State=\"California\",\r\n                Abbr=\"CA\",\r\n                Id=4\r\n            },\r\n            new Model\r\n            {\r\n                State=\"New York\",\r\n                Abbr=\"NY\",\r\n                Id=5\r\n            }\r\n        };\r\n  }",
        "Type": "Demos.Components.FormInputs.children.Select.props.CustomTextAndValue",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "dense",
        "Title": "密集",
        "Description": "<p>你可以使用<strong>Dense</strong>属性来降低自动完成的高度和缩小列表项的最大高度。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MRow Align=\"@AlignTypes.Center\">\r\n        <MCol Cols=\"6\">\r\n            <MSelect Items=\"_items\"\r\n                     @bind-Value=\"@value1\"\r\n                     ItemText=\"u => u.Label\"\r\n                     ItemValue=\"u => u.Value\"\r\n                     Label=\"Standard\"\r\n                     Dense></MSelect>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"6\">\r\n            <MSelect Items=\"_items\"\r\n                     @bind-Value=\"@value2\"\r\n                     ItemText=\"u => u.Label\"\r\n                     ItemValue=\"u => u.Value\"\r\n                     Filled\r\n                     Label=\"Filled style\"\r\n                     Dense></MSelect>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"6\">\r\n            <MSelect Items=\"_items\"\r\n                     @bind-Value=\"@value3\"\r\n                     ItemText=\"u => u.Label\"\r\n                     ItemValue=\"u => u.Value\"\r\n                     Label=\"Outlined style\"\r\n                     Dense\r\n                     Outlined></MSelect>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"6\">\r\n            <MSelect Items=\"_items\"\r\n                     @bind-Value=\"@value4\"\r\n                     ItemText=\"u => u.Label\"\r\n                     ItemValue=\"u => u.Value\"\r\n                     Label=\"Solo field\"\r\n                     Dense\r\n                     Solo></MSelect>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code {\r\n    private string value1;\r\n    private string value2;\r\n    private string value3;\r\n    private string value4;\r\n\r\n    public class Item\r\n    {\r\n        public string Label { get; set; }\r\n        public string Value { get; set; }\r\n        public Item(string label, string value)\r\n        {\r\n            Label = label;\r\n            Value = value;\r\n        }\r\n    }\r\n\r\n    List<Item> _items = new()\r\n        {\r\n            new Item(\"Foo\", \"1\"),\r\n            new Item(\"Bar\", \"2\"),\r\n            new Item(\"Fizz\", \"3\"),\r\n            new Item(\"Buzz\", \"4\"),\r\n        };\r\n}",
        "Type": "Demos.Components.FormInputs.children.Select.props.Dense",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "disabled",
        "Title": "禁用",
        "Description": "<p>将 <strong>Disabled</strong> 的属性应用于 <code>MSelect</code> 将阻止用户与组件交互。</p>\n",
        "Code": "<MRow Align=\"@AlignTypes.Center\">\r\n    <MCol>\r\n        <MSelect @bind-Value=\"_value\"\r\n                 Items=\"items\"\r\n                 ItemText=\"u => u\"\r\n                 ItemValue=\"u => u\"\r\n                 Disabled\r\n                 Label=\"Disabled\"></MSelect>\r\n    </MCol>\r\n    <MCol>\r\n        <MSelect @bind-Value=\"_value\"\r\n                 Items=\"items2\"\r\n                 ItemText=\"u => u.Key\"\r\n                 ItemValue=\"u => u.Key\"\r\n                 ItemDisabled=\"u => u.Value\"\r\n                 Label=\"Disabled Item\"></MSelect>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n    List<string> items = new() { \"Foo\", \"Bar\", \"Fizz\", \"Buzz\" };\r\n    string _value;\r\n\r\n    List<KeyValuePair<string, bool>> items2 = new Dictionary<string, bool>\r\n    {\r\n        { \"Foo\", false },\r\n        { \"Bar\", false },\r\n        { \"Fizz\", true },\r\n        { \"Buzz\", false }\r\n    }.ToList();\r\n}",
        "Type": "Demos.Components.FormInputs.children.Select.props.Disabled",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "icon",
        "Title": "图标",
        "Description": "<p>使用自定义前置或者后置图标。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MRow Align=\"@AlignTypes.Center\">\r\n        <MCol Cols=\"6\">\r\n            <MSubheader>\r\n                Prepended icon\r\n            </MSubheader>\r\n        </MCol>\r\n        <MCol Cols=\"6\">\r\n            <MSelect @bind-Value=\"e1\"\r\n                     Items=\"_items\"\r\n                     Label=\"Select\"\r\n                     ItemText=\"u => u.Label\"\r\n                     ItemValue=\"u => u.Value\"\r\n                     HideDetails=\"true\"\r\n                     PrependIcon=\"mdi-map\"\r\n                     SingleLine></MSelect>\r\n        </MCol>\r\n        <MCol Cols=\"6\">\r\n            <MSubheader>\r\n                Appended icon\r\n            </MSubheader>\r\n        </MCol>\r\n        <MCol Cols=\"6\">\r\n            <MSelect @bind-Value=\"e2\"\r\n                     ItemText=\"u => u.Label\"\r\n                     ItemValue=\"u => u.Value\"\r\n                     Items=\"_items\"\r\n                     AppendOuterIcon=\"mdi-map\"\r\n                     HideDetails=\"true\"\r\n                     Label=\"Select\"\r\n                     SingleLine></MSelect>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code{\r\n    private string e1;\r\n    private string e2;\r\n\r\n    List<Item> _items = new()\r\n        {\r\n            new Item(\"Foo\", \"1\"),\r\n            new Item(\"Bar\", \"2\"),\r\n            new Item(\"Fizz\", \"3\"),\r\n            new Item(\"Buzz\", \"4\"),\r\n        };\r\n\r\n    public class Item\r\n    {\r\n        public string Label { get; set; }\r\n        public string Value { get; set; }\r\n        public Item(string label, string value)\r\n        {\r\n            Label = label;\r\n            Value = value;\r\n        }\r\n    }\r\n}",
        "Type": "Demos.Components.FormInputs.children.Select.props.Icon",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "light",
        "Title": "浅色主题",
        "Description": "<p>标准的单选有多种配置选项。</p>\n",
        "Code": "<MCard>\r\n    <MContainer Fluid>\r\n        <MRow Align=\"@AlignTypes.Center\">\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MSelect @bind-Value=\"values\"\r\n                         Items=\"_items\"\r\n                         Attach\r\n                         Chips\r\n                         ItemText=\"u => u.Label\"\r\n                         ItemValue=\"u => u.Value\"\r\n                         Label=\"Chips\"\r\n                         Multiple></MSelect>\r\n            </MCol>\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MSelect @bind-Value=\"values\"\r\n                         Items=\"_items\"\r\n                         Filled\r\n                         Chips\r\n                         ItemText=\"u => u.Label\"\r\n                         ItemValue=\"u => u.Value\"\r\n                         Label=\"Chips\"\r\n                         Multiple></MSelect>\r\n            </MCol>\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MSelect @bind-Value=\"values\"\r\n                         Items=\"_items\"\r\n                         Chips\r\n                         Label=\"Chips\"\r\n                         ItemText=\"u => u.Label\"\r\n                         ItemValue=\"u => u.Value\"\r\n                         Multiple\r\n                         Outlined></MSelect>\r\n            </MCol>\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MSelect @bind-Value=\"values\"\r\n                         Items=\"_items\"\r\n                         Chips\r\n                         ItemText=\"u => u.Label\"\r\n                         ItemValue=\"u => u.Value\"\r\n                         Label=\"Chips\"\r\n                         Multiple\r\n                         Solo></MSelect>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MCard>\r\n\r\n@code{\r\n    private List<string> values = new List<string> { \"1\" };\r\n\r\n    public class Item\r\n    {\r\n        public string Label { get; set; }\r\n        public string Value { get; set; }\r\n        public Item(string label, string value)\r\n        {\r\n            Label = label;\r\n            Value = value;\r\n        }\r\n    }\r\n\r\n    List<Item> _items = new()\r\n        {\r\n            new Item(\"Foo\", \"1\"),\r\n            new Item(\"Bar\", \"2\"),\r\n            new Item(\"Fizz\", \"3\"),\r\n            new Item(\"Buzz\", \"4\"),\r\n        };\r\n}",
        "Type": "Demos.Components.FormInputs.children.Select.props.Light",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "menuProps",
        "Title": "菜单属性",
        "Description": "<p>在这个示例中，菜单被指定向上打开并移动至顶部。</p>\n",
        "Code": "<MRow Align=\"@(\"center\")\">\r\n    <MCol Cols=\"12\">\r\n        <MSelect\r\n            @bind-Value=\"_value\"\r\n            Items=\"_items\"\r\n            MenuProps=\"@(props => { props.Top = true; props.OffsetY = true; })\"\r\n            Label=\"Label\"\r\n            ItemValue=\"r => r\"\r\n            ItemText=\"r => r\">\r\n        </MSelect>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code{\r\n    string _value;\r\n    List<string> _items = new() { \"Foo\", \"Bar\", \"Fizz\", \"Buzz\" };\r\n}",
        "Type": "Demos.Components.FormInputs.children.Select.props.MenuProps",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "multiple",
        "Title": "多选",
        "Description": "<p>多选择器可以使用 <code>MChip</code> 组件来显示已选项。</p>\n",
        "Code": "@using System.Collections.Generic;\r\n\r\n<MContainer Fluid>\r\n    <MRow Align=\"@AlignTypes.Center\">\r\n        <MCol Cols=\"6\">\r\n            <MSubheader>Multiple with persistent hint</MSubheader>\r\n        </MCol>\r\n        <MCol Cols=\"6\">\r\n            <MSelect @bind-Value=\"@e6\"\r\n                     Items=\"@states\"\r\n                     ItemText=\"u => u\"\r\n                     ItemValue=\"u => u\"\r\n                     Label=\"Select\"\r\n                     Multiple\r\n                     Clearable\r\n                     Hint=\"@($\"selected values: {string.Join(',', e6)}\")\">\r\n            </MSelect>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"6\">\r\n            <MSubheader>Multiple (Chips) with persistent hint</MSubheader>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"6\">\r\n            <MSelect @bind-Value=\"@e7\"\r\n                     Items=\"@states\"\r\n                     ItemText=\"u => u\"\r\n                     ItemValue=\"u => u\"\r\n                     Label=\"Select\"\r\n                     Multiple\r\n                     Chips\r\n                     Hint=\"@($\"selected values: {string.Join(',', e7)}\")\"\r\n                     PersistentHint>\r\n            </MSelect>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code {\r\n    List<string> e6 = new List<string>() { \"Alaska\" };\r\n    List<string> e7 = new List<string>() { \"Alaska\" };\r\n\r\n    string[] states =\r\n    {\r\n        \"Alabama\", \"Alaska\", \"American Samoa\", \"Arizona\",\r\n        \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\",\r\n        \"Delaware\", \"District of Columbia\", \"Federated States of Micronesia\",\r\n        \"Florida\", \"Georgia\", \"Guam\", \"Hawaii\", \"Idaho\",\r\n        \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\",\r\n        \"Louisiana\", \"Maine\", \"Marshall Islands\", \"Maryland\",\r\n        \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\",\r\n        \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\",\r\n        \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\",\r\n        \"North Carolina\", \"North Dakota\", \"Northern Mariana Islands\", \"Ohio\",\r\n        \"Oklahoma\", \"Oregon\", \"Palau\", \"Pennsylvania\", \"Puerto Rico\",\r\n        \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\",\r\n        \"Texas\", \"Utah\", \"Vermont\", \"Virgin Island\", \"Virginia\",\r\n        \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.FormInputs.children.Select.props.Multiple",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "readonly",
        "Title": "只读",
        "Description": "<p>您可以在 <code>MSelect</code> 上应用 <strong>Readonly</strong> 属性来防止用户更改其值。</p>\n",
        "Code": "<MRow Align=\"@AlignTypes.Center\">\r\n    <MCol Cols=\"12\">\r\n        <MSelect Items=\"_items\"\r\n                 @bind-Value=\"e1\"\r\n                 ItemText=\"u => u.Label\"\r\n                 ItemValue=\"u => u.Value\"\r\n                 Readonly\r\n                 Label=\"Read-only\"></MSelect>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code{\r\n    private string e1;\r\n    public class Item\r\n    {\r\n        public string Label { get; set; }\r\n        public string Value { get; set; }\r\n        public Item(string label, string value)\r\n        {\r\n            Label = label;\r\n            Value = value;\r\n        }\r\n    }\r\n\r\n    List<Item> _items = new()\r\n        {\r\n            new Item(\"Foo\", \"1\"),\r\n            new Item(\"Bar\", \"2\"),\r\n            new Item(\"Fizz\", \"3\"),\r\n            new Item(\"Buzz\", \"4\"),\r\n        };\r\n}",
        "Type": "Demos.Components.FormInputs.children.Select.props.Readonly",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "appendAndPrependItem",
        "Title": "附加代码",
        "Description": "<p><code>MSelect</code> 组件可以通过预定和附加项目进行扩展。 这完全适合自定义的 <strong>选择所有</strong> 功能。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MSelect @bind-Value=\"_selectedFruits\"\r\n             Items=\"_fruits\"\r\n             Label=\"Favorite Fruits\"\r\n             ItemValue=\"r=>r\"\r\n             ItemText=\"r=>r\"\r\n             Multiple>\r\n        <PrependItemContent>\r\n            <MListItem OnClick=\"Toggle\">\r\n                <MListItemAction>\r\n                    <MIcon Color=\"@(_selectedFruits.Count > 0 ? \"indigo darken-4\" : \"\")\">\r\n                        @Icon\r\n                    </MIcon>\r\n                </MListItemAction>\r\n                <MListItemContent>\r\n                    <MListItemTitle>\r\n                        Select All\r\n                    </MListItemTitle>\r\n                </MListItemContent>\r\n            </MListItem>\r\n            <MDivider Class=\"mt-2\"></MDivider>\r\n        </PrependItemContent>\r\n        <AppendItemContent>\r\n            <MDivider Class=\"mb-2\"></MDivider>\r\n            <MListItem Disabled>\r\n                <MListItemAvatar Color=\"grey lighten-3\">\r\n                    <MIcon>\r\n                        mdi-food-apple\r\n                    </MIcon>\r\n                </MListItemAvatar>\r\n                @if (LikesAllFruit)\r\n                {\r\n                    <MListItemContent>\r\n                        <MListItemTitle>\r\n                            Holy smokes, someone call the fruit police!\r\n                        </MListItemTitle>\r\n                    </MListItemContent>\r\n                }\r\n                else if (LikesSomeFruit)\r\n                {\r\n                    <MListItemContent>\r\n                        <MListItemTitle>\r\n                            Fruit Count\r\n                        </MListItemTitle>\r\n                        <MListItemSubtitle>\r\n                            {{ _selectedFruits.length }}\r\n                        </MListItemSubtitle>\r\n                    </MListItemContent>\r\n                }\r\n                else\r\n                {\r\n                    <MListItemContent v-else>\r\n                        <MListItemTitle>\r\n                            How could you not like fruit?\r\n                        </MListItemTitle>\r\n                        <MListItemSubtitle>\r\n                            Go ahead, make a selection above!\r\n                        </MListItemSubtitle>\r\n                    </MListItemContent>\r\n                }\r\n            </MListItem>\r\n        </AppendItemContent>\r\n    </MSelect>\r\n</MContainer>\r\n\r\n@code {\r\n    private List<string> _fruits = new List<string>\r\n\r\n      {\r\n    \"Apples\",\r\n    \"Apricots\",\r\n    \"Avocado\",\r\n    \"Bananas\",\r\n    \"Blueberries\",\r\n    \"Blackberries\",\r\n    \"Boysenberries\",\r\n    \"Bread fruit\",\r\n    \"Cantaloupes (cantalope)\",\r\n    \"Cherries\",\r\n    \"Cranberries\",\r\n    \"Cucumbers\",\r\n    \"Currants\",\r\n    \"Dates\",\r\n    \"Eggplant\",\r\n    \"Figs\",\r\n    \"Grapes\",\r\n    \"Grapefruit\",\r\n    \"Guava\",\r\n    \"Honeydew melons\",\r\n    \"Huckleberries\",\r\n    \"Kiwis\",\r\n    \"Kumquat\",\r\n    \"Lemons\",\r\n    \"Limes\",\r\n    \"Mangos\",\r\n    \"Mulberries\",\r\n    \"Muskmelon\",\r\n    \"Nectarines\",\r\n    \"Olives\",\r\n    \"Oranges\",\r\n    \"Papaya\",\r\n    \"Peaches\",\r\n    \"Pears\",\r\n    \"Persimmon\",\r\n    \"Pineapple\",\r\n    \"Plums\",\r\n    \"Pomegranate\",\r\n    \"Raspberries\",\r\n    \"Rose Apple\",\r\n    \"Starfruit\",\r\n    \"Strawberries\",\r\n    \"Tangerines\",\r\n    \"Tomatoes\",\r\n    \"Watermelons\",\r\n    \"Zucchini\"\r\n    };\r\n    private List<string> _selectedFruits = new List<string>();\r\n\r\n    public bool LikesAllFruit => _selectedFruits.Count == _fruits.Count;\r\n\r\n    public bool LikesSomeFruit => _selectedFruits.Count > 0 && !LikesAllFruit;\r\n\r\n    public string Icon\r\n    {\r\n        get\r\n        {\r\n            if (LikesAllFruit)\r\n            {\r\n                return \"mdi-close-box\";\r\n            }\r\n\r\n            if (LikesSomeFruit)\r\n            {\r\n                return \"mdi-minus-box\";\r\n            }\r\n\r\n            return \"mdi-checkbox-blank-outline\";\r\n        }\r\n    }\r\n\r\n    public void Toggle()\r\n    {\r\n        if (LikesAllFruit)\r\n        {\r\n            _selectedFruits = new List<string>();\r\n        }\r\n        else\r\n        {\r\n            _selectedFruits = new List<string>();\r\n            _selectedFruits.AddRange(_fruits);\r\n        }\r\n    }\r\n  }",
        "Type": "Demos.Components.FormInputs.children.Select.contents.AppendAndPrependItem",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 2,
        "Name": "selection",
        "Title": "选择",
        "Description": "<p><strong>SelectionContent</strong> 可用于自定义选中值在输入中显示的方式。 当您想要像 <code>foo (+2 others)</code> 或不想让选区占用多行时，这是很棒的。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MSelect @bind-Value=\"_value\"\r\n             Items=\"_items\"\r\n             Label=\"Select Item\"\r\n             ItemValue=\"r=>r\"\r\n             ItemText=\"r=>r\"\r\n             Multiple>\r\n        <SelectionContent Context=\"data\">\r\n            @if (data.Index == 0)\r\n            {\r\n                <MChip>\r\n                    <span>@data.Item</span>\r\n                </MChip>\r\n            }\r\n            else if (data.Index == 1)\r\n            {\r\n                <span class=\"grey--text text-caption\">\r\n                    (+@(_value.Count - 1) others)\r\n                </span>\r\n            }\r\n        </SelectionContent>\r\n    </MSelect>\r\n</MContainer>\r\n\r\n@code {\r\n    private List<string> _items = new List<string>{\r\n    \"foo\", \"bar\", \"fizz\", \"buzz\", \"fizzbuzz\", \"foobar\"\r\n    };\r\n    private List<string> _value = new List<string>{\r\n    \"foo\", \"bar\", \"fizz\"\r\n    };\r\n    }\r\n",
        "Type": "Demos.Components.FormInputs.children.Select.contents.Selection",
        "Style": "",
        "Debug": false,
        "Group": 2
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/autocompletes",
      "/components/combobox",
      "/components/forms"
    ],
    "Subtitle": "下拉框",
    "Title": "Selects",
    "Type": "下拉框"
  },
  {
    "Desc": "<p><code>MSlider</code> 组件是一个更好的可视化数字输入工具。 它用于收集数字数据。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MSlider\">MSlider</a></li>\n<li><a href=\"/api/MRangeSlider\">MRangeSlider</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.5818476+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>滑块表示一根条上的一系列值，用户可以从中选择一个值。 滑块组件适用于调节音量、亮度，或者图像滤镜的强度。</p>\n",
        "Code": "<div>\r\n    <MSlider TValue=\"double\" Hint=\"Im a hint\"\r\n             Max=\"50\"\r\n             Min=\"-50\"></MSlider>\r\n</div>\r\n\r\n",
        "Type": "Demos.Components.FormInputs.children.Slider.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "colors",
        "Title": "颜色",
        "Description": "<p>您可以使用 <strong>Color</strong>、<strong>TrackColor</strong> 和 <strong>ThumbColor</strong> 属性设置滑块的颜色。</p>\n",
        "Code": "<div>\r\n    <MSlider @bind-Value=\"_ex1.Val\"\r\n             Color=\"@_ex1.Color\"\r\n             Label=\"@_ex1.Label\"></MSlider>\r\n\r\n    <MSlider @bind-Value=\"_ex2.Val\"\r\n             Label=\"@_ex2.Label\"\r\n             TrackColor=\"@_ex2.Color\"></MSlider>\r\n\r\n    <MSlider @bind-Value=\"_ex3.Val\"\r\n             Label=\"@_ex3.Label\"\r\n             ThumbColor=\"@_ex3.Color\"\r\n             ThumbLabel=\"@(\"always\")\"></MSlider>\r\n</div>\r\n\r\n  @code {\r\n    public class Slider\r\n    {\r\n        public string Label { get; set; }\r\n\r\n        public double Val { get; set; }\r\n\r\n        public string Color { get; set; }\r\n    }\r\n\r\n    private Slider _ex1 = new Slider\r\n        {\r\n            Label = \"color\",\r\n            Val = 25,\r\n            Color = \"orange darken-3\"\r\n        };\r\n\r\n    private Slider _ex2 = new Slider\r\n        {\r\n            Label = \"track-color\",\r\n            Val = 75,\r\n            Color = \"green lighten-1\"\r\n        };\r\n\r\n    private Slider _ex3 = new Slider\r\n        {\r\n            Label = \"thumb-color\",\r\n            Val = 50,\r\n            Color = \"red\"\r\n        };\r\n  }\r\n\r\n",
        "Type": "Demos.Components.FormInputs.children.Slider.props.Colors",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "disabled",
        "Title": "禁用",
        "Description": "<p>您不能与 <strong>Disabled</strong> 滑块交互。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MRow>\r\n      <MCol Cols=\"12\">\r\n        <MSlider\r\n          Disabled\r\n          Label=\"Disabled\"\r\n          Value=\"30D\"\r\n        ></MSlider>\r\n      </MCol>\r\n    </MRow>\r\n  </MContainer>",
        "Type": "Demos.Components.FormInputs.children.Slider.props.Disabled",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "discrete",
        "Title": "离散的",
        "Description": "<p>离散滑块提供一个显示当前准确数量的标签。 您可以使用 <strong>Step</strong> 属性让滑块只能选择部分值。</p>\n",
        "Code": "<MCard>\r\n    <MCardText>\r\n        <MSlider TValue=\"double\"\r\n                 Step=\"10\"\r\n                 ThumbLabel=\"true\"\r\n                 Ticks=\"true\"></MSlider>\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code {\r\n    private double _value = 0;\r\n  }",
        "Type": "Demos.Components.FormInputs.children.Slider.props.Discrete",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "icons",
        "Title": "图标",
        "Description": "<p>您可以使用 <strong>AppendIcon</strong> 和 <strong>PrependIcon</strong> 属性添加图标到滑块。 您可以使用 <strong>OnAppendClick</strong> 和 <strong>OnPrependClick</strong> 绑定图标点击事件回调函数。</p>\n",
        "Code": "<MCard Flat\r\n       Color=\"transparent\">\r\n    <MSubheader>Media volume</MSubheader>\r\n    <MCardText>\r\n        <MSlider @bind-Value=\"_media\"\r\n                 PrependIcon=\"mdi-volume-high\"></MSlider>\r\n    </MCardText>\r\n\r\n    <MSubheader>Alarm volume</MSubheader>\r\n\r\n    <MCardText>\r\n        <MSlider @bind-Value=\"_alarm\"\r\n                 AppendIcon=\"mdi-alarm\"></MSlider>\r\n    </MCardText>\r\n\r\n    <MSubheader>Icon click callback</MSubheader>\r\n\r\n    <MCardText>\r\n        <MSlider @bind-Value=\"_zoom\"\r\n                 AppendIcon=\"mdi-magnify-plus-outline\"\r\n                 PrependIcon=\"mdi-magnify-minus-outline\"\r\n                 OnAppendClick=\"ZoomIn\"\r\n                 OnPrependClick=\"ZoomOut\"></MSlider>\r\n    </MCardText>\r\n</MCard>\r\n\r\n  @code {\r\n    private double _media = 0;\r\n    private double _alarm = 0;\r\n    private double _zoom = 0;\r\n\r\n    private void ZoomOut()\r\n    {\r\n        _zoom = _zoom - 10;\r\n        if (_zoom < 0)\r\n        {\r\n            _zoom = 0;\r\n        }\r\n    }\r\n\r\n    private void ZoomIn()\r\n    {\r\n        _zoom = _zoom + 10;\r\n        if (_zoom > 100)\r\n        {\r\n            _zoom = 100;\r\n        }\r\n    }\r\n  }",
        "Type": "Demos.Components.FormInputs.children.Slider.props.Icons",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "inverseLabel",
        "Title": "反向标签",
        "Description": "<p>带有 <strong>InverseLabel</strong> 属性的 <code>MSlider</code> 的标签显示在末尾。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MRow>\r\n        <MCol Cols=\"12\">\r\n            <MSlider InverseLabel\r\n                     Label=\"Inverse label\"\r\n                     Value=\"30D\"></MSlider>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>",
        "Type": "Demos.Components.FormInputs.children.Slider.props.InverseLabel",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "minAndMax",
        "Title": "最小值和最大值",
        "Description": "<p>您可以通过 <strong>Min</strong> 和 <strong>Max</strong> 设置滑块的最小值和最大值。</p>\n",
        "Code": "<MCard\r\n    Flat\r\n    Color=\"transparent\"\r\n  >\r\n    <MSubheader>Min and max default slider</MSubheader>\r\n\r\n    <MCardText>\r\n      <MRow>\r\n        <MCol Class=\"pr-4\">\r\n          <MSlider\r\n            @bind-Value=\"_slider\"\r\n            Class=\"align-center\"\r\n            Max=\"_max\"\r\n            Min=\"_min\"\r\n            HideDetails=\"true\"\r\n          >\r\n            <AppendContent>\r\n              <MTextField\r\n                @bind-Value=\"_slider\"\r\n                Class=\"mt-0 pt-0\"\r\n                HideDetails=\"true\"\r\n                SingleLine\r\n                Type=\"number\"\r\n                Style=\"width: 60px\"\r\n              ></MTextField>\r\n            </AppendContent>\r\n          </MSlider>\r\n        </MCol>\r\n      </MRow>\r\n    </MCardText>\r\n  </MCard>\r\n\r\n  @code{\r\n    private double _min = -50;\r\n    private double _max = 90;\r\n    private double _slider = 40;\r\n  }",
        "Type": "Demos.Components.FormInputs.children.Slider.props.MinAndMax",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "readonly",
        "Title": "只读",
        "Description": "<p>您不能与 <strong>Readonly</strong> 滑块交互，但它们看起来与普通滑块一样。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MRow>\r\n      <MCol Cols=\"12\">\r\n        <MSlider\r\n          Readonly\r\n          Label=\"Readonly\"\r\n          Value=\"30D\"\r\n        ></MSlider>\r\n      </MCol>\r\n    </MRow>\r\n  </MContainer>",
        "Type": "Demos.Components.FormInputs.children.Slider.props.Readonly",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "step",
        "Title": "步长",
        "Description": "<p><code>MSlider</code> 可以有1以上的步长。 这对您需要更准确地调整值的应用程序可能有帮助。</p>\n",
        "Code": "<MCard>\r\n    <MCardText>\r\n        <MSlider @bind-Value=\"_value\"\r\n                 Step=\"10\"></MSlider>\r\n    </MCardText>\r\n</MCard>\r\n\r\n  @code {\r\n    private double _value = 10;\r\n  }",
        "Type": "Demos.Components.FormInputs.children.Slider.props.Step",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "thumb",
        "Title": "缩略图标签",
        "Description": "<p>您可以使用 <strong>ThumbLabel</strong> 属性让滑块在滑动时始终显示缩略图标签。 可以通过 <strong>ThumbColor</strong> 属性设置缩略图颜色，通过 <strong>ThumbSize</strong> 属性设置大小。 使用 <strong>AlwaysDirty</strong> 属性可使其颜色保持不变，即使在 <strong>Min</strong> 值上也是如此。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MRow>\r\n        <MCol Cols=\"12\">\r\n            <MSubheader Class=\"pl-0\">\r\n                Show thumb when using _slider\r\n            </MSubheader>\r\n            <MSlider @bind-Value=\"_slider\"\r\n                     ThumbLabel=\"true\"></MSlider>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"12\">\r\n            <MSubheader Class=\"pl-0\">\r\n                Always show thumb label\r\n            </MSubheader>\r\n            <MSlider @bind-Value=\"_slider\"\r\n                     ThumbLabel=\"@(\"always\")\"></MSlider>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"12\">\r\n            <MSubheader Class=\"pl-0\">\r\n                Custom thumb size\r\n            </MSubheader>\r\n            <MSlider @bind-Value=\"_slider\"\r\n                     ThumbSize=\"24\"\r\n                     ThumbLabel=\"@(\"always\")\"></MSlider>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"12\">\r\n            <MSubheader Class=\"pl-0\">\r\n                Custom thumb label\r\n            </MSubheader>\r\n            <MSlider @bind-Value=\"_slider\"\r\n                     ThumbSize=\"24\"\r\n                     ThumbLabel=\"@(\"always\")\">\r\n                <ThumbLabelContent Context=\"value\">\r\n                    @_satisfactionEmojis[Convert.ToInt32(Math.Min(Math.Floor(value / 10), 9D))]\r\n                </ThumbLabelContent>\r\n            </MSlider>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n  @code {\r\n    private double _slider = 45;\r\n    private List<string> _satisfactionEmojis = new List<string>\r\n    {\r\n        \"\uD83D\uDE2D\", \"\uD83D\uDE22\", \"☹️\", \"\uD83D\uDE41\", \"\uD83D\uDE10\", \"\uD83D\uDE42\", \"\uD83D\uDE0A\", \"\uD83D\uDE01\", \"\uD83D\uDE04\", \"\uD83D\uDE0D\"\r\n    };\r\n  }",
        "Type": "Demos.Components.FormInputs.children.Slider.props.Thumb",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "ticks",
        "Title": "刻度",
        "Description": "<p>刻度线决定了用户能将滑块移动到的预定值。</p>\n",
        "Code": "<MCard Flat\r\n       Color=\"transparent\">\r\n    <MSubheader>Show ticks when using slider</MSubheader>\r\n\r\n    <MCardText>\r\n        <MSlider @bind-Value=\"_value\"\r\n                 Step=\"10\"\r\n                 Ticks=\"true\"></MSlider>\r\n    </MCardText>\r\n\r\n    <MSubheader>Always show ticks</MSubheader>\r\n\r\n    <MCardText>\r\n        <MSlider @bind-Value=\"_value\"\r\n                 Step=\"10\"\r\n                 Ticks=\"@(\"always\")\"></MSlider>\r\n    </MCardText>\r\n\r\n    <MSubheader>Tick size</MSubheader>\r\n\r\n    <MCardText>\r\n        <MSlider @bind-Value=\"_value\"\r\n                 Step=\"10\"\r\n                 Ticks=\"@(\"always\")\"\r\n                 TickSize=\"4\"></MSlider>\r\n    </MCardText>\r\n\r\n    <MSubheader>Tick labels</MSubheader>\r\n\r\n    <MCardText>\r\n        <MSlider @bind-Value=\"_fruits\"\r\n                 TickLabels=\"_ticksLabels\"\r\n                 Max=\"3\"\r\n                 Step=\"1\"\r\n                 Ticks=\"@(\"always\")\"\r\n                 TickSize=\"4\"></MSlider>\r\n    </MCardText>\r\n</MCard>\r\n\r\n  @code {\r\n    private double _value = 0;\r\n    private double _fruits = 0;\r\n    private List<string> _ticksLabels = new List<string>\r\n        {\r\n            \"Figs\",\r\n          \"Lemon\",\r\n          \"Pear\",\r\n          \"Apple\"\r\n        };\r\n  }",
        "Type": "Demos.Components.FormInputs.children.Slider.props.Ticks",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "validation",
        "Title": "验证",
        "Description": "<p>支持外部验证。</p>\n",
        "Code": "<MCard Flat\r\n       Color=\"transparent\">\r\n    <MSubheader>Rules</MSubheader>\r\n\r\n    <MCardText class=\"pt-0\">\r\n        <MSlider @bind-Value=\"_value\"\r\n                 ErrorMessages=\"_errorMessages\"\r\n                 Label=\"How many?\"\r\n                 Step=\"10\"\r\n                 ThumbLabel=\"@(\"always\")\"\r\n                 Ticks=\"true\"\r\n                 TValue=\"double\"\r\n                 OnChange=\"HandleOnChange\"></MSlider>\r\n    </MCardText>\r\n\r\n    <MSubheader>Persistent hint</MSubheader>\r\n\r\n    <MCardText class=\"pt-0\">\r\n        <MSlider @bind-Value=\"_value\"\r\n                 ErrorMessages=\"_errorMessages\"\r\n                 Hint=\"40 in stock\"\r\n                 Label=\"How many?\"\r\n                 PersistentHint\r\n                 Step=\"10\"\r\n                 ThumbLabel=\"@(\"always\")\"\r\n                 Ticks=\"true\"\r\n                 TValue=\"double\"\r\n                 OnChange=\"HandleOnChange\"></MSlider>\r\n    </MCardText>\r\n</MCard>\r\n\r\n  @code {\r\n    private double _value = 30;\r\n    private List<string> _errorMessages = new List<string>();\r\n\r\n    public void HandleOnChange(double val)\r\n    {\r\n        _value = val;\r\n        if (_value <= 40)\r\n        {\r\n            _errorMessages = new List<string>();\r\n        }\r\n        else\r\n        {\r\n            _errorMessages = new List<string>\r\n                {\r\n                    \"Only 40 in stock\"\r\n                };\r\n        }\r\n    }\r\n  }",
        "Type": "Demos.Components.FormInputs.children.Slider.props.Validation",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "verticalSliders",
        "Title": "垂直滑块",
        "Description": "<p>您可以使用 <strong>Vertical</strong> 属性将滑块切换为垂直方向。 如果您需要更改滑块的高度，请使用 CSS。</p>\n",
        "Code": "<MContainer>\r\n    <MRow>\r\n        <MSlider @bind-Value=\"_value\"\r\n                 Vertical\r\n                 Label=\"Regular\"></MSlider>\r\n    </MRow>\r\n</MContainer>\r\n\r\n  @code {\r\n    private double _value = 10;\r\n  }",
        "Type": "Demos.Components.FormInputs.children.Slider.props.VerticalSliders",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "appendAndPrepend",
        "Title": "附加代码",
        "Description": "<p>使用 <strong>PrependContent</strong> 和 <strong>AppendContent</strong> 插槽来轻松自定义 <code>MSlider</code> 以便适应任何情况。</p>\n",
        "Code": "<MCard Class=\"mx-auto\"\r\n       MaxWidth=\"600\">\r\n    <MToolbar Flat\r\n              Dense>\r\n        <MToolbarTitle>\r\n            <span class=\"subheading\">METRONOME</span>\r\n        </MToolbarTitle>\r\n        <MSpacer></MSpacer>\r\n        <MButton Icon>\r\n            <MIcon>mdi-share-variant</MIcon>\r\n        </MButton>\r\n    </MToolbar>\r\n\r\n    <MCardText>\r\n        <MRow Class=\"mb-4\"\r\n              Justify=\"@(\"space-between\")\">\r\n            <MCol Class=\"text-left\">\r\n                <span class=\"text-h2 font-weight-light\">@_bpm</span>\r\n                <span class=\"subheading font-weight-light mr-1\">BPM</span>\r\n                @if (_isPlaying)\r\n                {\r\n                    <MAvatar Color=\"@Color\"\r\n                         Style=\"@($\"animation-duration: {AnimationDuration}\")\"\r\n                         Class=\"mb-1 m-avatar--metronome\"\r\n                         Size=\"12\"></MAvatar>\r\n                }\r\n            </MCol>\r\n            <MCol Class=\"text-right\">\r\n                <MButton Color=\"@Color\"\r\n                         Dark\r\n                         Depressed\r\n                         Fab\r\n                         OnClick=\"Toggle\">\r\n                    <MIcon Large>\r\n                        @(_isPlaying ? \"mdi-pause\" : \"mdi-play\")\r\n                    </MIcon>\r\n                </MButton>\r\n            </MCol>\r\n        </MRow>\r\n\r\n        <MSlider @bind-Value=\"_bpm\"\r\n                 Color=\"@Color\"\r\n                 TrackColor=\"grey\"\r\n                 Min=\"40\"\r\n                 Max=\"218\">\r\n            <PrependContent>\r\n                <MIcon Color=\"@Color\"\r\n                       OnClick=\"Decrement\">\r\n                    mdi-minus\r\n                </MIcon>\r\n            </PrependContent>\r\n\r\n            <AppendContent>\r\n                <MIcon Color=\"@Color\"\r\n                       OnClick=\"Increment\">\r\n                    mdi-plus\r\n                </MIcon>\r\n            </AppendContent>\r\n        </MSlider>\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code {\r\n    private double _bpm = 40;\r\n    private bool _isPlaying;\r\n\r\n    public string Color\r\n    {\r\n        get\r\n        {\r\n            if (_bpm < 100)\r\n            {\r\n                return \"indigo\";\r\n            }\r\n\r\n            if (_bpm < 125)\r\n            {\r\n                return \"teal\";\r\n            }\r\n\r\n            if (_bpm < 140) return \"green\";\r\n\r\n            if (_bpm < 175) return \"orange\";\r\n\r\n            return \"red\";\r\n        }\r\n    }\r\n\r\n    public string AnimationDuration => $\"{60 / _bpm}s\";\r\n\r\n    public void Decrement()\r\n    {\r\n        _bpm--;\r\n    }\r\n\r\n    public void Increment()\r\n    {\r\n        _bpm++;\r\n    }\r\n\r\n    public void Toggle()\r\n    {\r\n        _isPlaying = !_isPlaying;\r\n    }\r\n}",
        "Type": "Demos.Components.FormInputs.children.Slider.contents.AppendAndPrepend",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 1,
        "Name": "appendTextField",
        "Title": "追加文本字段",
        "Description": "<p>滑块可以与它的 AppendContent**** 插槽中的其他组件合并，例如 <code>MTextField</code>，以便为组件添加额外的功能。</p>\n",
        "Code": "<MCard class=\"e4\">\r\n    <MResponsive Style=\"@($\"background: rgb({_red}, {_green}, {_blue})\")\"\r\n                 Height=\"@(\"300px\")\"></MResponsive>\r\n\r\n    <MCardText>\r\n        <MContainer Fluid>\r\n            <MRow>\r\n                <MCol Cols=\"12\">\r\n                    <MSlider @bind-Value=\"_red\"\r\n                             Max=\"255\"\r\n                             Label=\"R\"\r\n                             Class=\"align-center\">\r\n                        <AppendContent>\r\n                            <MTextField @bind-Value=\"_red\"\r\n                                        Class=\"mt-0 pt-0\"\r\n                                        Type=\"number\"\r\n                                        Style=\"width: 60px\"></MTextField>\r\n                        </AppendContent>\r\n                    </MSlider>\r\n                </MCol>\r\n\r\n                <MCol Cols=\"12\">\r\n                    <MSlider @bind-Value=\"_green\"\r\n                             Max=\"255\"\r\n                             Label=\"G\"\r\n                             Class=\"align-center\">\r\n                        <AppendContent>\r\n                            <MTextField @bind-Value=\"_green\"\r\n                                        Class=\"mt-0 pt-0\"\r\n                                        Type=\"number\"\r\n                                        Style=\"width: 60px\"></MTextField>\r\n                        </AppendContent>\r\n                    </MSlider>\r\n                </MCol>\r\n\r\n                <MCol Cols=\"12\">\r\n                    <MSlider @bind-Value=\"_blue\"\r\n                             Max=\"255\"\r\n                             Label=\"B\"\r\n                             Class=\"align-center\">\r\n                        <AppendContent>\r\n                            <MTextField @bind-Value=\"_blue\"\r\n                                        Class=\"mt-0 pt-0\"\r\n                                        Type=\"number\"\r\n                                        Style=\"width: 60px\"></MTextField>\r\n                        </AppendContent>\r\n                    </MSlider>\r\n                </MCol>\r\n            </MRow>\r\n        </MContainer>\r\n    </MCardText>\r\n</MCard>\r\n\r\n  @code {\r\n    private double _red = 64;\r\n    private double _green = 128;\r\n    private double _blue = 0;\r\n  }",
        "Type": "Demos.Components.FormInputs.children.Slider.contents.AppendTextField",
        "Style": "",
        "Debug": false,
        "Group": 2
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/forms",
      "/components/selects",
      "/components/range-sliders"
    ],
    "Subtitle": "滑块",
    "Title": "Sliders",
    "Type": "滑块"
  },
  {
    "Desc": "<p><code>MSwitch</code> 组件使用户能够在两个不同的值之间进行选择。 它们非常类似于一个切换，或开关，虽然视觉上不同于一个复选框。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MSwitch\">MSwitch</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.5848474+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>最简单形式的 <code>MSwitch</code> 提供两个值之间的切换。</p>\n",
        "Code": "<div>\r\n    <MSwitch @bind-Value=\"_show\" Label=\"@($\"Switch 1: {_show}\")\"></MSwitch>\r\n</div>\r\n\r\n@code{\r\n    private bool _show = true;\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Switch.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "color",
        "Title": "颜色",
        "Description": "<p>开关可以使用任何内置颜色和上下文名称使用 <code>Color</code> 属性进行着色。</p>\n",
        "Code": "<MCard Flat>\r\n    <MCardText>\r\n        <MContainer Fluid>\r\n            <MRow>\r\n                <MCol Cols=\"12\"\r\n                      Sm=\"4\"\r\n                      Md=\"4\">\r\n                    <MSwitch @bind-Value=\"_ex1\"\r\n                             Label=\"red\"\r\n                             Color=\"red\"\r\n                             HideDetails=\"true\"></MSwitch>\r\n                    <MSwitch @bind-Value=\"_ex2\"\r\n                             Label=\"red darken-3\"\r\n                             Color=\"red darken-3\"\r\n                             HideDetails=\"true\"></MSwitch>\r\n                </MCol>\r\n                <MCol Cols=\"12\"\r\n                      Sm=\"4\"\r\n                      Md=\"4\">\r\n                    <MSwitch @bind-Value=\"_ex3\"\r\n                             Label=\"indigo\"\r\n                             Color=\"indigo\"\r\n                             HideDetails=\"true\"></MSwitch>\r\n                    <MSwitch @bind-Value=\"_ex4\"\r\n                             Label=\"indigo darken-3\"\r\n                             Color=\"indigo darken-3\"\r\n                             HideDetails=\"true\"></MSwitch>\r\n                </MCol>\r\n                <MCol Cols=\"12\"\r\n                      Sm=\"4\"\r\n                      Md=\"4\">\r\n                    <MSwitch @bind-Value=\"_ex5\"\r\n                             Label=\"orange\"\r\n                             Color=\"orange\"\r\n                             HideDetails=\"true\"></MSwitch>\r\n                    <MSwitch @bind-Value=\"_ex6\"\r\n                             Label=\"orange darken-3\"\r\n                             Color=\"orange darken-3\"\r\n                             HideDetails=\"true\"></MSwitch>\r\n                </MCol>\r\n            </MRow>\r\n\r\n            <MRow Class=\"mt-12\">\r\n                <MCol Cols=\"12\"\r\n                      Sm=\"4\"\r\n                      Md=\"4\">\r\n                    <MSwitch @bind-Value=\"_ex7\"\r\n                             Label=\"primary\"\r\n                             Color=\"primary\"\r\n                             HideDetails=\"true\"></MSwitch>\r\n                    <MSwitch @bind-Value=\"_ex8\"\r\n                             Label=\"secondary\"\r\n                             Color=\"secondary\"\r\n                             HideDetails=\"true\"></MSwitch>\r\n                </MCol>\r\n                <MCol Cols=\"12\"\r\n                      Sm=\"4\"\r\n                      Md=\"4\">\r\n                    <MSwitch @bind-Value=\"_ex9\"\r\n                             Label=\"success\"\r\n                             Color=\"success\"\r\n                             HideDetails=\"true\"></MSwitch>\r\n                    <MSwitch @bind-Value=\"_ex10\"\r\n                             Label=\"info\"\r\n                             Color=\"info\"\r\n                             HideDetails=\"true\"></MSwitch>\r\n                </MCol>\r\n                <MCol Cols=\"12\"\r\n                      Sm=\"4\"\r\n                      Md=\"4\">\r\n                    <MSwitch @bind-Value=\"_ex11\"\r\n                             Label=\"warning\"\r\n                             Color=\"warning\"\r\n                             HideDetails=\"true\"></MSwitch>\r\n                    <MSwitch @bind-Value=\"_ex12\"\r\n                             Label=\"error\"\r\n                             Color=\"error\"\r\n                             HideDetails=\"true\"></MSwitch>\r\n                </MCol>\r\n            </MRow>\r\n        </MContainer>\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code {\r\n    private bool _ex1 = true;\r\n    private bool _ex2 = true;\r\n    private bool _ex3 = true;\r\n    private bool _ex4 = true;\r\n    private bool _ex5 = true;\r\n    private bool _ex6 = true;\r\n    private bool _ex7 = true;\r\n    private bool _ex8 = true;\r\n    private bool _ex9 = true;\r\n    private bool _ex10 = true;\r\n    private bool _ex11 = true;\r\n    private bool _ex12 = true;\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Switch.props.Color",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "flat",
        "Title": "扁平",
        "Description": "<p>您可以使用 <strong>Flat</strong> 属性渲染没有高度(z轴)的开关。</p>\n",
        "Code": "<MSheet Width=\"@(\"100%\")\"\r\n         Height=\"@(\"100%\")\"\r\n         Class=\"pa-12\">\r\n    <MSwitch @bind-Value=\"_switch1\"\r\n              Flat\r\n              Label=\"@string.Format(\"Switch 1: {0}\",_switch1)\"></MSwitch>\r\n    <MSwitch @bind-Value=\"_switch2\"\r\n              Flat\r\n              Label=\"@string.Format(\"Switch 2: {0}\",_switch2)\"></MSwitch>\r\n</MSheet>\r\n\r\n@code{\r\n    private bool _switch1=true;\r\n    private bool _switch2;\r\n}",
        "Type": "Demos.Components.FormInputs.children.Switch.props.Flat",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "inset",
        "Title": "嵌入",
        "Description": "<p>您可以在 <strong>Inset</strong> 模式下使开关渲染。</p>\n",
        "Code": "<MSheet Class=\"pa-5\">\r\n    <MSwitch @bind-Value=\"_switch1\"\r\n              Inset\r\n              Label=\"@string.Format(\"Switch 1: {0}\",_switch1)\"></MSwitch>\r\n    <MSwitch @bind-Value=\"_switch2\"\r\n              Inset\r\n              Label=\"@string.Format(\"Switch 2: {0}\",_switch2)\"></MSwitch>\r\n</MSheet>\r\n\r\n@code{\r\n    private bool _switch1=true;\r\n    private bool _switch2;\r\n}",
        "Type": "Demos.Components.FormInputs.children.Switch.props.Inset",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "state",
        "Title": "状态",
        "Description": "<p><code>MSwitch</code> 可以有不同的状态，例如<strong>default</strong>，<strong>Disabled</strong>，以及 <strong>Loading</strong>。</p>\n",
        "Code": "<MContainer fluid>\r\n    <MRow Class=\"dark--text\">\r\n        <MCol Cols=\"6\">\r\n            on\r\n        </MCol>\r\n        <MCol Cols=\"6\">\r\n            off\r\n        </MCol>\r\n    </MRow>\r\n    <MRow>\r\n        <MCol Cols=\"6\">\r\n            <MSwitch\r\n                Color=\"primary\"\r\n                @bind-Value=\"switch1\">\r\n            </MSwitch>\r\n        </MCol>\r\n        <MCol Cols=\"6\">\r\n            <MSwitch Color=\"primary\"></MSwitch>\r\n        </MCol>\r\n    </MRow>\r\n    <MRow Class=\"dark--text\">\r\n        <MCol Cols=\"6\">\r\n            on disabled\r\n        </MCol>\r\n        <MCol Cols=\"6\">\r\n            off disabled\r\n        </MCol>\r\n    </MRow>\r\n    <MRow>\r\n        <MCol Cols=\"6\">\r\n            <MSwitch\r\n                Color=\"primary\"\r\n                @bind-Value=\"switch2\"\r\n                Disabled>\r\n            </MSwitch>\r\n        </MCol>\r\n        <MCol Cols=\"6\">\r\n            <MSwitch Disabled></MSwitch>\r\n        </MCol>\r\n    </MRow>\r\n    <MRow Class=\"dark--text\">\r\n        <MCol Cols=\"6\">\r\n            on loading\r\n        </MCol>\r\n        <MCol Cols=\"6\">\r\n            off loading\r\n        </MCol>\r\n    </MRow>\r\n    <MRow>\r\n        <MCol Cols=\"6\">\r\n            <MSwitch\r\n                Loading=\"warning\"\r\n                @bind-Value=\"switch3\">\r\n            </MSwitch>\r\n        </MCol>\r\n        <MCol Cols=\"6\">\r\n            <MSwitch Loading=\"warning\"></MSwitch>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code {\r\n    bool switch1 = true;\r\n    bool switch2 = true;\r\n    bool switch3 = true;\r\n    StringBoolean warning = \"warning\";\r\n}",
        "Type": "Demos.Components.FormInputs.children.Switch.props.State",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "label",
        "Title": "LabelContent",
        "Description": "<p>文本字段标签可以在 <strong>LabelContent</strong> 中定义。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MSwitch @bind-Value=\"switchMe\">\r\n        <LabelContent>\r\n            Turn on the progress:\r\n            <MProgressCircular\r\n                Indeterminate=\"switchMe\"\r\n                Value=\"0\"\r\n                Size=\"24\"\r\n                Class=\"ml-2\">\r\n            </MProgressCircular>\r\n        </LabelContent>\r\n    </MSwitch>\r\n</MContainer>\r\n\r\n@code {\r\n    bool switchMe;\r\n}",
        "Type": "Demos.Components.FormInputs.children.Switch.contents.Label",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 0,
        "Name": "customText",
        "Title": "自定义文本",
        "Description": "<p>switch可以自定义文本</p>\n",
        "Code": "<div>\r\n    <MSwitch @bind-Value=\"_show\" LeftText=\"EN\" RightText=\"中\" Color=\"black\" TrackColor=\"#E5E6EB\"></MSwitch>\r\n</div>\r\n\r\n@code {\r\n    private bool _show = true;\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.Switch.misc.CustomText",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/checkboxes",
      "/components/forms",
      "/components/radio"
    ],
    "Subtitle": "开关",
    "Title": "Switches",
    "Type": "开关"
  },
  {
    "Desc": "<p>多行文本框组件用于收集大量文本数据。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MTextarea\">MTextarea</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.6008474+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p><code>MTextarea</code> 最简单的形式是多行文本字段，对于大量文本非常有用。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MRow>\r\n        <MCol\r\n            Cols=\"12\"\r\n            Md=\"6\">\r\n            <MTextarea\r\n                Name=\"input-7-1\"\r\n                Label=\"Default style\"\r\n                @bind-Value=\"value1\"\r\n                Hint=\"Hint text\">\r\n            </MTextarea>\r\n        </MCol>\r\n        <MCol\r\n            Cols=\"12\"\r\n            Md=\"6\">\r\n            <MTextarea\r\n                Solo\r\n                Name=\"input-7-4\"\r\n                Label=\"Solo textarea\">\r\n            </MTextarea>\r\n        </MCol>\r\n        <MCol\r\n            Cols=\"12\"\r\n            Md=\"6\">\r\n            <MTextarea\r\n                Filled\r\n                Name=\"input-7-4\"\r\n                Label=\"Filled textarea\"\r\n                @bind-Value=\"value3\">\r\n            </MTextarea>\r\n        </MCol>\r\n        <MCol\r\n            Cols=\"12\"\r\n            Md=\"6\">\r\n            <MTextarea\r\n                Outlined\r\n                Name=\"input-7-4\"\r\n                Label=\"Outlined textarea\"\r\n                @bind-Value=\"value4\">\r\n            </MTextarea>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code {\r\n    string value1 = \"The Woodman set to work at once, and so sharp was his axe that the tree was soon chopped nearly through.\";\r\n    string value3 = \"The Woodman set to work at once, and so sharp was his axe that the tree was soon chopped nearly through.\";\r\n    string value4 = \"The Woodman set to work at once, and so sharp was his axe that the tree was soon chopped nearly through.\";\r\n}",
        "Type": "Demos.Components.FormInputs.children.Textarea.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "autoGrow",
        "Title": "自动增长",
        "Description": "<p>当使用 <strong>AutoGrow</strong> 时，当包含的文本超过其大小时，多行文本框的大小将自动增加。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MTextarea Filled\r\n               Label=\"Label\"\r\n               AutoGrow\r\n               @bind-Value=\"_value\">\r\n    </MTextarea>\r\n</MContainer>\r\n\r\n@code{\r\n    private string _value = \"The Woodman set to work at once, and so sharp was his axe that the tree was soon chopped nearly through.\";\r\n}",
        "Type": "Demos.Components.FormInputs.children.Textarea.props.AutoGrow",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "backgroundColor",
        "Title": "背景色",
        "Description": "<p><strong>BackgroundColor</strong> 和 <strong>Color</strong> 让您更多地控制 <code>MTextarea</code> 的样式。</p>\n",
        "Code": "<MContainer>\r\n    <MTextarea BackgroundColor=\"light-blue\"\r\n               Color=\"black\"\r\n               Label=\"Label\">\r\n    </MTextarea>\r\n\r\n    <MTextarea BackgroundColor=\"grey lighten-2\"\r\n               Color=\"cyan\"\r\n               Label=\"Label\">\r\n    </MTextarea>\r\n\r\n    <MTextarea BackgroundColor=\"amber lighten-4\"\r\n               Color=\"orange orange-darken-4\"\r\n               Label=\"Label\">\r\n    </MTextarea>\r\n</MContainer>",
        "Type": "Demos.Components.FormInputs.children.Textarea.props.BackgroundColor",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "browserAutocomplete",
        "Title": "浏览器自动补全",
        "Description": "<p><strong>Autocomplete</strong> 让您可以启用浏览器预测用户输入的选项。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MTextarea autocomplete=\"email\"\r\n               Label=\"Email\">\r\n    </MTextarea>\r\n</MContainer>",
        "Type": "Demos.Components.FormInputs.children.Textarea.props.BrowserAutocomplete",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "clearable",
        "Title": "可清除",
        "Description": "<p>您可以使用 <strong>Clearable</strong> 从 <code>MTextarea</code> 清除文本，并使用 <strong>ClearableIcon</strong> 自定义清除图标。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MTextarea Clearable\r\n               ClearIcon=\"mdi-close-circle\"\r\n               Label=\"Text\"\r\n               @bind-Value=\"_value\">\r\n    </MTextarea>\r\n</MContainer>\r\n\r\n@code{\r\n    private string _value = \"This is clearable text.\";\r\n}",
        "Type": "Demos.Components.FormInputs.children.Textarea.props.Clearable",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "counter",
        "Title": "计数器",
        "Description": "<p><strong>Counter</strong> 通知用户 <code>MTextarea</code> 的字符限制。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MTextarea Counter=\"true\"\r\n               Label=\"Text\"\r\n               Rules=\"_rules\"\r\n               @bind-Value=\"_value\">\r\n    </MTextarea>\r\n</MContainer>\r\n\r\n@code {\r\n    private string _value = \"Hello!\";\r\n    private List<Func<string, StringBoolean>> _rules = new()\r\n        {\r\n            v => v.Length <= 25 ? true : \"Max 25 characters\"\r\n        };\r\n}",
        "Type": "Demos.Components.FormInputs.children.Textarea.props.Counter",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "icon",
        "Title": "图标",
        "Description": "<p><strong>AppendIcon</strong> 和 <strong>PrependIcon</strong> 帮助将上下文添加到 <code>MTextarea</code>.</p>\n",
        "Code": "<MContainer>\r\n    <MRow>\r\n        <MCol Cols=\"12\"\r\n              Sm=\"6\">\r\n            <MTextarea Class=\"mx-2\"\r\n                       Label=\"prepend-icon\"\r\n                       PrependIcon=\"mdi-comment\"\r\n                       Rows=\"1\">\r\n            </MTextarea>\r\n        </MCol>\r\n        <MCol Cols=\"12\"\r\n              Sm=\"6\">\r\n            <MTextarea Class=\"mx-2\"\r\n                       Label=\"append-icon\"\r\n                       Rows=\"1\"\r\n                       AppendIcon=\"mdi-comment\">\r\n            </MTextarea>\r\n        </MCol>\r\n        <MCol Cols=\"12\"\r\n              Sm=\"6\">\r\n            <MTextarea Class=\"mx-2\"\r\n                       Label=\"prepend-inner-icon\"\r\n                       PrependInnerIcon=\"mdi-comment\"\r\n                       Rows=\"1\">\r\n            </MTextarea>\r\n        </MCol>\r\n        <MCol Cols=\"12\"\r\n              Sm=\"6\">\r\n            <MTextarea Class=\"mx-2\"\r\n                       Label=\"append-outer-icon\"\r\n                       AppendOuterIcon=\"mdi-comment\"\r\n                       Rows=\"1\">\r\n            </MTextarea>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>",
        "Type": "Demos.Components.FormInputs.children.Textarea.props.Icon",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "noResize",
        "Title": "禁止缩放",
        "Description": "<p><code>MTextarea</code> 可以选择使用<strong>NoResize</strong> 保持相同的大小，而不管其内容大小。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MTextarea Label=\"Text\"\r\n               NoResize\r\n               Rows=\"1\"\r\n               Value=\"@_value\">\r\n    </MTextarea>\r\n</MContainer>\r\n\r\n@code{\r\n    private string _value = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\r\n}",
        "Type": "Demos.Components.FormInputs.children.Textarea.props.NoResize",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "row",
        "Title": "行数",
        "Description": "<p><strong>Rows</strong> 允许您定义textarea有多少行，当与 <strong>RowHeight</strong> 结合使用时，您可以通过定义行的高度来进一步自定义行。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MRow>\r\n        <MCol Cols=\"12\"\r\n              Sm=\"6\">\r\n            <MTextarea Label=\"One row\"\r\n                       AutoGrow\r\n                       Outlined\r\n                       Rows=\"1\"\r\n                       RowHeight=\"15\">\r\n            </MTextarea>\r\n        </MCol>\r\n        <MCol Cols=\"12\"\r\n              Sm=\"6\">\r\n            <MTextarea Filled\r\n                       AutoGrow\r\n                       Label=\"Two rows\"\r\n                       Rows=\"2\"\r\n                       RowHeight=\"20\">\r\n            </MTextarea>\r\n        </MCol>\r\n        <MCol Cols=\"12\"\r\n              Sm=\"6\">\r\n            <MTextarea Label=\"Three rows\"\r\n                       AutoGrow\r\n                       Outlined\r\n                       Rows=\"3\"\r\n                       RowHeight=\"25\"\r\n                       Shaped>\r\n            </MTextarea>\r\n        </MCol>\r\n        <MCol Cols=\"12\"\r\n              Sm=\"6\">\r\n            <MTextarea Filled\r\n                       AutoGrow\r\n                       Label=\"Four rows\"\r\n                       Rows=\"4\"\r\n                       RowHeight=\"30\"\r\n                       Shaped>\r\n            </MTextarea>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>",
        "Type": "Demos.Components.FormInputs.children.Textarea.props.Row",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "signupForm",
        "Title": "注册表单",
        "Description": "<p>利用替代的输入样式，您可以创建易于构建和使用的惊人界面。</p>\n",
        "Code": "@using System.ComponentModel.DataAnnotations\r\n\r\n<MCard\r\n    Class=\"mx-auto\"\r\n    Style=\"max-width: 500px;\">\r\n    <MSystemBar\r\n        Color=\"deep-purple darken-4\"\r\n        Dark>\r\n        <MSpacer></MSpacer>\r\n        <MIcon Small>\r\n            mdi-square\r\n        </MIcon>\r\n        <MIcon\r\n            Class=\"ml-1\"\r\n            Small>\r\n            mdi-circle\r\n        </MIcon>\r\n        <MIcon\r\n            Class=\"ml-1\"\r\n            Small>\r\n            mdi-triangle\r\n        </MIcon>\r\n    </MSystemBar>\r\n    <MToolbar\r\n        Color=\"deep-purple accent-4\"\r\n        Cards\r\n        Dark\r\n        Flat>\r\n        <MButton Icon>\r\n            <MIcon>mdi-arrow-left</MIcon>\r\n        </MButton>\r\n        <MCardTitle Class=\"text-h6 font-weight-regular\">\r\n            Sign up\r\n        </MCardTitle>\r\n        <MSpacer></MSpacer>\r\n        <MButton Icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n        <MButton Icon>\r\n            <MIcon>mdi-dots-vertical</MIcon>\r\n        </MButton>\r\n    </MToolbar>\r\n    <MForm\r\n        @bind-Value=\"isValid\"\r\n        @ref=\"form\"\r\n        Model=\"model\"\r\n        Class=\"pa-4 pt-6\"\r\n        EnableValidation>\r\n        <MTextField\r\n            @bind-Value=\"model.Password\"\r\n            Filled\r\n            Color=\"deep-purple\"\r\n            Counter=\"6\"\r\n            Label=\"Password\"\r\n            Style=\"min-height: 96px\"\r\n            Type=\"password\">\r\n        </MTextField>\r\n        <MTextField\r\n            @bind-Value=\"model.Phone\"\r\n            Filled\r\n            Color=\"deep-purple\"\r\n            Label=\"Phone number\">\r\n        </MTextField>\r\n        <MTextField\r\n            @bind-Value=\"model.Email\"\r\n            Filled\r\n            Color=\"deep-purple\"\r\n            Label=\"Email address\"\r\n            Type=\"email\">\r\n        </MTextField>\r\n        <MTextarea\r\n            @bind-Value=\"model.Bio\"\r\n            AutoGrow\r\n            Filled\r\n            Color=\"deep-purple\"\r\n            Label=\"Bio\"\r\n            Rows=\"1\">\r\n        </MTextarea>\r\n        <MCheckbox\r\n            @bind-Value=\"model.Agreement\"\r\n            Color=\"deep-purple\">\r\n            <LabelContent>\r\n                I agree to the\r\n                <a\r\n                    href=\"#\" @onclick=\"() => dialog = true\" @onclick:stopPropagation>\r\n                    Terms of Service\r\n                </a>\r\n                and\r\n                <a\r\n                    href=\"#\" @onclick=\"() => dialog = true\" @onclick:stopPropagation>\r\n                    Privacy Policy\r\n                </a>*\r\n\r\n            </LabelContent>\r\n        </MCheckbox>\r\n    </MForm>\r\n    <MDivider></MDivider>\r\n    <MCardActions>\r\n        <MButton\r\n            Text\r\n            OnClick=\"@(() => model.Clear())\">\r\n            Clear\r\n        </MButton>\r\n        <MSpacer></MSpacer>\r\n        <MButton\r\n            Disabled=\"!isValid\"\r\n            Class=\"white--text\"\r\n            Color=\"deep-purple accent-4\"\r\n            Depressed\r\n            OnClick=\"() => form.Validate()\">\r\n            Submit @isValid\r\n        </MButton>\r\n    </MCardActions>\r\n    <MDialog\r\n        @bind-Value=\"dialog\"\r\n        Absolute\r\n        MaxWidth=\"400\"\r\n        Persistent>\r\n        <MCard>\r\n            <MCardTitle Class=\"text-h5 grey lighten-3\">\r\n                Legal\r\n            </MCardTitle>\r\n            <MCardText>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n            </MCardText>\r\n            <MDivider></MDivider>\r\n            <MCardActions>\r\n                <MButton\r\n                    Text\r\n                    OnClick=\"() => {model.Agreement = false; dialog = false;}\">\r\n                    No\r\n                </MButton>\r\n                <MSpacer></MSpacer>\r\n                <MButton\r\n                    Class=\"white--text\"\r\n                    Color=\"deep-purple accent-4\"\r\n                    OnClick=\"() => {model.Agreement = true; dialog = false;}\">\r\n                    Yes\r\n                </MButton>\r\n            </MCardActions>\r\n        </MCard>\r\n    </MDialog>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    static string bio = \"Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts\";\r\n\r\n    bool dialog;\r\n    MForm form;\r\n    Signup model = new() {Bio = bio};\r\n\r\n    bool isValid;\r\n\r\n    public class Signup\r\n    {\r\n        [Required]\r\n        [MaxLength(6)]\r\n        [MinLength(6)]\r\n        public string Password { get; set; }\r\n\r\n        [Required]\r\n        [Phone]\r\n        public string Phone { get; set; }\r\n\r\n        [Required]\r\n        [EmailAddress]\r\n        public string Email { get; set; }\r\n\r\n        public string Bio { get; set; }\r\n\r\n        [Required]\r\n        [Range(typeof(bool), \"true\", \"true\", ErrorMessage = \"The field is required\")] // just for demo\r\n        public bool Agreement { get; set; }\r\n\r\n        public void Clear()\r\n        {\r\n            Password = null;\r\n            Phone = null;\r\n            Email = null;\r\n            Bio = null;\r\n            Agreement = false;\r\n        }\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.FormInputs.children.Textarea.misc.SignupForm",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/forms",
      "/components/selects",
      "/components/text-fields"
    ],
    "Subtitle": "多行文本框",
    "Title": "Textareas",
    "Type": "多行文本框"
  },
  {
    "Desc": "<p>文本框组件用于收集用户提供的信息。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MTextField\">MTextField</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.5958477+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>具有占位符 和/或 标签的简单文本字段。</p>\n",
        "Code": "<MForm>\r\n    <MContainer>\r\n        <MRow>\r\n            <MCol Cols=\"12\" Sm=\"6\" Md=\"3\">\r\n                <MTextField Label=\"Regular\" TValue=\"string\"></MTextField>\r\n            </MCol>\r\n            <MCol Cols=\"12\" Sm=\"6\" Md=\"3\">\r\n                <MTextField Label=\"Regular\" Placeholder=\"PlaceHolder\" TValue=\"string\"></MTextField>\r\n            </MCol>\r\n            <MCol Cols=\"12\" Sm=\"6\" Md=\"3\">\r\n                <MTextField Label=\"Solo\" Solo TValue=\"string\"></MTextField>\r\n            </MCol>\r\n            <MCol Cols=\"12\" Sm=\"6\" Md=\"3\">\r\n                <MTextField Label=\"Solo\" Solo Placeholder=\"PlaceHolder\" TValue=\"string\"></MTextField>\r\n            </MCol>\r\n        </MRow>\r\n        <MRow>\r\n            <MCol Cols=\"12\" Sm=\"6\" Md=\"3\">\r\n                <MTextField Label=\"Filled\" Filled TValue=\"string\"></MTextField>\r\n            </MCol>\r\n            <MCol Cols=\"12\" Sm=\"6\" Md=\"3\">\r\n                <MTextField Label=\"Filled\" Filled Placeholder=\"PlaceHolder\" TValue=\"string\"></MTextField>\r\n            </MCol>\r\n            <MCol Cols=\"12\" Sm=\"6\" Md=\"3\">\r\n                <MTextField Label=\"Outlined\" Outlined TValue=\"string\"></MTextField>\r\n            </MCol>\r\n            <MCol Cols=\"12\" Sm=\"6\" Md=\"3\">\r\n                <MTextField Label=\"Outlined\" Outlined Placeholder=\"PlaceHolder\" TValue=\"string\"></MTextField>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MForm>",
        "Type": "Demos.Components.FormInputs.children.TextField.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "clearable",
        "Title": "可清除",
        "Description": "<p>当 <strong>Clearable</strong> 时，您可以使用 <strong>ClearIcon</strong> 自定义清晰的图标。</p>\n",
        "Code": "<MForm>\r\n    <MContainer>\r\n        <MRow>\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField @bind-Value=\"_message1\"\r\n                            Label=\"Regular\"\r\n                            Clearable></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField @bind-Value=\"_message2\"\r\n                            Solo\r\n                            Label=\"Solo\"\r\n                            Clearable></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField @bind-Value=\"_message3\"\r\n                            Filled\r\n                            Label=\"Filled\"\r\n                            Clearable></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField @bind-Value=\"_message4\"\r\n                            Label=\"Outlined\"\r\n                            Outlined\r\n                            Clearable></MTextField>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MForm>\r\n\r\n@code{\r\n    private string _message1 = \"Hey!\";\r\n    private string _message2 = \"Hey!\";\r\n    private string _message3 = \"Hey!\";\r\n    private string _message4 = \"Hey!\";\r\n}",
        "Type": "Demos.Components.FormInputs.children.TextField.props.Clearable",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": -1,
        "Name": "counter",
        "Title": "计数器",
        "Description": "<p>使用 <strong>Counter</strong> 通知用户字符限制。计数器本身不执行任何验证—您需要将其与内部验证系统或第三方库配对。计数器可以定制 <strong>CounterValue</strong> 和 <strong>CounterContent</strong>。</p>\n",
        "Code": "<MContainer>\r\n    <MRow>\r\n        <MCol Cols=\"12\"\r\n              Sm=\"6\">\r\n            <MTextField @bind-Value=\"_title\"\r\n                        Counter=\"25\"\r\n                        Rules=\"_rules\"\r\n                        Hint=\"This field uses counter prop\"\r\n                        Label=\"Regular\">\r\n            </MTextField>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"12\"\r\n              Sm=\"6\">\r\n            <MTextField @bind-Value=\"_description\"\r\n                        Counter=\"25\"\r\n                        maxlength=\"25\"\r\n                        Rules=\"_rules\"\r\n                        Hint=\"This field uses maxlength attribute\"\r\n                        Label=\"Limit exceeded\">\r\n            </MTextField>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"12\"\r\n              Sm=\"6\">\r\n            <MTextField @bind-Value=\"_title\"\r\n                        Counter=\"5\"\r\n                        Rules=\"_wordsRules\"\r\n                        Hint=\"This field counts words instead of characters\"\r\n                        CounterValue=\"CounterValue\"\r\n                        Label=\"Custom counter from prop\">\r\n            </MTextField>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"12\"\r\n              Sm=\"6\">\r\n            <MTextField @bind-Value=\"_title\"\r\n                        Counter=\"true\"\r\n                        Rules=\"_wordsRules\"\r\n                        Hint=\"This field counts words instead of characters\"\r\n                        Label=\"Custom counter from slot\">\r\n                <CounterContent>\r\n                    <MCounter Max=\"5\" Value=\"@CounterValue(_title)\"></MCounter>\r\n                </CounterContent>\r\n            </MTextField>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code {\r\n    private string _title = \"Preliminary report\";\r\n    private string _description = \"California is a state in the western United States\";\r\n\r\n    private List<Func<string, StringBoolean>> _rules = new()\r\n    {\r\n        v => v.Length <= 25 ? true : \"Max 25 characters\"\r\n    };\r\n\r\n    private List<Func<string, StringBoolean>> _wordsRules = new()\r\n    {\r\n        v => v.Trim().Split(' ').Length <= 5 ? true : \"Max 5 words\"\r\n    };\r\n\r\n    private int CounterValue(string val)\r\n    {\r\n        val = val.Trim();\r\n        return string.IsNullOrEmpty(val) ? 0 : val.Split(' ').Length;\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.TextField.props.Counter",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "customColors",
        "Title": "自定义颜色",
        "Description": "<p>您可以选择性地将文本字段更改为材料设计色板中的任何颜色。 下面是验证的自定义表单的执行示例。</p>\n",
        "Code": "@using System.ComponentModel.DataAnnotations\r\n\r\n<MCard Flat>\r\n    <MSnackbar\r\n        @bind-Value=\"snackbar\"\r\n        Absolute\r\n        Top\r\n        Right\r\n        Color=\"success\">\r\n        <span>Registration successful!</span>\r\n        <MIcon Dark>\r\n            mdi-checkbox-marked-circle\r\n        </MIcon>\r\n    </MSnackbar>\r\n    <MForm @ref=\"form\" EnableValidation Model=\"model\">\r\n        <MContainer Fluid>\r\n            <MRow>\r\n                <MCol\r\n                    Cols=\"12\"\r\n                    Sm=\"6\">\r\n                    <MTextField\r\n                        @bind-Value=\"model.First\"\r\n                        Color=\"purple darken-2\"\r\n                        Label=\"First name\">\r\n                    </MTextField>\r\n                </MCol>\r\n                <MCol\r\n                    Cols=\"12\"\r\n                    Sm=\"6\">\r\n                    <MTextField\r\n                        @bind-Value=\"model.Last\"\r\n                        Color=\"blue darken-2\"\r\n                        Label=\"Last name\">\r\n                    </MTextField>\r\n                </MCol>\r\n                <MCol Cols=\"12\">\r\n                    <MTextarea\r\n                        @bind-Value=\"model.Bio\"\r\n                        Color=\"teal\">\r\n                        <LabelContent>\r\n                            <div>\r\n                                Bio <small>(optional)</small>\r\n                            </div>\r\n                        </LabelContent>\r\n                    </MTextarea>\r\n                </MCol>\r\n                <MCol\r\n                    Cols=\"12\"\r\n                    Sm=\"6\">\r\n                    <MSelect\r\n                        @bind-Value=\"model.FavoriteAnimal\"\r\n                        Items=\"animals\"\r\n                        ItemText=\"item => item\"\r\n                        ItemValue=\"item => item\"\r\n                        Color=\"pink\"\r\n                        Label=\"Favorite animal\">\r\n                    </MSelect>\r\n                </MCol>\r\n                <MCol\r\n                    Cols=\"12\"\r\n                    Sm=\"6\">\r\n                    <MSlider\r\n                        @bind-Value=\"model.Age\"\r\n                        Color=\"orange\"\r\n                        Label=\"Age\"\r\n                        Hint=\"Be honest\"\r\n                        Min=\"1\"\r\n                        Max=\"100\"\r\n                        ThumbLabel=\"true\">\r\n                    </MSlider>\r\n                </MCol>\r\n                <MCol Cols=\"12\">\r\n                    <MCheckbox\r\n                        @bind-Value=\"model.Terms\"\r\n                        Color=\"green\">\r\n                        <LabelContent>\r\n                            <div>\r\n                                Do you accept the\r\n                                <a\r\n                                    href=\"#\"\r\n                                    @onclick:preventDefault\r\n                                    @onclick=\"@(() => terms = true)\">\r\n                                    terms\r\n                                </a>\r\n                                and\r\n                                <a\r\n                                    href=\"#\"\r\n                                    @onclick:preventDefault\r\n                                    @onclick=\"@(() => conditions = true)\">\r\n                                    conditions?\r\n                                </a>\r\n                            </div>\r\n                        </LabelContent>\r\n                    </MCheckbox>\r\n                </MCol>\r\n            </MRow>\r\n        </MContainer>\r\n        <MCardActions>\r\n            <MButton\r\n                Text\r\n                OnClick=\"ResetForm\">\r\n                Cancel\r\n            </MButton>\r\n            <MSpacer></MSpacer>\r\n            <MButton\r\n                Disabled=\"!FormIsValid\"\r\n                Text\r\n                Color=\"primary\"\r\n                OnClick=\"Submit\">\r\n                Register\r\n            </MButton>\r\n        </MCardActions>\r\n    </MForm>\r\n    <MDialog\r\n        @bind-Value=\"terms\"\r\n        Width=\"@(\"70%\")\">\r\n        <MCard>\r\n            <MCardTitle Class=\"text-h6\">\r\n                Terms\r\n            </MCardTitle>\r\n            @foreach (var n in Enumerable.Range(0, 5))\r\n            {\r\n                <MCardText @key=\"n\">\r\n                    @content\r\n                </MCardText>\r\n            }\r\n            <MCardActions>\r\n                <MSpacer></MSpacer>\r\n                <MButton\r\n                    Text\r\n                    Color=\"purple\"\r\n                    OnClick=\"() => terms = false\">\r\n                    Ok\r\n                </MButton>\r\n            </MCardActions>\r\n        </MCard>\r\n    </MDialog>\r\n    <MDialog\r\n        @bind-Value=\"conditions\"\r\n        Width=\"@(\"70%\")\">\r\n        <MCard>\r\n            <MCardTitle Class=\"text-h6\">\r\n                Conditions\r\n            </MCardTitle>\r\n            @foreach (var n in Enumerable.Range(0, 5))\r\n            {\r\n                <MCardText @key=\"n\">\r\n                    @content\r\n                </MCardText>\r\n            }\r\n            <MCardActions>\r\n                <MSpacer></MSpacer>\r\n                <MButton\r\n                    Text\r\n                    Color=\"purple\"\r\n                    OnClick=\"() => conditions = false\">\r\n                    Ok\r\n                </MButton>\r\n            </MCardActions>\r\n        </MCard>\r\n    </MDialog>\r\n</MCard>\r\n\r\n@code{\r\n\r\n    static List<string> animals = new() { \"Dog\", \"Cat\", \"Rabbit\", \"Turtle\", \"Snake\" };\r\n\r\n    MForm form;\r\n    bool terms;\r\n    bool conditions;\r\n    bool snackbar;\r\n    string content = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta. Mauris massa. Vestibulum lacinia arcu eget nulla. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Curabitur sodales ligula in libero. Sed dignissim lacinia nunc.\";\r\n\r\n    Model model = new();\r\n\r\n    bool FormIsValid => form != null && form.EditContext.IsModified() && form.EditContext.Validate();\r\n\r\n    void ResetForm()\r\n    {\r\n        form.Reset();\r\n    }\r\n\r\n    void Submit()\r\n    {\r\n        snackbar = true;\r\n        form.Reset();\r\n    }\r\n\r\n    public class Model\r\n    {\r\n        [Required]\r\n        public string First { get; set; }\r\n\r\n        [Required]\r\n        public string Last { get; set; }\r\n\r\n        [Required]\r\n        [Range(0, 10, ErrorMessage = \"I don't believe you!\")]\r\n        public double Age { get; set; }\r\n\r\n        public string Bio { get; set; }\r\n\r\n        [Required]\r\n        public string FavoriteAnimal { get; set; }\r\n\r\n        [Required]\r\n        [Range(typeof(bool), \"true\", \"true\", ErrorMessage = \"The field is required\")] // just for demo\r\n        public bool Terms { get; set; }\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.TextField.props.CustomColors",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "customTextColors",
        "Title": "自定义文字颜色",
        "Description": "<p>您可以选择性地将输入框内文字的颜色更改为材料设计色板中的任何颜色。</p>\n",
        "Code": "<MForm>\r\n    <MContainer>\r\n        <MRow>\r\n            <MCol>\r\n                <MTextField TextColor=\"green\" TValue=\"string\" Label=\"Regular\"></MTextField>\r\n            </MCol>\r\n            <MCol>\r\n                <MTextField TValue=\"string\" TextColor=\"#fc0000\" Label=\"Regular\"></MTextField>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MForm>",
        "Type": "Demos.Components.FormInputs.children.TextField.props.CustomTextColors",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "dense",
        "Title": "密集",
        "Description": "<p>您可以使用 <strong>Dense</strong> 属性降低文件输入高度。</p>\n",
        "Code": "<MForm>\r\n    <MContainer>\r\n        <MRow>\r\n            <MCol Cols=\"12\"\r\n                   Sm=\"6\"\r\n                   Md=\"4\">\r\n                <MTextField TValue=\"string\" Dense\r\n                              Label=\"Regular\"></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                   Sm=\"6\"\r\n                   Md=\"4\">\r\n                <MTextField TValue=\"string\" Label=\"Filled\"\r\n                              Filled\r\n                              Dense></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                   Sm=\"6\"\r\n                   Md=\"4\">\r\n                <MTextField TValue=\"string\" Label=\"Filled\"\r\n                              Placeholder=\"Dense & Rounded\"\r\n                              Filled\r\n                              Rounded\r\n                              Dense></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                   Sm=\"6\"\r\n                   Md=\"4\">\r\n                <MTextField TValue=\"string\" Label=\"Solo\"\r\n                              Solo\r\n                              Dense></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                   Sm=\"6\"\r\n                   Md=\"4\">\r\n                <MTextField TValue=\"string\" Label=\"Outlined\"\r\n                              Outlined\r\n                              Dense></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                   Sm=\"6\"\r\n                   Md=\"4\">\r\n                <MTextField TValue=\"string\" Label=\"Outlined\"\r\n                              Placeholder=\"Placeholder\"\r\n                              Outlined\r\n                              Dense></MTextField>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MForm>",
        "Type": "Demos.Components.FormInputs.children.TextField.props.Dense",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "disabledAndReadonly",
        "Title": "禁用且只读",
        "Description": "<p>文本字段可以是 <strong>Disabled</strong> 或 <strong>Readonly</strong>。</p>\n",
        "Code": "<MForm>\r\n    <MContainer>\r\n        <MRow>\r\n            <MCol Cols=\"12\"\r\n                   Sm=\"6\">\r\n                <MTextField Value=\"_value\"\r\n                              Label=\"Regular\"\r\n                              Disabled></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                   Sm=\"6\">\r\n                <MTextField Value=\"_value\"\r\n                              Label=\"Regular\"\r\n                              Readonly></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                   Sm=\"6\">\r\n                <MTextField Value=\"_value\"\r\n                              Label=\"Solo\"\r\n                              Solo\r\n                              Disabled></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                   Sm=\"6\">\r\n                <MTextField Value=\"_value\"\r\n                              Label=\"Solo\"\r\n                              Solo\r\n                              Readonly></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                   Sm=\"6\">\r\n                <MTextField Value=\"_value\"\r\n                              Label=\"Filled\"\r\n                              Filled\r\n                              Disabled></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                   Sm=\"6\">\r\n                <MTextField Value=\"_value\"\r\n                              Label=\"Filled\"\r\n                              Filled\r\n                              Readonly></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                   Sm=\"6\">\r\n                <MTextField Value=\"_value\"\r\n                              Label=\"Outlined\"\r\n                              Outlined\r\n                              Disabled></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                   Sm=\"6\">\r\n                <MTextField Value=\"_value\"\r\n                              Label=\"Outlined\"\r\n                              Outlined\r\n                              Readonly></MTextField>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MForm>\r\n\r\n@code{\r\n    private string _value = \"John Doe\";\r\n}",
        "Type": "Demos.Components.FormInputs.children.TextField.props.DisabledAndReadonly",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "filled",
        "Title": "填充",
        "Description": "<p>文本字段可以与其他(布局)盒子一起使用。</p>\n",
        "Code": "<MForm>\r\n    <MContainer>\r\n        <MRow>\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField @bind-Value=\"first\"\r\n                            Label=\"First Name\"\r\n                            Filled>\r\n                </MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField @bind-Value=\"last\"\r\n                            Label=\"Last Name\"\r\n                            Filled>\r\n                </MTextField>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MForm>\r\n\r\n@code{\r\n    string first = \"John\";\r\n    string last = \"Doe\";\r\n}",
        "Type": "Demos.Components.FormInputs.children.TextField.props.Filled",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "hideDetails",
        "Title": "隐藏详细信息",
        "Description": "<p>当 <strong>HideDetails</strong> 设置为 <code>auto</code> 时，只有在有信息（提示、错误信息等）显示的情况下，才会显示信息。</p>\n",
        "Code": "<div>\r\n    <MTextField TValue=\"string\"\r\n                Rules=\"_rules\"\r\n                Label=\"Main input\"\r\n                HideDetails=\"@(\"auto\")\"></MTextField>\r\n    <MTextField TValue=\"string\"\r\n                Label=\"Another input\"></MTextField>\r\n</div>\r\n\r\n@code {\r\n    private IEnumerable<Func<string, StringBoolean>> _rules = new List<Func<string, StringBoolean>>\r\n        {\r\n            value => !string.IsNullOrEmpty(value) ? true : \"Required.\",\r\n            value => (!string.IsNullOrEmpty(value) && value.Length >= 3) ? true: \"Min 3 characters\"\r\n        };\r\n}",
        "Type": "Demos.Components.FormInputs.children.TextField.props.HideDetails",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "hint",
        "Title": "提示",
        "Description": "<p>文本字段上的 <strong>Hint</strong> 属性添加了文本字段下方提供的字符串。 使用 <strong>PersistentHint</strong> 在文本字段未被焦点时显示提示。<strong>Solo</strong> 模式不支持提示。</p>\n",
        "Code": "<MForm>\r\n    <MContainer>\r\n        <MRow>\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField Label=\"Your product or service\"\r\n                            Value=\"@(\"Grocery delivery\")\"\r\n                            Hint=\"For example, flowers or used cars\"></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField Label=\"Your landing page\"\r\n                            Value=\"@(\"\")\"\r\n                            Hint=\"www.example.com/page\"\r\n                            PersistentHint></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField Label=\"Your product or service\"\r\n                            Value=\"@(\"Grocery delivery\")\"\r\n                            Hint=\"For example, flowers or used cars\"\r\n                            Filled></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField Label=\"Your landing page\"\r\n                            Hint=\"www.example.com/page\"\r\n                            Value=\"@(\"\")\"\r\n                            PersistentHint\r\n                            Filled></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField Label=\"Your product or service\"\r\n                            Value=\"@(\"Grocery delivery\")\"\r\n                            Hint=\"For example, flowers or used cars\"\r\n                            Outlined></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField Label=\"Your landing page\"\r\n                            Value=\"@(\"\")\"\r\n                            Hint=\"www.example.com/page\"\r\n                            PersistentHint\r\n                            Outlined></MTextField>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MForm>",
        "Type": "Demos.Components.FormInputs.children.TextField.props.Hint",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "icons",
        "Title": "图标",
        "Description": "<p>您可以添加图标到文本字段使用 <strong>PrependIcon</strong>, <strong>AppendIcon</strong> 和 <strong>AppendOuterIcon</strong>。</p>\n",
        "Code": "<MForm>\r\n    <MContainer>\r\n        <MRow>\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField TValue=\"string\" Label=\"Prepend\" PrependIcon=\"mdi-map-marker\">\r\n                </MTextField>\r\n\r\n                <MTextField TValue=\"string\" Label=\"Prepend inner\" PrependInnerIcon=\"mdi-map-marker\">\r\n                </MTextField>\r\n\r\n                <MTextField TValue=\"string\" Label=\"Append\"\r\n                            AppendIcon=\"mdi-map-marker\"></MTextField>\r\n\r\n                <MTextField TValue=\"string\" Label=\"Append outer\" AppendOuterIcon=\"mdi-map-marker\">\r\n                </MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField TValue=\"string\" Solo\r\n                            Label=\"Prepend\" PrependIcon=\"mdi-map-marker\">\r\n                </MTextField>\r\n\r\n                <MTextField TValue=\"string\" Solo\r\n                            Label=\"Prepend inner\" PrependInnerIcon=\"mdi-map-marker\">\r\n                </MTextField>\r\n\r\n                <MTextField TValue=\"string\" Solo\r\n                            Label=\"Append\"\r\n                            AppendIcon=\"mdi-map-marker\"></MTextField>\r\n\r\n                <MTextField TValue=\"string\" Solo\r\n                            Label=\"Append outer\" AppendOuterIcon=\"mdi-map-marker\">\r\n                </MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField TValue=\"string\" Filled\r\n                            Label=\"Prepend\" PrependIcon=\"mdi-map-marker\">\r\n                </MTextField>\r\n\r\n                <MTextField TValue=\"string\" Filled\r\n                            Label=\"Prepend inner\" PrependInnerIcon=\"mdi-map-marker\">\r\n                </MTextField>\r\n\r\n                <MTextField TValue=\"string\" Filled\r\n                            Label=\"Append\"\r\n                            AppendIcon=\"mdi-map-marker\"></MTextField>\r\n\r\n                <MTextField TValue=\"string\" Filled\r\n                            Label=\"Append outer\" AppendOuterIcon=\"mdi-map-marker\">\r\n                </MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField TValue=\"string\" Outlined\r\n                            Label=\"Prepend\" PrependIcon=\"mdi-map-marker\">\r\n                </MTextField>\r\n\r\n                <MTextField TValue=\"string\" Outlined\r\n                            Label=\"Prepend inner\" PrependInnerIcon=\"mdi-map-marker\">\r\n                </MTextField>\r\n\r\n                <MTextField TValue=\"string\" Outlined\r\n                            Label=\"Append\"\r\n                            AppendIcon=\"mdi-map-marker\"></MTextField>\r\n\r\n                <MTextField TValue=\"string\" Outlined\r\n                            Label=\"Append outer\" AppendOuterIcon=\"mdi-map-marker\">\r\n                </MTextField>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MForm>",
        "Type": "Demos.Components.FormInputs.children.TextField.props.Icons",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "number",
        "Title": "数字输入框",
        "Description": "<p>只能输入数字与范围内的数值。</p>\n",
        "Code": "<MForm>\r\n    <MContainer>\r\n        <MRow>\r\n            <MCol Cols=\"12\" Sm=\"6\" Md=\"4\">\r\n                <MTextField Type=\"number\" TValue=\"decimal\" @bind-Value=\"basicValue\" Outlined Label=\"Basic\"></MTextField>\r\n            </MCol>\r\n            <MCol Cols=\"12\" Sm=\"6\" Md=\"4\">\r\n                <MTextField Type=\"number\" TValue=\"decimal\" @bind-Value=\"limitInputValue\" Solo Label=\"Limit Input\" NumberProps=\"@(prop=> { prop.Min = 1; prop.Max = 10; prop.Step = 0.1m; })\">\r\n                </MTextField>\r\n            </MCol>\r\n            <MCol Cols=\"12\" Sm=\"6\" Md=\"4\">\r\n                <MTextField Type=\"number\" TValue=\"decimal\" Label=\"Hide Control Button\" @bind-Value=\"closeControlValue\" NumberProps=\"@(prop=> { prop.Min = 10; prop.Max = 1000; prop.Step = 10m; prop.HideControl = true; })\">\r\n                </MTextField>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MForm>\r\n\r\n@code {\r\n    decimal basicValue = 1;\r\n    decimal limitInputValue = 1;\r\n    decimal closeControlValue = 10;\r\n}",
        "Type": "Demos.Components.FormInputs.children.TextField.props.Number",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "outlined",
        "Title": "轮廓",
        "Description": "<p>文本字段可以与其他轮廓设计一起使用。</p>\n",
        "Code": "<MForm>\r\n    <MContainer>\r\n        <MRow>\r\n            <MCol Cols=\"12\"\r\n                   Sm=\"6\">\r\n                <MTextField @bind-Value=\"_first\"\r\n                              Label=\"First Name\"\r\n                              Outlined></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                   Sm=\"6\">\r\n                <MTextField @bind-Value=\"_last\"\r\n                              Label=\"Last Name\"\r\n                              Outlined></MTextField>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MForm>\r\n\r\n@code{\r\n    private string _first;\r\n    private string _last;\r\n}",
        "Type": "Demos.Components.FormInputs.children.TextField.props.Outlined",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "prefixesAndSuffixes",
        "Title": "前缀和后缀",
        "Description": "<p><strong>Prefix</strong> 和 <strong>Suffix</strong> 属性允许您在文本字段旁边添加和附加不可更改的内联文本。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MRow>\r\n        <MCol Cols=\"4\">\r\n            <MSubheader>Prefix for dollar currency</MSubheader>\r\n        </MCol>\r\n        <MCol Cols=\"8\">\r\n            <MTextField Label=\"Amount\"\r\n                          Value=\"10.00\"\r\n                          Prefix=\"$\"></MTextField>\r\n        </MCol>\r\n    </MRow>\r\n\r\n    <MRow>\r\n        <MCol Cols=\"4\">\r\n            <MSubheader>Suffix for weight</MSubheader>\r\n        </MCol>\r\n        <MCol Cols=\"8\">\r\n            <MTextField Label=\"Weight\"\r\n                          Value=\"28.00\"\r\n                          Suffix=\"lbs\"></MTextField>\r\n        </MCol>\r\n    </MRow>\r\n\r\n    <MRow>\r\n        <MCol Cols=\"4\">\r\n            <MSubheader>Suffix for email domain</MSubheader>\r\n        </MCol>\r\n        <MCol Cols=\"8\">\r\n            <MTextField Label=\"Email address\"\r\n                          Value=\"@(\"example\")\"\r\n                          Suffix=\"@(\"@gmail.com\")\"></MTextField>\r\n        </MCol>\r\n    </MRow>\r\n\r\n    <MRow>\r\n        <MCol Cols=\"4\">\r\n            <MSubheader>Suffix for time zone</MSubheader>\r\n        </MCol>\r\n        <MCol Cols=\"8\">\r\n            <MTextField Label=\"Label Text\"\r\n                          Value=\"@(\"12:30:00\")\"\r\n                          Type=\"time\"\r\n                          Suffix=\"PST\"></MTextField>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>",
        "Type": "Demos.Components.FormInputs.children.TextField.props.PrefixesAndSuffixes",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "shaped",
        "Title": "形状",
        "Description": "<p><strong>Shaped</strong> 文本字段如果是 <strong>Outlined</strong> 则是圆角的；如果是 <strong>Filled</strong>，则具有更大的 <strong>border-radius</strong>。</p>\n",
        "Code": "<MForm>\r\n    <MContainer>\r\n        <MRow>\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField @bind-Value=\"_first\"\r\n                            Label=\"First Name\"\r\n                            Outlined\r\n                            Shaped></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField @bind-Value=\"_last\"\r\n                            Label=\"Last Name\"\r\n                            Filled\r\n                            Shaped></MTextField>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MForm>\r\n\r\n@code{\r\n    private string _first;\r\n    private string _last;\r\n}",
        "Type": "Demos.Components.FormInputs.children.TextField.props.Shaped",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "singleLine",
        "Title": "单行亮色主题",
        "Description": "<p><strong>SingleLine</strong> 文本框的标签不会浮动到焦点或数据之上。</p>\n",
        "Code": "<MForm>\r\n    <MContainer>\r\n        <MRow>\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField Label=\"Regular\"\r\n                            TValue=\"string\"\r\n                            SingleLine></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField Label=\"Solo\"\r\n                            TValue=\"string\"\r\n                            SingleLine\r\n                            Solo></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField Label=\"Filled\"\r\n                            TValue=\"string\"\r\n                            SingleLine\r\n                            Filled></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField Label=\"Outlined\"\r\n                            TValue=\"string\"\r\n                            SingleLine\r\n                            Outlined></MTextField>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MForm>",
        "Type": "Demos.Components.FormInputs.children.TextField.props.SingleLine",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "solo",
        "Title": "单独",
        "Description": "<p>文本字段可以与其他 <strong>Solo</strong> 设计一起使用。</p>\n",
        "Code": "<MForm>\r\n    <MContainer>\r\n        <MRow>\r\n            <MCol Cols=\"12\"\r\n                   Sm=\"6\">\r\n                <MTextField @bind-Value=\"_first\"\r\n                              Label=\"First Name\"\r\n                              Solo></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                   Sm=\"6\">\r\n                <MTextField @bind-Value=\"_last\"\r\n                              Label=\"Last Name\"\r\n                              SoloInverted></MTextField>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MForm>\r\n\r\n@code{\r\n    private string _first = \"John\";\r\n    private string _last = \"Doe\";\r\n}",
        "Type": "Demos.Components.FormInputs.children.TextField.props.Solo",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "validation",
        "Title": "验证",
        "Description": "<p>MASA Blazor 包括通过 规则 prop 进行简单的验证。 prop 接受了各种类型 函数, 布尔值 和 字符串 的组合。 当输入值发生变化时，数组中的每个元素将被验证。 函数传递当前的 Value 作为参数，必须返回 true / false 或 字符串 包含错误消息。</p>\n",
        "Code": "<MForm>\r\n    <MContainer>\r\n        <MRow>\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField @bind-Value=\"_title\"\r\n                            Rules=\"_titleRules\"\r\n                            Label=\"Title\"\r\n                            Counter=\"true\"\r\n                            maxlength=\"20\"></MTextField>\r\n            </MCol>\r\n\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"6\">\r\n                <MTextField @bind-Value=\"_email\"\r\n                            Rules=\"_emailRules\"\r\n                            Label=\"E-mail\"></MTextField>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MForm>\r\n\r\n  @code {\r\n    private string _title = \"Preliminary report\";\r\n    private string _email = \"\";\r\n    private Func<string, StringBoolean> _requiredRule = value => !string.IsNullOrEmpty(value) ? true : \"Required.\";\r\n    private Func<string, StringBoolean> _counterRule = value => value.Length <= 20 ? true : \"Max 20 characters\";\r\n    private Func<string, StringBoolean> _emailRule = value => System.Text.RegularExpressions.Regex.Match(value, \"^[\\\\w-]+@[\\\\w-]+\\\\.(com|net|org|edu|mil|tv|biz|info)$\").Success ? true : \"Invalid e-mail.\";\r\n    private IEnumerable<Func<string, StringBoolean>> _titleRules => new List<Func<string, StringBoolean>>\r\n        {\r\n            _requiredRule,\r\n            _counterRule\r\n        };\r\n    private IEnumerable<Func<string, StringBoolean>> _emailRules => new List<Func<string, StringBoolean>>\r\n        {\r\n            _requiredRule,\r\n            _emailRule\r\n        };\r\n  }",
        "Type": "Demos.Components.FormInputs.children.TextField.props.Validation",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "iconEvents",
        "Title": "图标事件",
        "Description": "<p><strong>OnPrependClick</strong>, <strong>OnAppendClick</strong>, <strong>OnAppendOuterClick</strong> 和 <strong>OnClearClick</strong> 将在点击相应的图标时发出。 请注意，如果使用图标插槽，将不会触发这些事件。</p>\n",
        "Code": "<MForm>\r\n    <MContainer>\r\n        <MRow>\r\n            <MCol Cols=\"12\">\r\n                <MTextField @bind-Value=\"_message\"\r\n                            AppendIcon=\"@(_marker ? \"mdi-map-marker\" : \"mdi-map-marker-off\")\"\r\n                            AppendOuterIcon=\"@(!string.IsNullOrEmpty(_message) ? \"mdi-send\" : \"mdi-microphone\")\"\r\n                            PrependIcon=\"@Icon\"\r\n                            Filled\r\n                            ClearIcon=\"mdi-close-circle\"\r\n                            Clearable\r\n                            Label=\"Message\"\r\n                            Type=\"text\"\r\n                            OnAppendClick=\"ToggleMarker\"\r\n                            OnAppendOuterClick=\"SendMessage\"\r\n                            OnClearClick=\"ClearMessage\"\r\n                            OnPrependClick=\"ChangeIcon\">\r\n                </MTextField>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MForm>\r\n\r\n@code {\r\n    private string _message = \"Hey!\";\r\n    private bool _marker = true;\r\n\r\n    private List<string> _icons = new List<string>\r\n    {\r\n        \"mdi-emoticon\",\r\n        \"mdi-emoticon-cool\",\r\n        \"mdi-emoticon-dead\",\r\n        \"mdi-emoticon-excited\",\r\n        \"mdi-emoticon-happy\",\r\n        \"mdi-emoticon-neutral\",\r\n        \"mdi-emoticon-sad\",\r\n        \"mdi-emoticon-tongue\",\r\n    };\r\n\r\n    private int _iconIndex = 0;\r\n\r\n    public string Icon => _icons[_iconIndex];\r\n\r\n    public void ToggleMarker()\r\n    {\r\n        _marker = !_marker;\r\n    }\r\n\r\n    public void ChangeIcon()\r\n    {\r\n        if (_iconIndex == _icons.Count - 1)\r\n        {\r\n            _iconIndex = 0;\r\n        }\r\n        else\r\n        {\r\n            _iconIndex++;\r\n        }\r\n    }\r\n\r\n    public void SendMessage()\r\n    {\r\n        _iconIndex = 0;\r\n        _message = \"\";\r\n    }\r\n\r\n    public void ClearMessage()\r\n    {\r\n        _message = \"\";\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.FormInputs.children.TextField.events.IconEvents",
        "Style": "",
        "Debug": false,
        "Group": 1
      },
      {
        "Order": 2,
        "Name": "iconSlots",
        "Title": "图标插槽",
        "Description": "<p>可以使用插槽来扩展输入的功能，而不是使用 <strong>Prepend</strong>/<strong>Append</strong>/<strong>AppendOuter</strong> 图标。</p>\n",
        "Code": "<MForm>\r\n    <MContainer>\r\n        <MRow>\r\n            <MCol Cols=\"12\">\r\n                <MTextField @bind-Value=\"_message\"\r\n                            Outlined\r\n                            Clearable\r\n                            Label=\"Message\"\r\n                            Type=\"text\">\r\n                    <PrependContent>\r\n                        <MTooltip Bottom>\r\n                            <ActivatorContent Context=\"activatorContext\">\r\n                                <MIcon @attributes=\"activatorContext.Attrs\">\r\n                                    mdi-help-circle-outline\r\n                                </MIcon>\r\n                            </ActivatorContent>\r\n                            <ChildContent>\r\n                                I'm a tooltip\r\n                            </ChildContent>\r\n                        </MTooltip>\r\n                    </PrependContent>\r\n                    <AppendContent>\r\n                        <img width=\"24\"\r\n                             height=\"24\"\r\n                             src=\"_content/Masa.Blazor.Doc/masa.png\"\r\n                             alt=\"\">\r\n                    </AppendContent>\r\n                    <AppendOuterContent>\r\n                        <MMenu Style=\"top: -12px\"\r\n                               OffsetY>\r\n                            <ActivatorContent Context=\"menu\">\r\n                                <MButton @attributes=\"menu.Attrs\">\r\n                                    <MIcon Left>\r\n                                        mdi-menu\r\n                                    </MIcon>\r\n                                    Menu\r\n                                </MButton>\r\n                            </ActivatorContent>\r\n                            <ChildContent>\r\n                                <MCard>\r\n                                    <MCardText Class=\"pa-6\">\r\n                                        <MButton Large\r\n                                                 Text\r\n                                                 Color=\"primary\">\r\n                                            <MIcon Left>\r\n                                                mdi-target\r\n                                            </MIcon>Click me\r\n                                        </MButton>\r\n                                    </MCardText>\r\n                                </MCard>\r\n                            </ChildContent>\r\n                        </MMenu>\r\n                    </AppendOuterContent>\r\n                </MTextField>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MForm>\r\n\r\n@code {\r\n    private string _message = \"Hey!\";\r\n\r\n}",
        "Type": "Demos.Components.FormInputs.children.TextField.contents.IconSlots",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 2,
        "Name": "label",
        "Title": "标签",
        "Description": "<p>文本字段标签可以在 <strong>LabelContent</strong> 中定义。</p>\n",
        "Code": "<MForm>\r\n    <MContainer>\r\n        <MTextField TValue=\"string\">\r\n            <LabelContent>\r\n                What about <strong>icon</strong> here?\r\n                <MIcon Style=\"vertical-align: middle\">\r\n                    mdi-file-find\r\n                </MIcon>\r\n            </LabelContent>\r\n        </MTextField>\r\n        <MTextField TValue=\"string\">\r\n            <LabelContent>\r\n                <span class=\"error--text\">*</span>姓名\r\n            </LabelContent>\r\n        </MTextField>\r\n    </MContainer>\r\n</MForm>",
        "Type": "Demos.Components.FormInputs.children.TextField.contents.Label",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 2,
        "Name": "progress",
        "Title": "进度条",
        "Description": "<p>您可以显示进度条而不是底线。 您可以使用与文本字段相同的默认不可确定的进度或使用 <strong>ProgressContent</strong> 指定一个自定义的进度。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MCheckbox @bind-Value=\"_custom\"\r\n               Label=\"Custom progress bar\">\r\n    </MCheckbox>\r\n    @if (_custom)\r\n    {\r\n        <MTextField @bind-Value=\"_value\"\r\n                    Color=\"cyan darken\"\r\n                    Label=\"Text field\"\r\n                    Placeholder=\"Start typing...\"\r\n                    Loading=\"true\">\r\n            <ProgressContent>\r\n                <MProgressLinear Color=\"error\"\r\n                                 Absolute\r\n                                 Height=\"7\">\r\n                </MProgressLinear>\r\n            </ProgressContent>\r\n        </MTextField>\r\n    }\r\n    else\r\n    {\r\n        <MTextField @bind-Value=\"_value\"\r\n                    Color=\"cyan darken\"\r\n                    Label=\"Text field\"\r\n                    Placeholder=\"Start typing...\"\r\n                    Loading=\"true\">\r\n        </MTextField>\r\n    }\r\n</MContainer>\r\n\r\n@code {\r\n    private string _value = \"\";\r\n    private bool _custom = true;\r\n}",
        "Type": "Demos.Components.FormInputs.children.TextField.contents.Progress",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 3,
        "Name": "fullWidthWithCounter",
        "Title": "带计数器的全宽度",
        "Description": "<p>全宽文本字段允许您创建无限输入。 在此示例中，我们使用 <code>MDivider</code> 分隔字段。</p>\n",
        "Code": "<MForm>\r\n    <MAutocomplete @bind-Value=\"selected\"\r\n                   Items=\"@items\"\r\n                   ItemText=\"item => item\"\r\n                   ItemValue=\"item => item\"\r\n                   Chips\r\n                   Label=\"To\"\r\n                   FullWidth\r\n                   HideDetails=true\r\n                   HideNoData\r\n                   HideSelected\r\n                   Multiple\r\n                   SingleLine>\r\n    </MAutocomplete>\r\n    <MDivider></MDivider>\r\n    <MTextField Label=\"Subject\"\r\n                @bind-Value=\"@subject\"\r\n                SingleLine\r\n                FullWidth\r\n                HideDetails=true>\r\n    </MTextField>\r\n    <MDivider></MDivider>\r\n    <MTextarea @bind-Value=\"title\"\r\n               Label=\"Message\"\r\n               Counter=true\r\n               FullWidth\r\n               SingleLine\r\n               maxlength=\"120\">\r\n    </MTextarea>\r\n</MForm>\r\n\r\n@code {\r\n\r\n    readonly List<string> items = new() { \"Trevor Handsen\", \"Alex Nelson\" };\r\n\r\n    List<string> selected = new() { \"Trevor Handsen\" };\r\n\r\n    string subject = \"Plans for the weekend\";\r\n\r\n    string title = \"Hi,\\nI just wanted to check in and see if you had any plans the upcoming weekend. We are thinking of heading up to Napa\";\r\n\r\n}",
        "Type": "Demos.Components.FormInputs.children.TextField.misc.FullWidthWithCounter",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 3,
        "Name": "passwordInput",
        "Title": "密码输入",
        "Description": "<p>使用<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/password\">password</a>类型可以与附加图标和回调一起使用，以控制可见性。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MRow>\r\n        <MCol\r\n            Cols=\"12\"\r\n            Sm=\"6\">\r\n            <MTextField\r\n                @bind-Value=\"password\"\r\n                AppendIcon=\"@(show1 ? \"mdi-eye\" : \"mdi-eye-off\")\"\r\n                Rules=\"RequiredAndMinRule\"\r\n                Type=\"@(show1 ? \"text\" : \"password\")\"\r\n                Name=\"input-10-1\"\r\n                Label=\"Normal with hint text\"\r\n                Hint=\"At least 8 characters\"\r\n                Counter=\"true\"\r\n                OnAppendClick=\"() => show1 = !show1\">\r\n            </MTextField>\r\n        </MCol>\r\n\r\n        <MCol\r\n            Cols=\"12\"\r\n            Sm=\"6\">\r\n            <MTextField\r\n                AppendIcon=\"@(show2 ? \"mdi-eye\" : \"mdi-eye-off\")\"\r\n                Rules=\"RequiredAndMinRule\"\r\n                Type=\"@(show2 ? \"text\" : \"password\")\"\r\n                Name=\"input-10-2\"\r\n                Label=\"Visible\"\r\n                Hint=\"At least 8 characters\"\r\n                TValue=\"string\"\r\n                Value=\"@(\"wqfasds\")\"\r\n                Class=\"input-group--focused\"\r\n                OnAppendClick=\"() => show2 = !show2\">\r\n            </MTextField>\r\n        </MCol>\r\n\r\n        <MCol\r\n            Cols=\"12\"\r\n            Sm=\"6\">\r\n            <MTextField\r\n                AppendIcon=\"@(show3 ? \"mdi-eye\" : \"mdi-eye-off\")\"\r\n                Rules=\"RequiredAndMinRule\"\r\n                Type=\"@(show3 ? \"text\" : \"password\")\"\r\n                Name=\"input-10-2\"\r\n                Label=\"Not visible\"\r\n                Hint=\"At least 8 characters\"\r\n                Value=\"@(\"wqfasds\")\"\r\n                Class=\"input-group--focused\"\r\n                OnAppendClick=\"() => show3 = !show3\">\r\n            </MTextField>\r\n        </MCol>\r\n\r\n        <MCol\r\n            Cols=\"12\"\r\n            Sm=\"6\">\r\n            <MTextField\r\n                AppendIcon=\"@(show4 ? \"mdi-eye\" : \"mdi-eye-off\")\"\r\n                Rules=\"RequiredAndEmailMatchRule\"\r\n                Type=\"@(show4 ? \"text\" : \"password\")\"\r\n                Name=\"input-10-2\"\r\n                Label=\"Error\"\r\n                Hint=\"At least 8 characters\"\r\n                Value=\"@(\"Pa\")\"\r\n                Error\r\n                OnAppendClick=\"() => show4 = !show4\">\r\n            </MTextField>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code {\r\n\r\n    private bool show1;\r\n    private bool show2 = true;\r\n    private bool show3;\r\n    private bool show4;\r\n\r\n    private string password = \"Password\";\r\n\r\n    private Func<string, StringBoolean> RequiredRule => val => string.IsNullOrEmpty(val) ? \"Required.\" : true;\r\n    private Func<string, StringBoolean> MinRule => val => val.Length >= 8 ? true : \"Min 8 characters\";\r\n    private Func<string, StringBoolean> EmailMatchRule => val => \"The email and password you entered don't match\";\r\n\r\n    private IEnumerable<Func<string, StringBoolean>> RequiredAndMinRule => new List<Func<string, StringBoolean>>()\r\n    {\r\n        RequiredRule,\r\n        MinRule\r\n    };\r\n\r\n    private IEnumerable<Func<string, StringBoolean>> RequiredAndEmailMatchRule => new List<Func<string, StringBoolean>>()\r\n    {\r\n        RequiredRule,\r\n        EmailMatchRule\r\n    };\r\n\r\n}\r\n",
        "Type": "Demos.Components.FormInputs.children.TextField.misc.PasswordInput",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/forms",
      "/components/selects",
      "/components/textareas"
    ],
    "Subtitle": "文本框",
    "Title": "Text fields",
    "Type": "文本框"
  },
  {
    "Desc": "<p>Masa.Blazor 配备了一个使用 flexbox 构建的 12 格网格系统。 网格用于在应用的内容中创建特定的布局。 它包含 5 种类型的媒体断点，用于针对特定的屏幕尺寸或方向，xs、sm、md、lg 和 xl。 这些分辨率在视口断点表中定义如下，可以通过自定义断点进行修改。</p>\n<div\n  class=\"overflow-hidden mb-12 overflow-hidden m-sheet m-sheet--outlined theme--light rounded\"\n>\n  <div class=\"m-data-table theme--light\">\n    <div class=\"m-data-table__wrapper\">\n      <table>\n        <caption class=\"pa-4\">\n          Material Design 断点\n        </caption>\n        <thead>\n          <tr class=\"text-left\">\n            <th>设备</th>\n            <th>代码</th>\n            <th>类型</th>\n            <th>像素范围</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <span\n                aria-hidden=\"true\"\n                class=\"m-icon notranslate m-icon--left theme--light\"\n                ><svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                  role=\"img\"\n                  aria-hidden=\"true\"\n                  class=\"m-icon__svg\"\n                >\n                  <path\n                    d=\"M17,19H7V5H17M17,1H7C5.89,1 5,1.89 5,3V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V3C19,1.89 18.1,1 17,1Z\"\n                  ></path></svg></span\n              ><span>Extra small (超小号)</span>\n            </td>\n            <td><strong>xs</strong></td>\n            <td>小型号到大型号的手机</td>\n            <td>&lt; 600px</td>\n          </tr>\n          <tr>\n            <td>\n              <span\n                aria-hidden=\"true\"\n                class=\"m-icon notranslate m-icon--left theme--light\"\n                ><svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                  role=\"img\"\n                  aria-hidden=\"true\"\n                  class=\"m-icon__svg\"\n                >\n                  <path\n                    d=\"M19,18H5V6H19M21,4H3C1.89,4 1,4.89 1,6V18A2,2 0 0,0 3,20H21A2,2 0 0,0 23,18V6C23,4.89 22.1,4 21,4Z\"\n                  ></path></svg></span\n              ><span>Small (小号)</span>\n            </td>\n            <td><strong>sm</strong></td>\n            <td>小型号到中型号的平板</td>\n            <td>600px &gt; &lt; 960px</td>\n          </tr>\n          <tr>\n            <td>\n              <span\n                aria-hidden=\"true\"\n                class=\"m-icon notranslate m-icon--left theme--light\"\n                ><svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                  role=\"img\"\n                  aria-hidden=\"true\"\n                  class=\"m-icon__svg\"\n                >\n                  <path\n                    d=\"M4,6H20V16H4M20,18A2,2 0 0,0 22,16V6C22,4.89 21.1,4 20,4H4C2.89,4 2,4.89 2,6V16A2,2 0 0,0 4,18H0V20H24V18H20Z\"\n                  ></path></svg></span\n              ><span>Medium (中号)</span>\n            </td>\n            <td><strong>md</strong></td>\n            <td>大型号平板到手提电脑</td>\n            <td>960px &gt; &lt; 1264px*</td>\n          </tr>\n          <tr>\n            <td>\n              <span\n                aria-hidden=\"true\"\n                class=\"m-icon notranslate m-icon--left theme--light\"\n                ><svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                  role=\"img\"\n                  aria-hidden=\"true\"\n                  class=\"m-icon__svg\"\n                >\n                  <path\n                    d=\"M21,16H3V4H21M21,2H3C1.89,2 1,2.89 1,4V16A2,2 0 0,0 3,18H10V20H8V22H16V20H14V18H21A2,2 0 0,0 23,16V4C23,2.89 22.1,2 21,2Z\"\n                  ></path></svg></span\n              ><span>Large (大号)</span>\n            </td>\n            <td><strong>lg</strong></td>\n            <td>桌面端</td>\n            <td>1264px &gt; &lt; 1904px*</td>\n          </tr>\n          <tr>\n            <td>\n              <span\n                aria-hidden=\"true\"\n                class=\"m-icon notranslate m-icon--left theme--light\"\n                ><svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                  role=\"img\"\n                  aria-hidden=\"true\"\n                  class=\"m-icon__svg\"\n                >\n                  <path\n                    d=\"M21,17H3V5H21M21,3H3A2,2 0 0,0 1,5V17A2,2 0 0,0 3,19H8V21H16V19H21A2,2 0 0,0 23,17V5A2,2 0 0,0 21,3Z\"\n                  ></path></svg></span\n              ><span>Extra large (超大号)</span>\n            </td>\n            <td><strong>xl</strong></td>\n            <td>4K 和超宽屏幕</td>\n            <td>&gt; 1904px*</td>\n          </tr>\n        </tbody>\n        <tfoot>\n          <tr>\n            <td colspan=\"4\" class=\"text-caption text-center grey--text\">\n              <em>桌面端上浏览器滚动条的宽度为 * -16px </em>\n            </td>\n          </tr>\n          <tr>\n            <td colspan=\"4\" class=\"text-right text--secondary\">\n              <small class=\"d-block mr-n1 mb-n6\"\n                ><a\n                  href=\"https://material.io/design/layout/responsive-layout-grid.html\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  class=\"text-decoration-none d-inline-flex align-center\"\n                  ><span\n                    aria-hidden=\"true\"\n                    class=\"m-icon notranslate mr-1 theme--light\"\n                    style=\"\n                      font-size: 16px;\n                      height: 16px;\n                      width: 16px;\n                      color: inherit;\n                    \"\n                    ><svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 24 24\"\n                      role=\"img\"\n                      aria-hidden=\"true\"\n                      class=\"m-icon__svg\"\n                      style=\"font-size: 16px; height: 16px; width: 16px\"\n                    >\n                      <path\n                        d=\"M21,12C21,9.97 20.33,8.09 19,6.38V17.63C20.33,15.97 21,14.09 21,12M17.63,19H6.38C7.06,19.55 7.95,20 9.05,20.41C10.14,20.8 11.13,21 12,21C12.88,21 13.86,20.8 14.95,20.41C16.05,20 16.94,19.55 17.63,19M11,17L7,9V17H11M17,9L13,17H17V9M12,14.53L15.75,7H8.25L12,14.53M17.63,5C15.97,3.67 14.09,3 12,3C9.91,3 8.03,3.67 6.38,5H17.63M5,17.63V6.38C3.67,8.09 3,9.97 3,12C3,14.09 3.67,15.97 5,17.63M23,12C23,15.03 21.94,17.63 19.78,19.78C17.63,21.94 15.03,23 12,23C8.97,23 6.38,21.94 4.22,19.78C2.06,17.63 1,15.03 1,12C1,8.97 2.06,6.38 4.22,4.22C6.38,2.06 8.97,1 12,1C15.03,1 17.63,2.06 19.78,4.22C21.94,6.38 23,8.97 23,12Z\"\n                      ></path></svg></span\n                  ><span>规格</span></a\n                ></small\n              >\n            </td>\n          </tr>\n        </tfoot>\n      </table>\n    </div>\n  </div>\n</div>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MContainer\">MContainer</a></li>\n<li><a href=\"/api/MRow\">MRow</a></li>\n<li><a href=\"/api/MCol\">MCol</a></li>\n<li><a href=\"/api/MSpacer\">MSpacer</a></li>\n</ul>\n",
      "子组件": "\n<ul>\n<li><code>MContainer</code>：<code>MContainer</code> 提供了将你的网站内容居中和水平填充的功能。 你还可以使用 <strong>Fluid</strong> 属性将容器在所有视口和设备尺寸上完全扩展。</li>\n<li><code>MCol</code>：<code>MCol</code> 包裹内容，它必须是 <code>MRow</code> 的直接子集。</li>\n<li><code>MRow</code>：<code>MRow</code> 是 <code>MCol</code> 的容器组件。 它使用 <strong>Flex</strong> 属性来控制其内栏的布局和流。 它使用的是 <strong>24px</strong> 的标准间隔。 这可以用 <strong>Dense</strong> 属性来减小，或者用 <strong>NoGutters</strong>\n来完全去除。</li>\n<li><code>MSpacer</code>：<code>MSpacer</code> 是一个基本而又通用的间隔组件，用于分配父子组件之间的剩余宽度。 当一个 <code>MSpacer</code> 放置在子组件之前或之后时，组件将推到其容器的左右两侧。 当多个组件之间使用多个 <code>MSpacer</code> 时，剩余的宽度将均匀地分布在每个 spacer 之间。</li>\n</ul>\n",
      "辅助类": "\n<p><strong>FillHeight</strong>将<code>height:100%</code>应用于元素。当应用于<code>MContainer</code>时，它还包括<code>align items:center</code>。</p>\n",
      "注意": "\n<!--alert:info--> \n<p>1.x 网格系统已被废弃，请改用 2.x 网格系统。 1.x 网格的文档可以在 v1.5 文档 中找到。</p>\n<!--alert:info--> \n<!--alert:info--> \n<p>网格组件上基于断点的属性以 <code>andUp</code> 的方式工作。 考虑 <strong>xs</strong> 断点已经被删除的情况， 这将会影响到 <strong>offset</strong>、<strong>justify</strong>、<strong>align</strong> 和 <code>MCol</code> 上的断点属性。</p>\n<ul>\n<li>像 <strong>justify-sm</strong> 和 <strong>justify-md</strong> 这样的属性仍然存在，但 <strong>justify-xs</strong> 会变成 <strong>justify</strong>。</li>\n<li><code>MCol</code> 上不存在 <strong>xs</strong> 属性。 与此对应的是 <strong>cols</strong> 属性。</li>\n</ul>\n<!--alert:info--> \n<!--alert:info--> \n<p>当在 IE11 使用网格系统时，你需要设置一个显式的 <code>height</code>，因为 <code>min-height</code> 不足进而导致非预期结果。</p>\n<!--alert:info--> \n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.6098474+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>Masa.Blazor 网格深受 <a href=\"https://getbootstrap.com/docs/4.0/layout/grid/\">Bootstrap 网格</a> 的启发。 它使用一系列的容器、行、列来整合内容的布局和排列。 如果你不熟悉\nflexbox，<a href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/#flexbox-background\">阅读 CSS Tricks flexbox 指南</a>，了解背景、术语、指南和代码片段。</p>\n",
        "Code": "<MContainer Class=\"grey lighten-5\">\r\n    <MRow NoGutters>\r\n        @for (var i = 0; i < 3; i++)\r\n        {\r\n            <MCol Cols=\"12\"\r\n                  Sm=\"4\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    One of three columns\r\n                </MCard>\r\n            </MCol>\r\n        }\r\n    </MRow>\r\n</MContainer>\r\n",
        "Type": "Demos.Components.Grid.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "align",
        "Title": "垂直对齐",
        "Description": "<p>使用 <strong>Align</strong> 和 <strong>AlignSelf</strong> 属性来改变 flex 项目及其父项的垂直对齐方式。</p>\n",
        "Code": "<div>\r\n    @foreach (var align in _alignments)\r\n    {\r\n        <MContainer Class=\"grey lighten-5 mb-6\">\r\n            <MRow Align=\"@align\"\r\n                  NoGutters\r\n                  Style=\"height: 150px;\">\r\n                @for (int i = 0; i < 3; i++)\r\n                {\r\n                    <MCol>\r\n                        <MCard Class=\"pa-2\"\r\n                               Outlined\r\n                               tile>\r\n                            One of three columns\r\n                        </MCard>\r\n                    </MCol>\r\n                }\r\n            </MRow>\r\n        </MContainer>\r\n    }\r\n\r\n    <MContainer Class=\"grey lighten-5\">\r\n        <MRow NoGutters\r\n              Style=\"height: 150px;\">\r\n            @foreach (var align in _alignments)\r\n            {\r\n                <MCol Align=\"@align\">\r\n                    <MCard Class=\"pa-2\"\r\n                           Outlined\r\n                           tile>\r\n                        One of three columns\r\n                    </MCard>\r\n                </MCol>\r\n            }\r\n        </MRow>\r\n    </MContainer>\r\n</div>\r\n\r\n@code{\r\n    private string[] _alignments = new string[]\r\n    {\r\n        \"start\",\r\n        \"center\",\r\n        \"end\"\r\n    };\r\n}\r\n",
        "Type": "Demos.Components.Grid.props.Align",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "breakpointSizing",
        "Title": "断点尺寸",
        "Description": "<p>列将自动占用其父容器内相等的空间。 这可以使用 <strong>Cols</strong> 属性来修改。 你还可以使用 <strong>Sm</strong>、<strong>Md</strong>、<strong>Lg</strong> 和 <strong>Xl</strong> 属性来进一步定义不同视口尺寸下的列占用空间。</p>\n",
        "Code": "<MContainer Class=\"grey lighten-5\">\r\n    @for (int i = 1; i <= 2; i++)\r\n    {\r\n        var n = i + 1;\r\n        <MRow Class=\"@(i == 1 ? \"mb-6\" : null)\"\r\n              NoGutters>\r\n            @for (int j = 0; j < n + 1; j++)\r\n            {\r\n                var k = j + 1;\r\n                <MCol>\r\n                    <MCard Class=\"pa-2\"\r\n                           Outlined\r\n                           tile>\r\n                        @($\"{ k } of { n + 1 }\")\r\n                    </MCard>\r\n                </MCol>\r\n            }\r\n        </MRow>\r\n    }\r\n</MContainer>",
        "Type": "Demos.Components.Grid.props.BreakpointSizing",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "justify",
        "Title": "水平对齐",
        "Description": "<p>使用 <strong>Justify</strong> 属性改变 flex 项目的水平对齐方式。</p>\n",
        "Code": "<MContainer Class=\"grey lighten-5\">\r\n    @foreach (var j in _justify)\r\n    {\r\n        <MRow Justify=\"@j\">\r\n            @for (int i = 0; i < 2; i++)\r\n            {\r\n                <MCol Md=\"4\">\r\n                    <MCard Class=\"pa-2\"\r\n                           Outlined\r\n                           tile>\r\n                        One of two columns\r\n                    </MCard>\r\n                </MCol>\r\n            }\r\n        </MRow>\r\n    }\r\n</MContainer>\r\n\r\n@code{\r\n    private string[] _justify = new string[]\r\n    {\r\n        \"start\",\r\n        \"center\",\r\n        \"end\",\r\n        \"space-around\",\r\n        \"space-between\"\r\n    };\r\n}",
        "Type": "Demos.Components.Grid.props.Justify",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "noGutters",
        "Title": "无间隔",
        "Description": "<p>你可以使用 <strong>NoGutters</strong> 属性从 <code>MRow</code> 中移除负值外边距，从其直接子 <strong>MCol</strong> 中移除内边距。</p>\n",
        "Code": "<MContainer Class=\"grey lighten-5\">\r\n    <MRow NoGutters>\r\n        <MCol Cols=\"12\"\r\n              Sm=\"6\"\r\n              Md=\"8\">\r\n            <MCard Class=\"pa-2\"\r\n                   Outlined\r\n                   tile>\r\n                .col-12 .col-sm-6 .col-md-8\r\n            </MCard>\r\n        </MCol>\r\n        <MCol Cols=\"6\"\r\n              Md=\"4\">\r\n            <MCard Class=\"pa-2\"\r\n                   Outlined\r\n                   tile>\r\n                .col-6 .col-md-4\r\n            </MCard>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>",
        "Type": "Demos.Components.Grid.props.NoGutters",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "offset",
        "Title": "偏移",
        "Description": "<p>偏移对于控制元素不可见或控制内容位置很有用。 就像断点一样，你可以为任何可用的尺寸设置一个偏移。 这使你可以根据自己的需求精确地调整应用布局。</p>\n",
        "Code": "<div>\r\n    <MContainer Class=\"grey lighten-5\">\r\n        <MRow Class=\"mb-6\"\r\n              NoGutters>\r\n            <MCol Md=\"4\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    .col-md-4\r\n                </MCard>\r\n            </MCol>\r\n            <MCol Md=\"4\" OffsetMd=\"4\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    .col-md-4 .offset-md-4\r\n                </MCard>\r\n            </MCol>\r\n        </MRow>\r\n        <MRow Class=\"mb-6\"\r\n              NoGutters>\r\n            <MCol Md=\"3\" \r\n                  OffsetMd=\"3\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    .col-md-3 .offset-md-3\r\n                </MCard>\r\n            </MCol>\r\n            <MCol Md=\"3\" \r\n                  OffsetMd=\"3\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    .col-md-3 .offset-md-3\r\n                </MCard>\r\n            </MCol>\r\n        </MRow>\r\n        <MRow NoGutters>\r\n            <MCol Md=\"6\"\r\n                  OffsetMd=\"3\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tite>\r\n                    .col-md-6 .offset-md-3\r\n                </MCard>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</div>",
        "Type": "Demos.Components.Grid.props.Offset",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "offsetBreakpoint",
        "Title": "偏移断点",
        "Description": "<p>偏移也可以在每个断点的基础上设置。</p>\n",
        "Code": "<div>\r\n    <MContainer Class=\"grey lighten-5\">\r\n        <MRow Class=\"mb-6\"\r\n              NoGutters>\r\n            <MCol Sm=\"5\" \r\n                  Md=\"6\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tite>\r\n                    .col-sm-5 .col-md-6\r\n                </MCard>\r\n            </MCol>\r\n            <MCol \r\n                Sm=\"5\" \r\n                OffsetSm=\"2\" \r\n                Md=\"6\"\r\n                OffsetMd=\"0\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tite>\r\n                    .col-sm-5 .offset-sm-2 .col-md-6 .offset-md-0\r\n                </MCard>\r\n            </MCol>\r\n        </MRow>\r\n        <MRow NoGutters>\r\n            <MCol Sm=\"6\"\r\n                  Md=\"5\"\r\n                  Lg=\"6\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    .col-sm-6 .col-md-5 .col-lg-6\r\n                </MCard>\r\n            </MCol>\r\n            <MCol Sm=\"6\"\r\n                  Md=\"5\"\r\n                  OffsetMd=\"2\"\r\n                  Lg=\"6\"\r\n                  OffsetLg=\"0\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    .col-sm-6 .col-md-5 .offset-md-2 .col-lg-6 .offset-lg-0\r\n                </MCard>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</div>",
        "Type": "Demos.Components.Grid.props.OffsetBreakpoint",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "order",
        "Title": "排序",
        "Description": "<p>你可以控制网格项目的排序。 与偏移一样，你可以为不同的尺寸设置不同的顺序。 设计专门的屏幕布局，以适应任何应用。</p>\n",
        "Code": "<div>\r\n    <MContainer Class=\"grey lighten-5\">\r\n        <MRow NoGutters>\r\n            <MCol>\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    First, but unordered\r\n                </MCard>\r\n            </MCol>\r\n            <MCol Order=\"12\" >\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    Second, but last\r\n                </MCard>\r\n            </MCol>\r\n            <MCol Order=\"1\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                     Third, but first\r\n                </MCard>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</div>",
        "Type": "Demos.Components.Grid.props.Order",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "orderFirstAndLast",
        "Title": "先后排序",
        "Description": "<p>你也可以明确指定 <strong>First</strong> 或 <strong>Last</strong>，这将分别为 order CSS 属性分配 <strong>-1</strong> 或 <strong>13</strong> 值。</p>\n",
        "Code": "<div>\r\n    <MContainer Class=\"grey lighten-5\">\r\n        <MRow NoGutters>\r\n            <MCol Order=\"@(\"last\")\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    First, but last\r\n                </MCard>\r\n            </MCol>\r\n            <MCol>\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    Second, but unordered\r\n                </MCard>\r\n            </MCol>\r\n            <MCol Order=\"@(\"first\")\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    Third, but first\r\n                </MCard>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</div>",
        "Type": "Demos.Components.Grid.props.OrderFirstAndLast",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "columnWrapping",
        "Title": "换行列",
        "Description": "<p>当在给定的行中放置了超过 12 个列时（没有使用 <code>.flex-nowrap</code>），每一组额外的列都将被包入新的行。</p>\n",
        "Code": "<div>\r\n    <MContainer Class=\"grey lighten-5\">\r\n        <MRow NoGutters>\r\n            <MCol Cols=\"9\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    .col-9\r\n                </MCard>\r\n            </MCol>\r\n            <MCol Cols=\"4\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    .col-4<br>Since 9 + 4 = 13 &gt; 12, this 4-column-wide div gets wrapped onto a new line as one contiguous unit.\r\n                </MCard>\r\n            </MCol>\r\n            <MCol Cols=\"6\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    .col-6<br>Subsequent columns continue along the new line.\r\n                </MCard>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</div>",
        "Type": "Demos.Components.Grid.misc.ColumnWrapping",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 3,
        "Name": "equalWidthColumns",
        "Title": "等宽列",
        "Description": "<p>你可以把等宽列分成多行。\n虽然旧版本的浏览器有解决办法，但仍有一个 <a href=\"https://github.com/philipwalton/flexbugs#11-min-and-max-size-declarations-are-ignored-when-wrapping-flex-items\">Safari flexbox 问题</a>。\n如果你是最新的 Safari，无需担心这个问题。</p>\n",
        "Code": "<div>\r\n    <MContainer Class=\"grey lighten-5\">\r\n        <MRow NoGutters>\r\n            @for (int index = 0; index < 4; index++)\r\n            {\r\n                <MCol>\r\n                    <MCard Class=\"pa-2\"\r\n                           Outlined\r\n                           tile>\r\n                        Column\r\n                    </MCard>\r\n                </MCol>\r\n                if (index == 1)\r\n                {\r\n                    <MResponsive Width=\"@(\"100%\")\"></MResponsive>\r\n                }\r\n            }\r\n        </MRow>\r\n    </MContainer>\r\n</div>",
        "Type": "Demos.Components.Grid.misc.EqualWidthColumns",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 4,
        "Name": "growAndShrink",
        "Title": "增长与收缩",
        "Description": "<p>默认情况下，flex 组件将自动填充行或列中的可用空间。 没有指定具体尺寸时，它们也会相对于 flex 容器中的其他 flex 项目收缩。 你可以使用 cols 属性定义 <code>MCol</code> 的列宽，并提供 <strong>1 到 12 的值</strong>。</p>\n",
        "Code": "<div>\r\n    <MContainer Class=\"grey lighten-5\">\r\n        <MRow Class=\"mb-6\"\r\n              NoGutters>\r\n            @for (var index = 0; index < 4; index++)\r\n            {\r\n                <MCol>\r\n                    <MCard Class=\"pa-2\"\r\n                           Outlined\r\n                           tile>\r\n                        col\r\n                    </MCard>\r\n                </MCol>\r\n            }\r\n        </MRow>\r\n        <MRow NoGutters>\r\n            @for (int index = 0; index < 2; index++)\r\n            {\r\n                <MCol Cols=\"@(index == 0 ? 8 : 4)\">\r\n                    <MCard Class=\"pa-2\"\r\n                           Outlined\r\n                           tile>\r\n                        col-@(index == 0 ? 8 : 4)\r\n                    </MCard>\r\n                </MCol>\r\n            }\r\n        </MRow>\r\n    </MContainer>\r\n</div>",
        "Type": "Demos.Components.Grid.misc.GrowAndShrink",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 5,
        "Name": "marginHelpers",
        "Title": "外边距辅助",
        "Description": "<p>使用<a href=\"/stylesandanimations/flex\">外边距工具类</a>可以强行把同级列分开。</p>\n",
        "Code": "<div class=\"ma-5 pa-5\">\r\n    <MContainer Class=\"grey lighten-5\">\r\n        <MRow>\r\n            <MCol Md=\"4\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    .col-md-4\r\n                </MCard>\r\n            </MCol>\r\n            <MCol Md=\"4\"\r\n                  Class=\"ml-auto\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    .col-md-4 .ml-auto\r\n                </MCard>\r\n            </MCol>\r\n        </MRow>\r\n        <MRow>\r\n            <MCol Md=\"3\"\r\n                  Class=\"ml-md-auto\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    .col-md-3 .ml-md-auto\r\n                </MCard>\r\n            </MCol>\r\n            <MCol Md=\"3\"\r\n                  Class=\"ml-md-auto\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    .col-md-3 .ml-md-auto\r\n                </MCard>\r\n            </MCol>\r\n        </MRow>\r\n        <MRow>\r\n            <MCol Class=\"mr-auto\" Cols=\"@(\"auto\")\"> \r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    .col-auto .mr-auto\r\n                </MCard>\r\n            </MCol>\r\n            <MCol Cols=\"@(\"auto\")\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    .col-auto\r\n                </MCard>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</div>\r\n",
        "Type": "Demos.Components.Grid.misc.MarginHelpers",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 5,
        "Name": "nested",
        "Title": "嵌套网格",
        "Description": "<p>与其他框架类似，网格可以被嵌套，以实现非常自定义的布局。</p>\n",
        "Code": "<div>\r\n    <MContainer Class=\"grey lighten-5\">\r\n        <MRow>\r\n            <MCol Sm=\"9\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    Level 1: .col-sm-9\r\n                </MCard>\r\n                <MRow NoGutters>\r\n                    <MCol Cols=\"8\"\r\n                          Sm=\"6\">\r\n                        <MCard Class=\"pa-2\"\r\n                               Outlined\r\n                               Style=\"background-color: lightgrey;\"\r\n                               tile>\r\n                            Level 2: .col-8 .col-sm-6\r\n                        </MCard>\r\n                    </MCol>\r\n                    <MCol Cols=\"4\"\r\n                          Sm=\"6\">\r\n                        <MCard Class=\"pa-2\"\r\n                               Outlined\r\n                               Style=\"background-color: lightgrey;\"\r\n                               tile>\r\n                            Level 3: .col-4 .col-sm-6\r\n                        </MCard>\r\n                    </MCol>\r\n                </MRow>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</div>",
        "Type": "Demos.Components.Grid.misc.Nested",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 5,
        "Name": "oneColumnWidth",
        "Title": "一列宽度",
        "Description": "<p>使用自动布局时，你可以只定义一列的宽度，并且仍然可以让它的同级元素围绕它自动调整大小。</p>\n",
        "Code": "<div>\r\n    <MContainer Class=\"grey lighten-5\">\r\n        <MRow Class=\"mb-6\"\r\n              NoGutters>\r\n            @for (var index = 0; index < 3; index++)\r\n            {\r\n                var localVariable = index + 1;\r\n                <MCol Cols=\"@(localVariable == 2 ? 6 : null)\">\r\n                    <MCard Class=\"pa-2\"\r\n                           Outlined\r\n                           tile>\r\n                        @localVariable of 3 @(localVariable == 2 ? \"(wider)\" : \"\")\r\n                    </MCard>\r\n                </MCol>\r\n            }\r\n        </MRow>\r\n        <MRow NoGutters>\r\n            @for (int index = 0; index < 3; index++)\r\n            {\r\n                var localVariable = index + 1;\r\n                <MCol Cols=\"@(localVariable == 2 ? 5 : null)\">\r\n                    <MCard Class=\"pa-2\"\r\n                           Outlined\r\n                           tile>\r\n                        @localVariable of 3 @(localVariable == 2 ? \"(wider)\" : \"\")\r\n                    </MCard>\r\n                </MCol>\r\n            }\r\n        </MRow>\r\n    </MContainer>\r\n</div>",
        "Type": "Demos.Components.Grid.misc.OneColumnWidth",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 5,
        "Name": "rowAndColumnBreakpoints",
        "Title": "行和列断点",
        "Description": "<p>根据分辨率动态地改变你的布局。 <strong>（调整你的屏幕大小，并观看顶部 <code>row</code> 布局在 sm、md 和 lg 断点上的变化）</strong>。</p>\n",
        "Code": "<MContainer Class=\"grey lighten-5\">\r\n    <MRow Class=\"mb-6\"\r\n          NoGutters>\r\n        @for (int index = 0; index < 2; index++)\r\n        {\r\n            <MCol Lg=\"6\"\r\n                  Md=\"6\"\r\n                  Sm=\"6\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    col-6\r\n                </MCard>\r\n            </MCol>\r\n        }\r\n    </MRow>\r\n    <MRow NoGutters>\r\n        @for (int index = 0; index < 3; index++)\r\n        {\r\n            <MCol Cols=\"@(\"sm\")\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    col\r\n                </MCard>\r\n            </MCol>\r\n        }\r\n    </MRow>\r\n</MContainer>",
        "Type": "Demos.Components.Grid.misc.RowAndColumnBreakpoints",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 5,
        "Name": "spacers",
        "Title": "空白",
        "Description": "<p><code>MSpacer</code> 组件在你想要填充可用空间或在两个组件之间留出空间时非常有用。</p>\n",
        "Code": "<MContainer Class=\"grey lighten-5\">\r\n    <MRow>\r\n        <MCol>\r\n            <MCard Class=\"pa-2\"\r\n                   Outlined\r\n                   tile>\r\n                .col\r\n            </MCard>\r\n        </MCol>\r\n        <MSpacer></MSpacer>\r\n        <MCol>\r\n            <MCard Class=\"pa-2\"\r\n                   Outlined\r\n                   tile>\r\n                .col\r\n            </MCard>\r\n        </MCol>\r\n    </MRow>\r\n    <MRow>\r\n        <MCol Cols=\"@(\"auto\")\"\r\n              Lg=\"3\">\r\n            <MCard Class=\"pa-2\"\r\n                   Outlined\r\n                   tile>\r\n                .col-auto\r\n            </MCard>\r\n        </MCol>\r\n        <MSpacer></MSpacer>\r\n        <MCol>\r\n            <MCard Class=\"pa-2\"\r\n                   Outlined\r\n                   tile>\r\n                .col\r\n            </MCard>\r\n        </MCol>\r\n        <MSpacer></MSpacer>\r\n        <MCol Md=\"5\">\r\n            <MCard Class=\"pa-2\"\r\n                   Cols=\"@(\"auto\")\"\r\n                   Outlined\r\n                   tile>\r\n                 .col-md-5\r\n            </MCard>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>",
        "Type": "Demos.Components.Grid.misc.Spacers",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 5,
        "Name": "uniqueLayouts",
        "Title": "独特的布局",
        "Description": "<p>Masa.Blazor 网格系统的强大和灵活性使你能够创建出色的用户界面。</p>\n",
        "Code": "<MContainer Class=\"grey lighten-5\">\r\n    <MRow>\r\n        <MCol Cols=\"12\"\r\n              Md=\"8\">\r\n            <MCard Class=\"pa-2\"\r\n                   Outlined\r\n                   tile>\r\n                .col-12 .col-md-8\r\n            </MCard>\r\n        </MCol>\r\n        <MCol Cols=\"6\"\r\n              Md=\"4\">\r\n            <MCard Class=\"pa-2\"\r\n                   Outlined\r\n                   tile>\r\n                .col-6 .col-md-4\r\n            </MCard>\r\n        </MCol>\r\n    </MRow>\r\n\r\n    <MRow>\r\n        @for (int index = 0; index < 3; index++)\r\n        {\r\n            <MCol Cols=\"6\"\r\n                  Md=\"4\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    .col-6 .col-md-4\r\n                </MCard>\r\n            </MCol>\r\n        }\r\n    </MRow>\r\n\r\n    <MRow>\r\n        @for (int index = 0; index < 2; index++)\r\n        {\r\n            <MCol Cols=\"6\">\r\n                <MCard Class=\"pa-2\"\r\n                       Outlined\r\n                       tile>\r\n                    .col-6\r\n                </MCard>\r\n            </MCol>\r\n        }\r\n    </MRow>\r\n</MContainer>",
        "Type": "Demos.Components.Grid.misc.UniqueLayouts",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 5,
        "Name": "variableContentWidth",
        "Title": "可变内容宽度",
        "Description": "<p>为列分配断点宽度可以根据其内容的性质宽度来配置调整大小。</p>\n",
        "Code": "<MContainer Class=\"grey lighten-5\">\r\n    <MRow Class=\"mb-6\"\r\n          Justify=\"@JustifyTypes.Center\"\r\n          NoGutters>\r\n        <MCol Lg=\"2\">\r\n            <MCard Class=\"pa-2\"\r\n                   Outlined\r\n                   tile>\r\n                1 of 3\r\n            </MCard>\r\n        </MCol>\r\n        <MCol Md=\"@(\"auto\")\">\r\n            <MCard Class=\"pa-2\"\r\n                   Outlined\r\n                   tile>\r\n                Variable width content\r\n            </MCard>\r\n        </MCol>\r\n        <MCol Lg=\"2\">\r\n            <MCard Class=\"pa-2\"\r\n                   Outlined\r\n                   tile>\r\n                3 of 3\r\n            </MCard>\r\n        </MCol>\r\n    </MRow>\r\n    <MRow NoGutters>\r\n        <MCol>\r\n            <MCard Class=\"pa-2\"\r\n                   Outlined\r\n                   tile>\r\n                1 of 3\r\n            </MCard>\r\n        </MCol>\r\n        <MCol Md=\"@(\"auto\")\">\r\n            <MCard Class=\"pa-2\"\r\n                   Outlined\r\n                   tile>\r\n                Variable width content\r\n            </MCard>\r\n        </MCol>\r\n        <MCol Lg=\"2\">\r\n            <MCard Class=\"pa-2\"\r\n                   Outlined\r\n                   tile>\r\n                3 of 3\r\n            </MCard>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>",
        "Type": "Demos.Components.Grid.misc.VariableContentWidth",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/stylesandanimations/flex",
      "/features/breakpoints",
      "/stylesandanimations/display-helpers"
    ],
    "Subtitle": "网格系统",
    "Title": "Grid system",
    "Type": "网格系统"
  },
  {
    "Desc": "<p>基于 <a href=\"https://github.com/gridstack/gridstack.js\">gridstack</a> 封装。</p>\n",
    "Order": 0,
    "OtherDocs": {},
    "LastWriteTime": "2022-11-18T22:51:07.1252211+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "",
        "Code": "<MGridstack Items=\"@_items\"\r\n            ItemKey=\"item => item.ToString()\"\r\n            ItemClass=\"blue\"\r\n            Margin=\"6\"\r\n            TItem=\"int\"\r\n            ItemPosition=\"ItemSize\"\r\n            DisableOneColumnMode>\r\n    <ItemContent>\r\n        <div class=\"text-center\">@context</div>\r\n    </ItemContent>\r\n</MGridstack>\r\n\r\n@code {\r\n\r\n    private readonly List<int> _items = Enumerable.Range(1, 11).ToList();\r\n\r\n    static GridstackWidgetPosition ItemSize(int item)\r\n    {\r\n        return item switch\r\n        {\r\n            1 => new(4, 2),\r\n            2 => new(4, 4),\r\n            6 => new(2, 4),\r\n            7 => new(4, 2),\r\n            9 => new(4, 2),\r\n            _ => new(2, 2)\r\n        };\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.Gridstack.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "save",
        "Title": "保存",
        "Description": "",
        "Code": "@using System.Text.Json\r\n\r\n<MRow Dense Class=\"mb-2\">\r\n    <MCol Cols=\"6\">\r\n        <MButton OnClick=\"OnLoadDefault\">Load default data</MButton>\r\n    </MCol>\r\n    <MCol Cols=\"6\">\r\n        <MButton OnClick=\"OnSave\">Save current data</MButton>\r\n    </MCol>\r\n    <MCol Cols=\"6\">\r\n        <MButton OnClick=\"OnClear\">Clear grids</MButton>\r\n    </MCol>\r\n    <MCol Cols=\"6\">\r\n        <MButton OnClick=\"OnLoad\">Load saved data</MButton>\r\n    </MCol>\r\n</MRow>\r\n\r\n<MGridstack Items=\"@_items\"\r\n            ItemKey=\"item => item.ToString()\"\r\n            ItemClass=\"blue\"\r\n            Margin=\"6\"\r\n            TItem=\"int\"\r\n            ItemPosition=\"@_itemPosition\"\r\n            DisableOneColumnMode\r\n            @ref=\"@_gridstack\">\r\n    <ItemContent>\r\n        <div class=\"text-center\">@context</div>\r\n    </ItemContent>\r\n</MGridstack>\r\n\r\n<MDivider />\r\n\r\n<MTextarea Readonly\r\n           Filled\r\n           HideDetails=\"true\"\r\n           Label=\"Saved data\"\r\n           Rows=\"20\"\r\n           Value=\"@(JsonSerializer.Serialize(_widgets, new JsonSerializerOptions() { WriteIndented = true }))\"\r\n           Class=\"gridstack-save-and-load__textarea ma-1\">\r\n</MTextarea>\r\n\r\n@code {\r\n\r\n    private List<int> _items = new();\r\n\r\n    private MGridstack<int>? _gridstack;\r\n    private List<GridstackWidget> _widgets = new();\r\n    private Func<int, GridstackWidgetPosition> _itemPosition = DefaultItemPosition;\r\n\r\n    private async Task OnSave()\r\n    {\r\n        _widgets = await _gridstack!.OnSave();\r\n    }\r\n\r\n    private void OnClear()\r\n    {\r\n        _items.Clear();\r\n    }\r\n\r\n    private void OnLoad()\r\n    {\r\n        _items = _widgets.Select(w => Convert.ToInt32(w.Id)).ToList();\r\n        _itemPosition = id =>\r\n        {\r\n            var widget = _widgets.FirstOrDefault(w => w.Id == id.ToString());\r\n            return widget ?? new GridstackWidgetPosition(2, 2);\r\n        };\r\n    }\r\n\r\n    private void OnLoadDefault()\r\n    {\r\n        _items = Enumerable.Range(1, 11).ToList();\r\n        _itemPosition = DefaultItemPosition;\r\n    }\r\n\r\n    static GridstackWidgetPosition DefaultItemPosition(int item)\r\n    {\r\n        return item switch\r\n        {\r\n            1 => new(4, 2),\r\n            2 => new(4, 4),\r\n            6 => new(2, 4),\r\n            7 => new(4, 2),\r\n            9 => new(4, 2),\r\n            _ => new(2, 2)\r\n        };\r\n    }\r\n\r\n}\r\n\r\n<style>\r\n    .gridstack-save-and-load__textarea textarea {\r\n      line-height: 1;\r\n      font-family: monospace;\r\n      font-size: small;\r\n    }\r\n</style>\r\n",
        "Type": "Demos.Components.Gridstack.props.Save",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "echarts",
        "Title": "ECharts",
        "Description": "",
        "Code": "<MGridstack Items=\"@items\"\r\n            ItemKey=\"i => i.Key\"\r\n            ItemPosition=\"@(_ => new (12,3))\"\r\n            Class=\"grey lighten-5\"\r\n            ItemClass=\"white\"\r\n            MinRow=\"2\"\r\n            DisableOneColumnMode\r\n            OnResize=\"OnResize\">\r\n    <ItemContent>\r\n        @if (context.Type == \"bar\")\r\n        {\r\n            <div class=\"position-relative fill-height\">\r\n                <MECharts Option=\"@context.Option\"\r\n                          @ref=\"@chartsMap[context.Key]\">\r\n                </MECharts>\r\n                <MButton OnClick=\"() => Remove(context)\" Icon\r\n                         Style=\"position: absolute;right: 0;top: 0;\">\r\n                    <MIcon>mdi-close</MIcon>\r\n                </MButton>\r\n            </div>\r\n        }\r\n        else if (context.Type == \"line\")\r\n        {\r\n            <div class=\"position-relative fill-height\">\r\n                <MECharts Option=\"@context.Option\"\r\n                          @ref=\"@chartsMap[context.Key]\">\r\n                </MECharts>\r\n                <MButton OnClick=\"() => Remove(context)\" Icon\r\n                         Style=\"position: absolute;right: 0;top: 0;\">\r\n                    <MIcon>mdi-close</MIcon>\r\n                </MButton>\r\n            </div>\r\n        }\r\n        else if (context.Type == \"pie\")\r\n        {\r\n            <div class=\"position-relative fill-height\">\r\n                <MECharts Option=\"@context.Option\"\r\n                          @ref=\"@chartsMap[context.Key]\">\r\n                </MECharts>\r\n                <MButton OnClick=\"() => Remove(context)\" Icon\r\n                         Style=\"position: absolute;right: 0;top: 0;\">\r\n                    <MIcon>mdi-close</MIcon>\r\n                </MButton>\r\n            </div>\r\n        }\r\n        else\r\n        {\r\n            <div>Type @context.Type not exists.</div>\r\n        }\r\n    </ItemContent>\r\n</MGridstack>\r\n\r\n<div class=\"d-flex justify-space-around mt-1\">\r\n    <MButton OnClick='() => Add(\"bar\")'>Add bar</MButton>\r\n    <MButton OnClick='() => Add(\"line\")'>Add line</MButton>\r\n    <MButton OnClick='() => Add(\"pie\")'>Add pie</MButton>\r\n</div>\r\n\r\n@code {\r\n\r\n    List<Item> items = new();\r\n    Dictionary<string, MECharts> chartsMap = new();\r\n    int idSuffix;\r\n\r\n    record Item(string Key, string Type, object Option);\r\n\r\n    void Add(string type)\r\n    {\r\n        idSuffix++;\r\n        var key = type + idSuffix;\r\n        var option = GenOption(type);\r\n        items.Add(new Item(key, type, option));\r\n        chartsMap.Add(key, new MECharts());\r\n    }\r\n\r\n    void Remove(Item item)\r\n    {\r\n        items.Remove(item);\r\n        chartsMap.Remove(item.Key);\r\n    }\r\n\r\n    async Task OnResize(GridstackResizeEventArgs args)\r\n    {\r\n        if (chartsMap.TryGetValue(args.Id, out var charts))\r\n        {\r\n            await charts.Resize(args.Width, args.Height);\r\n        }\r\n    }\r\n\r\n    static int[] Random()\r\n    {\r\n        var random = new Random();\r\n        return Enumerable.Range(0, 7).Select(_ => random.Next(100, 999)).ToArray();\r\n    }\r\n\r\n    static readonly string[] Category = { \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\" };\r\n\r\n    static object GenOption(string type)\r\n    {\r\n        if (type == \"pie\")\r\n        {\r\n            return new\r\n            {\r\n                tooltip = new { },\r\n                legend = new { },\r\n                series = new[]\r\n                {\r\n                    new\r\n                    {\r\n                        name = \"Access From\",\r\n                        type,\r\n                        radius = \"50%\",\r\n                        data = Random().Select((value, index) => new\r\n                        {\r\n                            value,\r\n                            name = Category[index]\r\n                        }).ToArray()\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        return new\r\n        {\r\n            tooltip = new { },\r\n            xAxis = new\r\n            {\r\n                type = \"category\",\r\n                data = Category\r\n            },\r\n            yAxis = new\r\n            {\r\n                type = \"value\"\r\n            },\r\n            series = new[]\r\n            {\r\n                new\r\n                {\r\n                    data = Random(),\r\n                    type\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.Gridstack.misc.ECharts",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Subtitle": "网格堆栈",
    "Title": "Gridstack",
    "Type": "网格堆栈",
    "Tag": "js-proxy"
  },
  {
    "Desc": "<p><code>MButtonGroup</code> 组件是专门针对 <code>MButton</code> 构建的 <code>MItemGroup</code> 的简单包装器。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MButtonGroup\">MButtonGroup</a></li>\n<li><a href=\"/api/MButton\">MButton</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.6128476+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>切换按钮允许您创建一个样式化的按钮组，可以使用 <strong>@bind-Value(s)</strong> 下选择或切换。</p>\n",
        "Code": "<MRow>\r\n    <MCol Cols=\"12\" Sm=\"6\" Class=\"py-2\">\r\n        <p>Exclusive</p>\r\n        <MButtonGroup @bind-Value=\"toggleExclusive\">\r\n            <MButton>\r\n                <MIcon>mdi-format-align-left</MIcon>\r\n            </MButton>\r\n            <MButton>\r\n                <MIcon>mdi-format-align-center</MIcon>\r\n            </MButton>\r\n            <MButton>\r\n                <MIcon>mdi-format-align-right</MIcon>\r\n            </MButton>\r\n            <MButton>\r\n                <MIcon>mdi-format-align-justify</MIcon>\r\n            </MButton>\r\n        </MButtonGroup>\r\n    </MCol>\r\n    <MCol Cols=\"12\" Sm=\"6\" Class=\"py-2\">\r\n        <p>Multiple</p>\r\n        <MButtonGroup Dense BackgroundColor=\"primary\" Dark Multiple @bind-Values=\"toggleMultiple\">\r\n            <MButton>\r\n                <MIcon>mdi-format-bold</MIcon>\r\n            </MButton>\r\n            <MButton>\r\n                <MIcon>mdi-format-italic</MIcon>\r\n            </MButton>\r\n            <MButton>\r\n                <MIcon>mdi-format-underline</MIcon>\r\n            </MButton>\r\n            <MButton>\r\n                <MIcon>mdi-format-color-fill</MIcon>\r\n            </MButton>\r\n        </MButtonGroup>\r\n    </MCol>\r\n    <MCol Cols=\"12\" Sm=\"6\" Class=\"py-2\">\r\n        <p>No Options Selected</p>\r\n        <MButtonGroup @bind-Value=\"toggleNone\">\r\n            <MButton>\r\n                <MIcon>mdi-format-align-left</MIcon>\r\n            </MButton>\r\n            <MButton>\r\n                <MIcon>mdi-format-align-center</MIcon>\r\n            </MButton>\r\n            <MButton>\r\n                <MIcon>mdi-format-align-right</MIcon>\r\n            </MButton>\r\n            <MButton>\r\n                <MIcon>mdi-format-align-justify</MIcon>\r\n            </MButton>\r\n        </MButtonGroup>\r\n    </MCol>\r\n    <MCol Cols=\"12\" Sm=\"6\" Class=\"py-2\">\r\n        <p>Mandatory</p>\r\n        <MButtonGroup Shaped Mandatory @bind-Value=\"toggleOne\">\r\n            <MButton Value=\"@(\"left\")\">\r\n                <MIcon>mdi-format-align-left</MIcon>\r\n            </MButton>\r\n            <MButton Value=\"@(\"center\")\">\r\n                <MIcon>mdi-format-align-center</MIcon>\r\n            </MButton>\r\n            <MButton Value=\"@(\"right\")\">\r\n                <MIcon>mdi-format-align-right</MIcon>\r\n            </MButton>\r\n            <MButton Value=\"@(\"justify\")\">\r\n                <MIcon>mdi-format-align-justify</MIcon>\r\n            </MButton>\r\n        </MButtonGroup>\r\n    </MCol>\r\n    <MCol Cols=\"12\" Class=\"py-2\">\r\n        <p>Text Options</p>\r\n        <MButtonGroup Tile Color=\"deep-purple accent-3\" Group @bind-Value=\"text\">\r\n            <MButton Value=\"@(\"left\")\">\r\n                Left\r\n            </MButton>\r\n            <MButton Value=\"@(\"center\")\">\r\n                Center\r\n            </MButton>\r\n            <MButton Value=\"@(\"right\")\">\r\n                Right\r\n            </MButton>\r\n            <MButton Value=\"@(\"justify\")\">\r\n                Justify\r\n            </MButton>\r\n        </MButtonGroup>\r\n    </MCol>\r\n    <MCol Cols=\"12\" Class=\"py-2\">\r\n        <p>Text &amp; Icon Options</p>\r\n        <MButtonGroup Borderless @bind-Value=\"icon\">\r\n            <MButton Value=\"@(\"left\")\">\r\n                <span class=\"hidden-sm-and-down\">Left</span>\r\n                <MIcon Right>\r\n                    mdi-format-align-left\r\n                </MIcon>\r\n            </MButton>\r\n            <MButton Value=\"@(\"center\")\">\r\n                <span class=\"hidden-sm-and-down\">Center</span>\r\n                <MIcon Right>\r\n                    mdi-format-align-center\r\n                </MIcon>\r\n            </MButton>\r\n            <MButton Value=\"@(\"right\")\">\r\n                <span class=\"hidden-sm-and-down\">Right</span>\r\n                <MIcon Right>\r\n                    mdi-format-align-right\r\n                </MIcon>\r\n            </MButton>\r\n            <MButton Value=\"@(\"justify\")\">\r\n                <span class=\"hidden-sm-and-down\">Justify</span>\r\n                <MIcon Right>\r\n                    mdi-format-align-justify\r\n                </MIcon>\r\n            </MButton>\r\n        </MButtonGroup>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n    StringNumber text = \"center\";\r\n    StringNumber icon = \"justify\";\r\n    StringNumber toggleNone;\r\n    StringNumber toggleOne = 0;\r\n    StringNumber toggleExclusive = 2;\r\n    List<StringNumber> toggleMultiple = new() { 0, 1, 2 };\r\n}\r\n",
        "Type": "Demos.Components.Groups.children.ButtonGroup.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "mandatory",
        "Title": "必填项",
        "Description": "<p><code>MButtonGroup</code> 带有 <strong>mandatory</strong> 属性将总是有一个（被选中的）值。</p>\n",
        "Code": "<MCard Flat\r\n       Class=\"py-12\">\r\n    <MCardText>\r\n        <MRow Align=\"@AlignTypes.Center\"\r\n              Justify=\"@JustifyTypes.Center\">\r\n            <MCol Cols=\"12\">\r\n                <p class=\"text-center\">\r\n                    Mandatory\r\n                </p>\r\n            </MCol>\r\n            <MButtonGroup @bind-Value=\"value\"\r\n                          Mandatory>\r\n                <MButton>\r\n                    <MIcon>mdi-format-align-left</MIcon>\r\n                </MButton>\r\n                <MButton>\r\n                    <MIcon>mdi-format-align-center</MIcon>\r\n                </MButton>\r\n                <MButton>\r\n                    <MIcon>mdi-format-align-right</MIcon>\r\n                </MButton>\r\n                <MButton>\r\n                    <MIcon>mdi-format-align-justify</MIcon>\r\n                </MButton>\r\n            </MButtonGroup>\r\n        </MRow>\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code {\r\n    StringNumber value;\r\n}",
        "Type": "Demos.Components.Groups.children.ButtonGroup.props.Mandatory",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "multiple",
        "Title": "多选",
        "Description": "<p><code>MButtonGroup</code> 带有 <strong>multiple</strong> 属性将允许用户选中多个值并以数组的形式返回。</p>\n",
        "Code": "<MCard Flat\r\n       Class=\"py-12\">\r\n    <MCardText>\r\n        <MRow Align=\"@AlignTypes.Center\"\r\n              Justify=\"@JustifyTypes.Center\">\r\n            <MCol Cols=\"12\">\r\n                <p class=\"text-center\">\r\n                    Multiple\r\n                </p>\r\n            </MCol>\r\n            <MButtonGroup @bind-Values=\"values\"\r\n                          Multiple>\r\n                <MButton Value=\"@(\"left\")\">\r\n                    <MIcon>mdi-format-align-left</MIcon>\r\n                </MButton>\r\n                <MButton Value=\"@(\"center\")\">\r\n                    <MIcon>mdi-format-align-center</MIcon>\r\n                </MButton>\r\n                <MButton Value=\"@(\"right\")\">\r\n                    <MIcon>mdi-format-align-right</MIcon>\r\n                </MButton>\r\n                <MButton Value=\"@(\"justify\")\">\r\n                    <MIcon>mdi-format-align-justify</MIcon>\r\n                </MButton>\r\n            </MButtonGroup>\r\n            <MCol Cols=\"12\"\r\n                  Class=\"text-center\">\r\n                Values: [@(string.Join(',', values))]\r\n            </MCol>\r\n        </MRow>\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code {\r\n    List<StringNumber> values = new();\r\n}",
        "Type": "Demos.Components.Groups.children.ButtonGroup.props.Multiple",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 3,
        "Name": "rounded",
        "Title": "圆角",
        "Description": "<p>你可以使用 <strong>rounded</strong> 属性让 <code>MButtonGroup</code> 变成圆角样式。</p>\n",
        "Code": "<MCard Flat\r\n       Class=\"py-12\">\r\n    <MCardText>\r\n        <MRow Align=\"@AlignTypes.Center\"\r\n              Justify=\"@JustifyTypes.Center\">\r\n            <MCol Cols=\"12\">\r\n                <p class=\"text-center\">\r\n                    Rounded\r\n                </p>\r\n            </MCol>\r\n            <MButtonGroup @bind-Value=\"value\"\r\n                          Rounded>\r\n                <MButton>\r\n                    <MIcon>mdi-format-align-left</MIcon>\r\n                </MButton>\r\n                <MButton>\r\n                    <MIcon>mdi-format-align-center</MIcon>\r\n                </MButton>\r\n                <MButton>\r\n                    <MIcon>mdi-format-align-right</MIcon>\r\n                </MButton>\r\n                <MButton>\r\n                    <MIcon>mdi-format-align-justify</MIcon>\r\n                </MButton>\r\n            </MButtonGroup>\r\n        </MRow>\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code {\r\n    StringNumber value = \"left\";\r\n}",
        "Type": "Demos.Components.Groups.children.ButtonGroup.props.Rounded",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 4,
        "Name": "toolbar",
        "Title": "工具栏(TODO:OverflowButton)",
        "Description": "<p>可与 <code>MToolbar</code> 轻松集成自定义按钮方案。</p>\n",
        "Code": "<MToolbar Dense>\r\n    @* TODO: v-overflow-btn *@\r\n    @* <v-overflow-btn *@\r\n    @*     :items=\"dropdown_font\" *@\r\n    @*     label=\"Select font\" *@\r\n    @*     hide-details *@\r\n    @*     class=\"pa-0\" *@\r\n    @* ></v-overflow-btn> *@\r\n\r\n\r\n    <MDivider Vertical></MDivider>\r\n\r\n    @* <v-overflow-btn *@\r\n    @*     :items=\"dropdown_edit\" *@\r\n    @*     editable *@\r\n    @*     label=\"Select size\" *@\r\n    @*     hide-details *@\r\n    @*     class=\"pa-0\" *@\r\n    @*     overflow></v-overflow-btn> *@\r\n\r\n    <MDivider Vertical></MDivider>\r\n\r\n    <MSpacer></MSpacer>\r\n\r\n    <MButtonGroup\r\n        @bind-Values=\"toggleMultiple\"\r\n        Color=\"primary\"\r\n        Dense\r\n        Group\r\n        Multiple>\r\n        <MButton\r\n            Value=\"1\"\r\n            Text>\r\n            <MIcon>mdi-format-bold</MIcon>\r\n        </MButton>\r\n\r\n        <MButton\r\n            Value=\"2\"\r\n            Text>\r\n            <MIcon>mdi-format-italic</MIcon>\r\n        </MButton>\r\n\r\n        <MButton\r\n            Value=\"3\"\r\n            Text>\r\n            <MIcon>mdi-format-underline</MIcon>\r\n        </MButton>\r\n\r\n        <MButton\r\n            Value=\"4\"\r\n            Text>\r\n            <MIcon>mdi-format-color-fill</MIcon>\r\n        </MButton>\r\n    </MButtonGroup>\r\n\r\n    <div class=\"mx-4\"></div>\r\n\r\n    <MButtonGroup\r\n        @bind-Value=\"toggleExclusive\"\r\n        Color=\"primary\"\r\n        Dense\r\n        Group>\r\n        <MButton\r\n            Value=\"1\"\r\n            Text>\r\n            <MIcon>mdi-format-align-left</MIcon>\r\n        </MButton>\r\n\r\n        <MButton\r\n            Value=\"2\"\r\n            Text>\r\n            <MIcon>mdi-format-align-center</MIcon>\r\n        </MButton>\r\n\r\n        <MButton\r\n            Value=\"3\"\r\n            Text>\r\n            <MIcon>mdi-format-align-right</MIcon>\r\n        </MButton>\r\n\r\n        <MButton\r\n            Value=\"4\"\r\n            Text>\r\n            <MIcon>mdi-format-align-justify</MIcon>\r\n        </MButton>\r\n    </MButtonGroup>\r\n</MToolbar>\r\n\r\n@code {\r\n\r\n    List<string> dropdownFont = new() {\"Arial\", \"Calibri\", \"Courier\", \"Verdana\"};\r\n    List<string> dropdownEdit = new() {\"100%\", \"75%\", \"50%\", \"0%\"};\r\n    StringNumber toggleExclusive = 2;\r\n    List<StringNumber> toggleMultiple = new() {1, 2, 3};\r\n\r\n}",
        "Type": "Demos.Components.Groups.children.ButtonGroup.misc.Toolbar",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 5,
        "Name": "wysiwyg",
        "Title": "WYSIWYG/所见即所得",
        "Description": "<p>对类似的操作进行分组，并设计自己的 WYSIWYG 组件。</p>\n",
        "Code": "<MCard\r\n    MaxWidth=\"400\"\r\n    Class=\"mx-auto\">\r\n    <MTextarea\r\n        @bind-Value=\"value\"\r\n        AutoGrow\r\n        FullWidth\r\n        Rows=\"2\">\r\n    </MTextarea>\r\n\r\n    <MRow\r\n        Class=\"px-2 pb-2 ma-0\"\r\n        Justify=\"JustifyTypes.SpaceBetween\">\r\n        <MButtonGroup\r\n            @bind-Values=\"formatting\"\r\n            multiple>\r\n            <MButton>\r\n                <MIcon>mdi-format-italic</MIcon>\r\n            </MButton>\r\n\r\n            <MButton>\r\n                <MIcon>mdi-format-bold</MIcon>\r\n            </MButton>\r\n\r\n            <MButton>\r\n                <MIcon>mdi-format-underline</MIcon>\r\n            </MButton>\r\n\r\n            <MButton>\r\n                <MRow\r\n                    Align=\"AlignTypes.Center\"\r\n                    Class=\"flex-column\"\r\n                    Justify=\"JustifyTypes.Center\">\r\n                    <MIcon Class=\"cols 12\">\r\n                        mdi-format-color-text\r\n                    </MIcon>\r\n\r\n                    <MSheet\r\n                        Tile\r\n                        Style=\"margin-top: -4px;\"\r\n                        Height=\"4\"\r\n                        Width=\"26\"\r\n                        Color=\"purple\">\r\n                    </MSheet>\r\n                </MRow>\r\n            </MButton>\r\n        </MButtonGroup>\r\n\r\n        <MButtonGroup @bind-Value=\"alignment\">\r\n            <MButton>\r\n                <MIcon>mdi-format-align-center</MIcon>\r\n            </MButton>\r\n\r\n            <MButton>\r\n                <MIcon>mdi-format-align-left</MIcon>\r\n            </MButton>\r\n\r\n            <MButton>\r\n                <MIcon>mdi-format-align-right</MIcon>\r\n            </MButton>\r\n        </MButtonGroup>\r\n    </MRow>\r\n\r\n    <MSheet\r\n        Class=\"pa-4 text-center\"\r\n        Tile>\r\n        <MRow\r\n            Class=\"mb-2\"\r\n            Dense>\r\n            @foreach (var n in numbers)\r\n            {\r\n                <MCol Class=\"text-caption grey--text text--darken-1\">@n</MCol>\r\n            }\r\n\r\n        </MRow>\r\n\r\n        <MRow dense>\r\n            @foreach (var l in letters)\r\n            {\r\n                <MCol Class=\"text-h6 grey--text font-weight-regular text--darken-2\">@l</MCol>\r\n            }\r\n        </MRow>\r\n    </MSheet>\r\n</MCard>\r\n\r\n\r\n@code {\r\n\r\n    StringNumber alignment = 1;\r\n    List<StringNumber> formatting = new();\r\n    List<int> numbers = new() {1, 2, 3, 4, 5, 6, 7, 8, 9, 0};\r\n    List<string> letters = \"q w e r t y u i o p\".Split(\" \").ToList();\r\n    string value = \"Toggle button requirements.\\r\\rHave at least three toggle buttons in a group\\rLabel buttons with text, an icon, or\";\r\n\r\n}",
        "Type": "Demos.Components.Groups.children.ButtonGroup.misc.WYSIWYG",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/buttons",
      "/components/icons",
      "/components/selection-controls"
    ],
    "Subtitle": "按钮组",
    "Title": "Button groups",
    "Type": "按钮组"
  },
  {
    "Desc": "<p><code>MChipGroup</code> 通过提供可分组的功能来增强 <code>MChip</code> 组件。 它使用纸片来创建选择组。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MChipGroup\">MChipGroup</a></li>\n<li><a href=\"/api/MChip\">MChip</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.6168482+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "usage",
        "Title": "使用",
        "Description": "<p>纸片组使得用户可以很容易地为更复杂的实现选择过滤选项。 默认情况下 <code>MChipGroup</code> 会溢出到右边, 但可以更改为只允许 ** column ** 的模式。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.Center\" Align=\"AlignTypes.Center\">\r\n    <MChipGroup ActiveClass=\"primary--text\"\r\n                Column>\r\n        @foreach (var tag in _tags)\r\n        {\r\n            <MChip>\r\n                @tag\r\n            </MChip>\r\n        }\r\n    </MChipGroup>\r\n</MRow>\r\n\r\n@code {\r\n    private string[] _tags = new string[]\r\n        {\r\n        \"Work\",\r\n        \"Home Improvement\",\r\n        \"Vacation\",\r\n        \"Food\",\r\n        \"Drawers\",\r\n        \"Shopping\",\r\n        \"Art\",\r\n        \"Tech\",\r\n        \"Creative Writing\"\r\n        };\r\n}",
        "Type": "Demos.Components.Groups.children.ChipGroup.usage.Usage",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "column",
        "Title": "列",
        "Description": "<p>使用 <strong>Column</strong> 属性的纸片组可以包装它们的纸片。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.Center\">\r\n    <MCol Cols=\"12\"\r\n          Sm=\"7\"\r\n          Md=\"6\"\r\n          Lg=\"5\">\r\n        <MSheet Elevation=\"10\"\r\n                Rounded=\"@(\"xl\")\">\r\n            <MSheet Class=\"pa-3 primary text-right\"\r\n                    Dark\r\n                    Rounded=\"@(\"t-xl\")\">\r\n                <MButton Icon Dark>\r\n                    <MIcon>mdi-content-save-cog-outline</MIcon>\r\n                </MButton>\r\n\r\n                <MButton Class=\"ml-2\"\r\n                         Icon Dark>\r\n                    <MIcon>mdi-check-bold</MIcon>\r\n                </MButton>\r\n            </MSheet>\r\n\r\n            <div class=\"pa-4\">\r\n                <MChipGroup ActiveClass=\"primary--text\"\r\n                            Column>\r\n                    @foreach (var tag in _tags)\r\n                    {\r\n                        <MChip>\r\n                            @tag\r\n                        </MChip>\r\n                    }\r\n                </MChipGroup>\r\n            </div>\r\n        </MSheet>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code{\r\n    private string[] _tags = new string[]\r\n    {\r\n        \"Work\",\r\n        \"Home Improvement\",\r\n        \"Vacation\",\r\n        \"Food\",\r\n        \"Drawers\",\r\n        \"Shopping\",\r\n        \"Art\",\r\n        \"Tech\",\r\n        \"Creative Writing\"\r\n    };\r\n}",
        "Type": "Demos.Components.Groups.children.ChipGroup.props.Column",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "filterResults",
        "Title": "过滤结果",
        "Description": "<p>使用 <strong>Filter</strong> 属性轻松创建提供额外反馈的纸片组。 这就与用户选中的纸片产生了一种可供选择的视觉样式。</p>\n",
        "Code": "<MCard\r\n    Class=\"mx-auto\"\r\n    MaxWidth=\"400\">\r\n    <MToolbar\r\n        Flat\r\n        Color=\"deep-purple accent-4\"\r\n        Dark>\r\n        <MButton Icon>\r\n            <MIcon>mdi-close</MIcon>\r\n        </MButton>\r\n        <MToolbarTitle>Filter results</MToolbarTitle>\r\n    </MToolbar>\r\n\r\n    <MCardText>\r\n        <h2 class=\"text-h6 mb-2\">\r\n            Choose amenities\r\n        </h2>\r\n\r\n        <MChipGroup\r\n            @bind-Values=\"amenities\"\r\n            Column\r\n            Multiple>\r\n            <MChip\r\n                Filter\r\n                Outlined>\r\n                Elevator\r\n            </MChip>\r\n            <MChip\r\n                Filter\r\n                Outlined>\r\n                Washer / Dryer\r\n            </MChip>\r\n            <MChip\r\n                Filter\r\n                Outlined>\r\n                Fireplace\r\n            </MChip>\r\n            <MChip\r\n                Filter\r\n                Outlined>\r\n                Wheelchair access\r\n            </MChip>\r\n            <MChip\r\n                Filter\r\n                Outlined>\r\n                Dogs ok\r\n            </MChip>\r\n            <MChip\r\n                Filter\r\n                Outlined>\r\n                Cats ok\r\n            </MChip>\r\n        </MChipGroup>\r\n    </MCardText>\r\n\r\n    <MCardText>\r\n        <h2 class=\"text-h6 mb-2\">\r\n            Choose neighborhoods\r\n        </h2>\r\n\r\n        <MChipGroup\r\n            @bind-Values=\"neighborhoods\"\r\n            Column\r\n            Multiple>\r\n            <MChip\r\n                Filter\r\n                Outlined>\r\n                Snowy Rock Place\r\n            </MChip>\r\n            <MChip\r\n                Filter\r\n                Outlined>\r\n                Honeylane Circle\r\n            </MChip>\r\n            <MChip\r\n                Filter\r\n                Outlined>\r\n                Donna Drive\r\n            </MChip>\r\n            <MChip\r\n                Filter\r\n                Outlined>\r\n                Elaine Street\r\n            </MChip>\r\n            <MChip\r\n                Filter\r\n                Outlined>\r\n                Court Street\r\n            </MChip>\r\n            <MChip\r\n                Filter\r\n                Outlined>\r\n                Kennedy Park\r\n            </MChip>\r\n        </MChipGroup>\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    List<StringNumber> amenities = new() {1, 4};\r\n    List<StringNumber> neighborhoods = new() {1};\r\n\r\n}",
        "Type": "Demos.Components.Groups.children.ChipGroup.props.FilterResults",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "mandatory",
        "Title": "必填项",
        "Description": "<p>具有 <strong>Mandatory</strong> 属性的纸片组必须始终选择一个值。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.SpaceAround\">\r\n    <MCol Cols=\"12\"\r\n          Sm=\"10\"\r\n          Md=\"8\">\r\n        <MSheet Elevation=\"10\"\r\n                Class=\"py-4 px-1\">\r\n            <MChipGroup Mandatory\r\n                        ActiveClass=\"primary--text\">\r\n                @foreach (var tag in _tags)\r\n                {\r\n                    <MChip>\r\n                        @tag\r\n                    </MChip>\r\n                }\r\n            </MChipGroup>\r\n        </MSheet>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code{\r\n    private string[] _tags = new string[]\r\n    {\r\n        \"Work\",\r\n        \"Home Improvement\",\r\n        \"Vacation\",\r\n        \"Food\",\r\n        \"Drawers\",\r\n        \"Shopping\",\r\n        \"Art\",\r\n        \"Tech\",\r\n        \"Creative Writing\"\r\n    };\r\n}",
        "Type": "Demos.Components.Groups.children.ChipGroup.props.Mandatory",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "multiple",
        "Title": "多选",
        "Description": "<p>具有 <strong>Multiple</strong> prop的纸片组可以选择多个值。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.SpaceAround\">\r\n    <MCol Cols=\"12\"\r\n          Sm=\"10\"\r\n          Md=\"8\">\r\n        <MSheet Elevation=\"10\"\r\n                Class=\"py-4 px-1\">\r\n            <MChipGroup Multiple\r\n                        ActiveClass=\"primary--text\">\r\n                @foreach (var tag in _tags)\r\n                {\r\n                    <MChip>\r\n                        @tag\r\n                    </MChip>\r\n                }\r\n            </MChipGroup>\r\n        </MSheet>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code{\r\n    private string[] _tags = new string[]\r\n    {\r\n        \"Work\",\r\n        \"Home Improvement\",\r\n        \"Vacation\",\r\n        \"Food\",\r\n        \"Drawers\",\r\n        \"Shopping\",\r\n        \"Art\",\r\n        \"Tech\",\r\n        \"Creative Writing\"\r\n    };\r\n}",
        "Type": "Demos.Components.Groups.children.ChipGroup.props.Multiple",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "productCard",
        "Title": "产品卡",
        "Description": "<p><code>MChip</code> 组件可以有一个用于其model的明确值。 这会传递到 <code>MChipGroup</code> 组件并且在您不想使用纸片索引作为其值时非常有用。</p>\n",
        "Code": "<MCard\r\n    Class=\"mx-auto\"\r\n    MaxWidth=\"400\">\r\n    <MCardTitle>\r\n        <h2 class=\"text-h4\">\r\n            Shirt Blouse\r\n        </h2>\r\n        <MSpacer></MSpacer>\r\n        <span class=\"text-h6\">$44.50</span>\r\n    </MCardTitle>\r\n\r\n    <MCardText>\r\n        Our blouses are available in 8 colors. You can custom order a built-in arch support for any of the models.\r\n    </MCardText>\r\n\r\n    <MDivider Class=\"mx-4\"></MDivider>\r\n\r\n    <MCardText>\r\n        <span class=\"subheading\">Select size</span>\r\n\r\n        <MChipGroup\r\n            @bind-Value=\"selection\"\r\n            ActiveClass=\"deep-purple--text text--accent-4\"\r\n            Mandatory>\r\n            @foreach (var size in sizes)\r\n            {\r\n                <MChip @key=\"size\" Value=\"size\">\r\n                    @size\r\n                </MChip>\r\n            }\r\n        </MChipGroup>\r\n    </MCardText>\r\n\r\n    <MCardActions>\r\n        <MButton\r\n            Block\r\n            Class=\"white--text\"\r\n            Color=\"deep-purple accent-4\">\r\n            Add to Cart\r\n        </MButton>\r\n    </MCardActions>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    StringNumber selection = \"08\";\r\n\r\n    List<string> sizes = new() {\"04\", \"06\", \"08\", \"10\", \"12\", \"14\"};\r\n\r\n}",
        "Type": "Demos.Components.Groups.children.ChipGroup.misc.ProductCard",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 1,
        "Name": "toothbrushCard",
        "Title": "牙刷卡",
        "Description": "<p>纸片组允许创建自定义接口，这些接口执行与项组或单选控件相同的操作，但在风格上有所不同。</p>\n",
        "Code": "<MCard\r\n    Class=\"mx-auto\"\r\n    MaxWidth=\"400\">\r\n    <MCardTitle>\r\n        <h2 class=\"text-h4\">\r\n            Toothbrush\r\n        </h2>\r\n        <MSpacer></MSpacer>\r\n        <span class=\"text-h6\">$4.99</span>\r\n    </MCardTitle>\r\n\r\n    <MCardText>\r\n        Our company takes pride in making handmade brushes.\r\n        Our toothbrushes are available in 4 different bristel types, from extra soft to hard.\r\n    </MCardText>\r\n\r\n    <MDivider class=\"mx-4\"></MDivider>\r\n\r\n    <MCardText>\r\n        <span class=\"subheading\">Select type</span>\r\n\r\n        <MChipGroup\r\n            @bind-Value=\"selection\"\r\n            ActiveClass=\"deep-purple--text text--accent-4\"\r\n            mandatory>\r\n            <MChip>Extra Soft</MChip>\r\n            <MChip>Soft</MChip>\r\n            <MChip>Medium</MChip>\r\n            <MChip>Hard</MChip>\r\n        </MChipGroup>\r\n    </MCardText>\r\n\r\n    <MCardActions>\r\n        <MButton\r\n            Block\r\n            Class=\"white--text\"\r\n            Color=\"deep-purple accent-4\">\r\n            Add to Cart\r\n        </MButton>\r\n    </MCardActions>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    StringNumber selection = 2;\r\n\r\n}",
        "Type": "Demos.Components.Groups.children.ChipGroup.misc.ToothbrushCard",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/chips",
      "/components/slide-groups",
      "/components/item-groups"
    ],
    "Subtitle": "纸片组",
    "Title": "Chip groups",
    "Type": "纸片组"
  },
  {
    "Desc": "<p><code>MItemGroup</code> 提供从任何组件中创建一组可选项的功能。 这是 <code>MTabs</code> 和 <code>Mcarousel</code> 等组件的基本功能。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MItem\">MItem</a></li>\n<li><a href=\"/api/MItemGroup\">MItemGroup</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.6210037+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p><code>MItemGroup</code> 的核心用法是创建由 <strong>Value</strong> 控制的任何对象的组。</p>\n",
        "Code": "<MItemGroup>\r\n    <MContainer>\r\n        <MRow>\r\n            @foreach (var i in Enumerable.Range(0, 3))\r\n            {\r\n                <MCol Cols=\"4\" @key=\"i\">\r\n                    <MItem>\r\n                        @{\r\n                            <MCard Class=\"d-flex align-center\" \r\n                                   Color=\"@(context.Active ? \"primary\" : \"\")\"\r\n                                   OnClick=\"context.Toggle\" \r\n                                   Dark \r\n                                   Height=\"200\">\r\n                                <ScrollYTransition>\r\n                                    <ShowTransitionElement Value=\"context.Active\" Class=\"text-h2 flex-grow-1 text-center\">\r\n                                        Active\r\n                                    </ShowTransitionElement>\r\n                                </ScrollYTransition>\r\n                            </MCard>\r\n                        }\r\n                    </MItem>\r\n                </MCol>\r\n            }\r\n        </MRow>\r\n    </MContainer>\r\n</MItemGroup>",
        "Type": "Demos.Components.Groups.children.ItemGroup.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "activeClass",
        "Title": "激活类",
        "Description": "<p><strong>ActiveClass</strong>属性允许您在活动项上设置自定义CSS类。</p>\n",
        "Code": "<MItemGroup ActiveClass=\"error\">\r\n    <MContainer>\r\n        <MRow>\r\n            @foreach (var n in Enumerable.Range(0, 3))\r\n            {\r\n                <MCol\r\n                    @key=\"n\"\r\n                    Cols=\"12\"\r\n                    Md=\"4\">\r\n                    <MItem>\r\n                        <MCard\r\n                            Class=\"@($\"d-flex align-center {context.ActiveClass}\")\"\r\n                            Dark\r\n                            Height=\"200\"\r\n                            OnClick=\"context.Toggle\"\r\n                            RefBack=\"context.Ref\">\r\n                            <ScrollYTransition>\r\n                                <ShowTransitionElement Value=\"context.Active\" Class=\"text-h2 flex-grow-1 text-center\">\r\n                                    Active\r\n                                </ShowTransitionElement>\r\n                            </ScrollYTransition>\r\n                        </MCard>\r\n                    </MItem>\r\n                </MCol>\r\n            }\r\n        </MRow>\r\n    </MContainer>\r\n</MItemGroup>",
        "Type": "Demos.Components.Groups.children.ItemGroup.props.ActiveClass",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "mandatory",
        "Title": "必填项",
        "Description": "<p><strong>Mandatory</strong> 项目组必须至少选择一个项目。</p>\n",
        "Code": "<MItemGroup Mandatory>\r\n    <MContainer>\r\n        <MRow>\r\n            @foreach (var i in Enumerable.Range(0, 3))\r\n            {\r\n                <MCol Cols=\"4\" @key=\"i\">\r\n                    <MItem>\r\n                        <MCard Color=\"@(context.Active ? \"primary\" : \"\")\"\r\n                               Class=\"d-flex align-center\"\r\n                               Dark\r\n                               Height=\"200\"\r\n                               OnClick=\"context.Toggle\">\r\n                            <ScrollYTransition>\r\n                                <ShowTransitionElement Value=\"context.Active\" Class=\"text-h2 flex-grow-1 text-center\">\r\n                                    Active\r\n                                </ShowTransitionElement>\r\n                            </ScrollYTransition>\r\n                        </MCard>\r\n                    </MItem>\r\n                </MCol>\r\n            }\r\n        </MRow>\r\n    </MContainer>\r\n</MItemGroup>",
        "Type": "Demos.Components.Groups.children.ItemGroup.props.Mandatory",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "multiple",
        "Title": "多选",
        "Description": "<p>项目组可以选择 <strong>多个</strong> 个项目。</p>\n",
        "Code": "<MItemGroup Multiple>\r\n    <MContainer>\r\n        <MRow>\r\n            @foreach (var i in Enumerable.Range(0, 3))\r\n            {\r\n                <MCol Cols=\"4\" @key=\"i\">\r\n                    <MItem>\r\n                        <MCard Color=\"@(context.Active ? \"primary\" : \"\")\"\r\n                               Class=\"d-flex align-center\"\r\n                               Dark\r\n                               Height=\"200\"\r\n                               OnClick=\"context.Toggle\">\r\n                            <ScrollYTransition>\r\n                                <ShowTransitionElement Value=\"context.Active\" Class=\"text-h2 flex-grow-1 text-center\">\r\n                                    Active\r\n                                </ShowTransitionElement>\r\n                            </ScrollYTransition>\r\n                        </MCard>\r\n                    </MItem>\r\n                </MCol>\r\n            }\r\n        </MRow>\r\n    </MContainer>\r\n</MItemGroup>",
        "Type": "Demos.Components.Groups.children.ItemGroup.props.Multiple",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 3,
        "Name": "chips",
        "Title": "Chips（纸片）",
        "Description": "<p>轻松绑定自定义纸片组。</p>\n",
        "Code": "<MCard>\r\n    <MToolbar Flat Color=\"blue-grey\" Dark>\r\n        <MToolbarTitle>Submit a post</MToolbarTitle>\r\n    </MToolbar>\r\n\r\n    <MCardText>\r\n        <MTextField Filled Label=\"Title\" TValue=\"string\" @bind-Value=\"@title\"></MTextField>\r\n\r\n        <MTextarea Filled Label=\"Text\" @bind-Value=\"@text\"></MTextarea>\r\n\r\n        <MDivider Class=\"my-2\"></MDivider>\r\n\r\n        <MItemGroup Multiple>\r\n            <MSubheader>Tags</MSubheader>\r\n\r\n            @foreach (var i in Enumerable.Range(1, 8))\r\n            {\r\n                <MItem>\r\n                    <MChip\r\n                        ActiveClass=\"purple--text\"\r\n                        IsActive=\"@context.Active\"\r\n                        OnClick=\"@context.Toggle\"\r\n                        RefBack=\"@context.Ref\">\r\n                        @($\"Tag {i}\")\r\n                    </MChip>\r\n                </MItem>\r\n            }\r\n        </MItemGroup>\r\n\r\n        <MDivider></MDivider>\r\n\r\n        <MCardActions>\r\n            <MSpacer></MSpacer>\r\n            <MButton Color=\"success\" Depressed>Post</MButton>\r\n        </MCardActions>\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code {\r\n    string title = \"My new post\";\r\n    string text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\";\r\n}",
        "Type": "Demos.Components.Groups.children.ItemGroup.misc.Chips",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 4,
        "Name": "selection",
        "Title": "选择",
        "Description": "<p>当图标允许选择或取消选择单个选项（例如将项目标记为收藏）时，它们可以用作切换按钮。</p>\n",
        "Code": "<MCard MaxWidth=\"400\" class=\"mx-auto\">\r\n    <MContainer class=\"pa-1\">\r\n        <MItemGroup Multiple @bind-Values=\"selected\">\r\n            <MRow>\r\n                @foreach (var item in items)\r\n                {\r\n                    <MCol Cols=\"12\" Md=\"6\">\r\n                        <MItem>\r\n                            <MImage Src=\"@($\"https://cdn.masastack.com/stack/images/website/masa-blazor/{item}\")\"\r\n                                    Height=\"150\"\r\n                                    Class=\"text-right pa-2\"\r\n                                    @onclick=\"context.Toggle\"\r\n                                    RefBack=\"context.Ref\">\r\n                                <MButton Icon Dark>\r\n                                    <MIcon>@(context.Active ? \"mdi-heart\" : \"mdi-heart-outline\")</MIcon>\r\n                                </MButton>\r\n                            </MImage>\r\n                        </MItem>\r\n                    </MCol>\r\n                }\r\n            </MRow>\r\n        </MItemGroup>\r\n    </MContainer>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    List<string> items = new()\r\n    {\r\n        \"backgrounds/bg.png\",\r\n        \"backgrounds/md.png\",\r\n        \"backgrounds/bg-2.png\",\r\n        \"backgrounds/md2.png\",\r\n    };\r\n\r\n    List<StringNumber> selected = new();\r\n\r\n}",
        "Type": "Demos.Components.Groups.children.ItemGroup.misc.Selection",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/button-groups",
      "/components/carousels",
      "/components/tabs"
    ],
    "Subtitle": "项目组",
    "Title": "Item groups",
    "Type": "项目组"
  },
  {
    "Desc": "<p><code>MListItemGroup</code> 提供创建一组可选择的 <code>MListItem</code> 的能力。<code>MListItemGroup</code> 组件利用其核心的 <code>MItemGroup</code> 来为交互式列表提供一个简洁的接口。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MListGroup\">MListGroup</a></li>\n<li><a href=\"/api/MListItem\">MListItem</a></li>\n<li><a href=\"/api/MListItemAction\">MListItemAction</a></li>\n<li><a href=\"/api/MListItemActionText\">MListItemActionText</a></li>\n<li><a href=\"/api/MListItemAvatar\">MListItemAvatar</a></li>\n<li><a href=\"/api/MListItemContent\">MListItemContent</a></li>\n<li><a href=\"/api/MListItemGroup\">MListItemGroup</a></li>\n<li><a href=\"/api/MListItemSubtitle\">MListItemSubtitle</a></li>\n<li><a href=\"/api/MListItemTitle\">MListItemTitle</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.6240029+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>默认情况下，<code>ListItemGroup</code> 操作类似于 <code>ItemGroup</code> 。如果没有提供 <strong>Value</strong>，则该群组将基于其索引提供默认值。</p>\n",
        "Code": "<MCard Class=\"mx-auto\" MaxWidth=\"500\">\r\n    <MList>\r\n        <MListItemGroup @bind-Value=\"selected\">\r\n            @foreach (var item in items)\r\n            {\r\n                <MListItem @key=\"@item\">\r\n                    <MListItemIcon>\r\n                        <MIcon>@item.Icon</MIcon>\r\n                    </MListItemIcon>\r\n                    <MListItemContent>\r\n                        <MListItemTitle>@item.Text</MListItemTitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            }\r\n        </MListItemGroup>\r\n    </MList>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    static readonly Item[] items =\r\n    {\r\n        new()\r\n        {\r\n            Icon = \"mdi-inbox\",\r\n            Text = \"Inbox\"\r\n        },\r\n        new()\r\n        {\r\n            Icon = \"mdi-star\",\r\n            Text = \"Star\"\r\n        },\r\n        new()\r\n        {\r\n            Icon = \"mdi-send\",\r\n            Text = \"Send\"\r\n        },\r\n        new()\r\n        {\r\n            Icon = \"mdi-email-open\",\r\n            Text = \"Drafts\"\r\n        }\r\n    };\r\n\r\n    StringNumber selected = 1;\r\n\r\n    public class Item\r\n    {\r\n        public string Icon { get; set; }\r\n        public string Text { get; set; }\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.Groups.children.ListItemGroup.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "activeClass",
        "Title": "激活类",
        "Description": "<p>您可以设置一个在选择项目时将添加的类。</p>\n",
        "Code": "<MCard\r\n    Class=\"mx-auto\"\r\n    MaxWidth=\"400\">\r\n    <MList>\r\n        <MListItemGroup\r\n            @bind-Value=\"model\"\r\n            ActiveClass=\"border\"\r\n            Color=\"indigo\">\r\n            @foreach (var item in items)\r\n            {\r\n                <MListItem @key=\"item\">\r\n                    <MListItemIcon>\r\n                        <MIcon>@item.icon</MIcon>\r\n                    </MListItemIcon>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>@item.text</MListItemTitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            }\r\n        </MListItemGroup>\r\n    </MList>\r\n</MCard>\r\n\r\n<style>\r\n.border {\r\n  border: 2px dashed orange;\r\n}\r\n</style>\r\n\r\n@code {\r\n\r\n    List<(string icon, string text)> items = new()\r\n    {\r\n        (\"mdi-wifi\", \"Wifi\"),\r\n        (\"mdi-bluetooth\", \"Bluetooth\"),\r\n        (\"mdi-chart-donut\", \"Data Usage\"),\r\n    };\r\n\r\n    StringNumber model = 1;\r\n\r\n}",
        "Type": "Demos.Components.Groups.children.ListItemGroup.props.ActiveClass",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "mandatory",
        "Title": "必填项",
        "Description": "<p>必须至少选定一项。</p>\n",
        "Code": "<MCard\r\n    Class=\"mx-auto\"\r\n    MaxWidth=\"400\">\r\n    <MList>\r\n        <MListItemGroup\r\n            @bind-Value=\"model\"\r\n            Mandatory\r\n            Color=\"indigo\">\r\n            @foreach (var item in items)\r\n            {\r\n                <MListItem @key=\"item\">\r\n                    <MListItemIcon>\r\n                        <MIcon>@item.icon</MIcon>\r\n                    </MListItemIcon>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>@item.text</MListItemTitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            }\r\n        </MListItemGroup>\r\n    </MList>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    List<(string icon, string text)> items = new()\r\n    {\r\n        (\"mdi-wifi\", \"Wifi\"),\r\n        (\"mdi-bluetooth\", \"Bluetooth\"),\r\n        (\"mdi-chart-donut\", \"Data Usage\"),\r\n    };\r\n\r\n    StringNumber model = 1;\r\n\r\n}",
        "Type": "Demos.Components.Groups.children.ListItemGroup.props.Mandatory",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "multiple",
        "Title": "多选",
        "Description": "<p>您可以一次选择多个项目。</p>\n",
        "Code": "<MCard\r\n    Class=\"mx-auto\"\r\n    MaxWidth=\"400\">\r\n    <MList>\r\n        <MListItemGroup\r\n            @bind-Values=\"model\"\r\n            Multiple\r\n            Color=\"indigo\">\r\n            @foreach (var item in items)\r\n            {\r\n                <MListItem @key=\"item\">\r\n                    <MListItemIcon>\r\n                        <MIcon>@item.icon</MIcon>\r\n                    </MListItemIcon>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>@item.text</MListItemTitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            }\r\n        </MListItemGroup>\r\n    </MList>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    List<(string icon, string text)> items = new()\r\n    {\r\n        (\"mdi-wifi\", \"Wifi\"),\r\n        (\"mdi-bluetooth\", \"Bluetooth\"),\r\n        (\"mdi-chart-donut\", \"Data Usage\"),\r\n    };\r\n\r\n    List<StringNumber> model = new() {1};\r\n\r\n}",
        "Type": "Demos.Components.Groups.children.ListItemGroup.props.Multiple",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "flatList",
        "Title": "扁平列表",
        "Description": "<p>您可以轻松禁用所选 <code>MListItem</code> 的默认高亮显示。 这为用户的选择创建了一个较低的配置文件。</p>\n",
        "Code": "<MCard\r\n    Class=\"mx-auto\"\r\n    MaxWidth=\"400\">\r\n    <MList Flat>\r\n        <MListItemGroup\r\n            @bind-Value=\"model\"\r\n            Color=\"indigo\">\r\n            @foreach (var item in items)\r\n            {\r\n                <MListItem @key=\"item\">\r\n                    <MListItemIcon>\r\n                        <MIcon>@item.icon</MIcon>\r\n                    </MListItemIcon>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>@item.text</MListItemTitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            }\r\n        </MListItemGroup>\r\n    </MList>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    List<(string icon, string text)> items = new()\r\n    {\r\n        (\"mdi-wifi\", \"Wifi\"),\r\n        (\"mdi-bluetooth\", \"Bluetooth\"),\r\n        (\"mdi-chart-donut\", \"Data Usage\"),\r\n    };\r\n\r\n    StringNumber model = 1;\r\n\r\n}",
        "Type": "Demos.Components.Groups.children.ListItemGroup.misc.FlatList",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 1,
        "Name": "selectionControls",
        "Title": "选择控件",
        "Description": "<p>使用默认插槽，您可以访问项目内部状态并进行切换。 因为 <strong>Active</strong> 属性是一个布尔值, 我们使用复选框上的 <strong>IsActive</strong> prop 将其状态链接到 <code>MListItem</code>。</p>\n",
        "Code": "<MCard\r\n    Class=\"mx-auto\"\r\n    MaxWidth=\"500\">\r\n    <MList Shaped>\r\n        <MListItemGroup\r\n            @bind-Values=\"model\"\r\n            Multiple>\r\n            @foreach (var (item,i) in items.Select((v, i) => (v,i)))\r\n            {\r\n                if (item == \"\")\r\n                {\r\n                    <MDivider @key=\"@($\"divider-{i}\")\"></MDivider>\r\n                }\r\n                else\r\n                {\r\n                    <MListItem @key=\"@($\"item-{i}\")\" Value=\"item\" ActiveClass=\"deep-purple--text text--accent-4\">\r\n                        <ItemContent>\r\n                            <MListItemContent>\r\n                                <MListItemTitle>@item</MListItemTitle>\r\n                            </MListItemContent>\r\n                            <MListItemAction>\r\n                                <MCheckbox Value=\"@context.Active\" Color=\"deep-purple accent-4\"></MCheckbox>\r\n                            </MListItemAction>\r\n                        </ItemContent>\r\n                    </MListItem>\r\n                }\r\n            }\r\n        </MListItemGroup>\r\n    </MList>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    List<string> items = new()\r\n    {\r\n        \"Dog Photos\",\r\n        \"Cat Photos\",\r\n        \"\",\r\n        \"Potatoes\",\r\n        \"Carrots\",\r\n    };\r\n\r\n    List<StringNumber> model = new() {\"Carrots\"};\r\n\r\n}",
        "Type": "Demos.Components.Groups.children.ListItemGroup.misc.SelectionControls",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/lists",
      "/components/item-groups",
      "/components/cards"
    ],
    "Subtitle": "列表项目组",
    "Title": "List item groups",
    "Type": "列表项目组"
  },
  {
    "Desc": "<p><code>MSlideGroup</code> 组件用于显示伪分页信息。它以 <a href=\"/components/item-groups\"><strong>MItemGroup</strong></a> 为核心，为 <a href=\"/components/tabs\"><strong>MTabs</strong></a>\n和 <a href=\"/components/chip-groups\"><strong>MChipGroup</strong></a> 等组件提供基础。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MSlideGroup\">MSlideGroup</a></li>\n<li><a href=\"/api/MSlideItem\">MSlideItem</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.6280032+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>类似于 <code>MWindow</code> 组件，<code>MSideGroup</code> 允许项目根据需要占用尽可能多的空间，允许用户在提供的信息中水平移动。</p>\n",
        "Code": "<MSheet Class=\"mx-auto\" MaxWidth=\"700\">\r\n    <MSlideGroup Multiple ShowArrows=\"@(true)\">\r\n        @foreach (var item in Enumerable.Range(1, 25))\r\n        {\r\n            <MSlideItem>\r\n                <MButton Class=\"mx-2\"\r\n                         IsActive=\"@context.Active\"\r\n                         ActiveClass=\"purple white--text\"\r\n                         Depressed\r\n                         Rounded\r\n                         OnClick=\"@context.Toggle\"\r\n                         RefBack=\"@context.Ref\">\r\n                    Options @item\r\n                </MButton>\r\n            </MSlideItem>\r\n        }\r\n    </MSlideGroup>\r\n</MSheet>",
        "Type": "Demos.Components.Groups.children.SlideGroup.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "activeClass",
        "Title": "激活类",
        "Description": "<p><strong>ActiveClass</strong> 属性允许您在激活的项上设置自定义的 CSS 类。</p>\n",
        "Code": "<MSheet Class=\"mx-auto\" MaxWidth=\"800\" Elevation=\"8\">\r\n    <MSlideGroup ShowArrows=\"@(true)\" Class=\"pa-4\" ActiveClass=\"success\">\r\n        @foreach (var item in Enumerable.Range(1, 15))\r\n        {\r\n            <MSlideItem>\r\n                <MCard Color=\"@(context.Active ? \"primary\" : \"grey lighten-1\")\"\r\n                       Class=\"@($\"ma-4 {context.ActiveClass}\")\"\r\n                       Height=\"200\"\r\n                       Width=\"100\"\r\n                       OnClick=\"@context.Toggle\"\r\n                       RefBack=\"@context.Ref\">\r\n                    <MRow Class=\"fill-height\" Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n                        <ScaleTransition>\r\n                            <ShowTransitionElement Value=\"context.Active\">\r\n                                <MIcon Color=\"white\" Size=\"48\">mdi-close-circle-outline</MIcon>\r\n                            </ShowTransitionElement>\r\n                        </ScaleTransition>\r\n                    </MRow>\r\n                </MCard>\r\n            </MSlideItem>\r\n        }\r\n    </MSlideGroup>\r\n</MSheet>",
        "Type": "Demos.Components.Groups.children.SlideGroup.props.ActiveClass",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "centerActive",
        "Title": "激活项居中",
        "Description": "<p>使用 <code>CenterActive</code> 参数将使活动的项目永远居中。</p>\n",
        "Code": "<MSheet Class=\"mx-auto\" MaxWidth=\"800\" Elevation=\"8\">\r\n    <MSlideGroup @bind-Value=\"model\" ShowArrows=\"@(true)\" Class=\"pa-4\" CenterActive>\r\n        @foreach (var item in Enumerable.Range(1, 15))\r\n        {\r\n            <MSlideItem>\r\n                <MCard Color=\"@(context.Active ? \"primary\" : \"grey lighten-1\")\"\r\n                       Class=\"ma-4\"\r\n                       Height=\"200\"\r\n                       Width=\"100\"\r\n                       OnClick=\"@context.Toggle\"\r\n                       RefBack=\"@context.Ref\">\r\n                    <MRow Class=\"fill-height\" Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n                        <ScaleTransition>\r\n                            <ShowTransitionElement Value=\"context.Active\">\r\n                                <MIcon Color=\"white\" Size=\"48\">mdi-close-circle-outline</MIcon>\r\n                            </ShowTransitionElement>\r\n                        </ScaleTransition>\r\n                    </MRow>\r\n                </MCard>\r\n            </MSlideItem>\r\n        }\r\n    </MSlideGroup>\r\n</MSheet>\r\n\r\n@code {\r\n    StringNumber model;\r\n}",
        "Type": "Demos.Components.Groups.children.SlideGroup.props.CenterActive",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "customIcons",
        "Title": "自定义图标",
        "Description": "<p>您可以使用 <code>NextIcon</code> 和 <code>PrevIcon</code> 添加自定义分页图标代替箭头。</p>\n",
        "Code": "<MSheet Class=\"mx-auto\" MaxWidth=\"800\" Elevation=\"8\">\r\n    <MSlideGroup @bind-Value=\"model\" ShowArrows=\"@(true)\" Class=\"pa-4\" PrevIcon=\"mdi-minus\" NextIcon=\"mdi-plus\">\r\n        @foreach (var item in Enumerable.Range(1, 15))\r\n        {\r\n            <MSlideItem>\r\n                <MCard Color=\"@(context.Active ? \"primary\" : \"grey lighten-1\")\"\r\n                       Class=\"ma-4\"\r\n                       Height=\"200\"\r\n                       Width=\"100\"\r\n                       OnClick=\"@context.Toggle\"\r\n                       RefBack=\"@context.Ref\">\r\n                    <MRow Class=\"fill-height\" Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n                        <ScaleTransition>\r\n                            <ShowTransitionElement Value=\"context.Active\">\r\n                                <MIcon Color=\"white\" Size=\"48\">mdi-close-circle-outline</MIcon>\r\n                            </ShowTransitionElement>\r\n                        </ScaleTransition>\r\n                    </MRow>\r\n                </MCard>\r\n            </MSlideItem>\r\n        }\r\n    </MSlideGroup>\r\n</MSheet>\r\n\r\n@code {\r\n    StringNumber model;\r\n}",
        "Type": "Demos.Components.Groups.children.SlideGroup.props.CustomIcons",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 3,
        "Name": "mandatory",
        "Title": "必填项",
        "Description": "<p><code>Mandatory</code> 将使幻灯片组需要至少选择一个项目。</p>\n",
        "Code": "<MSheet Class=\"mx-auto\" MaxWidth=\"800\" Elevation=\"8\">\r\n    <MSlideGroup @bind-Value=\"model\" ShowArrows=\"@(true)\" Class=\"pa-4\" Mandatory>\r\n        @foreach (var item in Enumerable.Range(1, 15))\r\n        {\r\n            <MSlideItem>\r\n                <MCard Color=\"@(context.Active ? \"primary\" : \"grey lighten-1\")\"\r\n                       Class=\"ma-4\"\r\n                       Height=\"200\"\r\n                       Width=\"100\"\r\n                       OnClick=\"context.Toggle\"\r\n                       RefBack=\"context.Ref\">\r\n                    <MRow Class=\"fill-height\" Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n                        <ScaleTransition>\r\n                            <ShowTransitionElement Value=\"context.Active\">\r\n                                <MIcon Color=\"white\" Size=\"48\">mdi-close-circle-outline</MIcon>\r\n                            </ShowTransitionElement>\r\n                        </ScaleTransition>\r\n                    </MRow>\r\n                </MCard>\r\n            </MSlideItem>\r\n        }\r\n    </MSlideGroup>\r\n</MSheet>\r\n\r\n@code {\r\n    StringNumber model;\r\n}",
        "Type": "Demos.Components.Groups.children.SlideGroup.props.Mandatory",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 4,
        "Name": "multiple",
        "Title": "多选",
        "Description": "<p>您可以通过设置 <code>Multiple</code> 来选择多个项目。</p>\n",
        "Code": "<MSheet Class=\"mx-auto\" MaxWidth=\"800\" Elevation=\"8\">\r\n    <MSlideGroup @bind-Values=\"model\" ShowArrows=\"@(true)\" Class=\"pa-4\" Multiple>\r\n        @foreach (var item in Enumerable.Range(1, 15))\r\n        {\r\n            <MSlideItem Value=\"@item\">\r\n                <MCard Color=\"@(context.Active ? \"primary\" : \"grey lighten-1\")\"\r\n                       Class=\"ma-4\"\r\n                       Height=\"200\"\r\n                       Width=\"100\"\r\n                       OnClick=\"context.Toggle\"\r\n                       RefBack=\"context.Ref\">\r\n                    <MRow Class=\"fill-height\" Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n                        <ScaleTransition>\r\n                            <ShowTransitionElement Value=\"context.Active\">\r\n                                <MIcon Color=\"white\" Size=\"48\">mdi-close-circle-outline</MIcon>\r\n                            </ShowTransitionElement>\r\n                        </ScaleTransition>\r\n                    </MRow>\r\n                </MCard>\r\n            </MSlideItem>\r\n        }\r\n    </MSlideGroup>\r\n</MSheet>\r\n\r\n@code {\r\n\r\n    List<StringNumber> model = new();\r\n\r\n}",
        "Type": "Demos.Components.Groups.children.SlideGroup.props.Multiple",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 5,
        "Name": "pseudoCarousel",
        "Title": "伪轮播",
        "Description": "<p>自定义幻灯片组以在图表上创造性地显示信息。 使用此选项，可以方便地为用户显示辅助信息。</p>\n",
        "Code": "<MSheet Class=\"mx-auto\" MaxWidth=\"800\" Elevation=\"8\">\r\n    <MSlideGroup @bind-Value=\"model\" ShowArrows=\"@(true)\" Class=\"pa-4\">\r\n        @foreach (var item in Enumerable.Range(1, 15))\r\n        {\r\n            <MSlideItem>\r\n                <MCard Color=\"@(context.Active ? \"primary\" : \"grey lighten-1\")\"\r\n                       Class=\"ma-4\"\r\n                       Height=\"200\"\r\n                       Width=\"100\"\r\n                       OnClick=\"context.Toggle\"\r\n                       RefBack=\"context.Ref\">\r\n                    <MRow Class=\"fill-height\" Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n                        <ScaleTransition>\r\n                            <ShowTransitionElement Value=\"context.Active\">\r\n                                <MIcon Color=\"white\" Size=\"48\">mdi-close-circle-outline</MIcon>\r\n                            </ShowTransitionElement>\r\n                        </ScaleTransition>\r\n                    </MRow>\r\n                </MCard>\r\n            </MSlideItem>\r\n        }\r\n    </MSlideGroup>\r\n\r\n    @if (model != null)\r\n    {\r\n        <MSheet Height=\"200\" Tile>\r\n            <MRow Class=\"fill-height\" Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n                <h3 class=\"text-h6\">\r\n                    Selected @model\r\n                </h3>\r\n            </MRow>\r\n        </MSheet>\r\n    }\r\n</MSheet>\r\n\r\n@code {\r\n\r\n    StringNumber model;\r\n\r\n}",
        "Type": "Demos.Components.Groups.children.SlideGroup.misc.PseudoCarousel",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/icons",
      "/components/carousels",
      "/components/tabs"
    ],
    "Subtitle": "幻灯片组",
    "Title": "Slide groups",
    "Type": "幻灯片组"
  },
  {
    "Desc": "<p><code>MWindow</code> 组件提供了将内容从一个窗格过渡到另一个窗格的基础功能。 其他组件如<code>MTabs</code>、<code>MCarousel</code> 和  <code>MStepper</code> 使用此组件作为其核心。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MWindow\">MWindow</a></li>\n<li><a href=\"/api/MWindowItem\">MWindowItem</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.6310032+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p><code>MWindow</code> 被设计成可以轻松地循环浏览内容，它提供了一个简单的接口来创建真正的自定义实现。</p>\n",
        "Code": "<MRow Align=\"AlignTypes.Center\">\r\n    <MItemGroup @bind-Value=\"window\"\r\n                Class=\"shrink mr-6\"\r\n                Mandatory>\r\n        @foreach (var item in Enumerable.Range(1, length))\r\n        {\r\n            <MItem Value=\"@item\">\r\n                <div>\r\n                    <MButton IsActive=\"@context.Active\" Icon OnClick=\"@context.Toggle\">\r\n                        <MIcon>mdi-record</MIcon>\r\n                    </MButton>\r\n                </div>\r\n            </MItem>\r\n        }\r\n    </MItemGroup>\r\n\r\n    <MCol>\r\n        <MWindow Value=\"window\"\r\n                 Class=\"elevation-1\"\r\n                 Vertical>\r\n            @foreach (var item in Enumerable.Range(1, length))\r\n            {\r\n                <MWindowItem Value=\"@item\">\r\n                    <MCard Flat>\r\n                        <MCardText>\r\n                            <MRow Class=\"mb-4\" Align=\"AlignTypes.Center\">\r\n                                <MAvatar Color=\"grey\" Class=\"mr-4\"></MAvatar>\r\n                                <strong class=\"text-h6\">Title @item</strong>\r\n                                <MSpacer/>\r\n                                <MButton Icon>\r\n                                    <MIcon>mdi-account</MIcon>\r\n                                </MButton>\r\n                            </MRow>\r\n\r\n                            <p>\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n                            </p>\r\n\r\n                            <p>\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n                            </p>\r\n\r\n                            <p>\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n                            </p>\r\n                        </MCardText>\r\n                    </MCard>\r\n                </MWindowItem>\r\n            }\r\n        </MWindow>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n\r\n    StringNumber window;\r\n\r\n    int length = 3;\r\n}",
        "Type": "Demos.Components.Groups.children.Windows.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 3,
        "Name": "customizedArrows",
        "Title": "自定义箭头按钮",
        "Description": "<p>可以用 <code>PrevContent</code> 和 <code>NextContent</code> 槽来自定义窗口中的箭头部分。</p>\n",
        "Code": "<MWindow ShowArrows>\r\n    <PrevContent>\r\n        <MButton Color=\"success\" OnClick=\"context\">Previous slide</MButton>\r\n    </PrevContent>\r\n    <NextContent>\r\n        <MButton Color=\"info\" OnClick=\"context\">Next slide</MButton>\r\n    </NextContent>\r\n    <ChildContent>\r\n        @foreach (var item in Enumerable.Range(1, 5))\r\n        {\r\n            <MWindowItem>\r\n                <MCard Color=\"grey\" Height=\"200\">\r\n                    <MRow Class=\"fill-height\" Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n                        <h1 style=\"font-size: 5rem\" class=\"white--text\">Slide @item</h1>\r\n                    </MRow>\r\n                </MCard>\r\n            </MWindowItem>\r\n        }\r\n    </ChildContent>\r\n</MWindow>",
        "Type": "Demos.Components.Groups.children.Windows.props.CustomizedArrows",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "reverse",
        "Title": "反转",
        "Description": "<p>反转 <code>MWindow</code> 总是显示反向过渡。</p>\n",
        "Code": "<MCard Flat Tile>\r\n    <MWindow @bind-Value=\"Onboarding\" Reverse>\r\n        @foreach (var item in Enumerable.Range(0, length))\r\n        {\r\n            <MWindowItem Value=\"@item\">\r\n                <MCard Color=\"grey\" Height=\"200\">\r\n                    <MRow Class=\"fill-height\" Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n                        <h1 style=\"font-size: 5rem\" class=\"white--text\">Slide @(item + 1)</h1>\r\n                    </MRow>\r\n                </MCard>\r\n            </MWindowItem>\r\n        }\r\n    </MWindow>\r\n\r\n    <MCardActions Class=\"justify-space-between\">\r\n        <MButton Text OnClick=\"HandlePrev\">\r\n            <MIcon>mdi-chevron-left</MIcon>\r\n        </MButton>\r\n        <MItemGroup @bind-Value=\"Onboarding\" Class=\"text-center\" Mandatory>\r\n            @foreach (var item in Enumerable.Range(0, length))\r\n            {\r\n                <MItem Value=\"@item\">\r\n                    <MButton Icon IsActive=\"context.Active\" OnClick=\"@context.Toggle\">\r\n                        <MIcon>mdi-record</MIcon>\r\n                    </MButton>\r\n                </MItem>\r\n            }\r\n        </MItemGroup>\r\n        <MButton Text OnClick=\"HandleNext\">\r\n            <MIcon>mdi-chevron-right</MIcon>\r\n        </MButton>\r\n    </MCardActions>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    int _onboarding = 0;\r\n\r\n    StringNumber Onboarding\r\n    {\r\n        get => _onboarding;\r\n        set => _onboarding = value.AsT1;\r\n    }\r\n\r\n    int length = 3;\r\n\r\n    private void HandleNext()\r\n    {\r\n        _onboarding = _onboarding + 1 == length ? 0 : _onboarding + 1;\r\n    }\r\n\r\n    private void HandlePrev()\r\n    {\r\n        _onboarding = _onboarding - 1 < 0 ? length - 1 : _onboarding - 1;\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.Groups.children.Windows.props.Reverse",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "vertical",
        "Title": "垂直",
        "Description": "<p><code>MWindow</code> 可以是垂直的。 垂直窗口有 Y 轴过渡而不是 X 轴过渡。</p>\n",
        "Code": "<MCard Flat Tile>\r\n    <MWindow @bind-Value=\"Onboarding\" Vertical>\r\n        @foreach (var item in Enumerable.Range(0, length))\r\n        {\r\n            <MWindowItem Value=\"@item\">\r\n                <MCard Color=\"grey\" Height=\"200\">\r\n                    <MRow Class=\"fill-height\" Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n                        <h1 style=\"font-size: 5rem\" class=\"white--text\">Slide @(item + 1)</h1>\r\n                    </MRow>\r\n                </MCard>\r\n            </MWindowItem>\r\n        }\r\n    </MWindow>\r\n\r\n    <MCardActions Class=\"justify-space-between\">\r\n        <MButton Text OnClick=\"HandlePrev\">\r\n            <MIcon>mdi-chevron-left</MIcon>\r\n        </MButton>\r\n        <MItemGroup @bind-Value=\"Onboarding\" Class=\"text-center\" Mandatory>\r\n            @foreach (var item in Enumerable.Range(0, length))\r\n            {\r\n                <MItem Value=\"@item\">\r\n                    <MButton Icon IsActive=\"context.Active\" OnClick=\"@context.Toggle\">\r\n                        <MIcon>mdi-record</MIcon>\r\n                    </MButton>\r\n                </MItem>\r\n            }\r\n        </MItemGroup>\r\n        <MButton Text OnClick=\"HandleNext\">\r\n            <MIcon>mdi-chevron-right</MIcon>\r\n        </MButton>\r\n    </MCardActions>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    int _onboarding = 0;\r\n\r\n    StringNumber Onboarding\r\n    {\r\n        get => _onboarding;\r\n        set => _onboarding = value.AsT1;\r\n    }\r\n\r\n    int length = 3;\r\n\r\n    private void HandleNext()\r\n    {\r\n        _onboarding = _onboarding + 1 == length ? 0 : _onboarding + 1;\r\n    }\r\n\r\n    private void HandlePrev()\r\n    {\r\n        _onboarding = _onboarding - 1 < 0 ? length - 1 : _onboarding - 1;\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.Groups.children.Windows.props.Vertical",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 4,
        "Name": "accountCreation",
        "Title": "创建账户",
        "Description": "<p>创建具有平滑动画的丰富表单。 <code>MWindow</code> 能够自动跟踪当前的选择索引，来改变过渡动画的方向。 这可以通过 <code>Reverse</code> 参数来手动控制。</p>\n",
        "Code": "<MCard Class=\"mx-auto\" MaxWidth=\"500\">\r\n    <MCardTitle Class=\"text-h6 font-weight-regular justify-space-between\">\r\n        <span>@currentTitle</span>\r\n        <MAvatar Color=\"primary lighten-2\" Class=\"subheading white--text\" Size=\"24\">@step</MAvatar>\r\n    </MCardTitle>\r\n\r\n    <MWindow @bind-Value=\"Step\">\r\n        <MWindowItem Value=\"1\">\r\n            <MCardText>\r\n                <MTextField Label=\"Email\" @bind-Value=\"@email\"></MTextField>\r\n                <span class=\"text-caption grey--text text--darken-1\">\r\n                    This is the email you will use to login to your Masa.Blazor account\r\n                </span>\r\n            </MCardText>\r\n        </MWindowItem>\r\n\r\n        <MWindowItem Value=\"2\">\r\n            <MCardText>\r\n                <MTextField\r\n                    TValue=\"string\"\r\n                    Label=\"Password\"\r\n                    Type=\"password\">\r\n                </MTextField>\r\n                <MTextField\r\n                    TValue=\"string\"\r\n                    Label=\"Confirm Password\"\r\n                    Type=\"password\">\r\n                </MTextField>\r\n                <span class=\"text-caption grey--text text--darken-1\">\r\n                    Please enter a password for your account\r\n                </span>\r\n            </MCardText>\r\n        </MWindowItem>\r\n\r\n        <MWindowItem Value=\"3\">\r\n            <div class=\"pa-4 text-center\">\r\n                <MImage\r\n                    Class=\"mb-4\"\r\n                    Contain\r\n                    Height=\"25\"\r\n                    Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/logo.png\">\r\n                </MImage>\r\n                <h3 class=\"text-h6 font-weight-light mb-2\">\r\n                    Welcome to MASA Blazor\r\n                </h3>\r\n                <span class=\"text-caption grey--text\">Thanks for signing up!</span>\r\n            </div>\r\n        </MWindowItem>\r\n    </MWindow>\r\n\r\n    <MDivider></MDivider>\r\n\r\n    <MCardActions>\r\n        <MButton\r\n            Disabled=\"@(step == 1)\"\r\n            Text\r\n            OnClick=\"() => step--\">\r\n            Back\r\n        </MButton>\r\n        <MSpacer></MSpacer>\r\n        <MButton\r\n            Disabled=\"@(step == 3)\"\r\n            Color=\"primary\"\r\n            Depressed\r\n            OnClick=\"() => step++\">\r\n            Next\r\n        </MButton>\r\n    </MCardActions>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    string email = \"john@masablazor.com\";\r\n    int step = 1;\r\n\r\n    StringNumber Step\r\n    {\r\n        get => step;\r\n        set => step = value.ToInt32();\r\n    }\r\n\r\n    public string currentTitle\r\n    {\r\n        get => step switch\r\n        {\r\n            1 => \"Sign-Up\",\r\n            2 => \"Create a password\",\r\n            _ => \"Account Created\"\r\n            };\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.Groups.children.Windows.misc.AccountCreation",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 5,
        "Name": "onboarding",
        "Title": "新手教学",
        "Description": "<p><code>MWindow</code> 使创建自定义组件（如不同样式的幻灯片）变得很轻松。</p>\n",
        "Code": "<MCard Color=\"black\" Dark Flat Tile>\r\n    <MWindow @bind-Value=\"OnBoarding\">\r\n        @foreach (var item in Enumerable.Range(0, length))\r\n        {\r\n            <MWindowItem Value=\"item\">\r\n                <MCard Color=\"transparent\" Height=\"200\">\r\n                    <MRow Class=\"fill-height\" Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n                        <MCardText Class=\"text-center\">\r\n                            Transparent themed, for background-imaged slides. Background color black added for demonstration purposes.\r\n                        </MCardText>\r\n                    </MRow>\r\n                </MCard>\r\n            </MWindowItem>\r\n        }\r\n    </MWindow>\r\n\r\n    <MCardActions Class=\"justify-space-between\">\r\n        <MButton\r\n            Text\r\n            OnClick=\"Prev\">\r\n            <MIcon>mdi-chevron-left</MIcon>\r\n        </MButton>\r\n        <MItemGroup\r\n            @bind-Value=\"OnBoarding\"\r\n            Class=\"text-center\"\r\n            Mandatory>\r\n            @foreach (var item in Enumerable.Range(0, length))\r\n            {\r\n                <MItem Value=\"item\">\r\n                    <MButton\r\n                        IsActive=\"@context.Active\"\r\n                        Icon\r\n                        OnClick=\"context.Toggle\">\r\n                        <MIcon>mdi-record</MIcon>\r\n                    </MButton>\r\n                </MItem>\r\n            }\r\n        </MItemGroup>\r\n        <MButton\r\n            Text\r\n            OnClick=\"Next\">\r\n            <MIcon>mdi-chevron-right</MIcon>\r\n        </MButton>\r\n    </MCardActions>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    \r\n    int onboarding = 0;\r\n\r\n    StringNumber OnBoarding\r\n    {\r\n        get => onboarding;\r\n        set => onboarding = value.AsT1;\r\n    }\r\n\r\n    int length = 3;\r\n\r\n    private void Next()\r\n    {\r\n        onboarding = onboarding + 1 == length ? 0 : onboarding + 1;\r\n    }\r\n\r\n    private void Prev()\r\n    {\r\n        onboarding = onboarding - 1 < 0 ? length - 1 : onboarding - 1;\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.Groups.children.Windows.misc.Onboarding",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/carousels",
      "/components/steppers",
      "/components/tabs"
    ],
    "Subtitle": "窗口",
    "Title": "Windows",
    "Type": "窗口"
  },
  {
    "Desc": "<p><code>MHover</code>组件为处理任何组件的悬停状态提供了一个干净的接口。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MHover\">MHover</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.6340097+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "disabled",
        "Title": "禁用",
        "Description": "<p>设置 <strong>Disabled</strong> 属性可以禁用悬停功能。</p>\n",
        "Code": "<MRow Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n    <MCol Cols=\"12\">\r\n        <MHover Disabled>\r\n            <MCard @attributes=\"context.Attrs\" Class=\"@($\"mx-auto {context.Class}\")\" Elevation=\"@(context.Hover ? 12 : 2)\" Height=\"350\" MaxWidth=\"350\">\r\n                <MCardText Class=\"my-4 text-center text-h6\">Hover over me!</MCardText>\r\n            </MCard>\r\n        </MHover>\r\n    </MCol>\r\n</MRow>",
        "Type": "Demos.Components.Hover.props.Disabled",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "open",
        "Title": "打开和关闭延迟",
        "Description": "<p>通过组合或单独使用 <strong>OpenDelay</strong> 和 <strong>CloseDelay</strong> 属性延迟 <code>MHover</code> 事件。</p>\n",
        "Code": "<MRow Class=\"hover-props-open\">\r\n    <MCol Cols=\"12\" Sm=\"6\">\r\n        <MHover OpenDelay=\"200\">\r\n            <MCard @attributes=\"context.Attrs\" Class=\"@($\"mx-auto {context.Class}\")\" Elevation=\"@(context.Hover ? 16 : 2)\" Height=\"350\" MaxWidth=\"350\">\r\n                <MCardText Class=\"font-weight-medium mt-12 text-center text-subtitle-1\">\r\n                    Open Delay (Mouse enter)\r\n                </MCardText>\r\n            </MCard>\r\n        </MHover>\r\n    </MCol>\r\n\r\n    <MCol Cols=\"12\" Sm=\"6\">\r\n        <MHover CloseDelay=\"200\">\r\n            <MCard @attributes=\"context.Attrs\" Class=\"@($\"mx-auto {context.Class}\")\" Elevation=\"@(context.Hover ? 16 : 2)\" Height=\"350\" MaxWidth=\"350\">\r\n                <MCardText Class=\"font-weight-medium mt-12 text-center text-subtitle-1\">\r\n                    Close Delay (Mouse leave)\r\n                </MCardText>\r\n            </MCard>\r\n        </MHover>\r\n    </MCol>\r\n</MRow>\r\n\r\n<style>\r\n.hover-props-open .m-card.on-hover.theme--dark {\r\n  background-color: rgba(255, 255, 255, 0.8);\r\n}\r\n\r\n.hover-props-open .m-card.on-hover.theme--dark > .m-card__text {\r\n  color: #000;\r\n}\r\n</style>",
        "Type": "Demos.Components.Hover.props.Open",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "list",
        "Title": "悬停列表",
        "Description": "<p><code>MHover</code> 可以与 for 结合使用，以便在用户与列表交互时突出单个项目。</p>\n",
        "Code": "<MContainer Class=\"pa-4 text-center hover-misc-list\">\r\n    <MRow Class=\"fill-height\" Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n        @foreach (var item in _items)\r\n        {\r\n            <MCol Cols=\"12\" Md=\"4\">\r\n                <MHover>\r\n                    <MCard @attributes=\"context.Attrs\" Class=\"@($\"{context.Class} {(context.Hover ? \"on-hover\" : \"\")}\")\"\r\n                           Style=\"@($\"transition: opacity .4s ease-in-out; {(context.Hover ? \"\" : \"opacity: 0.6;\")}\")\" Elevation=\"@(context.Hover ? 12 : 2)\">\r\n                        <MImage Src=\"@item.Img\" Height=\"225\">\r\n                            <MCardTitle Class=\"text-h6 white--text\">\r\n                                <MRow Class=\"fill-height flex-column\" Justify=\"JustifyTypes.SpaceBetween\">\r\n                                    <p class=\"mt-4 subheading text-left\">@item.Title</p>\r\n\r\n                                    <div>\r\n                                        <p class=\"ma-0 text-body-1 font-weight-bold font-italic text-left\">@item.Text</p>\r\n                                        <p class=\"text-caption font-weight-medium font-italic text-left\">@item.SubText</p>\r\n                                    </div>\r\n\r\n                                    <div class=\"align-self-center\">\r\n                                        @foreach (var icon in _icons)\r\n                                        {\r\n                                            <MButton Color=\"@(context.Hover ? \"rgba(255, 255, 255, 1) !important;\" : _transparent)\" Icon>\r\n                                                <MIcon Color=\"@(context.Hover ? \"rgba(255, 255, 255, 1) !important;\" : _transparent)\">\r\n                                                    @icon\r\n                                                </MIcon>\r\n                                            </MButton>\r\n                                        }\r\n                                    </div>\r\n                                </MRow>\r\n                            </MCardTitle>\r\n                        </MImage>\r\n                    </MCard>\r\n                </MHover>\r\n            </MCol>\r\n        }\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code\r\n{\r\n    private string[] _icons = new string[3] { \"mdi-rewind\", \"mdi-play\", \"mdi-fast-forward\" };\r\n    private string _transparent = \"rgba(255, 255, 255, 0)\";\r\n\r\n    private class ItemDemo\r\n    {\r\n        public string Title { get; set; }\r\n        public string Text { get; set; }\r\n        public string SubText { get; set; }\r\n        public string Img { get; set; }\r\n    }\r\n\r\n    private List<ItemDemo> _items = new List<ItemDemo>\r\n    {\r\n        new ItemDemo\r\n        {\r\n            Title = \"New Releases\",\r\n            Text = \"It's New Release Friday\",\r\n            SubText = \"Newly released songs. Updated daily.\",\r\n            Img = \"https://images.unsplash.com/photo-1429514513361-8fa32282fd5f?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=3264&q=80\"\r\n        },\r\n        new ItemDemo\r\n        {\r\n            Title = \"Rock\",\r\n            Text = \"Greatest Rock Hits\",\r\n            SubText = \"Lose yourself in rock tunes.\",\r\n            Img = \"https://images.unsplash.com/photo-1498038432885-c6f3f1b912ee?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2100&q=80\"\r\n        },\r\n        new ItemDemo\r\n        {\r\n            Title = \"Mellow Moods\",\r\n            Text = \"Ambient Bass\",\r\n            SubText = \"Chill beats to mellow you out.\",\r\n            Img = \"https://images.unsplash.com/photo-1542320868-f4d80389e1c4?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=3750&q=80\"\r\n        }\r\n    };\r\n}\r\n\r\n<style>\r\n\r\n.hover-misc-list .m-card {\r\n  transition: opacity .4s ease-in-out;\r\n}\r\n\r\n.hover-misc-list .m-card:not(.on-hover) {\r\n  opacity: 0.6;\r\n }\r\n\r\n.hover-misc-list .show-btns {\r\n  color: rgba(255, 255, 255, 1) !important;\r\n}\r\n\r\n</style>",
        "Type": "Demos.Components.Hover.misc.List",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 2,
        "Name": "transition",
        "Title": "过渡",
        "Description": "<p>创建高度定制的组件以响应用户交互。</p>\n",
        "Code": "<MHover Class=\"hover-misc-transition\">\r\n    <MCard @attributes=\"context.Attrs\" Class=\"@($\"mx-auto {context.Class}\")\" Color=\"grey lighten-4\" MaxWidth=\"600\">\r\n        <MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/cards/kitchen.png\" AspectRatio=\"@((double)16/9)\">\r\n            <ExpandTransition>\r\n                <ShowTransitionElement Value=\"@context.Hover\" Class=\"transition-fast-in-fast-out orange darken-2 m-card--reveal text-h2 white--text\"\r\n                         Style=\"height: 100%;display: flex;\">\r\n                    $14.99\r\n                </ShowTransitionElement>\r\n            </ExpandTransition>\r\n        </MImage>\r\n        <MCardText Class=\"pt-6\" Style=\"position:relative;\">\r\n            <MButton Absolute Color=\"orange\" Class=\"white--text\" Fab Large Right Top>\r\n                <MIcon>mdi-cart</MIcon>\r\n            </MButton>\r\n            <div class=\"font-weight-light grey--text text-h6 mb-2\">\r\n                For the perfect meal\r\n            </div>\r\n            <h3 class=\"text-h4 font-weight-light orange--text mb-2\">\r\n                QW cooking utensils\r\n            </h3>\r\n            <div class=\"font-weight-light text-h6 mb-2\">\r\n                Our Vintage kitchen utensils delight any chef.<br>\r\n                Made of bamboo by hand\r\n            </div>\r\n        </MCardText>\r\n    </MCard>\r\n</MHover>\r\n\r\n<style>\r\n\r\n.hover-misc-transition .m-card--reveal {\r\n  align-items: center;\r\n  bottom: 0;\r\n  justify-content: center;\r\n  opacity: .5;\r\n  position: absolute;\r\n  width: 100%;\r\n}\r\n</style>",
        "Type": "Demos.Components.Hover.misc.Transition",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/cards",
      "/components/images",
      "/components/tooltips"
    ],
    "Subtitle": "悬停",
    "Title": "Hover",
    "Type": "悬停"
  },
  {
    "Desc": "<p><code>MIcon</code> 组件提供了一系列用于为您的应用程序的各个方面提供上下文的胶卷。 对于所有可用图标的列表, 请访问官方的 <a href=\"https://materialdesignicons.com/\">Material Design 图标</a> 页面。\n要使用任何这些图标，只需使用 <code>mdi-</code> 前缀，然后是图标名称。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MIcon\">MIcon</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.6370105+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "color",
        "Title": "颜色",
        "Description": "<p>使用色彩辅助器，您可以改变标准的暗黑和明亮的主题的图标的颜色。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.SpaceAround\">\r\n    <MIcon Large\r\n           Color=\"green darken-2\">\r\n        mdi-domain\r\n    </MIcon>\r\n\r\n    <MIcon Large\r\n           Color=\"blue darken-2\">\r\n        mdi-message-text\r\n    </MIcon>\r\n\r\n    <MIcon Large\r\n           Color=\"purple darken-2\">\r\n        mdi-dialpad\r\n    </MIcon>\r\n\r\n    <MIcon Large\r\n           Color=\"teal darken-2\">\r\n        mdi-email\r\n    </MIcon>\r\n\r\n    <MIcon Large\r\n           Color=\"blue-grey darken-2\">\r\n        mdi-call-split\r\n    </MIcon>\r\n\r\n    <MIcon Large\r\n           Color=\"orange darken-2\">\r\n        mdi-arrow-up-bold-box-outline\r\n    </MIcon>\r\n</MRow>\r\n",
        "Type": "Demos.Components.Icon.props.Color",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "click",
        "Title": "单击",
        "Description": "<p>将任何单击事件绑定到 <code>MIcon</code> 将自动将光标更改为指针。</p>\n",
        "Code": "<MCard>\r\n    <MToolbar\r\n        Color=\"pink\"\r\n        Dark\r\n        Dense\r\n        Flat>\r\n        <MToolbarTitle Class=\"text-body-2\">\r\n            Upcoming Changes\r\n        </MToolbarTitle>\r\n    </MToolbar>\r\n    <MCardText>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n    </MCardText>\r\n\r\n    <MCardActions>\r\n        <MSpacer></MSpacer>\r\n        <MIcon\r\n            Large\r\n            OnClick=\"Next\">\r\n            mdi-chevron-right\r\n        </MIcon>\r\n    </MCardActions>\r\n</MCard>\r\n\r\n<MSnackbar @bind-Value=\"show\" Top>\r\n    You clicked next!\r\n</MSnackbar>\r\n\r\n@code {\r\n\r\n    bool show;\r\n\r\n    void Next()\r\n    {\r\n        show = true;\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.Icon.events.Click",
        "Style": "",
        "Debug": false,
        "Group": 1
      },
      {
        "Order": 0,
        "Name": "button",
        "Title": "按钮",
        "Description": "<p>图标可以在按钮内部使用，以增加动作的重点。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <div>\r\n        <MButton Class=\"ma-2\"\r\n                 Color=\"primary\"\r\n                 Dark>\r\n            Accept\r\n            <MIcon Dark\r\n                   Right>\r\n                mdi-checkbox-marked-circle\r\n            </MIcon>\r\n        </MButton>\r\n\r\n        <MButton Class=\"ma-2\"\r\n                 Color=\"red\"\r\n                 Dark>\r\n            Decline\r\n            <MIcon Dark\r\n                   Right>\r\n                mdi-cancel\r\n            </MIcon>\r\n        </MButton>\r\n\r\n        <MButton Class=\"ma-2\"\r\n                 Dark>\r\n            <MIcon Dark\r\n                   Left>\r\n                mdi-minus-circle\r\n            </MIcon>Cancel\r\n        </MButton>\r\n    </div>\r\n\r\n    <div>\r\n        <MButton Class=\"ma-2\"\r\n                 Color=\"orange darken-2\"\r\n                 Dark>\r\n            <MIcon Dark\r\n                   Left>\r\n                mdi-arrow-left\r\n            </MIcon>Back\r\n        </MButton>\r\n\r\n        <MButton Class=\"ma-2\"\r\n                 Color=\"purple\"\r\n                 Dark>\r\n            <MIcon Dark>\r\n                mdi-wrench\r\n            </MIcon>\r\n        </MButton>\r\n\r\n        <MButton Class=\"ma-2\"\r\n                 Color=\"indigo\"\r\n                 Dark>\r\n            <MIcon Dark>\r\n                mdi-cloud-upload\r\n            </MIcon>\r\n        </MButton>\r\n    </div>\r\n\r\n    <div>\r\n        <MButton Class=\"ma-2\"\r\n                 Text\r\n                 Icon\r\n                 Color=\"blue lighten-2\">\r\n            <MIcon>mdi-thumb-up</MIcon>\r\n        </MButton>\r\n\r\n        <MButton Class=\"ma-2\"\r\n                 Text\r\n                 Icon\r\n                 Color=\"red lighten-2\">\r\n            <MIcon>mdi-thumb-down</MIcon>\r\n        </MButton>\r\n    </div>\r\n</div>",
        "Type": "Demos.Components.Icon.misc.Button",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 0,
        "Name": "fontAwesome",
        "Title": "Font Awesome",
        "Description": "<p>同样支持 <a href=\"https://fontawesome.com/icons/\">Font Awesome</a>。 只需使用 <code>fa-</code> 预定图标名称。 请注意，您仍然需要在您的项目中包含Font Awesome 图标。</p>\n",
        "Code": "<MRow\r\n    Align=\"AlignTypes.Center\"\r\n    Justify=\"JustifyTypes.SpaceAround\">\r\n    <MIcon>fas fa-lock</MIcon>\r\n\r\n    <MIcon>fas fa-search</MIcon>\r\n\r\n    <MIcon>fas fa-list</MIcon>\r\n\r\n    <MIcon>fas fa-edit</MIcon>\r\n\r\n    <MIcon>fas fa-tachometer-alt</MIcon>\r\n\r\n    <MIcon>fas fa-circle-notch fa-spin</MIcon>\r\n</MRow>",
        "Type": "Demos.Components.Icon.misc.FontAwesome",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 0,
        "Name": "materialDesign",
        "Title": "Material Design",
        "Description": "<p><a href=\"https://material.io/tools/icons/?style=baseline\">Material Design</a> 也是支持的。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MRow\r\n        Justify=\"JustifyTypes.SpaceAround\"\r\n        Class=\"mb-2\">\r\n        <span class=\"group pa-2\">\r\n            <MIcon Small>home</MIcon>\r\n            <MIcon Small>event</MIcon>\r\n            <MIcon Small>info</MIcon>\r\n        </span>\r\n\r\n        <span class=\"group pa-2 teal\">\r\n            <MIcon\r\n                Dark\r\n                Small>\r\n                folder_open\r\n            </MIcon>\r\n            <MIcon\r\n                Dark\r\n                Small>\r\n                widgets\r\n            </MIcon>\r\n            <MIcon\r\n                Dark\r\n                Small>\r\n                gavel\r\n            </MIcon>\r\n        </span>\r\n    </MRow>\r\n\r\n    <MRow\r\n        Justify=\"JustifyTypes.SpaceAround\"\r\n        Class=\"mb-2\">\r\n        <span class=\"group pa-2\">\r\n            <MIcon>home</MIcon>\r\n            <MIcon>event</MIcon>\r\n            <MIcon>info</MIcon>\r\n        </span>\r\n\r\n        <span class=\"group pa-2 teal\">\r\n            <MIcon Dark>folder_open</MIcon>\r\n            <MIcon Dark>widgets</MIcon>\r\n            <MIcon Dark>gavel</MIcon>\r\n        </span>\r\n    </MRow>\r\n\r\n    <MRow\r\n        Justify=\"JustifyTypes.SpaceAround\"\r\n        Class=\"mb-2\">\r\n        <span class=\"group pa-2\">\r\n            <MIcon Large>home</MIcon>\r\n            <MIcon Large>event</MIcon>\r\n            <MIcon Large>info</MIcon>\r\n        </span>\r\n\r\n        <span class=\"group pa-2 teal\">\r\n            <MIcon\r\n                Large\r\n                Dark>\r\n                folder_open\r\n            </MIcon>\r\n            <MIcon\r\n                Large\r\n                Dark>\r\n                widgets\r\n            </MIcon>\r\n            <MIcon\r\n                Large\r\n                Dark>\r\n                gavel\r\n            </MIcon>\r\n        </span>\r\n    </MRow>\r\n\r\n    <MRow Justify=\"JustifyTypes.SpaceAround\">\r\n        <span class=\"group pa-2\">\r\n            <MIcon XLarge>home</MIcon>\r\n            <MIcon XLarge>event</MIcon>\r\n            <MIcon XLarge>info</MIcon>\r\n        </span>\r\n\r\n        <span class=\"group pa-2 teal\">\r\n            <MIcon\r\n                XLarge\r\n                Dark>\r\n                folder_open\r\n            </MIcon>\r\n            <MIcon\r\n                XLarge\r\n                Dark>\r\n                widgets\r\n            </MIcon>\r\n            <MIcon\r\n                XLarge\r\n                Dark>\r\n                gavel\r\n            </MIcon>\r\n        </span>\r\n    </MRow>\r\n</MContainer>\r\n\r\n<style>\r\n    .group {\r\n        display: flex;\r\n        flex: 1;\r\n        justify-content: space-around;\r\n    }\r\n</style>",
        "Type": "Demos.Components.Icon.misc.MaterialDesign",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 0,
        "Name": "svg",
        "Title": "SVG",
        "Description": "<p>如果您想要在 <code>MIcon</code> 组件中使用SVG图标，仅支持传入SVG的 <code>path</code>。</p>\n",
        "Code": "<MRow\r\n    Align=\"AlignTypes.Center\"\r\n    Justify=\"JustifyTypes.Center\">\r\n    <MIcon>@mdiAccount</MIcon>\r\n    <div class=\"mx-2\"></div>\r\n    <MIcon>@mdiPencil</MIcon>\r\n    <div class=\"mx-2\"></div>\r\n    <MIcon>@mdiShareVariant</MIcon>\r\n    <div class=\"mx-2\"></div>\r\n    <MButton\r\n        Color=\"primary\"\r\n        Depressed>\r\n        <MIcon Left>\r\n            @mdiDelete\r\n        </MIcon>\r\n        Delete\r\n    </MButton>\r\n</MRow>\r\n\r\n@code {\r\n    string mdiAccount = \"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z\";\r\n    string mdiPencil = \"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\";\r\n    string mdiShareVariant = \"M18,16.08C17.24,16.08 16.56,16.38 16.04,16.85L8.91,12.7C8.96,12.47 9,12.24 9,12C9,11.76 8.96,11.53 8.91,11.3L15.96,7.19C16.5,7.69 17.21,8 18,8A3,3 0 0,0 21,5A3,3 0 0,0 18,2A3,3 0 0,0 15,5C15,5.24 15.04,5.47 15.09,5.7L8.04,9.81C7.5,9.31 6.79,9 6,9A3,3 0 0,0 3,12A3,3 0 0,0 6,15C6.79,15 7.5,14.69 8.04,14.19L15.16,18.34C15.11,18.55 15.08,18.77 15.08,19C15.08,20.61 16.39,21.91 18,21.91C19.61,21.91 20.92,20.61 20.92,19A2.92,2.92 0 0,0 18,16.08Z\";\r\n    string mdiDelete = \"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\";\r\n}",
        "Type": "Demos.Components.Icon.misc.Svg",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/features/icon-fonts",
      "/components/buttons",
      "/components/cards"
    ],
    "Subtitle": "图标",
    "Title": "Icons",
    "Type": "图标"
  },
  {
    "Desc": "<p><code>MImage</code>组件包含支持丰富媒体的功能。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MImage\">MImage</a></li>\n</ul>\n",
      "注意": "\n<!--alert:info--> \n<p>MImage 组件使用 Intersect 指令，IE11 和 Safari需要 Polyfill。 如果检测到浏览器不支持此功能, 图像仍将以正常方式加载。</p>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.6410104+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p><code>MImage</code> 组件用于显示具有延迟加载和占位符的响应图像。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.Center\">\r\n    <MImage MaxHeight=\"150\"\r\n            MaxWidth=\"250\"\r\n            Src=\"@_src\"\r\n            LazySrc=\"https://picsum.photos/id/11/10/6\">\r\n    </MImage>\r\n</MRow>\r\n\r\n@code {\r\n    private string _src = \"https://picsum.photos/id/11/500/300\";\r\n}",
        "Type": "Demos.Components.Image.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "aspectRatio",
        "Title": "宽高比",
        "Description": "<p>如果你想改变图像的长宽比，你可以设置一个固定的宽高比。</p>\n",
        "Code": "<div class=\"d-flex flex-column justify-space-between align-center\">\r\n    <MSlider @bind-Value=\"_width\"\r\n             Class=\"align-self-stretch\"\r\n             Min=\"200\"\r\n             Max=\"500\"\r\n             Step=\"1\">\r\n    </MSlider>\r\n\r\n    <MImage AspectRatio=\"@(\"16/9\")\"\r\n            Width=\"@_width\"\r\n            Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/parallax/material.jpg\"></MImage>\r\n</div>\r\n\r\n@code {\r\n    private double _width = 300;\r\n}",
        "Type": "Demos.Components.Image.props.AspectRatio",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "contain",
        "Title": "包含",
        "Description": "<p>如果提供的长宽比与实际图像不匹配，则默认行为是填充尽可能多的空间，裁剪图像的边。启用 <strong>Contain</strong> 属性可以防止这种情况，但会导致两边出现空白。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MRow Justify=\"@JustifyTypes.SpaceAround\">\r\n        <MCol Cols=\"5\">\r\n            <div>\r\n                Default (cover)\r\n            </div>\r\n            <div>\r\n                Matching\r\n            </div>\r\n            <MImage Src=\"https://picsum.photos/510/300?random\"\r\n                    AspectRatio=\"1.7\">\r\n            </MImage>\r\n            <div>\r\n                Too high\r\n            </div>\r\n            <MImage Src=\"https://picsum.photos/510/300?random\"\r\n                    AspectRatio=\"2\">\r\n            </MImage>\r\n            <div>\r\n                Too low\r\n            </div>\r\n            <MImage Src=\"https://picsum.photos/510/300?random\"\r\n                    AspectRatio=\"1.4\">\r\n            </MImage>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"5\">\r\n            <div>\r\n                Contain\r\n            </div>\r\n            <div>\r\n                Matching\r\n            </div>\r\n            <MImage Src=\"https://picsum.photos/510/300?random\"\r\n                    AspectRatio=\"1.7\"\r\n                    contain>\r\n            </MImage>\r\n            <div>\r\n                Too high\r\n            </div>\r\n            <MImage Src=\"https://picsum.photos/510/300?random\"\r\n                    AspectRatio=\"2\"\r\n                    contain>\r\n            </MImage>\r\n            <div>\r\n                Too low\r\n            </div>\r\n            <MImage Src=\"https://picsum.photos/510/300?random\"\r\n                    AspectRatio=\"1.4\"\r\n                    contain>\r\n            </MImage>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>",
        "Type": "Demos.Components.Image.props.Contain",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "gradients",
        "Title": "渐变",
        "Description": "<p><strong>Gradient</strong> 属性可用于对图像应用简单的渐变叠加。更复杂的渐变应该作为一个class写在内容插槽上。</p>\n",
        "Code": "<MRow>\r\n    <MCol Cols=\"4\">\r\n        <MImage MaxHeight=\"150\"\r\n                MaxWidth=\"250\"\r\n                Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/parallax/material2.jpg\"\r\n                Gradient=\"to right top, rgba(100, 115, 201, 0.33), rgba(25, 32, 72, 0.7)\">\r\n        </MImage>\r\n    </MCol>\r\n    <MCol Cols=\"4\">\r\n        <MImage MaxHeight=\"150\"\r\n                MaxWidth=\"250\"\r\n                Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/parallax/material2.jpg\">\r\n            <div class=\"fill-height bottom-gradient\"></div>\r\n        </MImage>\r\n    </MCol>\r\n    <MCol Cols=\"4\">\r\n        <MImage MaxHeight=\"150\"\r\n                MaxWidth=\"250\"\r\n                Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/parallax/material2.jpg\">\r\n            <div class=\"fill-height repeating-gradient\"></div>\r\n        </MImage>\r\n    </MCol>\r\n</MRow>\r\n\r\n<style scoped>\r\n     .bottom-gradient {\r\n        background-image: linear-gradient(to top, rgba(0, 0, 0, 0.4) 0%, transparent 72px);\r\n      }\r\n    \r\n      .repeating-gradient {\r\n        background-image: repeating-linear-gradient(-45deg,\r\n                            rgba(255,0,0,.25),\r\n                            rgba(255,0,0,.25) 5px,\r\n                            rgba(0,0,255,.25) 5px,\r\n                            rgba(0,0,255,.25) 10px\r\n                          );\r\n      }\r\n</style>",
        "Type": "Demos.Components.Image.props.Gradients",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "height",
        "Title": "高度",
        "Description": "<p><code>MImage</code> 将自动增长到 <strong>Src</strong> 的大小，保持正确的纵横比。你可以用<strong>Height</strong>和<strong>MaxHeight</strong>的属性来限制。</p>\n",
        "Code": "<MContainer Class=\"fill-height\"\r\n            Fluid\r\n            Style=\"min-height: 434px\">\r\n    <MRow>\r\n        <MCol Cols=\"6\">\r\n            <MCard>\r\n                <MImage Src=\"https://picsum.photos/350/165?random\"\r\n                        Height=\"125\"\r\n                        Class=\"grey darken-4\"></MImage>\r\n                <MCardTitle Class=\"text-h6\">\r\n                    height\r\n                </MCardTitle>\r\n            </MCard>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"6\">\r\n            <MCard>\r\n                <MImage Src=\"https://picsum.photos/350/165?random\"\r\n                        Height=\"125\"\r\n                        Contain\r\n                        Class=\"grey darken-4\"></MImage>\r\n                <MCardTitle Class=\"text-h6\">\r\n                    height with contain\r\n                </MCardTitle>\r\n            </MCard>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"6\">\r\n            <MCard>\r\n                <MImage Src=\"https://picsum.photos/350/165?random\"\r\n                        MaxHeight=\"125\"\r\n                        Class=\"grey darken-4\"></MImage>\r\n                <MCardTitle Class=\"text-h6\">\r\n                    max-height\r\n                </MCardTitle>\r\n            </MCard>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"6\">\r\n            <MCard>\r\n                <MImage Src=\"https://picsum.photos/350/165?random\"\r\n                        MaxHeight=\"125\"\r\n                        Contain\r\n                        Class=\"grey darken-4\"></MImage>\r\n                <MCardTitle Class=\"text-h6\">\r\n                    max-height with contain\r\n                </MCardTitle>\r\n            </MCard>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>",
        "Type": "Demos.Components.Image.props.Height",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "placeholder",
        "Title": "占位符",
        "Description": "<p><code>MImage</code> 有一个特别的 <strong>PlaceholderContent</strong> 插槽，在图像加载时占位显示。 注意：下面的例子有一个错误的 <strong>Src</strong>，因此图片不会加载，以方便你观察占位符。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.Center\">\r\n    <MImage MaxHeight=\"300\"\r\n            MaxWidth=\"500\"\r\n            Src=\"https://bad.src/not/valid\"\r\n            LazySrc=\"https://picsum.photos/id/11/100/60\">\r\n        <PlaceholderContent>\r\n            <MRow Class=\"fill-height ma-0\"\r\n                  Align=\"@AlignTypes.Center\"\r\n                  Justify=\"@JustifyTypes.Center\">\r\n                <MProgressCircular Indeterminate></MProgressCircular>\r\n            </MRow>\r\n        </PlaceholderContent>\r\n    </MImage>\r\n</MRow>",
        "Type": "Demos.Components.Image.contents.Placeholder",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 3,
        "Name": "grid",
        "Title": "栅格",
        "Description": "<p>您可以使用 <code>MImage</code> 来制作图片库。</p>\n",
        "Code": "<div>\r\n    <MRow>\r\n        @for (var index = 0; index < 9; index++)\r\n        {\r\n            var localVariable = index;\r\n            <MCol Cols=\"4\">\r\n                <MImage Src=\"@(\"https://picsum.photos/500/300?image=\" + (localVariable * 5 + 10))\"\r\n                        LazySrc=\"@(\"https://picsum.photos/500/6?image=\" + (localVariable * 5 + 10))\" AspectRatio=\"1\"\r\n                        Class=\"grey lighten-2\">\r\n                    <PlaceholderContent>\r\n                        <MRow Class=\"fill-height ma-0\"\r\n                              Align=\"@AlignTypes.Center\"\r\n                              Justify=\"@JustifyTypes.Center\">\r\n                            <MProgressCircular Indeterminate></MProgressCircular>\r\n                        </MRow>\r\n                    </PlaceholderContent>\r\n                </MImage>\r\n            </MCol>\r\n        }\r\n    </MRow>\r\n</div>",
        "Type": "Demos.Components.Image.misc.Grid",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/grid-system",
      "/components/aspect-ratios",
      "/components/parallax"
    ],
    "Subtitle": "图像",
    "Title": "Images",
    "Type": "图像"
  },
  {
    "Desc": "<p>提供生成图片验证码的组件。</p>\n",
    "Order": 0,
    "OtherDocs": {},
    "LastWriteTime": "2022-10-20T23:42:05.64301+08:00",
    "DemoList": [
      {
        "Order": 1,
        "Name": "index",
        "Title": "使用",
        "Description": "<p><code>PImageCaptcha</code> 是使用<code>SkiaSharp</code> 生成的图片，在Linux环境中，需要安装 <code>libfontconfig1</code>，如Dockerfile中增加 <code>RUN apt-get update &amp;&amp; apt-get install -y libfontconfig1</code>。</p>\n",
        "Code": "@using System.Text\r\n<PImageCaptcha @bind-Value=\"value\" CaptchaWidth=\"200\" Outlined Label=\"VerifyCode\" OnRefresh=\"RefreshCode\"></PImageCaptcha>\r\n\r\n@code {\r\n    string randomCode = \"1234567890abcdefghijklmn\";\r\n\r\n    string value;\r\n\r\n    Random random = new Random();\r\n\r\n    private Task<string> RefreshCode()\r\n    {\r\n        var sb = new StringBuilder();\r\n        for (int i = 0; i < 5; i++)\r\n        {\r\n            sb.Append(randomCode[random.Next(0, randomCode.Length)]);\r\n        }\r\n\r\n        return Task.FromResult(sb.ToString());\r\n    }\r\n}",
        "Type": "Demos.Components.ImageCaptcha.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "textFieldStyle",
        "Title": "TextField 样式",
        "Description": "",
        "Code": "@using System.Text\r\n\r\n<MForm>\r\n    <MContainer>\r\n        <MRow>\r\n            <MCol Cols=\"12\" Sm=\"6\">\r\n                <PImageCaptcha @bind-Value=\"value1\" Label=\"Regular\" OnRefresh=\"RefreshCode\" ErrorMessage=\"@errorMessage\"></PImageCaptcha>\r\n            </MCol>\r\n            <MCol Cols=\"12\" Sm=\"6\">\r\n                <PImageCaptcha @bind-Value=\"value2\" Outlined Label=\"OutLine\" OnRefresh=\"RefreshCode\" ErrorMessage=\"@errorMessage\"></PImageCaptcha>\r\n            </MCol>\r\n            <MCol Cols=\"12\" Sm=\"6\">\r\n                <PImageCaptcha @bind-Value=\"value3\" Filled Label=\"Filled\" OnRefresh=\"RefreshCode\" ErrorMessage=\"@errorMessage\"></PImageCaptcha>\r\n            </MCol>\r\n            <MCol Cols=\"12\" Sm=\"6\">\r\n                <PImageCaptcha @bind-Value=\"value4\" Dense Label=\"Dense\" OnRefresh=\"RefreshCode\" ErrorMessage=\"@errorMessage\"></PImageCaptcha>\r\n            </MCol>\r\n            <MCol Cols=\"12\" Sm=\"6\">\r\n                <PImageCaptcha @bind-Value=\"value5\" Solo Label=\"Solo\" OnRefresh=\"RefreshCode\" ErrorMessage=\"@errorMessage\"></PImageCaptcha>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</MForm>\r\n\r\n\r\n@code {\r\n    string errorMessage = \"Verify Code Error\";\r\n\r\n    string randomCode = \"1234567890abcdefghijklmn\";\r\n\r\n    string value1;\r\n    string value2;\r\n    string value3;\r\n    string value4;\r\n    string value5;\r\n\r\n    Random random = new Random();\r\n\r\n    private Task<string> RefreshCode()\r\n    {\r\n        var sb = new StringBuilder();\r\n\r\n        for (int i = 0; i < 5; i++)\r\n        {\r\n            sb.Append(randomCode[random.Next(0, randomCode.Length)]);\r\n        }\r\n\r\n        return Task.FromResult(sb.ToString());\r\n    }\r\n}",
        "Type": "Demos.Components.ImageCaptcha.props.TextFieldStyle",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "verifyCode",
        "Title": "自定义验证码结果",
        "Description": "",
        "Code": "<PImageCaptcha @bind-Value=\"value\" CaptchaWidth=\"200\" Outlined Label=\"VerifyCode\" ErrorMessage=\"@ErrorMessage\" VerifyCode=\"@verifyCode\" OnRefresh=\"RefreshCode\"></PImageCaptcha>\r\n\r\n@code {\r\n    string randomCode = \"123456789\";\r\n\r\n    string calcFunCode = \"+-*\";\r\n\r\n    string verifyCode = \"\";\r\n\r\n    string ErrorMessage = \"Verify code error\";\r\n\r\n    string value;\r\n\r\n    Random random = new Random();\r\n\r\n    protected override Task OnInitializedAsync()\r\n    {\r\n        RefreshCode();\r\n        return base.OnInitializedAsync();\r\n    }\r\n\r\n    private Task<string> RefreshCode()\r\n    {\r\n        var firstNumber = randomCode[random.Next(0, randomCode.Length)].ToString();\r\n\r\n        var secondNumber = randomCode[random.Next(0, randomCode.Length)].ToString();\r\n\r\n        var calcFun = calcFunCode[random.Next(0, calcFunCode.Length)].ToString();\r\n\r\n        switch (calcFun)\r\n        {\r\n            case \"+\":\r\n                verifyCode = (int.Parse(firstNumber) + int.Parse(secondNumber)).ToString();\r\n                break;\r\n            case \"-\":\r\n                verifyCode = (int.Parse(firstNumber) - int.Parse(secondNumber)).ToString();\r\n                break;\r\n            case \"*\":\r\n                verifyCode = (int.Parse(firstNumber) * int.Parse(secondNumber)).ToString();\r\n                break;\r\n        }\r\n        \r\n        StateHasChanged();\r\n        return Task.FromResult(firstNumber + calcFun + secondNumber);\r\n    }\r\n}",
        "Type": "Demos.Components.ImageCaptcha.props.VerifyCode",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/text-fields",
      "/components/image"
    ],
    "Subtitle": "图片验证码",
    "Title": "Image Captcha",
    "Type": "图片验证码",
    "Tag": "preset"
  },
  {
    "Desc": "<p>列表滚动到底部自动加载更多数据。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MInfiniteScroll\">MInfiniteScroll</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.6440099+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>当 <code>HasMore</code> 属性为 <code>true</code> 时，用户页面滚动到底部 <code>Threshold</code> (默认为 250px)时无限滚动组件会调用定义的 <code>OnLoadMore</code> 函数。请求失败时支持点击重试。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MSwitch Value=\"_throw\" ValueChanged=\"ValueChanged\"\r\n             Label=\"@(\"throw exception when loading more\")\"\r\n             Disabled=\"_items.Count == 0\"\r\n             Class=\"d-inline-block\">\r\n    </MSwitch>\r\n</div>\r\n<MCard Width=\"500\" Height=\"250\"\r\n       Class=\"overflow-auto\" Style=\"margin: 0 auto\"\r\n       @ref=\"_card\">\r\n    <MList>\r\n        @foreach (var item in _items)\r\n        {\r\n            <MListItem>\r\n                <MListItemContent>\r\n                    <MListItemTitle>@item</MListItemTitle>\r\n                </MListItemContent>\r\n            </MListItem>\r\n            <MDivider />\r\n        }\r\n    </MList>\r\n    <MInfiniteScroll HasMore=\"@_hasMore\"\r\n                     OnLoadMore=\"@LoadMore\"\r\n                     Parent=\"@_card.Ref\">\r\n    </MInfiniteScroll>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    private bool _throw;\r\n\r\n    private MCard _card;\r\n    private int _count;\r\n    private List<string> _items = new();\r\n    private bool _hasMore;\r\n\r\n    protected override async Task OnAfterRenderAsync(bool firstRender)\r\n    {\r\n        if (firstRender)\r\n        {\r\n            await LoadMore();\r\n            StateHasChanged();\r\n        }\r\n    }\r\n\r\n    private async Task LoadMore()\r\n    {\r\n        var append = await MockRequest();\r\n        _items.AddRange(append);\r\n        _hasMore = append.Count > 0;\r\n    }\r\n\r\n    private async Task<List<string>> MockRequest()\r\n    {\r\n        if (_count >= 3)\r\n        {\r\n            return new List<string>();\r\n        }\r\n\r\n        await Task.Delay(2000);\r\n\r\n        if (_throw)\r\n        {\r\n            throw new TimeoutException();\r\n        }\r\n\r\n        _count++;\r\n\r\n        return Enumerable.Range(_items.Count, 10).Select(n => n.ToString()).ToList();\r\n    }\r\n\r\n    private void ValueChanged(bool val)\r\n    {\r\n        _items = _items.Take(10).ToList();\r\n        _count = 0;\r\n        _hasMore = true;\r\n        _throw = val;\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.InfiniteScroll.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "customContent",
        "Title": "自定义内容",
        "Description": "",
        "Code": "<MCard Width=\"500\" Height=\"250\" Class=\"overflow-auto\" Style=\"margin: 0 auto\" @ref=\"_card\">\r\n    <MList>\r\n        @foreach (var item in _items)\r\n        {\r\n            <MListItem>\r\n                <MListItemContent>\r\n                    <MListItemTitle>@item</MListItemTitle>\r\n                </MListItemContent>\r\n            </MListItem>\r\n            <MDivider />\r\n        }\r\n    </MList>\r\n    <MInfiniteScroll HasMore=\"@_hasMore\"\r\n                     OnLoadMore=\"@LoadMore\"\r\n                     Parent=\"@_card.Ref\">\r\n        @if (context.HasMore && !context.Failed)\r\n        {\r\n            <MProgressLinear Indeterminate Color=\"primary\"></MProgressLinear>\r\n        }\r\n        else if (context.Failed)\r\n        {\r\n            <span>Failed to load data</span>\r\n            <span>\r\n                <MIcon OnClick=\"@context.Retry\">mdi-reload</MIcon>\r\n            </span>\r\n        }\r\n        else\r\n        {\r\n            <span>That's all!</span>\r\n        }\r\n    </MInfiniteScroll>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    private MCard _card;\r\n    private int _count;\r\n    private List<string> _items = new();\r\n    private bool _hasMore;\r\n\r\n    protected override async Task OnAfterRenderAsync(bool firstRender)\r\n    {\r\n        if (firstRender)\r\n        {\r\n            await LoadMore();\r\n            StateHasChanged();\r\n        }\r\n    }\r\n\r\n    private async Task LoadMore()\r\n    {\r\n        var append = await MockRequest();\r\n        _items.AddRange(append);\r\n        _hasMore = append.Count > 0;\r\n    }\r\n\r\n    private async Task<List<string>> MockRequest()\r\n    {\r\n        if (_count >= 3)\r\n        {\r\n            return new List<string>();\r\n        }\r\n\r\n        await Task.Delay(2000);\r\n\r\n        _count++;\r\n\r\n        return Enumerable.Range(_items.Count, 10).Select(n => n.ToString()).ToList();\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.InfiniteScroll.contents.CustomContent",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 0,
        "Name": "virtualScroller",
        "Title": "使用虚拟滚动条",
        "Description": "",
        "Code": "<MCard Width=\"500\" Style=\"margin: 0 auto\">\r\n    <MVirtualScroll Height=\"250\" Items=\"_items\" @ref=\"_vs\">\r\n        <ItemContent>\r\n            <div>\r\n                <MListItem>\r\n                    <MListItemContent>\r\n                        <MListItemTitle>@context</MListItemTitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n                <MDivider />\r\n            </div>\r\n        </ItemContent>\r\n        <FooterContent>\r\n            <MInfiniteScroll HasMore=\"@_hasMore\"\r\n                             OnLoadMore=\"@LoadMore\"\r\n                             Parent=\"@_vs?.Ref\">\r\n            </MInfiniteScroll>\r\n        </FooterContent>\r\n    </MVirtualScroll>\r\n</MCard>\r\n\r\n\r\n@code {\r\n\r\n    private MVirtualScroll<string> _vs;\r\n\r\n    private int _count;\r\n    private List<string> _items = new();\r\n    private bool _hasMore;\r\n\r\n    protected override async Task OnAfterRenderAsync(bool firstRender)\r\n    {\r\n        if (firstRender)\r\n        {\r\n            await LoadMore();\r\n            StateHasChanged();\r\n        }\r\n    }\r\n\r\n    private async Task LoadMore()\r\n    {\r\n        var append = await MockRequest();\r\n        _items.AddRange(append);\r\n        _hasMore = append.Count > 0;\r\n    }\r\n\r\n    private async Task<List<string>> MockRequest()\r\n    {\r\n        if (_count >= 3)\r\n        {\r\n            return new List<string>();\r\n        }\r\n\r\n        await Task.Delay(2000);\r\n\r\n        _count++;\r\n\r\n        return Enumerable.Range(_items.Count, 10).Select(n => n.ToString()).ToList();\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.InfiniteScroll.misc.VirtualScroller",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/lists",
      "/components/progress-circular",
      "/components/virtual-scroller"
    ],
    "Subtitle": "无限滚动",
    "Title": "Infinite scroll",
    "Type": "无限滚动"
  },
  {
    "Desc": "<p><code>MList</code> 组件用于显示信息。 它可以包含头像、内容、操作、列表组标题等等。 列表以易于在集合中识别特定项目的方式显示内容。 它们为组织一组文本和图像提供了一致的样式。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MList\">MList</a></li>\n<li><a href=\"/api/MListGroup\">MListGroup</a></li>\n<li><a href=\"/api/MListItem\">MListItem</a></li>\n<li><a href=\"/api/MListItemAction\">MListItemAction</a></li>\n<li><a href=\"/api/MListItemActionText\">MListItemActionText</a></li>\n<li><a href=\"/api/MListItemAvatar\">MListItemAvatar</a></li>\n<li><a href=\"/api/MListItemContent\">MListItemContent</a></li>\n<li><a href=\"/api/MListItemGroup\">MListItemGroup</a></li>\n<li><a href=\"/api/MListItemIcon\">MListItemIcon</a></li>\n<li><a href=\"/api/MListItemSubtitle\">MListItemSubtitle</a></li>\n<li><a href=\"/api/MListItemTitle\">MListItemTitle</a></li>\n</ul>\n",
      "注意": "\n<!--alert:info-->\n<p>如果您要查找有状态列表项，请查看 <a href=\"/components/list-item-groups\"><strong>MListItemGroup</strong></a>。</p>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.652523+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>列表有三种基本形式。 单行 (默认), 双行 和 三行. 行声明指定了项目的最小高度，也可以使用相同的属性从 <code>MList</code> 中进行控制。</p>\n",
        "Code": "<MCard Class=\"mx-auto\"\r\n        MaxWidth=\"400\"\r\n        Tile>\r\n    <MListItem>\r\n        <MListItemContent>\r\n            <MListItemTitle>Single-line item</MListItemTitle>\r\n        </MListItemContent>\r\n    </MListItem>\r\n\r\n    <MListItem TwoLine>\r\n        <MListItemContent>\r\n            <MListItemTitle>Two-line item</MListItemTitle>\r\n            <MListItemSubtitle>Secondary text</MListItemSubtitle>\r\n        </MListItemContent>\r\n    </MListItem>\r\n\r\n    <MListItem ThreeLine>\r\n        <MListItemContent>\r\n            <MListItemTitle>Three-line item</MListItemTitle>\r\n            <MListItemSubtitle>\r\n                Secondary line text Lorem ipsum dolor sit amet,\r\n            </MListItemSubtitle>\r\n            <MListItemSubtitle>\r\n                consectetur adipiscing elit.\r\n            </MListItemSubtitle>\r\n        </MListItemContent>\r\n    </MListItem>\r\n</MCard>\r\n",
        "Type": "Demos.Components.List.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "dense",
        "Title": "密集",
        "Description": "<p><code>List</code> 可以通过 <code>Dense</code> 属性变密集。</p>\n",
        "Code": "<MCard Class=\"mx-auto\"\r\n       MaxWidth=\"300\"\r\n       tile>\r\n    <MList Dense>\r\n        <MSubheader>REPORTS</MSubheader>\r\n        <MListItemGroup @bind-Value=\"_selectedItem\"\r\n                        Color=\"primary\">\r\n            @foreach (var item in _items)\r\n            {\r\n                <MListItem >\r\n                    <MListItemIcon>\r\n                        <MIcon>\r\n                            @item.Icon\r\n                        </MIcon>\r\n                    </MListItemIcon>\r\n                    <MListItemContent>\r\n                        <MListItemTitle>@item.Text</MListItemTitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            }\r\n        </MListItemGroup>\r\n    </MList>\r\n</MCard>\r\n\r\n@code{\r\n    private StringNumber _selectedItem = 1;\r\n    private Item[] _items = new Item[]\r\n    {\r\n       new Item { Text= \"Real-Time\", Icon= \"mdi-clock\" },\r\n       new Item { Text= \"Audience\", Icon= \"mdi-account\" },\r\n       new Item { Text= \"Conversions\", Icon= \"mdi-flag\" }\r\n    };\r\n\r\n    class Item\r\n    {\r\n        public string Text { get; set; }\r\n        public string Icon { get; set; }\r\n    }\r\n}",
        "Type": "Demos.Components.List.props.Dense",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "disabled",
        "Title": "禁用",
        "Description": "<p>您不能与已禁用的 <code>MList</code> 交互。</p>\n",
        "Code": "<MCard Class=\"mx-auto\"\r\n       MaxWidth=\"300\"\r\n       tile>\r\n    <MList Disabled>\r\n        <MSubheader>REPORTS</MSubheader>\r\n        <MListItemGroup @bind-Value=\"selectedItem\"\r\n                        Color=\"primary\">\r\n            @foreach (var item in items)\r\n            {\r\n                <MListItem>\r\n                    <MListItemIcon>\r\n                        <MIcon>\r\n                            @item.Icon\r\n                        </MIcon>\r\n                    </MListItemIcon>\r\n                    <MListItemContent>\r\n                        <MListItemTitle>@item.Text</MListItemTitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            }\r\n        </MListItemGroup>\r\n    </MList>\r\n</MCard>\r\n\r\n@code{\r\n    StringNumber selectedItem = 1;\r\n    Item[] items = new Item[]\r\n    {\r\n       new Item { Text= \"Real-Time\", Icon= \"mdi-clock\" },\r\n       new Item { Text= \"Audience\", Icon= \"mdi-account\" },\r\n       new Item { Text= \"Conversions\", Icon= \"mdi-flag\" }\r\n    };\r\n\r\n    class Item\r\n    {\r\n        public string Text { get; set; }\r\n        public string Icon { get; set; }\r\n    }\r\n}",
        "Type": "Demos.Components.List.props.Disabled",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 3,
        "Name": "flat",
        "Title": "扁平",
        "Description": "<p>在 <strong>Flat</strong> 属性的 <code>MList</code> 中选择时，项目不会发生变化。</p>\n",
        "Code": "<MCard Class=\"mx-auto\"\r\n       MaxWidth=\"300\"\r\n       tile>\r\n    <MList Flat>\r\n        <MSubheader>REPORTS</MSubheader>\r\n        <MListItemGroup @bind-Value=\"_selectedItem\"\r\n                        Color=\"primary\">\r\n            @foreach (var item in _items)\r\n            {\r\n                <MListItem >\r\n                    <MListItemIcon>\r\n                        <MIcon>\r\n                            @item.Icon\r\n                        </MIcon>\r\n                    </MListItemIcon>\r\n                    <MListItemContent>\r\n                        <MListItemTitle>@item.Text</MListItemTitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            }\r\n        </MListItemGroup>\r\n    </MList>\r\n</MCard>\r\n\r\n@code{\r\n    private StringNumber _selectedItem = 1;\r\n    private Item[] _items = new Item[]\r\n    {\r\n       new Item { Text= \"Real-Time\", Icon= \"mdi-clock\" },\r\n       new Item { Text= \"Audience\", Icon= \"mdi-account\" },\r\n       new Item { Text= \"Conversions\", Icon= \"mdi-flag\" }\r\n    };\r\n\r\n    class Item\r\n    {\r\n        public string Text { get; set; }\r\n        public string Icon { get; set; }\r\n    }\r\n}",
        "Type": "Demos.Components.List.props.Flat",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 4,
        "Name": "nav",
        "Title": "导航列表",
        "Description": "<p>列表可以接受一个替代的 <strong>Nav</strong> 样式，它减少了 <code>MListItem</code> 的宽度，并增加了一个边框半径。</p>\n",
        "Code": "<MCard Class=\"mx-auto\"\r\n       Width=\"256\"\r\n       tile>\r\n    <MNavigationDrawer permanent>\r\n        <MList>\r\n            <MListItem>\r\n                <MListItemAvatar>\r\n                    <MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/jack.png\"></MImage>\r\n                </MListItemAvatar>\r\n            </MListItem>\r\n\r\n            <MListItem Link>\r\n                <MListItemContent>\r\n                    <MListItemTitle class=\"text-h6\">\r\n                        MASA\r\n                    </MListItemTitle>\r\n                    <MListItemSubtitle>john@masablazor.com</MListItemSubtitle>\r\n                </MListItemContent>\r\n\r\n                <MListItemAction>\r\n                    <MIcon>mdi-menu-down</MIcon>\r\n                </MListItemAction>\r\n            </MListItem>\r\n        </MList>\r\n        <MDivider></MDivider>\r\n        <MList Nav\r\n               Dense>\r\n            <MListItemGroup @bind-Value=\"_selectedItem\"\r\n                            Color=\"primary\">\r\n                @foreach (var item in _items)\r\n                {\r\n                    <MListItem>\r\n                        <MListItemIcon>\r\n                            <MIcon>@item.Icon</MIcon>\r\n                        </MListItemIcon>\r\n\r\n                        <MListItemContent>\r\n                            <MListItemTitle>@item.Text</MListItemTitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                }\r\n            </MListItemGroup>\r\n        </MList>\r\n    </MNavigationDrawer>\r\n</MCard>\r\n\r\n@code{\r\n    private StringNumber _selectedItem = 0;\r\n    private Item[] _items = new Item[]\r\n    {\r\n       new Item { Text= \"My Files\", Icon= \"mdi-folder\" },\r\n       new Item { Text= \"Shared with me\", Icon= \"mdi-account-multiple\" },\r\n       new Item { Text= \"Starred\", Icon= \"mdi-star\" },\r\n       new Item { Text= \"Recent\", Icon= \"mdi-history\" },\r\n       new Item { Text= \"Offline\", Icon= \"mdi-check-circle\" },\r\n       new Item { Text= \"Uploads\", Icon= \"mdi-upload\" },\r\n       new Item { Text= \"Backups\", Icon= \"mdi-cloud-upload\" }\r\n\r\n    };\r\n\r\n    class Item\r\n    {\r\n        public string Text { get; set; }\r\n        public string Icon { get; set; }\r\n    }\r\n}",
        "Type": "Demos.Components.List.props.Nav",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 5,
        "Name": "rounded",
        "Title": "圆角",
        "Description": "<p>你可以让 <code>MList</code> 项变成圆角。</p>\n",
        "Code": "<MCard Class=\"mx-auto\"\r\n       MaxWidth=\"300\"\r\n       tile>\r\n    <MList Rounded>\r\n        <MSubheader>REPORTS</MSubheader>\r\n        <MListItemGroup @bind-Value=\"_selectedItem\"\r\n                        Color=\"primary\">\r\n            @foreach (var item in _items)\r\n            {\r\n                <MListItem>\r\n                    <MListItemIcon>\r\n                        <MIcon>\r\n                            @item.Icon\r\n                        </MIcon>\r\n                    </MListItemIcon>\r\n                    <MListItemContent>\r\n                        <MListItemTitle>@item.Text</MListItemTitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            }\r\n        </MListItemGroup>\r\n    </MList>\r\n</MCard>\r\n\r\n@code{\r\n    private StringNumber _selectedItem = 1;\r\n    private Item[] _items = new Item[]\r\n    {\r\n       new Item { Text= \"Real-Time\", Icon= \"mdi-clock\" },\r\n       new Item { Text= \"Audience\", Icon= \"mdi-account\" },\r\n       new Item { Text= \"Conversions\", Icon= \"mdi-flag\" }\r\n    };\r\n\r\n    class Item\r\n    {\r\n        public string Text { get; set; }\r\n        public string Icon { get; set; }\r\n    }\r\n}",
        "Type": "Demos.Components.List.props.Rounded",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 6,
        "Name": "shapedLists",
        "Title": "形状列表",
        "Description": "<p>形状列表在 <code>MListItem</code> 的一侧具有圆形边界。</p>\n",
        "Code": "<MCard Class=\"mx-auto\"\r\n       MaxWidth=\"300\"\r\n       tile>\r\n    <MList Shaped>\r\n        <MSubheader>REPORTS</MSubheader>\r\n        <MListItemGroup @bind-Value=\"_selectedItem\"\r\n                        Color=\"primary\">\r\n            @foreach (var item in _items)\r\n            {\r\n                <MListItem >\r\n                    <MListItemIcon>\r\n                        <MIcon>\r\n                            @item.Icon\r\n                        </MIcon>\r\n                    </MListItemIcon>\r\n                    <MListItemContent>\r\n                        <MListItemTitle>@item.Text</MListItemTitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            }\r\n        </MListItemGroup>\r\n    </MList>\r\n</MCard>\r\n\r\n@code{\r\n    private StringNumber _selectedItem = 1;\r\n    private Item[] _items = new Item[]\r\n    {\r\n       new Item { Text= \"Real-Time\", Icon= \"mdi-clock\" },\r\n       new Item { Text= \"Audience\", Icon= \"mdi-account\" },\r\n       new Item { Text= \"Conversions\", Icon= \"mdi-flag\" }\r\n    };\r\n\r\n    class Item\r\n    {\r\n        public string Text { get; set; }\r\n        public string Icon { get; set; }\r\n    }\r\n}",
        "Type": "Demos.Components.List.props.ShapedLists",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 7,
        "Name": "subGroup",
        "Title": "嵌套列表",
        "Description": "<p>使用 <code>MListGroup</code> 组件，您可以使用 <strong>SubGroup</strong> 属性创建多达 2 级的深度。</p>\n",
        "Code": "<MCard Class=\"mx-auto\"\r\n       Width=\"300\">\r\n    <MList>\r\n        <MListItem>\r\n            <MListItemIcon>\r\n                <MIcon>mdi-home</MIcon>\r\n            </MListItemIcon>\r\n\r\n            <MListItemTitle>Home</MListItemTitle>\r\n        </MListItem>\r\n\r\n        <MListGroup @bind-Value=\"userExpanded\" PrependIcon=\"mdi-account-circle\">\r\n            <ActivatorContent>\r\n                <MListItemTitle>Users</MListItemTitle>\r\n            </ActivatorContent>\r\n            <ChildContent>\r\n                <MListGroup @bind-Value=\"adminExpanded\" NoAction SubGroup>\r\n                    <ActivatorContent>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>Admin</MListItemTitle>\r\n                        </MListItemContent>\r\n                    </ActivatorContent>\r\n                    <ChildContent>\r\n                        @foreach (var item in _admins)\r\n                        {\r\n                            <MListItem Link>\r\n                                <MListItemTitle>@item.Text</MListItemTitle>\r\n\r\n                                <MListItemIcon>\r\n                                    <MIcon>@item.Icon</MIcon>\r\n                                </MListItemIcon>\r\n                            </MListItem>\r\n                        }\r\n                    </ChildContent>\r\n                </MListGroup>\r\n\r\n                <MListGroup NoAction\r\n                            SubGroup>\r\n                    <ActivatorContent>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>Actions</MListItemTitle>\r\n                        </MListItemContent>\r\n                    </ActivatorContent>\r\n                    <ChildContent>\r\n                        @foreach (var item in _cruds)\r\n                        {\r\n                            <MListItem Link>\r\n                                <MListItemTitle>@item.Text</MListItemTitle>\r\n\r\n                                <MListItemIcon>\r\n                                    <MIcon>@item.Icon</MIcon>\r\n                                </MListItemIcon>\r\n                            </MListItem>\r\n                        }\r\n                    </ChildContent>\r\n                </MListGroup>\r\n            </ChildContent>\r\n        </MListGroup>\r\n    </MList>\r\n</MCard>\r\n\r\n@code{\r\n    readonly Item[] _admins = new Item[]\r\n    {\r\n       new Item { Text= \"Management\", Icon= \"mdi-account-multiple-outline\" },\r\n       new Item { Text= \"Settings\", Icon= \"mdi-cog-outline\" }\r\n    };\r\n\r\n    readonly Item[] _cruds = new Item[]\r\n    {\r\n       new Item { Text= \"Create\", Icon= \"mdi-plus-outline\" },\r\n       new Item { Text= \"Read\", Icon= \"mdi-file-outline\" },\r\n       new Item { Text= \"Update\", Icon= \"mdi-update\" },\r\n       new Item { Text= \"Delete\", Icon= \"mdi-delete\" }\r\n    };\r\n\r\n    bool userExpanded = true;\r\n    bool adminExpanded = true;\r\n\r\n    class Item\r\n    {\r\n        public string Text { get; set; }\r\n        public string Icon { get; set; }\r\n    }\r\n}",
        "Type": "Demos.Components.List.props.SubGroup",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 8,
        "Name": "threeLine",
        "Title": "三行",
        "Description": "<p>对于三行列表，字幕将垂直夹在 2 行，然后省略。</p>\n",
        "Code": "<MCard MaxWidth=\"450\"\r\n        Class=\"mx-auto\">\r\n    <MToolbar Color=\"cyan\"\r\n               Dark>\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n        <MToolbarTitle>Inbox</MToolbarTitle>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n    </MToolbar>\r\n\r\n    <MList ThreeLine>\r\n        @foreach (var item in _items)\r\n        {\r\n            @if (item.Header != null)\r\n            {\r\n                <MSubheader>@item.Header</MSubheader>\r\n            }\r\n            else if (item.Divider)\r\n            {\r\n                <MDivider Inset=\"item.Inset\"></MDivider>\r\n            }\r\n            else\r\n            {\r\n                <MListItem>\r\n                    <MListItemAvatar>\r\n                        <MImage Src=\"@item.Avatar\"></MImage>\r\n                    </MListItemAvatar>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>@((MarkupString)item.Title)</MListItemTitle>\r\n                        <MListItemSubtitle>@((MarkupString)item.SubTitle)</MListItemSubtitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            }\r\n        }\r\n    </MList>\r\n</MCard>\r\n\r\n@code{\r\n    private Item[] _items = new Item[]\r\n    {\r\n       new Item { Header=\"Today\" },\r\n       new Item\r\n       {\r\n           Avatar=\"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/1.png\",\r\n           Title=\"Brunch this weekend?\",\r\n           SubTitle=\"<span class=\\\"text--primary\\\">Ali Connors</span> &mdash; I'll be in your neighborhood doing errands this weekend. Do you want to hang out?\"\r\n       },\r\n       new Item\r\n       {\r\n           Divider=true,\r\n           Inset=true\r\n       },\r\n       new Item\r\n       {\r\n           Avatar=\"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/2.png\",\r\n           Title=\"Summer BBQ <span class=\\\"grey--text text--lighten-1\\\">4</span>\",\r\n           SubTitle=\"<span class=\\\"text--primary\\\">to Alex, Scott, Jennifer</span> &mdash; Wish I could come, but I'm out of town this weekend.\"\r\n       },\r\n       new Item\r\n       {\r\n           Divider=true,\r\n           Inset=true\r\n       },\r\n       new Item\r\n       {\r\n           Avatar=\"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/3.png\",\r\n           Title=\"Oui oui\",\r\n           SubTitle=\"<span class=\\\"text--primary\\\">Sandra Adams</span> &mdash; Do you have Paris recommendations? Have you ever been?\"\r\n       },\r\n       new Item\r\n       {\r\n           Divider=true,\r\n           Inset=true\r\n       },\r\n       new Item\r\n       {\r\n           Avatar=\"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/4.png\",\r\n           Title=\"Birthday gift\",\r\n           SubTitle=\"<span class=\\\"text--primary\\\">Trevor Hansen</span> &mdash; Have any ideas about what we should get Heidi for her birthday?\"\r\n       },\r\n       new Item\r\n       {\r\n           Divider=true,\r\n           Inset=true\r\n       },\r\n       new Item\r\n       {\r\n           Avatar=\"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/5.png\",\r\n           Title=\"Recipe to try\",\r\n           SubTitle=\"<span class=\\\"text--primary\\\">Britta Holt</span> &mdash; We should eat this: Grate, Squash, Corn, and tomatillo Tacos.\"\r\n       }\r\n    };\r\n\r\n    class Item\r\n    {\r\n        public string Header { get; set; }\r\n        public string Avatar { get; set; }\r\n        public string Title { get; set; }\r\n        public string SubTitle { get; set; }\r\n        public bool Divider { get; set; }\r\n        public bool Inset { get; set; }\r\n    }\r\n}",
        "Type": "Demos.Components.List.props.ThreeLine",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 9,
        "Name": "twoLinesAndSubheader",
        "Title": "两行和副标题",
        "Description": "<p>列表组件可以包含列表组标题，分割线，以及1行或者更多行，如果副标题文本溢出则会以省略号的形式截断文本。</p>\n",
        "Code": "<MCard MaxWidth=\"600\"\r\n       Class=\"mx-auto\">\r\n    <MToolbar Color=\"light-blue\"\r\n              Dark>\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n        <MToolbarTitle>My files</MToolbarTitle>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-view-module</MIcon>\r\n        </MButton>\r\n    </MToolbar>\r\n\r\n    <MList Subheader\r\n           TwoLine>\r\n        <MSubheader Inset>Folders</MSubheader>\r\n\r\n        @foreach (var item in _folders)\r\n        {\r\n            <MListItem>\r\n                <MListItemAvatar>\r\n                    <MIcon Class=\"grey lighten-1\"\r\n                           Dark>\r\n                        mdi-folder\r\n                    </MIcon>\r\n                </MListItemAvatar>\r\n\r\n                <MListItemContent>\r\n                    <MListItemTitle>@item.Title</MListItemTitle>\r\n\r\n                    <MListItemSubtitle>@item.SubTitle</MListItemSubtitle>\r\n                </MListItemContent>\r\n\r\n                <MListItemAction>\r\n                    <MButton Icon>\r\n                        <MIcon Color=\"grey lighten-1\">mdi-information</MIcon>\r\n                    </MButton>\r\n                </MListItemAction>\r\n            </MListItem>\r\n\r\n        }\r\n\r\n\r\n        <MDivider Inset></MDivider>\r\n\r\n        <MSubheader Inset>Files</MSubheader>\r\n\r\n        @foreach (var item in _files)\r\n        {\r\n            <MListItem>\r\n                <MListItemAvatar>\r\n                    <MIcon Class=\"@item.Color\"\r\n                           Dark>@item.Icon</MIcon>\r\n                </MListItemAvatar>\r\n\r\n                <MListItemContent>\r\n                    <MListItemTitle>@item.Title</MListItemTitle>\r\n\r\n                    <MListItemSubtitle>@item.SubTitle</MListItemSubtitle>\r\n                </MListItemContent>\r\n\r\n                <MListItemAction>\r\n                    <MButton Icon>\r\n                        <MIcon Color=\"grey lighten-1\">mdi-information</MIcon>\r\n                    </MButton>\r\n                </MListItemAction>\r\n            </MListItem>\r\n        }\r\n    </MList>\r\n</MCard>\r\n\r\n@code{\r\n    private Item[] _files = new Item[]\r\n    {\r\n       new Item \r\n       {\r\n          Color= \"blue\",\r\n          Icon= \"mdi-clipboard-text\",\r\n          SubTitle= \"Jan 20, 2014\",\r\n          Title= \"Vacation itinerary\",\r\n       },\r\n        new Item \r\n        {\r\n          Color= \"amber\",\r\n          Icon= \"mdi-gesture-tap-button\",\r\n          SubTitle= \"Jan 10, 2014\",\r\n          Title= \"Kitchen remodel\",\r\n        }\r\n    };\r\n\r\n    private Item[] _folders = new Item[]\r\n    {\r\n       new Item \r\n       {\r\n          SubTitle= \"Jan 9, 2014\",\r\n          Title= \"Photos\",\r\n       },\r\n       new Item \r\n       {\r\n          SubTitle= \"Jan 17, 2014\",\r\n          Title= \"Recipes\",\r\n       },\r\n       new Item\r\n       {\r\n          SubTitle= \"Jan 28, 2014\",\r\n          Title= \"Work\",\r\n       },\r\n    };\r\n\r\n    class Item\r\n    {\r\n        public string Color { get; set; }\r\n        public string Icon { get; set; }\r\n        public string Title { get; set; }\r\n        public string SubTitle { get; set; }\r\n    }\r\n}",
        "Type": "Demos.Components.List.props.TwoLinesAndSubheader",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 10,
        "Name": "expansionLists",
        "Title": "可展开的列表",
        "Description": "<p>列表可以包含一组项目，这些项目将在单击<code>MListGroup</code>的<strong>ActivatorContent</strong>时显示。扩展列表也用于 <a href=\"/components/navigation-drawers\">MNavigationDrawer</a> 组件中。</p>\n",
        "Code": "<MCard Class=\"mx-auto\"\r\n       MaxWidth=\"500\">\r\n    <MToolbar Color=\"teal\"\r\n              Dark>\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n        <MToolbarTitle>Topics</MToolbarTitle>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-dots-vertical</MIcon>\r\n        </MButton>\r\n    </MToolbar>\r\n\r\n    <MList>\r\n        @foreach (var item in items)\r\n        {\r\n            <MListGroup\r\n                @bind-Value=\"item.Active\"\r\n                PrependIcon=\"@item.Action\"\r\n                NoAction>\r\n                <ActivatorContent>\r\n                    <MListItemContent>\r\n                        <MListItemTitle>@item.Title</MListItemTitle>\r\n                    </MListItemContent>\r\n                </ActivatorContent>\r\n\r\n                <ChildContent>\r\n                    @foreach (var subItem in item.Items)\r\n                    {\r\n                        <MListItem\r\n                            Value=\"subItem.Title\">\r\n                            <MListItemContent>\r\n                                <MListItemTitle>@item.Title</MListItemTitle>\r\n                            </MListItemContent>\r\n                        </MListItem>\r\n                    }\r\n                </ChildContent>\r\n            </MListGroup>\r\n        }\r\n    </MList>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    List<Item> items = new List<Item>()\r\n    {\r\n        new Item()\r\n        {\r\n            Action = \"mdi-ticket\",\r\n            Items = new List<Item>() {new Item(\"List Item\")},\r\n            Title = \"Attractions\"\r\n        },\r\n        new Item()\r\n        {\r\n            Action = \"mdi-silverware-fork-knife\",\r\n            Active = true,\r\n            Items = new List<Item>() {new Item(\"Breakfast & brunch\"), new Item(\"New American\"), new Item(\"Sushi\")},\r\n            Title = \"Dining\"\r\n        },\r\n        new Item()\r\n        {\r\n            Action = \"mdi-school\",\r\n            Items = new List<Item>() {new Item(\"List Item\")},\r\n            Title = \"Education\"\r\n        },\r\n        new Item()\r\n        {\r\n            Action = \"mdi-run\",\r\n            Items = new List<Item>() {new Item(\"List Item\")},\r\n            Title = \"Family\"\r\n        },\r\n        new Item()\r\n        {\r\n            Action = \"mdi-bottle-tonic-plus\",\r\n            Items = new List<Item>() {new Item(\"List Item\")},\r\n            Title = \"Health\"\r\n        },\r\n        new Item()\r\n        {\r\n            Action = \"mdi-content-cut\",\r\n            Items = new List<Item>() {new Item(\"List Item\")},\r\n            Title = \"Attractions\"\r\n        },\r\n        new Item()\r\n        {\r\n            Action = \"mdi-tag\",\r\n            Items = new List<Item>() {new Item(\"List Item\")},\r\n            Title = \"Attractions\"\r\n        },\r\n    };\r\n\r\n    class Item\r\n    {\r\n        public string Title { get; set; }\r\n\r\n        public string Action { get; set; }\r\n\r\n        public bool Active { get; set; }\r\n\r\n        public List<Item> Items { get; set; } = new List<Item>();\r\n\r\n        public Item()\r\n        {\r\n        }\r\n\r\n        public Item(string title)\r\n        {\r\n            Title = title;\r\n        }\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.List.contents.ExpansionLists",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 11,
        "Name": "actionsAndItemGroups",
        "Title": "操作和项目组",
        "Description": "<p>可操作的 <strong>ThreeLine</strong> 列表。 利用 <a href=\"/components/list-item-groups\"><strong>MListItemGroup</strong></a>，轻松将动作连接到图块。</p>\n",
        "Code": "<MCard Class=\"mx-auto\" MaxWidth=\"400\">\r\n    <MToolbar Color=\"purple\" Dark>\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n        <MToolbarTitle>Settings</MToolbarTitle>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n    </MToolbar>\r\n\r\n    <MList\r\n        Subheader\r\n        ThreeLine>\r\n        <MSubheader>User Controls</MSubheader>\r\n\r\n        <MListItem>\r\n            <MListItemContent>\r\n                <MListItemTitle>Content filtering</MListItemTitle>\r\n                <MListItemSubtitle>Set the content filtering level to restrict appts that can be downloaded</MListItemSubtitle>\r\n            </MListItemContent>\r\n        </MListItem>\r\n\r\n        <MListItem>\r\n            <MListItemContent>\r\n                <MListItemTitle>Password</MListItemTitle>\r\n                <MListItemSubtitle>Require password for purchase or use password to restrict purchase</MListItemSubtitle>\r\n            </MListItemContent>\r\n        </MListItem>\r\n    </MList>\r\n\r\n    <MDivider></MDivider>\r\n\r\n    <MList\r\n        Flat\r\n        Subheader\r\n        ThreeLine>\r\n        <MSubheader>General</MSubheader>\r\n\r\n        <MListItemGroup\r\n            @bind-Values=\"settings\"\r\n            Multiple\r\n            ActiveClass=\"\">\r\n            <MListItem>\r\n                <ItemContent>\r\n                    <MListItemAction>\r\n                        <MCheckbox Value=\"@context.Active\"></MCheckbox>\r\n                    </MListItemAction>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>Notifications</MListItemTitle>\r\n                        <MListItemSubtitle>Notify me about updates to apps or games that I downloaded</MListItemSubtitle>\r\n                    </MListItemContent>\r\n                </ItemContent>\r\n            </MListItem>\r\n\r\n            <MListItem>\r\n                <ItemContent>\r\n                    <MListItemAction>\r\n                        <MCheckbox Value=\"@context.Active\"></MCheckbox>\r\n                    </MListItemAction>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>Sound</MListItemTitle>\r\n                        <MListItemSubtitle>Auto-update apps at any time. Data charges may apply</MListItemSubtitle>\r\n                    </MListItemContent>\r\n                </ItemContent>\r\n            </MListItem>\r\n\r\n            <MListItem>\r\n                <ItemContent>\r\n                    <MListItemAction>\r\n                        <MCheckbox Value=\"@context.Active\"></MCheckbox>\r\n                    </MListItemAction>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>Auto-add widgets</MListItemTitle>\r\n                        <MListItemSubtitle>Automatically add home screen widgets when downloads complete</MListItemSubtitle>\r\n                    </MListItemContent>\r\n                </ItemContent>\r\n            </MListItem>\r\n        </MListItemGroup>\r\n    </MList>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    List<StringNumber> settings = new();\r\n\r\n}",
        "Type": "Demos.Components.List.misc.ActionsAndItemGroups",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 12,
        "Name": "actionStack",
        "Title": "操作栈",
        "Description": "<p>列表组件可以包含一个操作栈。当你需要在你的动作项目旁边显示数据文本时，这是非常有用的。</p>\n",
        "Code": "<MCard\r\n    Class=\"mx-auto\"\r\n    MaxWidth=\"500\">\r\n    <MToolbar\r\n        Color=\"pink\"\r\n        Dark>\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n        <MToolbarTitle>Inbox</MToolbarTitle>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-checkbox-marked-circle</MIcon>\r\n        </MButton>\r\n    </MToolbar>\r\n\r\n    <MList TwoLine>\r\n        <MListItemGroup\r\n            @bind-Values=\"selected\"\r\n            ActiveClass=\"pink--text\"\r\n            multiple>\r\n            @foreach (var (item, index) in items.Select((item, index) => (item, index)))\r\n            {\r\n                <MListItem Value=\"@item.title\">\r\n                    <ItemContent>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>@item.title</MListItemTitle>\r\n                            <MListItemSubtitle Class=\"text--primary\">@item.headline</MListItemSubtitle>\r\n                            <MListItemSubtitle>@item.subtitle</MListItemSubtitle>\r\n                        </MListItemContent>\r\n\r\n                        <MListItemAction>\r\n                            <MListItemActionText>@item.action</MListItemActionText>\r\n\r\n                            @if (!context.Active)\r\n                            {\r\n                                <MIcon Color=\"grey lighten-1\">\r\n                                    mdi-star-outline\r\n                                </MIcon>\r\n                            }\r\n                            else\r\n                            {\r\n                                <MIcon Color=\"yellow darken-3\">\r\n                                    mdi-star\r\n                                </MIcon>\r\n                            }\r\n                        </MListItemAction>\r\n                    </ItemContent>\r\n                </MListItem>\r\n\r\n                @if (index < items.Count - 1)\r\n                {\r\n                    <MDivider/>\r\n                }\r\n            }\r\n        </MListItemGroup>\r\n    </MList>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    List<StringNumber> selected = new();\r\n\r\n    List<(string action, string headline, string subtitle, string title)> items = new List<(string action, string headline, string subtitle, string title)>()\r\n    {\r\n        (\"15 min\", \"Brunch this weekend?\",\"I'll be in your neighborhood doing errands this weekend. Do you want to hang out?\", \"Ali Connors\"),\r\n        (\"hr\",\"Summer BBQ\",\"Wish I could come, but I'm out of town this weekend.\", \"me, Scrott, Jennifer\"),\r\n        (\"6 hr\", \"Oui oui\",\"Do you have Paris recommendations? Have you ever been?\", \"Sandra Adams\"),\r\n        (\"12 hr\", \"Birthday gift\",\"Have any ideas about what we should get Heidi for her birthday?\", \"Trevor Hansen\"),\r\n        (\"18hr\",\"Recipe to try\",\"We should eat this: Grate, Squash, Corn, and tomatillo Tacos.\", \"Britta Holt\"),\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.List.misc.ActionStack",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 13,
        "Name": "cardList",
        "Title": "卡片列表",
        "Description": "<p>一个列表可以和一张卡片结合起来。</p>\n",
        "Code": "  <MCard\r\n    MaxWidth=\"375\"\r\n    Class=\"mx-auto\"\r\n  >\r\n    <MImage\r\n      Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/ali.png\"\r\n      Height=\"300\"\r\n      Dark\r\n    >\r\n      <MRow class=\"fill-height\">\r\n        <MCardTitle>\r\n          <MButton\r\n            Dark\r\n            Icon\r\n          >\r\n            <MIcon>mdi-chevron-left</MIcon>\r\n          </MButton>\r\n\r\n          <MSpacer></MSpacer>\r\n\r\n          <MButton\r\n            Dark\r\n            Icon\r\n            Class=\"mr-4\"\r\n          >\r\n            <MIcon>mdi-pencil</MIcon>\r\n          </MButton>\r\n\r\n          <MButton\r\n            Dark\r\n            Icon\r\n          >\r\n            <MIcon>mdi-dots-vertical</MIcon>\r\n          </MButton>\r\n        </MCardTitle>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MCardTitle Class=\"white--text pl-12 pt-12\">\r\n          <div class=\"text-h4 pl-12 pt-12\">\r\n            Ali Conners\r\n          </div>\r\n        </MCardTitle>\r\n      </MRow>\r\n    </MImage>\r\n\r\n    <MList TwoLine>\r\n      <MListItem>\r\n        <MListItemIcon>\r\n          <MIcon Color=\"indigo\">\r\n            mdi-phone\r\n          </MIcon>\r\n        </MListItemIcon>\r\n\r\n        <MListItemContent>\r\n          <MListItemTitle>(650) 555-1234</MListItemTitle>\r\n          <MListItemSubtitle>Mobile</MListItemSubtitle>\r\n        </MListItemContent>\r\n\r\n        <MListItemIcon>\r\n          <MIcon>mdi-message-text</MIcon>\r\n        </MListItemIcon>\r\n      </MListItem>\r\n\r\n      <MListItem>\r\n        <MListItemAction></MListItemAction>\r\n\r\n        <MListItemContent>\r\n          <MListItemTitle>(323) 555-6789</MListItemTitle>\r\n          <MListItemSubtitle>Work</MListItemSubtitle>\r\n        </MListItemContent>\r\n\r\n        <MListItemIcon>\r\n          <MIcon>mdi-message-text</MIcon>\r\n        </MListItemIcon>\r\n      </MListItem>\r\n\r\n      <MDivider Inset></MDivider>\r\n\r\n      <MListItem>\r\n        <MListItemIcon>\r\n          <MIcon Color=\"indigo\">\r\n            mdi-email\r\n          </MIcon>\r\n        </MListItemIcon>\r\n\r\n        <MListItemContent>\r\n          <MListItemTitle>aliconnors@example.com</MListItemTitle>\r\n          <MListItemSubtitle>Personal</MListItemSubtitle>\r\n        </MListItemContent>\r\n      </MListItem>\r\n\r\n      <MListItem>\r\n        <MListItemAction></MListItemAction>\r\n\r\n        <MListItemContent>\r\n          <MListItemTitle>ali_connors@example.com</MListItemTitle>\r\n          <MListItemSubtitle>Work</MListItemSubtitle>\r\n        </MListItemContent>\r\n      </MListItem>\r\n\r\n      <MDivider Inset></MDivider>\r\n\r\n      <MListItem>\r\n        <MListItemIcon>\r\n          <MIcon Color=\"indigo\">\r\n            mdi-map-marker\r\n          </MIcon>\r\n        </MListItemIcon>\r\n\r\n        <MListItemContent>\r\n          <MListItemTitle>1400 Main Street</MListItemTitle>\r\n          <MListItemSubtitle>Orlando, FL 79938</MListItemSubtitle>\r\n        </MListItemContent>\r\n      </MListItem>\r\n    </MList>\r\n  </MCard>",
        "Type": "Demos.Components.List.misc.CardList",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 14,
        "Name": "simpleAvatarList",
        "Title": "简单头像列表",
        "Description": "<p>一个简单的列表利用 <code>MistItemIcon</code>, <code>MListItemTitle</code> 和 <code>MListItemAvatar</code>。</p>\n",
        "Code": "<MCard\r\n    MaxWidth=\"500\"\r\n    Class=\"mx-auto\">\r\n    <MToolbar\r\n        Color=\"indigo\"\r\n        Dark>\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n        <MToolbarTitle>Inbox</MToolbarTitle>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-dots-vertical</MIcon>\r\n        </MButton>\r\n    </MToolbar>\r\n    <MList>\r\n        @foreach (var item in items)\r\n        {\r\n            <MListItem >\r\n                <MListItemIcon>\r\n                    @if (item.icon)\r\n                    {\r\n                        <MIcon Color=\"pink\">\r\n                            mdi-star\r\n                        </MIcon>\r\n                    }\r\n                </MListItemIcon>\r\n\r\n                <MListItemContent>\r\n                    <MListItemTitle>@item.title</MListItemTitle>\r\n                </MListItemContent>\r\n\r\n                <MListItemAvatar>\r\n                    <MImage Src=\"@item.avatar\"></MImage>\r\n                </MListItemAvatar>\r\n            </MListItem>\r\n        }\r\n    </MList>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    List<(bool icon, string title, string avatar)> items = new List<(bool icon, string title, string avatar)>()\r\n    {\r\n        new(true, \"Jason Oner\", \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/1.png\"),\r\n        new(false, \"Travis Howard\", \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/2.png\"),\r\n        new(false, \"Ali Connors\", \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/3.png\"),\r\n        new(false, \"Cindy Baker\", \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/4.png\"),\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.List.misc.SimpleAvatarList",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 15,
        "Name": "singleLineList",
        "Title": "单行列表",
        "Description": "<p>在这里，我们结合了单行列表中的 <code>MListItemAvatar</code> 和 <code>MLlistItemIcon</code>。</p>\n",
        "Code": "<MCard\r\n    Class=\"mx-auto\"\r\n    MaxWidth=\"500\">\r\n    <MToolbar\r\n        Color=\"deep-purple accent-4\"\r\n        Dark>\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n        <MToolbarTitle>New Chat</MToolbarTitle>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n    </MToolbar>\r\n\r\n    <MList Subheader>\r\n        <MSubheader>Recent chat</MSubheader>\r\n\r\n        @foreach (var chat in recent)\r\n        {\r\n            <MListItem>\r\n                <MListItemAvatar>\r\n                    <MImage\r\n                        alt=\"@($\"{chat.title} avatar\")\"\r\n                        Src=\"@chat.avatar\">\r\n                    </MImage>\r\n                </MListItemAvatar>\r\n\r\n                <MListItemContent>\r\n                    <MListItemTitle>@chat.title</MListItemTitle>\r\n                </MListItemContent>\r\n\r\n                <MListItemIcon>\r\n                    <MIcon Color=\"@(chat.active ? \"deep-purple accent-4\" : \"grey\")\">\r\n                        mdi-message-outline\r\n                    </MIcon>\r\n                </MListItemIcon>\r\n            </MListItem>\r\n        }\r\n    </MList>\r\n\r\n    <MDivider></MDivider>\r\n\r\n    <MList Subheader>\r\n        <MSubheader>Previous chats</MSubheader>\r\n\r\n        @foreach (var chat in previous)\r\n        {\r\n            <MListItem>\r\n                <MListItemAvatar>\r\n                    <MImage\r\n                        alt=\"@($\"{chat.title} avatar\")\"\r\n                        Src=\"@chat.avatar\">\r\n                    </MImage>\r\n                </MListItemAvatar>\r\n\r\n                <MListItemContent>\r\n                    <MListItemTitle>@chat.title</MListItemTitle>\r\n                </MListItemContent>\r\n            </MListItem>\r\n        }\r\n    </MList>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    List<(bool active, string avatar, string title)> recent = new List<(bool active, string avatar, string title)>()\r\n    {\r\n        new(true, \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/1.png\", \"Jason Oner\"),\r\n        new(true, \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/2.png\", \"Mike Carlson\"),\r\n        new(false, \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/3.png\", \"Cindy Baker\"),\r\n        new(false, \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/4.png\", \"Ali Connors\"),\r\n    };\r\n\r\n    List<(string title, string avatar)> previous = new List<(string title, string avatar)>()\r\n    {\r\n        new(\"Travis Howard\", \"https://cdn.masastack.com/stack/images/website/masa-blazor/lists/5.png\")\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.List.misc.SingleLineList",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 16,
        "Name": "subheadingsAndDividers",
        "Title": "列表组标题和分割线",
        "Description": "<p>列表可以包含多个子标头和分隔符。</p>\n",
        "Code": "<MCard\r\n    MaxWidth=\"475\"\r\n    Class=\"mx-auto\">\r\n    <MToolbar\r\n        Color=\"teal\"\r\n        Dark>\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n        <MToolbarTitle>Settings</MToolbarTitle>\r\n    </MToolbar>\r\n\r\n    <MList\r\n        TwoLine\r\n        Subheader>\r\n        <MSubheader>General</MSubheader>\r\n\r\n        <MListItem>\r\n            <MListItemContent>\r\n                <MListItemTitle>Profile photo</MListItemTitle>\r\n                <MListItemSubtitle>Change your Google+ profile photo</MListItemSubtitle>\r\n            </MListItemContent>\r\n        </MListItem>\r\n\r\n        <MListItem>\r\n            <MListItemContent>\r\n                <MListItemTitle>Show your status</MListItemTitle>\r\n                <MListItemSubtitle>Your status is visible to everyone</MListItemSubtitle>\r\n            </MListItemContent>\r\n        </MListItem>\r\n    </MList>\r\n\r\n    <MDivider></MDivider>\r\n\r\n    <MList\r\n        Subheader\r\n        TwoLine\r\n        Flat>\r\n        <MSubheader>Hangout notifications</MSubheader>\r\n\r\n        <MListItemGroup\r\n            @bind-Values=\"settings\"\r\n            multiple>\r\n            <MListItem>\r\n                <ItemContent>\r\n                    <MListItemAction>\r\n                        <MCheckbox\r\n                            Value=\"context.Active\"\r\n                            Color=\"primary\">\r\n                        </MCheckbox>\r\n                    </MListItemAction>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>Notifications</MListItemTitle>\r\n                        <MListItemSubtitle>Allow notifications</MListItemSubtitle>\r\n                    </MListItemContent>\r\n                </ItemContent>\r\n            </MListItem>\r\n\r\n            <MListItem>\r\n                <ItemContent>\r\n                    <MListItemAction>\r\n                        <MCheckbox\r\n                            Value=\"context.Active\"\r\n                            Color=\"primary\">\r\n                        </MCheckbox>\r\n                    </MListItemAction>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>Sound</MListItemTitle>\r\n                        <MListItemSubtitle>Hangouts message</MListItemSubtitle>\r\n                    </MListItemContent>\r\n                </ItemContent>\r\n            </MListItem>\r\n\r\n            <MListItem>\r\n                <ItemContent>\r\n                    <MListItemAction>\r\n                        <MCheckbox\r\n                            Value=\"context.Active\"\r\n                            Color=\"primary\">\r\n                        </MCheckbox>\r\n                    </MListItemAction>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>Video sounds</MListItemTitle>\r\n                        <MListItemSubtitle>Hangouts video call</MListItemSubtitle>\r\n                    </MListItemContent>\r\n                </ItemContent>\r\n            </MListItem>\r\n\r\n            <MListItem>\r\n                <ItemContent>\r\n                    <MListItemAction>\r\n                        <MCheckbox\r\n                            Value=\"context.Active\"\r\n                            Color=\"primary\">\r\n                        </MCheckbox>\r\n                    </MListItemAction>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>Invites</MListItemTitle>\r\n                        <MListItemSubtitle>Notify when receiving invites</MListItemSubtitle>\r\n                    </MListItemContent>\r\n                </ItemContent>\r\n            </MListItem>\r\n        </MListItemGroup>\r\n    </MList>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    List<StringNumber> settings = new();\r\n\r\n}",
        "Type": "Demos.Components.List.misc.SubheadingsAndDividers",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/item-groups",
      "/components/list-item-groups",
      "/components/subheaders"
    ],
    "Subtitle": "列表",
    "Title": "Lists",
    "Type": "列表"
  },
  {
    "Desc": "<p>基于<a href=\"https://github.com/Vanessa219/vditor\">vditor</a>封装</p>\n",
    "Order": 0,
    "OtherDocs": {
      "css文件": "\n<pre><code class=\"language-html\">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.masastack.com/npm/vditor/3.8.12/dist/index.css&quot; /&gt;\n</code></pre>\n",
      "js文件": "\n<pre><code class=\"language-html\">&lt;script src=&quot;https://cdn.masastack.com/npm/vditor/3.8.12/dist/index.min.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n",
      "API": "\n<ul>\n<li><a href=\"/api/MMarkdown\">MMarkdown</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.6565232+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "basic",
        "Title": "使用",
        "Description": "<p>Markdown编辑器示例</p>\n",
        "Code": "<MMarkdown @bind-Value=\"_value\" @bind-Html=\"_html\" >\r\n</MMarkdown>\r\n<MAlert Border=\"Borders.Top\"\r\n            ColoredBorder\r\n            Type=\"AlertTypes.Info\"\r\n            Elevation=\"2\" \r\n            Class=\"mt-5\">\r\n        @_value\r\n</MAlert>\r\n<MAlert Border=\"Borders.Top\"\r\n            ColoredBorder\r\n            Type=\"AlertTypes.Info\"\r\n            Elevation=\"2\">\r\n        @_html\r\n</MAlert>\r\n\r\n@code{\r\n    private string _value = \"Hello MASA Blazor!\";\r\n    private string _html;\r\n}\r\n",
        "Type": "Demos.Components.Markdown.usage.Basic",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "counter",
        "Title": "计数器",
        "Description": "<p>配置 <a href=\"https://ld246.com/article/1549638745630#options\">Options</a> 属性设置计数器</p>\n",
        "Code": "<MMarkdown Options=\"_options\">\r\n</MMarkdown>\r\n\r\n@code {\r\n    private Dictionary<string, object> _options = new Dictionary<string, object>();\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        _options.Add(\"mode\",\"ir\");\r\n        _options.Add(\"counter\", new\r\n        {\r\n            enable = true,\r\n            type = \"type\"\r\n        });\r\n        base.OnInitialized();\r\n    }\r\n}",
        "Type": "Demos.Components.Markdown.props.Counter",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "heightAndWidth",
        "Title": "自定义宽高",
        "Description": "<p>配置 <a href=\"https://ld246.com/article/1549638745630#options\">Options</a> 属性设置高度</p>\n",
        "Code": "<MMarkdown Options=\"_options\">\r\n</MMarkdown>\r\n\r\n@code{\r\n\r\n    private Dictionary<string, object> _options = new Dictionary<string, object>();\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        _options.Add(\"height\",300);\r\n        _options.Add(\"minHeight\",300);\r\n        _options.Add(\"width\",\"100%\");\r\n        base.OnInitialized();\r\n    }\r\n}",
        "Type": "Demos.Components.Markdown.props.HeightAndWidth",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "mode",
        "Title": "模式",
        "Description": "<p>配置 <a href=\"https://ld246.com/article/1549638745630#options\">Options</a> 属性设置模式,支持sv、 ir、wysiwyg</p>\n",
        "Code": "<MMarkdown Options=\"_options\">\r\n</MMarkdown>\r\n\r\n@code{\r\n\r\n    private Dictionary<string, object> _options = new Dictionary<string, object>();\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        _options.Add(\"mode\",\"ir\");\r\n        base.OnInitialized();\r\n    }\r\n}",
        "Type": "Demos.Components.Markdown.props.Mode",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "reaonly",
        "Title": "只读",
        "Description": "<p>是否设置为只读模式。</p>\n",
        "Code": "<MMarkdown Readonly>\r\n</MMarkdown>",
        "Type": "Demos.Components.Markdown.props.Reaonly",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "theme",
        "Title": "主题",
        "Description": "<p>配置 <a href=\"https://ld246.com/article/1549638745630#options\">Options</a> 属性设置主题</p>\n",
        "Code": "<MMarkdown Options=\"_options\">\r\n</MMarkdown>\r\n<style>\r\n    .vditor--dark pre {\r\n        color: #fff;\r\n    }\r\n</style>\r\n@code {\r\n\r\n    private Dictionary<string, object> _options = new Dictionary<string, object>();\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        _options.Add(\"theme\", \"dark\");\r\n        _options.Add(\"mode\", \"ir\");\r\n        base.OnInitialized();\r\n    }\r\n}",
        "Type": "Demos.Components.Markdown.props.Theme",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "toolbar",
        "Title": "自定义工具栏",
        "Description": "<p>配置 <a href=\"https://ld246.com/article/1549638745630#options\">Options</a> 属性设置工具栏</p>\n",
        "Code": "<MMarkdown Options=\"_options\">\r\n</MMarkdown>\r\n\r\n@code{\r\n\r\n    private Dictionary<string, object> _options = new Dictionary<string, object>();\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        _options.Add(\"toolbar\",new List<string>(){\"emoji\", \"br\", \"bold\", \"|\", \"line\"});\r\n        base.OnInitialized();\r\n    }\r\n}",
        "Type": "Demos.Components.Markdown.props.Toolbar",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "upload",
        "Title": "上传",
        "Description": "<p>配置 <a href=\"https://ld246.com/article/1549638745630#options\">Options</a> 属性设置上传参数，这里只是演示如何配置upload参数，请修改你的上传api地址。</p>\n",
        "Code": "<MMarkdown Options=\"_options\">\r\n</MMarkdown>\r\n\r\n@code {\r\n    private Dictionary<string, object> _options = new Dictionary<string, object>();\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        _options.Add(\"upload\", new\r\n        {\r\n            url = \"api/upload\",\r\n            max = 2 * 1024 * 1024,\r\n            accept = \"image/*\",\r\n            multiple = true,\r\n        });\r\n        base.OnInitialized();\r\n    }\r\n}",
        "Type": "Demos.Components.Markdown.props.Upload",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "beforeAllUpload",
        "Title": "文件上传前事件",
        "Description": "<p>文件上传之前的钩子，你可以自己处理上传逻辑。</p>\n<pre><code class=\"language-html\">//Call JS to handle the upload example\nwindow.Demo.Vditor = {\n    uploadFile: (element, index) =&gt; {\n        let _that = this;\n        let vditor = element.Vditor;\n        let fileInput = element.querySelector('input[type=file]')\n        //Here is the upload logic. This is just an example. You can write your own processing logic\n        let formData = new FormData()\n        let files = fileInput.files;\n        formData.append('file', files[index])\n        let oReq = new XMLHttpRequest();\n        oReq.onreadystatechange = function () {\n            if (oReq.readyState == 4 &amp;&amp; oReq.status == 200) {\n                let json = JSON.parse(oReq.responseText);\n                let imageUrl = json.Path;\n                let succFileText = &quot;&quot;;\n                if (vditor &amp;&amp; vditor.vditor.currentMode === &quot;wysiwyg&quot;) {\n                    succFileText += `\\n &lt;img alt=${imageUrl} src=&quot;${imageUrl}&quot;&gt;`;\n                } else {\n                    succFileText += `\\n![${imageUrl}](${imageUrl})`;\n                }\n                //Insert the uploaded picture into the editor\n                document.execCommand(&quot;insertHTML&quot;, false, succFileText);\n                index += 1;\n                if (index &lt; files.length) {\n                    _that.Demo.Vditor.uploadFile(element,  index);\n                }\n                else {\n                    fileInput.value = '';\n                }\n            }\n        }\n        oReq.open('POST', &quot;/api/upload&quot;);//Please change your upload API address\n        oReq.send(formData);\n    }\n};\n</code></pre>\n",
        "Code": "<MMarkdown @ref=\"Ref\" BeforeAllUpload=\"HandleUploadAsync\">\r\n</MMarkdown>\r\n\r\n@code {\r\n    [Inject]\r\n    private IJSRuntime JS { get; set; }\r\n    private MMarkdown Ref { get; set; }\r\n\r\n    private async Task HandleUploadAsync()\r\n    {\r\n        //Please cancel this comment\r\n        //await JS.InvokeVoidAsync(\"Demo.Vditor.uploadFile\", Ref.Ref, 0);\r\n    }\r\n}",
        "Type": "Demos.Components.Markdown.events.BeforeAllUpload",
        "Style": "",
        "Debug": false,
        "Group": 1
      },
      {
        "Order": 1,
        "Name": "someEvents",
        "Title": "一些事件",
        "Description": "<p>focus、blur、select、esc、ctrl+enter等事件，更多事件请参考api。</p>\n",
        "Code": "<MMarkdown OnFocus=\"HandleFocus\" OnBlur=\"HandleBlur\" OnEscPress=\"HandleEscPress\" OnCtrlEnterPress=\"HandleCtrlEnterPress\" OnSelect=\"HandleSelect\">\r\n</MMarkdown>\r\n<MAlert Border=\"Borders.Top\"\r\n            ColoredBorder\r\n            Type=\"AlertTypes.Info\"\r\n            Elevation=\"2\" \r\n            Class=\"mt-10\">\r\n        @ViewInfo\r\n</MAlert>\r\n\r\n@code\r\n{\r\n    private string ViewInfo { get; set; }\r\n\r\n    private void HandleFocus()\r\n    {\r\n        ViewInfo = \"聚焦\";\r\n    }\r\n    private void HandleBlur()\r\n    {\r\n        ViewInfo = \"失去焦点\";\r\n    }\r\n    private void HandleEscPress()\r\n    {\r\n        ViewInfo = \"esc 按下\";\r\n    }\r\n    private void HandleCtrlEnterPress()\r\n    {\r\n        ViewInfo = \"ctrl+enter 按下\";\r\n    }\r\n    private void HandleSelect()\r\n    {\r\n        ViewInfo = \"编辑器中选中文字\";\r\n    }\r\n}",
        "Type": "Demos.Components.Markdown.events.SomeEvents",
        "Style": "",
        "Debug": false,
        "Group": 1
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Subtitle": "Markdown编辑器",
    "Title": "Markdown",
    "Type": "Markdown编辑器",
    "Tag": "js-proxy"
  },
  {
    "Desc": "<p>基于<a href=\"https://github.com/markdown-it/markdown-it\">markdown-it</a>封装</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MMarkdownIt\">MMarkdownIt</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-11-12T16:35:23.3221179+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "basic",
        "Title": "使用",
        "Description": "",
        "Code": "<MMarkdownIt Source=\"@source\" Class=\"markdown-parser__basic\" />\r\n\r\n@code {\r\n\r\n    private string source = @\"\r\n## What is Markdown?\r\n\r\nMarkdown is a lightweight markup language that you can use to add formatting elements to plaintext text documents. Created by [John Gruber](https://daringfireball.net/projects/markdown/) in 2004, Markdown is now one of the world’s most popular markup languages.\r\n\r\nUsing Markdown is different than using a [WYSIWYG](https://en.wikipedia.org/wiki/WYSIWYG) editor. In an application like Microsoft Word, you click buttons to format words and phrases, and the changes are visible immediately. Markdown isn’t like that. When you create a Markdown-formatted file, you add Markdown syntax to the text to indicate which words and phrases should look different.\r\n\r\nFor example, to denote a heading, you add a number sign before it (e.g., # Heading One). Or to make a phrase bold, you add two asterisks before and after it (e.g., **this text is bold**). It may take a while to get used to seeing Markdown syntax in your text, especially if you’re accustomed to WYSIWYG applications. The screenshot below shows a Markdown file displayed in the [Visual Studio Code text editor](https://www.markdownguide.org/tools/vscode/).\r\n\r\n![markdown in vscode](https://mdg.imgix.net/assets/images/vscode.png?auto=format&fit=clip&q=40&w=1080)\r\n\r\nYou can add Markdown formatting elements to a plaintext file using a text editor application. Or you can use one of the many Markdown applications for macOS, Windows, Linux, iOS, and Android operating systems. There are also several web-based applications specifically designed for writing in Markdown.\r\n\r\nDepending on the application you use, you may not be able to preview the formatted document in real time. But that’s okay. According to Gruber, Markdown syntax is designed to be readable and unobtrusive, so the text in Markdown files can be read even if it isn’t rendered.\r\n\r\n> The overriding design goal for Markdown’s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions.\";\r\n\r\n}\r\n\r\n<style>\r\n    .markdown-parser__basic img {\r\n        max-width: 100%;\r\n    }\r\n    \r\n    .markdown-parser__basic blockquote {\r\n        border-left: 4px lightgray solid;\r\n        padding-left: 16px;\r\n    }\r\n</style>",
        "Type": "Demos.Components.MarkdownIt.usage.Basic",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "options",
        "Title": "选项",
        "Description": "<p>完整选项列表请移步 <a href=\"https://github.com/markdown-it/markdown-it#init-with-presets-and-options\">markdown-it</a>。</p>\n",
        "Code": "<MSwitch @bind-Value=\"html\" HideDetails=\"true\" Label=\"html: Enable HTML tags in source\"></MSwitch>\r\n<MSwitch @bind-Value=\"breaks\" HideDetails=\"true\" Label=\"breaks: Convert '\\n' in paragraphs into <br>\"></MSwitch>\r\n<MSwitch @bind-Value=\"linkify\" HideDetails=\"true\" Label=\"linkify: Autoconvert URL-like text to links\"></MSwitch>\r\n<MSwitch @bind-Value=\"typographer\" HideDetails=\"true\" Label=\"typographer: Enable some language-neutral replacement + quotes beautification\"></MSwitch>\r\n\r\n<MMarkdownIt Source=\"@source\"\r\n             Html=\"@html\"\r\n             Breaks=\"breaks\"\r\n             Linkify=\"linkify\"\r\n             Typographer=\"typographer\"\r\n             Class=\"mt-4 pa-1\"\r\n             Style=\"border: 1px lightgrey solid \" />\r\n\r\n@code {\r\n\r\n    private string source = @\"\r\n- html: \r\n  <b>Bold</b>\r\n- breaks:\r\n  Convert '\\n' in paragraphs into <br>\r\n- linkify:\r\n  https://blazor.masastack.com\r\n- typographer:\r\n  \"\"Smartypants, double quotes\"\" and 'single quotes'\r\n\";\r\n\r\n    private bool html;\r\n    private bool breaks;\r\n    private bool linkify;\r\n    private bool typographer;\r\n\r\n}\r\n",
        "Type": "Demos.Components.MarkdownIt.props.Options",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "highlight",
        "Title": "代码高亮",
        "Description": "<p>支持 <a href=\"https://prismjs.com/\">prism</a> 和 <a href=\"https://highlightjs.org/\">highlightjs</a> 两种高亮方案。需要在<code>_Host.cshtml</code>或<code>index.html</code>引入其中一种方案的js和css文件。</p>\n",
        "Code": "<MMarkdownIt Source=\"@source\" Class=\"markdown-parser__highlight\"></MMarkdownIt>\r\n\r\n@code {\r\n\r\n    private string source = @\"\r\nbasic demo of **MarkdownIt**:\r\n\r\n```razor\r\n<MMarkdownIt Source=\"\"@source\"\"></MMarkdownIt>\r\n\r\n@code {\r\n    private string source = @\"\"# h1 Heading\"\";\r\n}\r\n```\r\n\r\nsource code of **MMarkdownIt**:\r\n\r\n```csharp\r\nnamespace Masa.Blazor;\r\n\r\npublic class MMarkdownIt : BMarkdownIt\r\n{\r\n    protected override void SetComponentClass()\r\n    {\r\n        base.SetComponentClass();\r\n\r\n        CssProvider.Apply(css => { css.Add(\"\"m-markdown-it\"\"); });\r\n    }\r\n}\r\n```\r\n\";\r\n\r\n}\r\n\r\n<style>\r\n    .markdown-parser__highlight pre {\r\n      overflow: auto;\r\n      background: #fafafa;\r\n      border-radius: 4px;\r\n      padding: 8px;\r\n    }\r\n    \r\n    .markdown-parser__highlight code {\r\n      background-color: unset !important;\r\n    }\r\n\r\n    .markdown-parser__highlight p {\r\n      margin-bottom: 0;\r\n    }\r\n</style>\r\n",
        "Type": "Demos.Components.MarkdownIt.misc.Highlight",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Subtitle": "Markdown解析器",
    "Title": "Markdown parsers",
    "Type": "Markdown解析器",
    "Tag": "js-proxy"
  },
  {
    "Desc": "<p><code>MMenu</code> 组件在激活它的元素的位置上展示一个菜单。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MMenu\">MMenu</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.6625233+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>请记住将激活菜单的元素放置在 <strong>ActivatorContent</strong> 中。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MMenu OffsetY>\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" @attributes=\"@context.Attrs\">DROPDOWN</MButton>\r\n        </ActivatorContent>\r\n\r\n        <ChildContent>\r\n            <MList>\r\n                @foreach (var item in items)\r\n                {\r\n                    <MListItem>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>\r\n                                @item\r\n                            </MListItemTitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                }\r\n            </MList>\r\n        </ChildContent>\r\n    </MMenu>\r\n</div>\r\n\r\n@code {\r\n\r\n    string[] items =\r\n    {\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me 2\"\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.Menu.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "absolute",
        "Title": "绝对定位",
        "Description": "<p>菜单可以使用 <strong>Absolute</strong> 属性，将其绝对放置在激活器元素的顶部。 尝试点击图像上的任意位置。</p>\n",
        "Code": "<MRow class=\"d-flex\" Justify=\"JustifyTypes.Center\">\r\n    <MMenu Absolute OffsetY Style=\"max-width: 600px\">\r\n        <ActivatorContent>\r\n            <MCard class=\"portrait\" OnClick=\"() => { }\" @attributes=\"@context.Attrs\">\r\n                <MImage Height=\"300\" Width=\"600\" Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/cards/cooking.png\"></MImage>\r\n            </MCard>\r\n        </ActivatorContent>\r\n\r\n        <ChildContent>\r\n            <MList>\r\n                @foreach (var item in items)\r\n                {\r\n                    <MListItem>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>\r\n                                @item\r\n                            </MListItemTitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                }\r\n            </MList>\r\n        </ChildContent>\r\n    </MMenu>\r\n</MRow>\r\n\r\n@code {\r\n\r\n    string[] items =\r\n        {\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me 2\"\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.Menu.props.Absolute",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "absoluteWithoutActivator",
        "Title": "没有激活器的绝对定位",
        "Description": "<p>菜单也可以通过使用 <strong>Absolute</strong> 以及 <strong>PositionX</strong> 和 <strong>PositionY</strong> 参数来在没有激活器的情况下使用。 尝试右键点击图像上的任何地方。</p>\n",
        "Code": "<div>\r\n    <MRow\r\n        Class=\"flex\"\r\n        Justify=\"JustifyTypes.Center\">\r\n        <MCard\r\n            Class=\"portrait\"\r\n            @oncontextmenu=\"Show\"\r\n            __internal_preventDefault_oncontextmenu>\r\n            <MImage Height=\"300\" Width=\"600\" Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/cards/girl.jpg\"></MImage>\r\n        </MCard>\r\n    </MRow>\r\n\r\n    <MMenu\r\n        @bind-Value=\"showMenu\"\r\n        PositionX=\"X\"\r\n        PositionY=\"Y\"\r\n        Absolute\r\n        OffsetY>\r\n        <MList>\r\n            @foreach (var item in items)\r\n            {\r\n                <MListItem>\r\n                    <MListItemContent>\r\n                        <MListItemTitle>\r\n                            @item\r\n                        </MListItemTitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            }\r\n        </MList>\r\n    </MMenu>\r\n</div>\r\n\r\n<style>\r\n.portrait.m-card {\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  width: 100%;\r\n}\r\n</style>\r\n\r\n@code {\r\n\r\n    bool showMenu = false;\r\n    double X = 0;\r\n    double Y = 0;\r\n\r\n    string[] items =\r\n    {\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me 2\"\r\n    };\r\n\r\n    private async Task Show(MouseEventArgs args)\r\n    {\r\n        showMenu = false;\r\n        await Task.Delay(16);\r\n        \r\n        X = args.ClientX;\r\n        Y = args.ClientY;\r\n        showMenu = true;\r\n    }\r\n}",
        "Type": "Demos.Components.Menu.props.AbsoluteWithoutActivator",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 3,
        "Name": "closeOnClick",
        "Title": "点击关闭",
        "Description": "<p>失去焦点时可以关闭菜单。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MSwitch @bind-Value=\"closeOnClick\" Label=\"close on click\"></MSwitch>\r\n\r\n    <MMenu Top CloseOnClick=\"closeOnClick\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" @attributes=\"@context.Attrs\">DROPDOWN</MButton>\r\n        </ActivatorContent>\r\n\r\n        <ChildContent>\r\n            <MList>\r\n                @foreach (var item in items)\r\n                {\r\n                    <MListItem>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>\r\n                                @item\r\n                            </MListItemTitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                }\r\n            </MList>\r\n        </ChildContent>\r\n    </MMenu>\r\n</div>\r\n\r\n@code {\r\n\r\n    [Inject]\r\n    NavigationManager NavigationManager { get; set; }\r\n\r\n    string[] items =\r\n    {\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me 2\"\r\n    };\r\n\r\n    bool closeOnClick = true;\r\n}",
        "Type": "Demos.Components.Menu.props.CloseOnClick",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 4,
        "Name": "closeOnContentClick",
        "Title": "点击内容关闭",
        "Description": "<p>您可以配置在点击内容后是否关闭 <code>MMenu</code>。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MSwitch @bind-Value=\"closeOnContentClick\" Label=\"close on content click\"></MSwitch>\r\n\r\n    <MMenu Top CloseOnContentClick=\"closeOnContentClick\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" @attributes=\"@context.Attrs\">DROPDOWN</MButton>\r\n        </ActivatorContent>\r\n\r\n        <ChildContent>\r\n            <MList>\r\n                @foreach (var item in items)\r\n                {\r\n                    <MListItem>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>\r\n                                @item\r\n                            </MListItemTitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                }\r\n            </MList>\r\n        </ChildContent>\r\n    </MMenu>\r\n</div>\r\n\r\n@code {\r\n\r\n    string[] items =\r\n    {\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me 2\"\r\n    };\r\n\r\n    bool closeOnContentClick = true;\r\n}",
        "Type": "Demos.Components.Menu.props.CloseOnContentClick",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 5,
        "Name": "disabled",
        "Title": "禁用",
        "Description": "<p>您可以禁用菜单。禁用的菜单无法打开。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MSwitch @bind-Value=\"disabled\" Label=\"Disabled\"></MSwitch>\r\n\r\n    <MMenu Disabled=\"disabled\" Top OffsetY>\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" @attributes=\"@context.Attrs\">DROPDOWN</MButton>\r\n        </ActivatorContent>\r\n\r\n        <ChildContent>\r\n            <MList>\r\n                @foreach (var item in items)\r\n                {\r\n                    <MListItem>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>\r\n                                @item\r\n                            </MListItemTitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                }\r\n            </MList>\r\n        </ChildContent>\r\n    </MMenu>\r\n</div>\r\n\r\n@code {\r\n\r\n    string[] items =\r\n    {\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me 2\"\r\n    };\r\n\r\n    bool disabled = true;\r\n}",
        "Type": "Demos.Components.Menu.props.Disabled",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 6,
        "Name": "offsetX",
        "Title": "X偏移",
        "Description": "<p>菜单可以被X轴偏移，以使激活器可见。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MSwitch @bind-Value=\"offset\" Label=\"X offset\"></MSwitch>\r\n\r\n    <MMenu OffsetX=\"@offset\" Top>\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" @attributes=\"@context.Attrs\">DROPDOWN</MButton>\r\n        </ActivatorContent>\r\n\r\n        <ChildContent>\r\n            <MList>\r\n                @foreach (var item in items)\r\n                {\r\n                    <MListItem>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>\r\n                                @item\r\n                            </MListItemTitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                }\r\n            </MList>\r\n        </ChildContent>\r\n    </MMenu>\r\n</div>\r\n\r\n@code {\r\n\r\n    string[] items =\r\n    {\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me 2\"\r\n    };\r\n\r\n    bool offset = true;\r\n}",
        "Type": "Demos.Components.Menu.props.OffsetX",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 7,
        "Name": "offsetY",
        "Title": "Y偏移",
        "Description": "<p>菜单可以被Y轴偏移，以使激活器可见。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MSwitch @bind-Value=\"offset\" Label=\"Y offset\"></MSwitch>\r\n\r\n    <MMenu OffsetY=\"@offset\" Top>\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" @attributes=\"@context.Attrs\">DROPDOWN</MButton>\r\n        </ActivatorContent>\r\n\r\n        <ChildContent>\r\n            <MList>\r\n                @foreach (var item in items)\r\n                {\r\n                    <MListItem>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>\r\n                                @item\r\n                            </MListItemTitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                }\r\n            </MList>\r\n        </ChildContent>\r\n    </MMenu>\r\n</div>\r\n\r\n@code {\r\n\r\n    string[] items =\r\n    {\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me 2\"\r\n    };\r\n\r\n    bool offset = true;\r\n}",
        "Type": "Demos.Components.Menu.props.OffsetY",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 8,
        "Name": "openOnHover",
        "Title": "悬停",
        "Description": "<p>设置使用 <strong>OpenOnHover</strong> 属性时，菜单会悬停时打开而不是点击时打开。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MMenu OpenOnHover Top OffsetY>\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" @attributes=\"@context.Attrs\">DROPDOWN</MButton>\r\n        </ActivatorContent>\r\n\r\n        <ChildContent>\r\n            <MList>\r\n                @foreach (var item in items)\r\n                {\r\n                    <MListItem>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>\r\n                                @item\r\n                            </MListItemTitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                }\r\n            </MList>\r\n        </ChildContent>\r\n    </MMenu>\r\n</div>\r\n\r\n@code {\r\n\r\n    string[] items =\r\n    {\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me 2\"\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.Menu.props.OpenOnHover",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 13,
        "Name": "rounded",
        "Title": "圆角",
        "Description": "<p>菜单可以通过 <strong>Rounded</strong> 属性设置为圆角。关于圆角样式的其他信息在 <a href=\"/stylesandanimations/border-radius\">Border Radius</a> 页。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.SpaceAround\">\r\n    @foreach (var item in _btns)\r\n    {\r\n        var index = Array.IndexOf(_btns, item);\r\n        <MMenu Rounded=\"@item.rounded\" OffsetY @key=\"@item.text\">\r\n            <ActivatorContent>\r\n                <MButton Color=\"@_colors[index]\"\r\n                         Class=\"white--text ma-5\"\r\n                         @attributes=\"@context.Attrs\">\r\n                    @item.text Radius\r\n                </MButton>\r\n            </ActivatorContent>\r\n            <ChildContent>\r\n                <MList>\r\n                    @for (int i = 0; i < 4; i++)\r\n                    {\r\n                        <MListItem Link>\r\n                            <MListItemTitle>@($\"Item {i}\")</MListItemTitle>\r\n                        </MListItem>\r\n                    }\r\n                </MList>\r\n            </ChildContent>\r\n        </MMenu>\r\n    }\r\n</MRow>\r\n\r\n@code {\r\n\r\n    (string text, string rounded)[] _btns =\r\n    {\r\n        (\"Removed\", \"0\"),\r\n        (\"Large\", \"lg\"),\r\n        (\"Custom\", \"b-xl\"),\r\n    };\r\n\r\n    string[] _colors =\r\n    {\r\n        \"deep-purple accent-4\", \"error\", \"teal darken-1\"\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.Menu.props.Rounded",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 10,
        "Name": "activatorAndTooltip",
        "Title": "同时使用激活器和提示",
        "Description": "<p>在 <code>RenderFragment</code> 语法中，嵌套的激活器，例如用 <code>MMenu</code> 和 <code>MTooltip</code> 附加到同一激活按钮，需要特定的设置才能正常运行。注意：此语法同样用于其他嵌套激活器，例如 <code>MDialog</code>\n/ <code>MTooltip</code>。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MMenu>\r\n        <ActivatorContent Context=\"m\">\r\n            <MTooltip Bottom>\r\n                <ActivatorContent Context=\"c\">\r\n                    @{\r\n                        var attrs = new Dictionary<string, object>();\r\n                        m.Attrs.ToList().ForEach(item => attrs[item.Key] = item.Value);\r\n                        c.Attrs.ToList().ForEach(item => attrs[item.Key] = item.Value);\r\n                    }\r\n                    <MButton\r\n                        Color=\"primary\"\r\n                        Dark\r\n                        @attributes=\"@attrs\">\r\n                        Dropdown w/ Tooltip\r\n                    </MButton>\r\n                </ActivatorContent>\r\n                <ChildContent>\r\n                    <span>Im A ToolTip</span>\r\n                </ChildContent>\r\n            </MTooltip>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <MList>\r\n                @foreach (var item in items)\r\n                {\r\n                    <MListItem>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>\r\n                                @item\r\n                            </MListItemTitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                }\r\n            </MList>\r\n        </ChildContent>\r\n    </MMenu>\r\n</div>\r\n\r\n@code {\r\n\r\n    string[] items =\r\n    {\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me 2\"\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.Menu.contents.ActivatorAndTooltip",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 11,
        "Name": "customTransitions",
        "Title": "自定义过渡",
        "Description": "<p>Masa.Blazor 有三个标准过渡，<strong>scale</strong>，<strong>slide-x</strong> 和 <strong>slide-y</strong>。您也可以创建自己的过渡并作为过渡参数传递。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.SpaceAround\">\r\n    <MMenu\r\n        Bottom\r\n        Origin=\"center center\"\r\n        Transition=\"scale-transition\">\r\n        <ActivatorContent>\r\n            <MButton\r\n                Color=\"primary\"\r\n                Dark\r\n                @attributes=\"@context.Attrs\">\r\n                Scale Transition\r\n            </MButton>\r\n        </ActivatorContent>\r\n\r\n        <ChildContent>\r\n            <MList>\r\n                @foreach (var item in items)\r\n                {\r\n                    <MListItem>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>\r\n                                @item\r\n                            </MListItemTitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                }\r\n            </MList>\r\n        </ChildContent>\r\n    </MMenu>\r\n\r\n    <MMenu\r\n        Transition=\"slide-x-transition\"\r\n        Bottom\r\n        Right>\r\n        <ActivatorContent>\r\n            <MButton\r\n                Class=\"deep-orange\"\r\n                Color=\"primary\"\r\n                Dark\r\n                @attributes=\"@context.Attrs\">\r\n                Slide X Transition\r\n            </MButton>\r\n        </ActivatorContent>\r\n\r\n        <ChildContent>\r\n            <MList>\r\n                @foreach (var item in items)\r\n                {\r\n                    <MListItem>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>\r\n                                @item\r\n                            </MListItemTitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                }\r\n            </MList>\r\n        </ChildContent>\r\n    </MMenu>\r\n\r\n    <MMenu\r\n        Transition=\"slide-y-transition\"\r\n        Bottom>\r\n        <ActivatorContent>\r\n            <MButton\r\n                Class=\"purple\"\r\n                Color=\"primary\"\r\n                Dark\r\n                @attributes=\"@context.Attrs\">\r\n                Slide Y Transition\r\n            </MButton>\r\n        </ActivatorContent>\r\n\r\n        <ChildContent>\r\n            <MList>\r\n                @foreach (var item in items)\r\n                {\r\n                    <MListItem>\r\n                        <MListItemContent>\r\n                            <MListItemTitle>\r\n                                @item\r\n                            </MListItemTitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                }\r\n            </MList>\r\n        </ChildContent>\r\n    </MMenu>\r\n</MRow>\r\n\r\n@code {\r\n\r\n    string[] items =\r\n    {\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me 2\"\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.Menu.misc.CustomTransitions",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 12,
        "Name": "popoverMenu",
        "Title": "弹出菜单",
        "Description": "<p>菜单可以配置为在打开时为静态菜单，使其充当弹出菜单。当菜单内容中有多个交互式项目时，这很有用。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MMenu @bind-Value=\"menu\" OffsetX NudgeWidth=200 CloseOnContentClick=\"false\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" @attributes=\"@context.Attrs\">POPOVER MENU</MButton>\r\n        </ActivatorContent>\r\n\r\n        <ChildContent>\r\n            <MCard>\r\n                <MList>\r\n                    <MListItem>\r\n                        <MListItemAvatar>\r\n                            <img src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/jack.png\"\r\n                                 alt=\"MASA\">\r\n                        </MListItemAvatar>\r\n\r\n                        <MListItemContent>\r\n                            <MListItemTitle>MASA</MListItemTitle>\r\n                            <MListItemSubtitle>Founder of MASA Blazor</MListItemSubtitle>\r\n                        </MListItemContent>\r\n\r\n                        <MListItemAction>\r\n                            <MButton Icon Class=@(fav ? \"red--text\" : \"\") OnClick=\"() => fav = !fav\">\r\n                                <MIcon>mdi-heart</MIcon>\r\n                            </MButton>\r\n                        </MListItemAction>\r\n                    </MListItem>\r\n                </MList>\r\n\r\n                <MDivider></MDivider>\r\n\r\n                <MList>\r\n                    <MListItem>\r\n                        <MListItemAction>\r\n                            <MSwitch @bind-Value=\"message\" Color=\"purple\"></MSwitch>\r\n                        </MListItemAction>\r\n                        <MListItemTitle>\r\n                            Enable messages\r\n                        </MListItemTitle>\r\n                    </MListItem>\r\n\r\n                    <MListItem>\r\n                        <MListItemAction>\r\n                            <MSwitch @bind-Value=\"hints\" Color=\"purple\"></MSwitch>\r\n                        </MListItemAction>\r\n                        <MListItemTitle>\r\n                            Enable hints\r\n                        </MListItemTitle>\r\n                    </MListItem>\r\n                </MList>\r\n\r\n                <MCardActions>\r\n                    <MSpacer></MSpacer>\r\n                    <MButton Text OnClick=\"() => menu = false\">Cacnel</MButton>\r\n                    <MButton Text Color=\"primary\" OnClick=\"() => menu = false\">Save</MButton>\r\n                </MCardActions>\r\n            </MCard>\r\n        </ChildContent>\r\n    </MMenu>\r\n</div>\r\n\r\n@code {\r\n    bool fav = true;\r\n    bool menu = false;\r\n    bool message = false;\r\n    bool hints = true;\r\n}",
        "Type": "Demos.Components.Menu.misc.PopoverMenu",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 13,
        "Name": "useInComponents",
        "Title": "在组件中使用",
        "Description": "<p>菜单可以放在几乎任何组件中。</p>\n",
        "Code": "<MRow>\r\n    <MCol\r\n        Cols=\"12\"\r\n        Sm=\"6\"\r\n        OffsetSm=\"3\">\r\n        <MCard Height=\"200\">\r\n            <MCardTitle Class=\"blue white--text\">\r\n                <span class=\"text-h5\">Menu</span>\r\n\r\n                <MSpacer></MSpacer>\r\n\r\n                <MMenu\r\n                    Bottom\r\n                    Left>\r\n                    <ActivatorContent>\r\n                        <MButton\r\n                            Dark\r\n                            Icon\r\n                            @attributes=\"@context.Attrs\">\r\n                            <MIcon>mdi-dots-vertical</MIcon>\r\n                        </MButton>\r\n                    </ActivatorContent>\r\n\r\n                    <ChildContent>\r\n                        <MList>\r\n                            @foreach (var item in items)\r\n                            {\r\n                                <MListItem>\r\n                                    <MListItemContent>\r\n                                        <MListItemTitle>\r\n                                            @item\r\n                                        </MListItemTitle>\r\n                                    </MListItemContent>\r\n                                </MListItem>\r\n                            }\r\n                        </MList>\r\n                    </ChildContent>\r\n                </MMenu>\r\n            </MCardTitle>\r\n\r\n            <MCardText>Lorem Ipsum</MCardText>\r\n        </MCard>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n\r\n    string[] items =\r\n    {\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me\",\r\n        \"Click Me 2\"\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.Menu.misc.UseInComponents",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/dialogs",
      "/components/tooltips",
      "/stylesandanimations/transitions"
    ],
    "Subtitle": "菜单",
    "Title": "Menus",
    "Type": "菜单"
  },
  {
    "Desc": "<p>为移动端设计的级联选择器。</p>\n",
    "Order": 0,
    "OtherDocs": {},
    "LastWriteTime": "2022-10-20T23:42:05.6655227+08:00",
    "DemoList": [
      {
        "Order": 1,
        "Name": "index",
        "Title": "使用",
        "Description": "",
        "Code": "<MRow Align=\"AlignTypes.Baseline\">\r\n    <MCol Cols=\"12\" Md=\"6\">\r\n        <MButton OnClick=\"() => visible = true\">Select</MButton>\r\n        <PMobileCascader @bind-Value=\"value\"\r\n                         @bind-Visible=\"visible\"\r\n                         Title=\"省市区\"\r\n                         Items=\"Datas\"\r\n                         ItemText=\"d => d.Name\"\r\n                         ItemValue=\"d => d.Code\"\r\n                         ItemChildren=\"d => d.Children\"\r\n                         ItemDisabled=\"d => d.Disabled\">\r\n        </PMobileCascader>\r\n    </MCol>\r\n    <MCol Cols=\"12\" Md=\"6\">\r\n        Selected values: @string.Join(\",\", value)\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n\r\n    List<string> value = new();\r\n\r\n    bool visible;\r\n\r\n    record Data(string Code, string Name, List<Data> Children = null, bool Disabled = false);\r\n\r\n    static readonly List<Data> Datas = new List<Data>()\r\n    {\r\n        new Data(\"sh\", \"上海\", new List<Data>()\r\n        {\r\n            new Data(\"sh-hp\", \"黄浦区\"),\r\n            new Data(\"sh-xh\", \"徐汇区\"),\r\n            new Data(\"sh-cn\", \"长宁区\"),\r\n            new Data(\"sh-ja\", \"静安区\", Disabled: true),\r\n        }),\r\n        new Data(\"zj\", \"浙江\", new List<Data>()\r\n        {\r\n            new Data(\"zj-hz\", \"杭州\", new List<Data>()\r\n            {\r\n                new Data(\"zj-hz-sc\", \"上城区\"),\r\n                new Data(\"zj-hz-xc\", \"下城区\"),\r\n                new Data(\"zj-hz-qt\", \"钱塘区\"),\r\n            }),\r\n            new Data(\"zj-nb\", \"宁波\", new List<Data>()\r\n            {\r\n                new Data(\"zj-nb-jb\", \"江北区\"),\r\n                new Data(\"zj-nb-hs\", \"海曙区\"),\r\n                new Data(\"zj-nb-bl\", \"北仑区\"),\r\n            }),\r\n        }),\r\n        new Data(\"gd\", \"广东\", new List<Data>()\r\n        {\r\n            new Data(\"gd-sz\", \"深圳\", new List<Data>()\r\n            {\r\n                new Data(\"gd-sz-ns\", \"南山区\"),\r\n                new Data(\"gd-sz-lh\", \"罗湖区\"),\r\n            }),\r\n            new Data(\"gd-gz\", \"广州\", new List<Data>()\r\n            {\r\n                new Data(\"gd-gz-by\", \"白云区\"),\r\n                new Data(\"gd-gz-th\", \"天河区\"),\r\n                new Data(\"gd-gz-hz\", \"海珠区\"),\r\n            }),\r\n        }),\r\n    };\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobileCascader.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "loadChildren",
        "Title": "加载子项",
        "Description": "",
        "Code": "<MRow Align=\"AlignTypes.Baseline\">\r\n    <MCol Cols=\"12\" Md=\"6\">\r\n        <PMobileCascader @bind-Value=\"value\"\r\n                         TItem=\"Data\"\r\n                         TItemValue=\"string\"\r\n                         Title=\"省市区\"\r\n                         Items=\"Datas\"\r\n                         ItemText=\"d => d.Name\"\r\n                         ItemValue=\"d => d.Code\"\r\n                         ItemChildren=\"d => d.Children\"\r\n                         ItemDisabled=\"d => d.Disabled\"\r\n                         OnLoadChildren=\"HandleOnLoadChildren\">\r\n            <ActivatorContent>\r\n                <MButton @attributes=\"@context.Attrs\">Select</MButton>\r\n            </ActivatorContent>\r\n        </PMobileCascader>\r\n    </MCol>\r\n    <MCol Cols=\"12\" Md=\"6\">\r\n        Selected values: @string.Join(\",\", value)\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n\r\n    List<string> value = new();\r\n\r\n    private async Task HandleOnLoadChildren(Data item)\r\n    {\r\n        // mock the http request\r\n        await Task.Delay(1000);\r\n\r\n        item.Children = item.Code switch\r\n        {\r\n            \"china\" => new List<Data>()\r\n            {\r\n                new(\"sh\", \"上海\"), new(\"zj\", \"浙江\"), new(\"gd\", \"广东\"),\r\n            },\r\n            \"sh\" => new List<Data>()\r\n            {\r\n                new(\"sh-hp\", \"黄浦区\"), new(\"sh-xh\", \"徐汇区\"), new(\"sh-cn\", \"长宁区\"), new(\"sh-ja\", \"静安区\", disabled: true),\r\n            },\r\n            \"zj\" => new List<Data>()\r\n            {\r\n                new(\"zj-hz\", \"杭州\"), new(\"zj-nb\", \"宁波\"),\r\n            },\r\n            \"gd\" => new List<Data>()\r\n            {\r\n                new(\"gd-sz\", \"深圳\"), new(\"gd-gz\", \"广州\"),\r\n            },\r\n            \"zj-hz\" => new List<Data>()\r\n            {\r\n                new(\"zj-hz-sc\", \"上城区\"), new(\"zj-hz-xc\", \"下城区\"), new(\"zj-hz-qt\", \"钱塘区\"),\r\n            },\r\n            \"zj-nb\" => new List<Data>()\r\n            {\r\n                new(\"zj-nb-jb\", \"江北区\"), new(\"zj-nb-hs\", \"海曙区\"), new(\"zj-nb-bl\", \"北仑区\"),\r\n            },      \r\n            \"gd-sz\" => new List<Data>()\r\n            {\r\n                new(\"gd-sz-ns\", \"南山区\"), new(\"gd-sz-lh\", \"罗湖区\"),\r\n            },            \r\n            \"gd-gz\" => new List<Data>()\r\n            {\r\n                new(\"gd-gz-by\", \"白云区\"), new(\"gd-gz-th\", \"天河区\"), new(\"gd-gz-hz\", \"海珠区\"),\r\n            },\r\n            _ => new List<Data>()\r\n        };\r\n    }\r\n\r\n    class Data\r\n    {\r\n        public string Name { get; set; }\r\n        public string Code { get; set; }\r\n        public List<Data> Children { get; set; }\r\n        public bool Disabled { get; set; }\r\n\r\n        public Data(string code, string name, List<Data> children = null, bool disabled = false)\r\n        {\r\n            Code = code;\r\n            Name = name;\r\n            Children = children;\r\n            Disabled = disabled;\r\n        }\r\n    }\r\n\r\n    static readonly List<Data> Datas = new()\r\n    {\r\n        new Data(\"china\", \"中国\")\r\n    };\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobileCascader.events.LoadChildren",
        "Style": "",
        "Debug": false,
        "Group": 1
      },
      {
        "Order": 0,
        "Name": "onConfirm",
        "Title": "确认事件",
        "Description": "",
        "Code": "<MRow Align=\"AlignTypes.Baseline\">\r\n    <MCol Cols=\"12\" Md=\"6\">\r\n        <PMobileCascader TItem=\"Data\"\r\n                         TItemValue=\"string\"\r\n                         Title=\"省市区\"\r\n                         Items=\"@Datas\"\r\n                         ItemText=\"d => d.Name\"\r\n                         ItemValue=\"d => d.Code\"\r\n                         ItemChildren=\"d => d.Children\"\r\n                         ItemDisabled=\"d => d.Disabled\"\r\n                         OnConfirm=\"HandleOnConfirm\">\r\n            <ActivatorContent>\r\n                <MButton @attributes=\"@context.Attrs\">Select</MButton>\r\n            </ActivatorContent>\r\n        </PMobileCascader>\r\n    </MCol>\r\n    <MCol Cols=\"12\" Md=\"6\">\r\n        Selected values: @string.Join(\"-\", selectedItems.Select(item => item.Name))\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n\r\n    List<Data> selectedItems = new();\r\n\r\n    void HandleOnConfirm(List<Data> selected)\r\n    {\r\n        selectedItems = selected;\r\n    }\r\n\r\n    record Data(string Code, string Name, List<Data> Children = null, bool Disabled = false);\r\n\r\n    static readonly List<Data> Datas = new List<Data>()\r\n    {\r\n        new Data(\"sh\", \"上海\", new List<Data>()\r\n        {\r\n            new Data(\"sh-hp\", \"黄浦区\"),\r\n            new Data(\"sh-xh\", \"徐汇区\"),\r\n            new Data(\"sh-cn\", \"长宁区\"),\r\n            new Data(\"sh-ja\", \"静安区\", Disabled: true),\r\n        }),\r\n        new Data(\"zj\", \"浙江\", new List<Data>()\r\n        {\r\n            new Data(\"zj-hz\", \"杭州\", new List<Data>()\r\n            {\r\n                new Data(\"zj-hz-sc\", \"上城区\"),\r\n                new Data(\"zj-hz-xc\", \"下城区\"),\r\n                new Data(\"zj-hz-qt\", \"钱塘区\"),\r\n            }),\r\n            new Data(\"zj-nb\", \"宁波\", new List<Data>()\r\n            {\r\n                new Data(\"zj-nb-jb\", \"江北区\"),\r\n                new Data(\"zj-nb-hs\", \"海曙区\"),\r\n                new Data(\"zj-nb-bl\", \"北仑区\"),\r\n            }),\r\n        }),\r\n        new Data(\"gd\", \"广东\", new List<Data>()\r\n        {\r\n            new Data(\"gd-sz\", \"深圳\", new List<Data>()\r\n            {\r\n                new Data(\"gd-sz-ns\", \"南山区\"),\r\n                new Data(\"gd-sz-lh\", \"罗湖区\"),\r\n            }),\r\n            new Data(\"gd-gz\", \"广州\", new List<Data>()\r\n            {\r\n                new Data(\"gd-gz-by\", \"白云区\"),\r\n                new Data(\"gd-gz-th\", \"天河区\"),\r\n                new Data(\"gd-gz-hz\", \"海珠区\"),\r\n            }),\r\n        }),\r\n    };\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobileCascader.events.OnConfirm",
        "Style": "",
        "Debug": false,
        "Group": 1
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/lists",
      "/components/tabs",
      "/components/buttons"
    ],
    "Subtitle": "移动端级联",
    "Title": "Mobile cascader",
    "Type": "移动端级联",
    "Tag": "preset"
  },
  {
    "Desc": "<p>专为移动设备设计的日期选择器。</p>\n",
    "Order": 0,
    "OtherDocs": {},
    "LastWriteTime": "2022-10-20T23:42:05.6675222+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "",
        "Code": "<div class=\"text-center\">\r\n    <PMobileDatePicker @bind-Value=\"_date\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Class=\"text-capitalize\" Text @attributes=\"@context.Attrs\">\r\n                @(_date == default ? \"Please select\" : _date)\r\n            </MButton>\r\n        </ActivatorContent>\r\n    </PMobileDatePicker>\r\n</div>\r\n\r\n@code {\r\n\r\n    private DateOnly _date;\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobileDatePickers.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "formatter",
        "Title": "格式化",
        "Description": "<p>格式化每列展示的内容。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <PMobileDatePicker @bind-Value=\"_date\" Formatter=\"@CustomFormatter\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Class=\"text-capitalize\" Text @attributes=\"@context.Attrs\">\r\n                @(_date == default ? \"Please select\" : _date)\r\n            </MButton>\r\n        </ActivatorContent>\r\n    </PMobileDatePicker>\r\n</div>\r\n\r\n@code {\r\n\r\n    private DateOnly _date;\r\n\r\n    private static string CustomFormatter(DatePrecision type, int val)\r\n    {\r\n        return type switch \r\n        {\r\n            DatePrecision.Year => $\"{val}年\",\r\n            DatePrecision.Month => $\"{val}月\",\r\n            DatePrecision.Day => $\"{val}日\",\r\n            _ => throw new ArgumentOutOfRangeException(nameof(type), type, null)\r\n            };\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobileDatePickers.props.Formatter",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "minMax",
        "Title": "最小和最大值",
        "Description": "",
        "Code": "<div class=\"text-center\">\r\n    <PMobileDatePicker @bind-Value=\"_date\"\r\n                       Max=\"DateOnly.FromDateTime(DateTime.Now)\"\r\n                       Min=\"new DateOnly(2000, 1, 1)\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Class=\"text-capitalize\" Text @attributes=\"@context.Attrs\">\r\n                @(_date == default ? \"Please select\" : _date)\r\n            </MButton>\r\n        </ActivatorContent>\r\n    </PMobileDatePicker>\r\n</div>\r\n\r\n@code {\r\n\r\n    private DateOnly _date;\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobileDatePickers.props.MinMax",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "precision",
        "Title": "精度",
        "Description": "",
        "Code": "<div class=\"text-center\">\r\n    <MSelect @bind-Value=\"_precision\"\r\n             Label=\"Precision\"\r\n             Items=\"@Items\"\r\n             ItemText=\"i => i.ToString()\"\r\n             ItemValue=\"i => i\"\r\n             Class=\"d-inline-block\"\r\n             Style=\"max-width: 180px\">\r\n    </MSelect>\r\n\r\n    <PMobileDatePicker @bind-Value=\"_date\" Precision=\"_precision\" @key=\"_precision\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Class=\"text-capitalize\" Text @attributes=\"@context.Attrs\">\r\n                @(ComputedDate)\r\n            </MButton>\r\n        </ActivatorContent>\r\n    </PMobileDatePicker>\r\n</div>\r\n\r\n@code {\r\n\r\n    [CascadingParameter(Name = \"TimezoneOffset\")]\r\n    private TimeSpan TimezoneOffset { get; set; }\r\n\r\n    private DateOnly _date;\r\n    private DatePrecision _precision = DatePrecision.Day;\r\n\r\n    private readonly static List<DatePrecision> Items = new()\r\n    {\r\n        DatePrecision.Year,\r\n        DatePrecision.Month,\r\n        DatePrecision.Day\r\n    };\r\n\r\n    private DateOnly ComputedDate => _precision switch\r\n    {\r\n        DatePrecision.Year => new DateOnly(_date.Year, 1, 1),\r\n        DatePrecision.Month => new DateOnly(_date.Year, _date.Month, 1),\r\n        _ => _date\r\n    };\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        _date = DateOnly.FromDateTime(DateTime.UtcNow.Add(TimezoneOffset));\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobileDatePickers.props.Precision",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/mobile-pickers",
      "/components/mobile-time-views",
      "/components/mobile-date-time-pickers"
    ],
    "Subtitle": "移动端日期选择器",
    "Title": "Mobile date pickers",
    "Type": "移动端日期选择器",
    "Tag": "preset"
  },
  {
    "Desc": "<p>专为移动设备设计的日期选择器。</p>\n",
    "Order": 0,
    "OtherDocs": {},
    "LastWriteTime": "2022-10-20T23:42:05.6695233+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "",
        "Code": "<div class=\"text-center\">\r\n    <PMobileDateTimePicker @bind-Value=\"_dateTime\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Class=\"text-capitalize\" Text @attributes=\"@context.Attrs\">\r\n                @(_dateTime == default ? \"Please select\" : _dateTime)\r\n            </MButton>\r\n        </ActivatorContent>\r\n    </PMobileDateTimePicker>\r\n</div>\r\n\r\n@code {\r\n\r\n    private DateTime _dateTime;\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobileDateTimePickers.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "formatter",
        "Title": "格式化",
        "Description": "<p>格式化每列展示的内容。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <PMobileDateTimePicker @bind-Value=\"_dateTime\" Formatter=\"@CustomFormatter\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Class=\"text-capitalize\" Text @attributes=\"@context.Attrs\">\r\n                @(_dateTime == default ? \"Please select\" : _dateTime)\r\n            </MButton>\r\n        </ActivatorContent>\r\n    </PMobileDateTimePicker>\r\n</div>\r\n\r\n@code {\r\n\r\n    private DateTime _dateTime;\r\n\r\n    private static string CustomFormatter(DateTimePrecision type, int val)\r\n    {\r\n        return type switch \r\n        {\r\n            DateTimePrecision.Year => $\"{val}年\",\r\n            DateTimePrecision.Month => $\"{val}月\",\r\n            DateTimePrecision.Day => $\"{val}日\",\r\n            DateTimePrecision.Hour => $\"{val}时\",\r\n            DateTimePrecision.Minute => $\"{val}分\",\r\n            DateTimePrecision.Second => $\"{val}秒\",\r\n            _ => throw new ArgumentOutOfRangeException(nameof(type), type, null)\r\n        };\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobileDateTimePickers.props.Formatter",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "minMax",
        "Title": "最小和最大值",
        "Description": "",
        "Code": "<div class=\"text-center\">\r\n    <PMobileDateTimePicker @bind-Value=\"_dateTime\" Max=\"DateTime.Now\" Min=\"new DateTime(2000, 1, 1)\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Class=\"text-capitalize\" Text @attributes=\"@context.Attrs\">\r\n                @(_dateTime == default ? \"Please select\" : _dateTime)\r\n            </MButton>\r\n        </ActivatorContent>\r\n    </PMobileDateTimePicker>\r\n</div>\r\n\r\n@code {\r\n\r\n    private DateTime _dateTime;\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobileDateTimePickers.props.MinMax",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "precision",
        "Title": "精度",
        "Description": "",
        "Code": "<div class=\"text-center\">\r\n    <MSelect @bind-Value=\"_precision\"\r\n             Label=\"Precision\"\r\n             Items=\"@Items\"\r\n             ItemText=\"i => i.ToString()\"\r\n             ItemValue=\"i => i\"\r\n             Class=\"d-inline-block\"\r\n             Style=\"max-width: 180px\">\r\n    </MSelect>\r\n\r\n    <PMobileDateTimePicker @bind-Value=\"_dateTime\" Precision=\"_precision\" @key=\"_precision\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Class=\"text-capitalize\" Text @attributes=\"@context.Attrs\">\r\n                @(ComputedDateTime)\r\n            </MButton>\r\n        </ActivatorContent>\r\n    </PMobileDateTimePicker>\r\n</div>\r\n\r\n@code {\r\n\r\n    [CascadingParameter(Name = \"TimezoneOffset\")]\r\n    private TimeSpan TimezoneOffset { get; set; }\r\n\r\n    private DateTime _dateTime;\r\n    private DateTimePrecision _precision = DateTimePrecision.Day;\r\n\r\n    private readonly static List<DateTimePrecision> Items = new()\r\n    {\r\n        DateTimePrecision.Year,\r\n        DateTimePrecision.Month,\r\n        DateTimePrecision.Day,\r\n        DateTimePrecision.Hour,\r\n        DateTimePrecision.Minute,\r\n        DateTimePrecision.Second\r\n    };\r\n\r\n    private DateTime ComputedDateTime => _precision switch\r\n    {\r\n        DateTimePrecision.Year => new DateTime(_dateTime.Year, 1, 1),\r\n        DateTimePrecision.Month => new DateTime(_dateTime.Year, _dateTime.Month, 1),\r\n        DateTimePrecision.Day => new DateTime(_dateTime.Year, _dateTime.Month, _dateTime.Day),\r\n        DateTimePrecision.Hour => new DateTime(_dateTime.Year, _dateTime.Month, _dateTime.Day, _dateTime.Hour, 1, 1),\r\n        DateTimePrecision.Minute => new DateTime(_dateTime.Year, _dateTime.Month, _dateTime.Day, _dateTime.Hour, _dateTime.Minute, 1),\r\n        _ => _dateTime\r\n    };\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        _dateTime = DateTime.UtcNow.Add(TimezoneOffset);\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobileDateTimePickers.props.Precision",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/mobile-pickers",
      "/components/mobile-time-views",
      "/components/mobile-date-pickers"
    ],
    "Subtitle": "移动端日期时间选择器",
    "Title": "Mobile date time pickers",
    "Type": "移动端日期时间选择器",
    "Tag": "preset"
  },
  {
    "Desc": "<p>专为移动设备设计的选择器。提供多个选项集合供用户选择，支持单列选择、多列选择和级联选择。</p>\n",
    "Order": 0,
    "OtherDocs": {},
    "LastWriteTime": "2022-10-20T23:42:05.6745228+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p><code>Columns</code> 属性可以通过二维列表的形式配置单列或多列选择。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <PMobilePicker @bind-Value=\"_value\"\r\n                   Columns=\"@_columns\"\r\n                   TColumn=\"List<string>\"\r\n                   TColumnItem=\"string\"\r\n                   TColumnItemValue=\"string\"\r\n                   ItemValue=\"item => item\"\r\n                   ItemText=\"item => item\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Class=\"text-capitalize\" Text @attributes=\"@context.Attrs\">\r\n                @(_value.Count == 0 ? \"Please select\" : string.Join(\" \", _value))\r\n            </MButton>\r\n        </ActivatorContent>\r\n    </PMobilePicker>\r\n</div>\r\n\r\n@code {\r\n\r\n    private static readonly string DayOfWeek = DateTime.Now.DayOfWeek.ToString();\r\n    private static readonly string AmPm = DateTime.Now.Hour > 12 ? \"PM\" : \"AM\";\r\n\r\n    private readonly List<List<string>> _columns = new()\r\n    {\r\n        new List<string>\r\n        {\r\n            System.DayOfWeek.Monday.ToString(),\r\n            System.DayOfWeek.Tuesday.ToString(),\r\n            System.DayOfWeek.Wednesday.ToString(),\r\n            System.DayOfWeek.Thursday.ToString(),\r\n            System.DayOfWeek.Friday.ToString(),\r\n            System.DayOfWeek.Saturday.ToString(),\r\n            System.DayOfWeek.Sunday.ToString()\r\n        },\r\n        new List<string>\r\n        {\r\n            \"AM\",\r\n            \"PM\"\r\n        }\r\n    };\r\n\r\n    private List<string> _value = new() { DayOfWeek, AmPm };\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobilePickers.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "cascade",
        "Title": "级联",
        "Description": "<p>使用级联的 <code>Columns</code> 和 <code>ItemChildren</code> 字段可以实现选项级联的效果。</p>\n<!--alert:warning-->\n<p>级联选择的数据嵌套深度需要一致，如果某些选项没有子选项，则可以使用空字符串作为占位符。</p>\n<!--/alert:warning-->\n",
        "Code": "@using Masa.Blazor.Doc.Demos.Components.Groups.children.ChipGroup.props\r\n<div class=\"text-center\">\r\n    <PMobilePicker @bind-Value=\"_value\"\r\n                   Columns=\"@Columns\"\r\n                   TColumn=\"Data\"\r\n                   TColumnItem=\"Data\"\r\n                   TColumnItemValue=\"string\"\r\n                   ItemValue=\"item => item.Code\"\r\n                   ItemText=\"item => item.Name\"\r\n                   ItemChildren=\"item => item.Children\"\r\n                   ItemDisabled=\"item => item.Disabled\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Class=\"text-capitalize\" Text @attributes=\"@context.Attrs\">\r\n                @(_value.Count == 0 ? \"Please select\" : string.Join(\" \", GetNames()))\r\n            </MButton>\r\n        </ActivatorContent>\r\n    </PMobilePicker>\r\n</div>\r\n\r\n@code {\r\n\r\n    List<string> _value = new();\r\n\r\n    IEnumerable<string> GetNames()\r\n    {\r\n        List<string> names = new();\r\n        var columns = Columns.ToList();\r\n\r\n        foreach (var value in _value)\r\n        {\r\n            if (columns is null || columns.Count == 0)\r\n            {\r\n                break;\r\n            }\r\n\r\n            var column = columns.FirstOrDefault(c => c.Code == value);\r\n            if (column == null)\r\n            {\r\n                break;\r\n            }\r\n\r\n            names.Add(column.Name);\r\n            columns = column.Children;\r\n        }\r\n\r\n        return names;\r\n    }\r\n\r\n    record Data(string Code, string Name, List<Data> Children = null, bool Disabled = false);\r\n\r\n    static readonly List<Data> Columns = new()\r\n    {\r\n        new Data(\"bj\", \"北京\", new List<Data>\r\n        {\r\n            new(\"bj-hd\", \"海淀区\", new List<Data>\r\n            {\r\n                new(\"\", \"\")\r\n            }),\r\n            new(\"bj-sy\", \"顺义区\", new List<Data>\r\n            {\r\n                new(\"\", \"\")\r\n            }),\r\n            new(\"bj-sjs\", \"石景山区\", new List<Data>\r\n            {\r\n                new(\"\", \"\")\r\n            })\r\n        }),\r\n        new Data(\"sh\", \"上海\", new List<Data>\r\n        {\r\n            new(\"sh-sh\", \"上海\", new List<Data>\r\n            {\r\n                new(\"sh-sh-hp\", \"黄浦区\"),\r\n                new(\"sh-sh-xh\", \"徐汇区\"),\r\n                new(\"sh-sh-cn\", \"长宁区\"),\r\n                new(\"sh-sh-ja\", \"静安区\", Disabled: true)\r\n            })\r\n        }),\r\n        new Data(\"zj\", \"浙江\", new List<Data>\r\n        {\r\n            new(\"zj-hz\", \"杭州\", new List<Data>\r\n            {\r\n                new(\"zj-hz-sc\", \"上城区\"),\r\n                new(\"zj-hz-xc\", \"下城区\"),\r\n                new(\"zj-hz-qt\", \"钱塘区\")\r\n            }),\r\n            new(\"zj-nb\", \"宁波\", new List<Data>\r\n            {\r\n                new(\"zj-nb-jb\", \"江北区\"),\r\n                new(\"zj-nb-hs\", \"海曙区\"),\r\n                new(\"zj-nb-bl\", \"北仑区\")\r\n            })\r\n        }),\r\n        new Data(\"gd\", \"广东\", new List<Data>\r\n        {\r\n            new(\"gd-sz\", \"深圳\", new List<Data>\r\n            {\r\n                new(\"gd-sz-ns\", \"南山区\"),\r\n                new(\"gd-sz-lh\", \"罗湖区\")\r\n            }),\r\n            new(\"gd-gz\", \"广州\", new List<Data>\r\n            {\r\n                new(\"gd-gz-by\", \"白云区\"),\r\n                new(\"gd-gz-th\", \"天河区\"),\r\n                new(\"gd-gz-hz\", \"海珠区\")\r\n            })\r\n        })\r\n    };\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobilePickers.props.Cascade",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "itemHeight",
        "Title": "自定义项高度",
        "Description": "<p>通过 <code>Itemheight</code> 可以自定义选项的高度。目前只支持<code>px</code>。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <PMobilePicker @bind-Value=\"_value\"\r\n                   Columns=\"@_columns\"\r\n                   TColumn=\"List<string>\"\r\n                   TColumnItem=\"string\"\r\n                   TColumnItemValue=\"string\"\r\n                   ItemValue=\"item => item\"\r\n                   ItemText=\"item => item\"\r\n                   ItemHeight=\"64\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Class=\"text-capitalize\" Text @attributes=\"@context.Attrs\">\r\n                @(_value.Count == 0 ? \"Please select\" : string.Join(\" \", _value))\r\n            </MButton>\r\n        </ActivatorContent>\r\n    </PMobilePicker>\r\n</div>\r\n\r\n@code {\r\n\r\n    private static readonly string DayOfWeek = DateTime.Now.DayOfWeek.ToString();\r\n    private static readonly string AmPm = DateTime.Now.Hour > 12 ? \"PM\" : \"AM\";\r\n\r\n    private readonly List<List<string>> _columns = new()\r\n    {\r\n        new List<string>\r\n        {\r\n            System.DayOfWeek.Monday.ToString(),\r\n            System.DayOfWeek.Tuesday.ToString(),\r\n            System.DayOfWeek.Wednesday.ToString(),\r\n            System.DayOfWeek.Thursday.ToString(),\r\n            System.DayOfWeek.Friday.ToString(),\r\n            System.DayOfWeek.Saturday.ToString(),\r\n            System.DayOfWeek.Sunday.ToString()\r\n        },\r\n        new List<string>\r\n        {\r\n            \"AM\",\r\n            \"PM\"\r\n        }\r\n    };\r\n\r\n    private List<string> _value = new() { DayOfWeek, AmPm };\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobilePickers.props.ItemHeight",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/mobile-picker-views",
      "/components/mobile-date-time-views",
      "/components/mobile-time-pickers"
    ],
    "Subtitle": "移动端选择器",
    "Title": "Mobile pickers",
    "Type": "移动端选择器",
    "Tag": "preset"
  },
  {
    "Desc": "<p>专为移动设备设计的选择视图。提供多个选项集合供用户选择，支持单列选择、多列选择和级联选择。</p>\n<p><strong>MMobilePickerView</strong> 是 <a href=\"components/mobile-pickers\">PMobilePicker</a> 的内容区域。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MMobilePickerView\">MMobilePickerView</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.6725237+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p><code>Columns</code> 属性可以通过二维列表的形式配置单列或多列选择。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\" Align=\"AlignTypes.Center\">\r\n    <MCol Cols=\"12\" Md=\"6\">\r\n        <MMobilePickerView @bind-Value=\"_value\"\r\n                           Columns=\"@_columns\"\r\n                           TColumn=\"List<string>\"\r\n                           TColumnItem=\"string\"\r\n                           TColumnItemValue=\"string\"\r\n                           ItemValue=\"item => item\"\r\n                           ItemText=\"item => item\">\r\n        </MMobilePickerView>\r\n    </MCol>\r\n    <MCol Cols=\"12\" Md=\"6\" Class=\"text-center\">\r\n        Value: @string.Join(\" \", _value)\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n\r\n    private static readonly string DayOfWeek = DateTime.Now.DayOfWeek.ToString();\r\n    private static readonly string AmPm = DateTime.Now.Hour > 12 ? \"PM\" : \"AM\";\r\n\r\n    private readonly List<List<string>> _columns = new()\r\n    {\r\n        new List<string>\r\n        {\r\n            System.DayOfWeek.Monday.ToString(),\r\n            System.DayOfWeek.Tuesday.ToString(),\r\n            System.DayOfWeek.Wednesday.ToString(),\r\n            System.DayOfWeek.Thursday.ToString(),\r\n            System.DayOfWeek.Friday.ToString(),\r\n            System.DayOfWeek.Saturday.ToString(),\r\n            System.DayOfWeek.Sunday.ToString()\r\n        },\r\n        new List<string>\r\n        {\r\n            \"AM\",\r\n            \"PM\"\r\n        }\r\n    };\r\n\r\n    private List<string> _value = new() { DayOfWeek, AmPm };\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobilePickerViews.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "cascade",
        "Title": "级联",
        "Description": "<p>使用级联的 <code>Columns</code> 和 <code>ItemChildren</code> 字段可以实现选项级联的效果。</p>\n<!--alert:warning-->\n<p>级联选择的数据嵌套深度需要一致，如果某些选项没有子选项，则可以使用空字符串作为占位符。</p>\n<!--/alert:warning-->\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\" Align=\"AlignTypes.Center\">\r\n    <MCol Cols=\"12\" Md=\"6\">\r\n        <MMobilePickerView @bind-Value=\"_value\"\r\n                           Columns=\"@Columns\"\r\n                           TColumn=\"Data\"\r\n                           TColumnItem=\"Data\"\r\n                           TColumnItemValue=\"string\"\r\n                           ItemValue=\"item => item.Code\"\r\n                           ItemText=\"item => item.Name\"\r\n                           ItemChildren=\"item => item.Children\"\r\n                           ItemDisabled=\"item => item.Disabled\"\r\n                           OnSelect=\"@HandleOnSelect\">\r\n        </MMobilePickerView>\r\n    </MCol>\r\n    <MCol Cols=\"12\" Md=\"6\" Class=\"text-center\">\r\n        @(_selected.Any() ? \"Selected:\" + string.Join(\" \", _selected.Select(s => s.Name)) : \"Please select\")\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n\r\n    List<string> _value = new();\r\n    List<Data> _selected = new();\r\n\r\n    void HandleOnSelect(List<Data> selected)\r\n    {\r\n        _selected = selected;\r\n    }\r\n\r\n    record Data(string Code, string Name, List<Data> Children = null, bool Disabled = false);\r\n\r\n    static readonly List<Data> Columns = new()\r\n    {\r\n        new Data(\"bj\", \"北京\", new List<Data>\r\n        {\r\n            new(\"bj-hd\", \"海淀区\", new List<Data>\r\n            {\r\n                new(\"\", \"\")\r\n            }),\r\n            new(\"bj-sy\", \"顺义区\", new List<Data>\r\n            {\r\n                new(\"\", \"\")\r\n            }),\r\n            new(\"bj-sjs\", \"石景山区\", new List<Data>\r\n            {\r\n                new(\"\", \"\")\r\n            })\r\n        }),\r\n        new Data(\"sh\", \"上海\", new List<Data>\r\n        {\r\n            new(\"sh-sh\", \"上海\", new List<Data>\r\n            {\r\n                new(\"sh-sh-hp\", \"黄浦区\"),\r\n                new(\"sh-sh-xh\", \"徐汇区\"),\r\n                new(\"sh-sh-cn\", \"长宁区\"),\r\n                new(\"sh-sh-ja\", \"静安区\", Disabled: true)\r\n            })\r\n        }),\r\n        new Data(\"zj\", \"浙江\", new List<Data>\r\n        {\r\n            new(\"zj-hz\", \"杭州\", new List<Data>\r\n            {\r\n                new(\"zj-hz-sc\", \"上城区\"),\r\n                new(\"zj-hz-xc\", \"下城区\"),\r\n                new(\"zj-hz-qt\", \"钱塘区\")\r\n            }),\r\n            new(\"zj-nb\", \"宁波\", new List<Data>\r\n            {\r\n                new(\"zj-nb-jb\", \"江北区\"),\r\n                new(\"zj-nb-hs\", \"海曙区\"),\r\n                new(\"zj-nb-bl\", \"北仑区\")\r\n            })\r\n        }),\r\n        new Data(\"gd\", \"广东\", new List<Data>\r\n        {\r\n            new(\"gd-sz\", \"深圳\", new List<Data>\r\n            {\r\n                new(\"gd-sz-ns\", \"南山区\"),\r\n                new(\"gd-sz-lh\", \"罗湖区\")\r\n            }),\r\n            new(\"gd-gz\", \"广州\", new List<Data>\r\n            {\r\n                new(\"gd-gz-by\", \"白云区\"),\r\n                new(\"gd-gz-th\", \"天河区\"),\r\n                new(\"gd-gz-hz\", \"海珠区\")\r\n            })\r\n        })\r\n    };\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobilePickerViews.props.Cascade",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "itemDisabled",
        "Title": "禁止选择某项",
        "Description": "",
        "Code": "<MRow Justify=\"JustifyTypes.Center\" Align=\"AlignTypes.Center\">\r\n    <MCol Cols=\"12\" Md=\"6\">\r\n        <MMobilePickerView @bind-Value=\"_value\"\r\n                           Columns=\"@_columns\"\r\n                           TColumn=\"List<string>\"\r\n                           TColumnItem=\"string\"\r\n                           TColumnItemValue=\"string\"\r\n                           ItemValue=\"item => item\"\r\n                           ItemText=\"item => item\"\r\n                           ItemDisabled=\"item => item == NowDayOfWeek\">\r\n        </MMobilePickerView>\r\n    </MCol>\r\n    <MCol Cols=\"12\" Md=\"6\" Class=\"text-center\">\r\n        Value: @string.Join(\" \", _value)\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n\r\n    private static readonly string NowDayOfWeek = DateTime.Now.DayOfWeek.ToString();\r\n    private static readonly string NowAmPm = DateTime.Now.Hour > 12 ? \"PM\" : \"AM\";\r\n\r\n    private readonly List<List<string>> _columns = new()\r\n    {\r\n        new List<string>\r\n        {\r\n            DayOfWeek.Monday.ToString(),\r\n            DayOfWeek.Tuesday.ToString(),\r\n            DayOfWeek.Wednesday.ToString(),\r\n            DayOfWeek.Thursday.ToString(),\r\n            DayOfWeek.Friday.ToString(),\r\n            DayOfWeek.Saturday.ToString(),\r\n            DayOfWeek.Sunday.ToString()\r\n        },\r\n        new List<string>\r\n        {\r\n            \"AM\",\r\n            \"PM\"\r\n        }\r\n    };\r\n\r\n    private List<string> _value = new() { NowDayOfWeek, NowAmPm };\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobilePickerViews.props.ItemDisabled",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "itemHeight",
        "Title": "自定义项高度",
        "Description": "<p>通过 <code>Itemheight</code> 可以自定义选项的高度。目前只支持<code>px</code>。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\" Align=\"AlignTypes.Center\">\r\n    <MCol Cols=\"12\" Md=\"6\">\r\n        <MMobilePickerView @bind-Value=\"_value\"\r\n                           Columns=\"@_columns\"\r\n                           TColumn=\"List<string>\"\r\n                           TColumnItem=\"string\"\r\n                           TColumnItemValue=\"string\"\r\n                           ItemValue=\"item => item\"\r\n                           ItemText=\"item => item\"\r\n                           ItemHeight=\"64\">\r\n        </MMobilePickerView>\r\n    </MCol>\r\n    <MCol Cols=\"12\" Md=\"6\" Class=\"text-center\">\r\n        Value: @string.Join(\" \", _value)\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n\r\n    private static readonly string DayOfWeek = DateTime.Now.DayOfWeek.ToString();\r\n    private static readonly string AmPm = DateTime.Now.Hour > 12 ? \"PM\" : \"AM\";\r\n    \r\n    private readonly List<List<string>> _columns = new()\r\n    {\r\n        new List<string>\r\n        {\r\n            System.DayOfWeek.Monday.ToString(),\r\n            System.DayOfWeek.Tuesday.ToString(),\r\n            System.DayOfWeek.Wednesday.ToString(),\r\n            System.DayOfWeek.Thursday.ToString(),\r\n            System.DayOfWeek.Friday.ToString(),\r\n            System.DayOfWeek.Saturday.ToString(),\r\n            System.DayOfWeek.Sunday.ToString()\r\n        },\r\n        new List<string>\r\n        {\r\n            \"AM\",\r\n            \"PM\"\r\n        }\r\n    };\r\n\r\n    private List<string> _value = new() { DayOfWeek, AmPm };\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobilePickerViews.props.ItemHeight",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/mobile-pickers",
      "/components/mobile-date-time-pickers",
      "/components/mobile-time-pickers"
    ],
    "Subtitle": "移动端选择视图",
    "Title": "Mobile picker views",
    "Type": "移动端选择视图"
  },
  {
    "Desc": "<p>专为移动设备设计的时间选择器。</p>\n",
    "Order": 0,
    "OtherDocs": {},
    "LastWriteTime": "2022-10-20T23:42:05.6765253+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "",
        "Code": "<div class=\"text-center\">\r\n    <PMobileTimePicker @bind-Value=\"_time\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Class=\"text-capitalize\" Text @attributes=\"@context.Attrs\">\r\n                @_time.ToString(\"HH:mm:ss\")\r\n            </MButton>\r\n        </ActivatorContent>\r\n    </PMobileTimePicker>\r\n</div>\r\n\r\n@code {\r\n\r\n    private TimeOnly _time;\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobileTimePickers.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "formatter",
        "Title": "格式化",
        "Description": "<p>格式化每列展示的内容。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <PMobileTimePicker @bind-Value=\"_time\" Formatter=\"@CustomFormatter\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Class=\"text-capitalize\" Text @attributes=\"@context.Attrs\">\r\n                @_time.ToString(\"HH:mm:ss\")\r\n            </MButton>\r\n        </ActivatorContent>\r\n    </PMobileTimePicker>\r\n</div>\r\n\r\n@code {\r\n\r\n    private TimeOnly _time;\r\n\r\n    private static string CustomFormatter(TimePrecision type, int val)\r\n    {\r\n        return type switch \r\n        {\r\n            TimePrecision.Hour => $\"{val}时\",\r\n            TimePrecision.Minute => $\"{val}分\",\r\n            TimePrecision.Second => $\"{val}秒\",\r\n            _ => throw new ArgumentOutOfRangeException(nameof(type), type, null)\r\n        };\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobileTimePickers.props.Formatter",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "minMax",
        "Title": "最小和最大值",
        "Description": "",
        "Code": "<div class=\"text-center\">\r\n    <PMobileTimePicker @bind-Value=\"_time\"\r\n                       Min=\"new TimeOnly(9, 30, 0)\"\r\n                       Max=\"new TimeOnly(14, 59, 59)\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Class=\"text-capitalize\" Text @attributes=\"@context.Attrs\">\r\n                @_time.ToString(\"HH:mm:ss\")\r\n            </MButton>\r\n        </ActivatorContent>\r\n    </PMobileTimePicker>\r\n</div>\r\n\r\n@code {\r\n\r\n    private TimeOnly _time = new TimeOnly(10, 30, 0);\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobileTimePickers.props.MinMax",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "precision",
        "Title": "精度",
        "Description": "",
        "Code": "<div class=\"text-center\">\r\n    <MSelect @bind-Value=\"_precision\"\r\n             Label=\"Precision\"\r\n             Items=\"@Items\"\r\n             ItemText=\"i => i.ToString()\"\r\n             ItemValue=\"i => i\"\r\n             Class=\"d-inline-block\"\r\n             Style=\"max-width: 180px\">\r\n    </MSelect>\r\n\r\n    <PMobileTimePicker @bind-Value=\"_time\" Precision=\"_precision\" @key=\"_precision\">\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Class=\"text-capitalize\" Text @attributes=\"@context.Attrs\">\r\n                @(ComputedTime.ToString(\"HH:mm:ss\"))\r\n            </MButton>\r\n        </ActivatorContent>\r\n    </PMobileTimePicker>\r\n</div>\r\n\r\n@code {\r\n\r\n    private TimeOnly _time;\r\n    private TimePrecision _precision = TimePrecision.Second;\r\n\r\n    private readonly static List<TimePrecision> Items = new()\r\n    {\r\n        TimePrecision.Hour,\r\n        TimePrecision.Minute,\r\n        TimePrecision.Second\r\n    };\r\n\r\n    private TimeOnly ComputedTime => _precision switch{\r\n        TimePrecision.Hour => new TimeOnly(_time.Hour, 0, 0),\r\n        TimePrecision.Minute => new TimeOnly(_time.Hour, _time.Minute, 0),\r\n        _ => _time\r\n    };\r\n\r\n}\r\n",
        "Type": "Demos.Components.Mobiles.children.MobileTimePickers.props.Precision",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/mobile-pickers",
      "/components/mobile-date-time-pickers",
      "/components/mobile-date-pickers"
    ],
    "Subtitle": "移动端时间选择器",
    "Title": "Mobile time pickers",
    "Type": "移动端时间选择器",
    "Tag": "preset"
  },
  {
    "Desc": "<p>需要用户处理事务，又不希望跳转页面以致打断工作流程时，可以使用 <code>Modal</code> 在当前页面正中打开一个浮层，承载相应的操作。</p>\n",
    "Order": 0,
    "OtherDocs": {},
    "LastWriteTime": "2022-10-20T23:42:05.6815223+08:00",
    "DemoList": [
      {
        "Order": 1,
        "Name": "index",
        "Title": "使用",
        "Description": "",
        "Code": "<PModal Title=\"Title\" Width=\"500\">\r\n    <ActivatorContent>\r\n        <MButton @attributes=\"@context.Attrs\">Activator</MButton>\r\n    </ActivatorContent>\r\n    <ChildContent>\r\n        Content\r\n    </ChildContent>\r\n</PModal>",
        "Type": "Demos.Components.Modal.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "actionProps",
        "Title": "操作属性",
        "Description": "",
        "Code": "<PModal @bind-Value=\"value\" \r\n        Persistent\r\n        Title=\"Title\"\r\n        Width=\"500\"\r\n        SaveProps=\"props => props.Outlined = true\"\r\n        CancelProps=\"@(props => props.Color = \"orange\")\"\r\n        DeleteProps=\"@(props => props.Style = \"font-weight:bold;\")\"\r\n        OnSave=\"OnSave\" \r\n        OnCancel=\"OnCancel\" \r\n        OnDelete=\"OnDelete\">\r\n    <ActivatorContent>\r\n        <MButton @attributes=\"@context.Attrs\">Activator</MButton>\r\n    </ActivatorContent>\r\n    <ChildContent>\r\n        Content\r\n    </ChildContent>\r\n</PModal>\r\n\r\n@code {\r\n\r\n    private bool value;\r\n\r\n    private async Task OnSave()\r\n    {\r\n        await Task.Delay(1000);\r\n\r\n        value = false;\r\n    }\r\n\r\n    private void OnCancel()\r\n    {\r\n        value = false;\r\n    }\r\n\r\n    private void OnDelete()\r\n    {\r\n        value = false;\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.Modal.props.ActionProps",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "actions",
        "Title": "操作",
        "Description": "",
        "Code": "<MSwitch @bind-Value=\"hideCancelAction\" Label=\"HideCancelAction\"></MSwitch>\r\n\r\n<PModal @bind-Value=\"value\" \r\n        HideCancelAction=\"hideCancelAction\" \r\n        Persistent\r\n        Title=\"Title\"\r\n        Width=\"500\"\r\n        OnSave=\"OnSave\" \r\n        OnCancel=\"OnCancel\" \r\n        OnDelete=\"OnDelete\">\r\n    <ActivatorContent>\r\n        <MButton @attributes=\"@context.Attrs\">Activator</MButton>\r\n    </ActivatorContent>\r\n    <ChildContent>\r\n        Content\r\n    </ChildContent>\r\n</PModal>\r\n\r\n@code {\r\n\r\n    private bool value;\r\n    private bool hideCancelAction;\r\n\r\n    private async Task OnSave()\r\n    {\r\n        await Task.Delay(1000);\r\n\r\n        value = false;\r\n    }\r\n\r\n    private void OnCancel()\r\n    {\r\n        value = false;\r\n    }\r\n\r\n    private void OnDelete()\r\n    {\r\n        value = false;\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.Modal.props.Actions",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "formModel",
        "Title": "表单对象",
        "Description": "",
        "Code": "@using System.ComponentModel.DataAnnotations\r\n\r\n<MSwitch @bind-Value=\"throwException\" Label=\"throw exception when calling OnSave\"></MSwitch>\r\n\r\n<MButton OnClick=\"ShowModal\">Show Modal</MButton>\r\n@if (user != null)\r\n{\r\n    <div>\r\n        @System.Text.Json.JsonSerializer.Serialize(user)\r\n        <MButton Color=\"primary\" Text OnClick=\"EditModal\">edit</MButton>\r\n    </div>\r\n}\r\n\r\n<PModal @bind-Value=\"value\"\r\n        FormModel=\"userModel\"\r\n        Persistent\r\n        Title=\"Title\"\r\n        Width=\"500\"\r\n        OnSave=\"HandleOnSave\"\r\n        OnCancel=\"HandleOnCancel\">\r\n    <MRow>\r\n        <MCol Cols=\"12\">\r\n            <MTextField @bind-Value=\"userModel.UserName\"\r\n                        Label=\"UserName\"\r\n                        Dense\r\n                        Outlined\r\n                        HideDetails=\"@(\"auto\")\" />\r\n        </MCol>\r\n        <MCol Cols=\"12\">\r\n            <MTextField @bind-Value=\"userModel.City\"\r\n                        Label=\"City\"\r\n                        Dense\r\n                        Outlined\r\n                        HideDetails=\"@(\"auto\")\" />\r\n        </MCol>\r\n        <MCol Cols=\"12\">\r\n            <MRadioGroup @bind-Value=\"userModel.Gender\"\r\n                         Label=\"Gender:\"\r\n                         Row\r\n                         Dense\r\n                         Style=\"margin-top: 0\"\r\n                         HideDetails=\"@(\"auto\")\">\r\n                <MRadio Label=\"Male\" Value=\"0\"></MRadio>\r\n                <MRadio Label=\"Female\" Value=\"1\"></MRadio>\r\n            </MRadioGroup>\r\n        </MCol>\r\n        <MCol Cols=\"12\">\r\n            <MAutocomplete @bind-Value=\"userModel.Favorites\"\r\n                           Items=\"favorites\"\r\n                           Label=\"Favorites\"\r\n                           Multiple\r\n                           ItemValue=\"r => r\"\r\n                           ItemText=\"r => r\"\r\n                           Dense\r\n                           Outlined\r\n                           HideDetails=\"@(\"auto\")\">\r\n            </MAutocomplete>\r\n        </MCol>\r\n        @if (exception != null)\r\n        {\r\n            <MCol Cols=\"12\">\r\n                @exception.Message\r\n            </MCol>\r\n        }\r\n    </MRow>\r\n</PModal>\r\n\r\n@code {\r\n\r\n    readonly List<string> favorites = new() { \"Basketball\", \"Football\", \"Ping-pong\", \"Badminton\" };\r\n\r\n    User user;\r\n    User userModel;\r\n\r\n    private bool value;\r\n    private bool throwException;\r\n    private Exception exception;\r\n\r\n    private void ShowModal()\r\n    {\r\n        userModel = new User();\r\n        value = true;\r\n    }\r\n\r\n    private void EditModal()\r\n    {\r\n        userModel = user.ShallowCopy();\r\n        value = true;\r\n    }\r\n\r\n    private async Task HandleOnSave(ModalActionEventArgs args)\r\n    {\r\n        try\r\n        {\r\n            // logic in real world here\r\n            await Task.Delay(1000);\r\n\r\n            if (throwException)\r\n            {\r\n                throw new Exception(\"Something wrong here!\");\r\n            }\r\n\r\n            user = userModel.ShallowCopy();\r\n\r\n            value = false;\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            args.Cancel();\r\n            exception = e;\r\n        }\r\n    }\r\n\r\n    private void HandleOnCancel()\r\n    {\r\n        value = false;\r\n        exception = null;\r\n    }\r\n\r\n    public class User : IShallowCopy<User>\r\n    {\r\n        [Required]\r\n        public string UserName { get; set; }\r\n\r\n        [Range(0, 1)]\r\n        public int Gender { get; set; }\r\n\r\n        [Required]\r\n        public string City { get; set; }\r\n\r\n        [Required]\r\n        public List<string> Favorites { get; set; }\r\n\r\n        public User ShallowCopy()\r\n        {\r\n            var user = (User)this.MemberwiseClone();\r\n            user.Favorites = Favorites;\r\n            return user;\r\n        }\r\n    }\r\n\r\n    public interface IShallowCopy<T> where T : new() \r\n    {\r\n        T ShallowCopy();\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.Modal.props.FormModel",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "scrollToTopOnHide",
        "Title": "自动滚动到顶部",
        "Description": "",
        "Code": "<MSwitch @bind-Value=\"autoScrollToTop\" Label=\"AutoScrollToTop\"></MSwitch>\r\n\r\n<PModal @bind-Value=\"value\"\r\n        AutoScrollToTop=\"autoScrollToTop\"\r\n        Title=\"Title\"\r\n        Width=\"500\"\r\n        BodyStyle=\"height: 250px\"\r\n        OnCancel=\"() => value = false\">\r\n    <ActivatorContent>\r\n        <MButton @attributes=\"@context.Attrs\">Activator</MButton>\r\n    </ActivatorContent>\r\n    <ChildContent>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n        <div>Content</div>\r\n    </ChildContent>\r\n</PModal>\r\n\r\n@code {\r\n\r\n    private bool value;\r\n    private bool autoScrollToTop;\r\n\r\n}",
        "Type": "Demos.Components.Modal.props.ScrollToTopOnHide",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "withoutActivator",
        "Title": "没有触发器",
        "Description": "",
        "Code": "<MButton OnClick=\"() => value = true\">Show Modal</MButton>\r\n\r\n<PModal @bind-Value=\"value\"\r\n        Title=\"Title\"\r\n        Width=\"500\"\r\n        OnCancel=\"() => value = false\">\r\n    Content\r\n</PModal>\r\n\r\n@code {\r\n\r\n    private bool value;\r\n\r\n}",
        "Type": "Demos.Components.Modal.props.WithoutActivator",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "customActions",
        "Title": "自定义操作",
        "Description": "",
        "Code": "<PModal @bind-Value=\"value\"\r\n        Persistent\r\n        Title=\"Title\"\r\n        Width=\"500\"\r\n        OnSave=\"OnSave\"\r\n        OnCancel=\"OnCancel\"\r\n        OnDelete=\"OnDelete\">\r\n    <ActivatorContent>\r\n        <MButton @attributes=\"@context.Attrs\">Activator</MButton>\r\n    </ActivatorContent>\r\n    <ChildContent>\r\n        Content\r\n    </ChildContent>\r\n    <DeleteContent Context=\"delete\">\r\n        <MButton Icon Color=\"error\" OnClick=\"delete.Click\" Disabled=\"delete.Loading\">\r\n            <MIcon>mdi-delete</MIcon>\r\n        </MButton>\r\n    </DeleteContent>\r\n    <CancelContent Context=\"cancel\">\r\n        <MButton Icon OnClick=\"cancel.Click\" Disabled=\"cancel.Loading\">\r\n            <MIcon>mdi-cancel</MIcon>\r\n        </MButton>\r\n    </CancelContent>\r\n    <SaveContent Context=\"save\">\r\n        <MButton Icon Color=\"primary\" OnClick=\"save.Click\" Disabled=\"save.Loading\" Loading=\"save.Loading\">\r\n            <MIcon>mdi-check</MIcon>\r\n        </MButton>\r\n    </SaveContent>\r\n</PModal>\r\n\r\n@code {\r\n\r\n    private bool value;\r\n\r\n    private async Task OnSave()\r\n    {\r\n        await Task.Delay(1000);\r\n        value = false;\r\n    }\r\n\r\n    private void OnCancel()\r\n    {\r\n        value = false;\r\n    }\r\n\r\n    private void OnDelete()\r\n    {\r\n        value = false;\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.Modal.contents.CustomActions",
        "Style": "",
        "Debug": false,
        "Group": 2
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/dialogs",
      "/components/popup-service",
      "/components/drawers"
    ],
    "Subtitle": "模态窗",
    "Title": "Modals",
    "Type": "模态窗",
    "Tag": "preset"
  },
  {
    "Desc": "<p><code>MNavigationDrawer</code> 是用于导航应用程序的组件。 通常被包装在 <code>MCard</code> 元素中使用。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MNavigationDrawer\">MNavigationDrawer</a></li>\n</ul>\n",
      "注意": "\n<!--alert:error-->\n<p>如果使用启用了 <strong>App</strong> 属性的 <code>MNavigationDrawer</code>，则不需要像示例中那样使用 <strong>Absolute</strong> 属性。</p>\n<!--/alert:error-->\n<!--alert:info-->\n<p><strong>ExtensionOnHover</strong> 参数不会改变<strong>MMain</strong>的内容区域。 要使内容区域响应<strong>ExtensionOnHover</strong>，请绑定<strong>OnMiniVariantUpdate</strong> 到数据。</p>\n<!--/alert:info-->\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.6865225+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>导航抽屉主要用于存放您应用程序中页面的链接。通常使用 <strong>Nav</strong> 属性将抽屉与 <a href=\"/components/lists\">MList</a> 组件配对使用。</p>\n",
        "Code": "<MCard Height=\"400\"\r\n       Width=\"256\"\r\n       Class=\"mx-auto\">\r\n    <MNavigationDrawer Permanent>\r\n        <MListItem>\r\n            <MListItemContent>\r\n                <MListItemTitle class=\"text-h6\">\r\n                    Application\r\n                </MListItemTitle>\r\n                <MListItemSubtitle>\r\n                    subtext\r\n                </MListItemSubtitle>\r\n            </MListItemContent>\r\n        </MListItem>\r\n\r\n        <MDivider></MDivider>\r\n\r\n        <MList Dense\r\n               Nav>\r\n            @foreach (var item in _items)\r\n            {\r\n                <MListItem Link>\r\n                    <MListItemIcon>\r\n                        <MIcon>@item.Icon</MIcon>\r\n                    </MListItemIcon>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>@item.Title</MListItemTitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            }\r\n        </MList>\r\n    </MNavigationDrawer>\r\n</MCard>\r\n\r\n@code{\r\n    class Item\r\n    {\r\n        public string Title { get; set; }\r\n        public string Icon { get; set; }\r\n    }\r\n\r\n    private Item[] _items = new Item[]\r\n    {\r\n         new Item{ Title= \"Dashboard\", Icon= \"mdi-view-dashboard\" },\r\n         new Item { Title= \"Photos\", Icon= \"mdi-image\" },\r\n         new Item { Title= \"About\", Icon= \"mdi-help-box\" }\r\n    };\r\n}\r\n\r\n\r\n\r\n",
        "Type": "Demos.Components.NavigationDrawer.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "bottom",
        "Title": "底部抽屉",
        "Description": "<p>使用 <strong>Bottom</strong> 属性我们能够在移动设备上重新定位抽屉，让其从屏幕底部出来。 这是另一种样式，只能遇到 MobileBreakpoint 时激活。</p>\n",
        "Code": "<MCard Class=\"mx-auto overflow-hidden\" Height=\"400\" Width=\"344\">\r\n    <MSystemBar Color=\"deep-purple darken-3\"></MSystemBar>\r\n\r\n    <MAppBar Color=\"deep-purple accent-4\" Dark Prominent>\r\n        <MAppBarNavIcon @onclick=\"() => _drawer = !_drawer\"></MAppBarNavIcon>\r\n\r\n        <MToolbarTitle>My files</MToolbarTitle>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-filter</MIcon>\r\n        </MButton>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-dots-vertical</MIcon>\r\n        </MButton>\r\n    </MAppBar>\r\n\r\n    <MNavigationDrawer @bind-Value=\"_drawer\" Absolute Bottom Temporary>\r\n        <MList Nav Dense>\r\n            <MListItemGroup Value=\"_value\" ValueChanged=\"ValueChanged\" ActiveClass=\"deep-purple--text text--accent-4\">\r\n                <MListItem>\r\n                    <MListItemTitle>Foo</MListItemTitle>\r\n                </MListItem>\r\n\r\n                <MListItem>\r\n                    <MListItemTitle>Bar</MListItemTitle>\r\n                </MListItem>\r\n\r\n                <MListItem>\r\n                    <MListItemTitle>Fizz</MListItemTitle>\r\n                </MListItem>\r\n\r\n                <MListItem>\r\n                    <MListItemTitle>Buzz</MListItemTitle>\r\n                </MListItem>\r\n            </MListItemGroup>\r\n        </MList>\r\n    </MNavigationDrawer>\r\n\r\n    <MCardText>\r\n        The navigation drawer will appear from the bottom on smaller size screens.\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code\r\n{\r\n    private bool _drawer = false;\r\n    private StringNumber _value = default;\r\n\r\n    void ValueChanged(StringNumber value)\r\n    {\r\n        _value = value;\r\n        _drawer = false;\r\n    }\r\n}",
        "Type": "Demos.Components.NavigationDrawer.props.Bottom",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "expandOnHover",
        "Title": "悬停时扩展",
        "Description": "<p>将组件放置在 <strong>MiniVariant</strong> 模式中，并在悬停时扩展开。不更改 <code>MMain</code> 的内容区域。 宽度可以使用 <strong>MiniVariantWidth</strong> 属性来控制。</p>\n",
        "Code": "<div class=\"ma-12 pa-12\">\r\n    <MCard>\r\n        <MNavigationDrawer Permanent ExpandOnHover>\r\n            <MList>\r\n                <MListItem Class=\"px-2\">\r\n                    <MListItemAvatar Size=\"40\">\r\n                        <MImage Src=\"https://randomuser.me/api/portraits/women/85.jpg\"></MImage>\r\n                    </MListItemAvatar>\r\n                </MListItem>\r\n\r\n                <MListItem Link>\r\n                    <MListItemContent>\r\n                        <MListItemTitle Class=\"text-h6\">\r\n                            Sandra Adams\r\n                        </MListItemTitle>\r\n                        <MListItemSubtitle>andra_a88@gmail.com</MListItemSubtitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            </MList>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MList Nav Dense>\r\n                <MListItem Link>\r\n                    <MListItemIcon>\r\n                        <MIcon>mdi-folder</MIcon>\r\n                    </MListItemIcon>\r\n                    <MListItemTitle>My Files</MListItemTitle>\r\n                </MListItem>\r\n                <MListItem Link>\r\n                    <MListItemIcon>\r\n                        <MIcon>mdi-account-multiple</MIcon>\r\n                    </MListItemIcon>\r\n                    <MListItemTitle>Shared with me</MListItemTitle>\r\n                </MListItem>\r\n                <MListItem Link>\r\n                    <MListItemIcon>\r\n                        <MIcon>mdi-star</MIcon>\r\n                    </MListItemIcon>\r\n                    <MListItemTitle>Starred</MListItemTitle>\r\n                </MListItem>\r\n            </MList>\r\n        </MNavigationDrawer>\r\n    </MCard>\r\n</div>",
        "Type": "Demos.Components.NavigationDrawer.props.ExpandOnHover",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "floating",
        "Title": "永久浮动抽屉",
        "Description": "<p>默认情况下，导航抽屉有一个 1px 右边框，将其与内容分开。 在这个例子中，我们要把抽屉从左边分离出来，让它自己浮动。 <strong>Floating</strong> 属性可移除右边的边框(如果使用 <strong>Right</strong> 则移除左边框)。</p>\n",
        "Code": "<MCard Class=\"pa-12\" Color=\"indigo darken-2\" Flat>\r\n    <MCard Elevation=\"12\" Width=\"256\">\r\n        <MNavigationDrawer Floating Permanent>\r\n            <MList Dense Rounded>\r\n                @foreach (var item in _items)\r\n                {\r\n                    <MListItem Link>\r\n                        <MListItemIcon>\r\n                            <MIcon>@item.Icon</MIcon>\r\n                        </MListItemIcon>\r\n\r\n                        <MListItemContent>\r\n                            <MListItemTitle>@item.Title</MListItemTitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                }\r\n            </MList>\r\n        </MNavigationDrawer>\r\n    </MCard>\r\n</MCard>\r\n\r\n@code\r\n{\r\n    private class ItemDemo\r\n    {\r\n        public string Title { get; set; }\r\n        public string Icon { get; set; }\r\n    }\r\n    private List<ItemDemo> _items = new()\r\n    {\r\n        new ItemDemo { Title = \"Home\", Icon = \"mdi-view-dashboard\" },\r\n        new ItemDemo { Title = \"About\", Icon = \"mdi-forum\" }\r\n    };\r\n}",
        "Type": "Demos.Components.NavigationDrawer.props.Floating",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "image",
        "Title": "图像",
        "Description": "<p>通过 <strong>Src</strong> 属性将自定义背景应用于抽屉。 如果你需要自定义 <code>MImage</code> 的属性，你可以使用 <strong>ImgContent</strong>。</p>\n",
        "Code": "<MCard Class=\"mx-auto\" Height=\"300\" Width=\"300\">\r\n    <MNavigationDrawer Absolute Dark Src=\"@(\"/_content/Masa.Blazor.Doc/backgrounds/bg-2.png\")\" Width=\"@(\"100%\")\" Permanent>\r\n        <MList Dark>\r\n            @foreach (var item in _items)\r\n            {\r\n                <MListItem Link Dark>\r\n                    <MListItemIcon>\r\n                        <MIcon Dark>@item[0]</MIcon>\r\n                    </MListItemIcon>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>@item[1]</MListItemTitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            }\r\n            \r\n        </MList>\r\n    </MNavigationDrawer>\r\n</MCard>\r\n\r\n@code\r\n{\r\n    private string[][] _items = new string[3][]\r\n    {\r\n        new string[2] {\"mdi-email\", \"Inbox\"},\r\n        new string[2]{\"mdi-account-supervisor-circle\", \"Supervisors\" },\r\n        new string[2]{ \"mdi-clock-start\", \"Clock-in\" }\r\n    };\r\n}",
        "Type": "Demos.Components.NavigationDrawer.props.Image",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "mini",
        "Title": "迷你模式",
        "Description": "<p>当使用 <strong>MiniVariant</strong> 属性时，抽屉将会缩小(默认56px)，并隐藏除第一个元素外的 <code>Mlist</code> 内的所有内容。</p>\n",
        "Code": "<MCard>\r\n    <MNavigationDrawer @bind-Value=\"_drawer\" @bind-MiniVariant=\"_mini\" Permanent>\r\n        <MListItem Class=\"px-2\">\r\n            <MListItemAvatar Size=\"40\">\r\n                <MImage Src=\"@(\"https://randomuser.me/api/portraits/men/85.jpg\")\"></MImage>\r\n            </MListItemAvatar>\r\n\r\n            <MListItemTitle>MASA</MListItemTitle>\r\n\r\n            <MButton Icon OnClick=\"() => _mini = !_mini\">\r\n                <MIcon>mdi-chevron-left</MIcon>\r\n            </MButton>\r\n        </MListItem>\r\n\r\n        <MDivider></MDivider>\r\n\r\n        <MList Dense>\r\n            @foreach (var item in _items)\r\n            {\r\n                <MListItem Link>\r\n                    <MListItemIcon>\r\n                        <MIcon>@item.Icon</MIcon>\r\n                    </MListItemIcon>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>@item.Title</MListItemTitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            }\r\n        </MList>\r\n    </MNavigationDrawer>\r\n</MCard>\r\n\r\n@code\r\n{\r\n    private bool _drawer = true;\r\n    private bool _mini = true;\r\n    private class ItemDemo\r\n    {\r\n        public string Title { get; set; }\r\n        public string Icon { get; set; }\r\n    }\r\n    private List<ItemDemo> _items = new()\r\n    {\r\n        new ItemDemo { Title = \"Home\", Icon = \"mdi-home-city\" },\r\n        new ItemDemo { Title = \"My Account\", Icon = \"mdi-account\" },\r\n        new ItemDemo { Title = \"Users\", Icon = \"mdi-account-group-outline\" }\r\n    };\r\n}",
        "Type": "Demos.Components.NavigationDrawer.props.Mini",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "right",
        "Title": "右侧",
        "Description": "<p>导航抽屉也可以放置在应用程序（或元素）的右侧。这对于创建带有可能没有任何导航链接的辅助信息的边表也很有用。 当使用 <strong>RTL</strong> 时，您必须为抽屉明确定义 <strong>Right</strong>。</p>\n",
        "Code": "<MCard Height=\"350\">\r\n    <MNavigationDrawer Absolute Permanent Right>\r\n        <PrependContent>\r\n            <MListItem TwoLine>\r\n                <MListItemAvatar>\r\n                    <MImage Src=\"https://randomuser.me/api/portraits/women/81.jpg\"></MImage>\r\n                </MListItemAvatar>\r\n\r\n                <MListItemContent>\r\n                    <MListItemTitle>Jane Smith</MListItemTitle>\r\n                    <MListItemSubtitle>Logged In</MListItemSubtitle>\r\n                </MListItemContent>\r\n            </MListItem>\r\n        </PrependContent>\r\n\r\n        <ChildContent>\r\n            <MList Dense>\r\n                @foreach (var item in _items)\r\n                {\r\n                    <MListItem>\r\n                        <MListItemIcon>\r\n                            <MIcon>@item.Icon</MIcon>\r\n                        </MListItemIcon>\r\n\r\n                        <MListItemContent>\r\n                            <MListItemTitle>@item.Title</MListItemTitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                }\r\n            </MList>\r\n        </ChildContent>\r\n    </MNavigationDrawer>\r\n</MCard>\r\n\r\n@code\r\n{\r\n    private class ItemDemo\r\n    {\r\n        public string Title { get; set; }\r\n        public string Icon { get; set; }\r\n    }\r\n    private List<ItemDemo> _items = new()\r\n    {\r\n        new ItemDemo { Title = \"Home\", Icon = \"mdi-home-city\" },\r\n        new ItemDemo { Title = \"My Account\", Icon = \"mdi-account\" },\r\n        new ItemDemo { Title = \"Users\", Icon = \"mdi-account-group-outline\" }\r\n    };\r\n}",
        "Type": "Demos.Components.NavigationDrawer.props.Right",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "temporary",
        "Title": "临时的",
        "Description": "<p>临时抽屉位于它的应用程序上方，在移动设备上默认模拟此抽屉行为。</p>\n",
        "Code": "<MSheet Height=\"400\" Class=\"overflow-hidden\" Style=\"position: relative;\">\r\n    <MContainer Class=\"fill-height\">\r\n        <MRow Align=\"AlignTypes.Center\" Justify=\"JustifyTypes.Center\">\r\n            <MButton Color=\"pink\" Dark OnClick=\"() => _drawer = !_drawer\">\r\n                Toggle\r\n            </MButton>\r\n        </MRow>\r\n    </MContainer>\r\n\r\n    <MNavigationDrawer @bind-Value=\"_drawer\" Absolute Temporary>\r\n        <MListItem>\r\n            <MListItemAvatar>\r\n                <MImage Src=\"https://randomuser.me/api/portraits/men/78.jpg\"></MImage>\r\n            </MListItemAvatar>\r\n\r\n            <MListItemContent>\r\n                <MListItemTitle>MASA</MListItemTitle>\r\n            </MListItemContent>\r\n        </MListItem>\r\n\r\n        <MDivider></MDivider>\r\n\r\n        <MList Dense>\r\n            @foreach (var item in _items)\r\n            {\r\n                <MListItem Link>\r\n                    <MListItemIcon>\r\n                        <MIcon>@item.Icon</MIcon>\r\n                    </MListItemIcon>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>@item.Title</MListItemTitle>\r\n                    </MListItemContent>\r\n                </MListItem>\r\n            }\r\n        </MList>\r\n    </MNavigationDrawer>\r\n</MSheet>\r\n\r\n@code{\r\n    private bool _drawer;\r\n    private class ItemDemo\r\n    {\r\n        public string Title { get; set; }\r\n        public string Icon { get; set; }\r\n    }\r\n    private List<ItemDemo> _items = new()\r\n    {\r\n        new ItemDemo { Title = \"Home\", Icon = \"mdi-view-dashboard\" },\r\n        new ItemDemo { Title = \"About\", Icon = \"mdi-forum\" }\r\n    };\r\n}",
        "Type": "Demos.Components.NavigationDrawer.props.Temporary",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "color",
        "Title": "彩色的抽屉",
        "Description": "<p>导航抽屉可以自定义，以适合任何应用程序的设计。 我们在这里使用 <strong>AppendContent</strong> 自定义背景颜色和附加的内容区域。</p>\n",
        "Code": "<MCard Class=\"mx-auto\" Height=\"400\" Width=\"256\">\r\n    <MNavigationDrawer Class=\"deep-purple accent-4\" Dark Permanent>\r\n        <ChildContent>\r\n            <MList>\r\n                @foreach (var item in _items)\r\n                {\r\n                    <MListItem Link Dark>\r\n                        <MListItemIcon>\r\n                            <MIcon Dark>@item.Icon</MIcon>\r\n                        </MListItemIcon>\r\n\r\n                        <MListItemContent>\r\n                            <MListItemTitle>@item.Title</MListItemTitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                }\r\n            </MList>\r\n        </ChildContent>\r\n\r\n        <AppendContent>\r\n            <div class=\"pa-2\">\r\n                <MButton Block Dark>LogOut</MButton>\r\n            </div>\r\n        </AppendContent>\r\n    </MNavigationDrawer>\r\n</MCard>\r\n\r\n@code{\r\n    private class ItemDemo\r\n    {\r\n        public string Title { get; set; }\r\n        public string Icon { get; set; }\r\n    }\r\n    private List<ItemDemo> _items = new()\r\n    {\r\n        new ItemDemo { Title = \"Dashboard\", Icon = \"mdi-view-dashboard\" },\r\n        new ItemDemo { Title = \"Account\", Icon = \"mdi-account-box\" },\r\n        new ItemDemo { Title = \"Admin\", Icon = \"mdi-gavel\" }\r\n    };\r\n}",
        "Type": "Demos.Components.NavigationDrawer.misc.Color",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 1,
        "Name": "constitute",
        "Title": "组合抽屉",
        "Description": "<p>在此示例中，我们定义了一个自定义宽度的抽屉来容纳嵌套。 我们使用 <code>MRow</code> 确保抽屉和列表在水平方向彼此相邻。</p>\n",
        "Code": "<MCard Class=\"mx-auto\" Height=\"300\" Width=\"330\">\r\n    <MNavigationDrawer Permanent Width=\"@(\"100%\")\">\r\n        <MRow Class=\"fill-height\" NoGutters>\r\n            <MNavigationDrawer Dark MiniVariant MiniVariantWidth=\"56\" Permanent>\r\n                <MListItem Class=\"px-2\">\r\n                    <MListItemAvatar Size=\"40\">\r\n                        <MImage Src=\"@(\"https://randomuser.me/api/portraits/women/75.jpg\")\"></MImage>\r\n                    </MListItemAvatar>\r\n                </MListItem>\r\n\r\n                <MDivider></MDivider>\r\n\r\n                <MList Dense Nav>\r\n                    @foreach (var item in _items)\r\n                    {\r\n                        <MListItem>\r\n                            <MListItemAction>\r\n                                <MIcon Dark>@item.Icon</MIcon>\r\n                            </MListItemAction>\r\n\r\n                            <MListItemContent>\r\n                                <MListItemTitle>@item.Title</MListItemTitle>\r\n                            </MListItemContent>\r\n                        </MListItem>\r\n                    }\r\n                </MList>\r\n            </MNavigationDrawer>\r\n\r\n            <MList Class=\"grow\">\r\n                @foreach (var link in _links)\r\n                {\r\n                    <MListItem Link>\r\n                        <MListItemTitle>@link</MListItemTitle>\r\n                    </MListItem>\r\n                }\r\n            </MList>\r\n        </MRow>\r\n    </MNavigationDrawer>\r\n</MCard>\r\n\r\n@code\r\n{\r\n    private string[] _links = new string[3] { \"Home\", \"Contacts\", \"Settings\" };\r\n    private class ItemDemo\r\n    {\r\n        public string Title { get; set; }\r\n        public string Icon { get; set; }\r\n    }\r\n    private List<ItemDemo> _items = new()\r\n    {\r\n        new ItemDemo { Title = \"Home\", Icon = \"mdi-view-dashboard\" },\r\n        new ItemDemo { Title = \"About\", Icon = \"mdi-forum\" }\r\n    };\r\n}",
        "Type": "Demos.Components.NavigationDrawer.misc.Constitute",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/lists",
      "/components/icons",
      "/getting-started/wireframes"
    ],
    "Subtitle": "导航抽屉",
    "Title": "Navigation drawers",
    "Type": "导航抽屉"
  },
  {
    "Order": 0,
    "OtherDocs": {},
    "LastWriteTime": "2022-10-20T23:42:05.6875231+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "confirm",
        "Title": "确认框",
        "Description": "<p>提供标准类型的确认对话框。</p>\n",
        "Code": "@using AlertTypes = BlazorComponent.AlertTypes\r\n\r\n<div class=\"d-flex justify-space-between\">\r\n    <MButton Color=\"primary\" OnClick=\"() => Show()\">Default</MButton>\r\n    <MButton Color=\"success\" OnClick=\"() => Show(AlertTypes.Success)\">Success</MButton>\r\n    <MButton Color=\"info\" OnClick=\"() => Show(AlertTypes.Info)\">Info</MButton>\r\n    <MButton Color=\"warning\" OnClick=\"() => Show(AlertTypes.Warning)\">Warning</MButton>\r\n    <MButton Color=\"error\" OnClick=\"() => Show(AlertTypes.Error)\">Error</MButton>\r\n</div>\r\n\r\n<PConfirm Visible=\"visible\"\r\n          Title=\"确认操作\"\r\n          Type=\"type\"\r\n          OnCancel=\"Hide\"\r\n          OnOk=\"Ok\">\r\n    您确认该操作吗？\r\n</PConfirm>\r\n\r\n@code {\r\n\r\n    AlertTypes type = 0;\r\n    bool visible;\r\n\r\n    void Show(AlertTypes t = 0)\r\n    {\r\n        type = t;\r\n        visible = true;\r\n    }\r\n\r\n    void Hide()\r\n    {\r\n        visible = false;\r\n    }\r\n\r\n    void Ok()\r\n    {\r\n        visible = false;\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.NotGrouped.props.Confirm",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "pageHeader",
        "Title": "页头",
        "Description": "<p>一个比较通用的页头，包括了标题，副标题，操作按钮和搜索栏。</p>\n",
        "Code": "<PPageHeader Title=\"Order\"\r\n             Subtitle=\"This is an order page!\"\r\n             OnBack=\"OnBack\"\r\n             OnSearch=\"OnSearch\"\r\n             ShowFiltersByDefault>\r\n    <LeftActions>\r\n        <MButton Color=\"primary\"><MIcon Left>mdi-plus</MIcon>Add Order</MButton>\r\n    </LeftActions>\r\n\r\n    <RightActions>\r\n        <MButton Icon OnClick=\"OnClear\">\r\n            <MIcon>mdi-refresh</MIcon>\r\n        </MButton>\r\n    </RightActions>\r\n\r\n    <Filters Context=\"filter\">\r\n        <MRow Dense>\r\n            <MCol Cols=\"6\">\r\n                <MTextField @bind-Value=\"orderId\"\r\n                            Label=\"Order ID\"\r\n                            Outlined\r\n                            Dense\r\n                            TValue=\"string\"\r\n                            HideDetails=\"true\"\r\n                            OnKeyDown=\"@filter.onEnter\">\r\n                </MTextField>\r\n            </MCol>\r\n            <MCol Cols=\"6\">\r\n                <MSelect @bind-Value=\"user\"\r\n                         Outlined\r\n                         Dense\r\n                         Label=\"User\"\r\n                         Items=\"users\"\r\n                         ItemValue=\"i => i\"\r\n                         ItemText=\"i => i\"\r\n                         HideDetails=\"true\"\r\n                         TItem=\"string\"\r\n                         TValue=\"string\"\r\n                         TItemValue=\"string\"\r\n                         OnSelectedItemUpdate=\"_ => filter.onSearch()\">\r\n                </MSelect>\r\n            </MCol>\r\n            <MCol Cols=\"6\">\r\n                <MMenu @bind-Value=\"visible1\"\r\n                       CloseOnContentClick=\"false\"\r\n                       OffsetY\r\n                       MinWidth=\"290\">\r\n                    <ActivatorContent>\r\n                        <MTextField @bind-Value=\"start\"\r\n                                    Label=\"Start date\"\r\n                                    Outlined\r\n                                    Dense\r\n                                    Readonly\r\n                                    HideDetails=\"true\"\r\n                                    @attributes=\"@context.Attrs\">\r\n                        </MTextField>\r\n                    </ActivatorContent>\r\n                    <ChildContent>\r\n                        <MDatePicker @bind-Value=\"date1\"\r\n                                     NoTitle\r\n                                     Scrollable>\r\n                            <MSpacer></MSpacer>\r\n                            <MButton Text\r\n                                     Color=\"primary\"\r\n                                     OnClick=\"() => visible1 = false\">\r\n                                Cancel\r\n                            </MButton>\r\n                            <MButton Text\r\n                                     Color=\"primary\"\r\n                                     OnClick=\"() => StartDateClick(filter.onSearch)\">\r\n                                OK\r\n                            </MButton>\r\n                        </MDatePicker>\r\n                    </ChildContent>\r\n                </MMenu>\r\n            </MCol>\r\n            <MCol Cols=\"6\">\r\n                <MMenu @bind-Value=\"visible2\"\r\n                       CloseOnContentClick=\"false\"\r\n                       OffsetY\r\n                       MinWidth=\"290\">\r\n                    <ActivatorContent>\r\n                        <MTextField @bind-Value=\"end\"\r\n                                    Label=\"End date\"\r\n                                    Readonly\r\n                                    Outlined\r\n                                    Dense\r\n                                    HideDetails=\"true\"\r\n                                    @attributes=\"@context.Attrs\">\r\n                        </MTextField>\r\n                    </ActivatorContent>\r\n                    <ChildContent>\r\n                        <MDatePicker @bind-Value=\"date2\"\r\n                                     NoTitle\r\n                                     Scrollable>\r\n                            <MSpacer></MSpacer>\r\n                            <MButton Text\r\n                                     Color=\"primary\"\r\n                                     OnClick=\"() => visible2 = false\">\r\n                                Cancel\r\n                            </MButton>\r\n                            <MButton Text\r\n                                     Color=\"primary\"\r\n                                     OnClick=\"() => EndDateClick(filter.onSearch)\">\r\n                                OK\r\n                            </MButton>\r\n                        </MDatePicker>\r\n                    </ChildContent>\r\n                </MMenu>\r\n            </MCol>\r\n        </MRow>\r\n    </Filters>\r\n</PPageHeader>\r\n\r\n@code {\r\n    readonly List<string> users = new() { \"Rachel Greene\", \"Monica Geller\", \"Joey Tribbiani\", \"Ross Geller\", \"Chandler Bing\", \"Phoebe Buffay\" };\r\n\r\n    DateOnly date1 = DateOnly.FromDateTime(DateTime.Now);\r\n    DateOnly date2 = DateOnly.FromDateTime(DateTime.Now);\r\n\r\n    bool visible1;\r\n    bool visible2;\r\n\r\n    string orderId;\r\n    string user;\r\n    string start;\r\n    string end;\r\n    \r\n    async Task StartDateClick(Func<Task> onSearch)\r\n    {\r\n        start = date1.ToShortDateString(); \r\n        visible1 = false;\r\n        await onSearch();\r\n    }\r\n\r\n    async Task EndDateClick(Func<Task> onSearch)\r\n    {\r\n        end = date2.ToShortDateString(); \r\n        visible2 = false;\r\n        await onSearch();\r\n    }\r\n\r\n    void OnBack()\r\n    {\r\n        // navigate\r\n    }\r\n\r\n    Task OnSearch()\r\n    {\r\n        return Task.Delay(1000);\r\n    }\r\n\r\n    void OnClear()\r\n    {\r\n        orderId = null;\r\n        user = null;\r\n        start = null;\r\n        end = null;\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.NotGrouped.props.PageHeader",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 30,
        "Name": "sidebar",
        "Title": "侧边栏",
        "Description": "<p>因为<code>MList</code>，<code>MListGroup</code>，<code>MListItem</code>和<code>MListItemGroup</code>这些组件的联系比较松散，无法通过一个给定的值来达到 <code>MListGroup</code> 自动展开的效果。因此做了一个这样的组件。</p>\n",
        "Code": "<Masa.Blazor.Presets.PSidebar @bind-Value=\"selectedKey\"\r\n                              Dense\r\n                              Color=\"indigo\"\r\n                              Items=\"menus\"\r\n                              Title=\"m => m.Label\"\r\n                              Icon=\"m => m.Icon\"\r\n                              Key=\"m => m.Value\"\r\n                              Children=\"m => m.SubMenus\"\r\n                              TItem=\"Menu\"\r\n                              OnClick=\"Click\">\r\n</Masa.Blazor.Presets.PSidebar>\r\n\r\n@code {\r\n\r\n    static List<Menu> menus = new()\r\n    {\r\n        new Menu() { Label = \"Home\", Icon = \"mdi-home\", Value = \"Home\" },\r\n        new Menu()\r\n        {\r\n            Label = \"Users\",\r\n            Icon = \"mdi-account-circle\",\r\n            Value = \"Users\",\r\n            SubMenus = new List<Menu>()\r\n            {\r\n                new()\r\n                {\r\n                    Label = \"Admin\",\r\n                    SubMenus = new List<Menu>()\r\n                    {\r\n                        new() { Label = \"Management\", Icon = \"mdi-account-multiple-outline\", Value = \"Management\" },\r\n                        new() { Label = \"Settings\", Icon = \"mdi-cog-outline\", Value = \"Settings\" },\r\n                    }\r\n                },\r\n                new()\r\n                {\r\n                    Label = \"Actions\",\r\n                    SubMenus = new List<Menu>()\r\n                    {\r\n                        new() { Label = \"Create\", Icon = \"mdi-plus-outline\", Value = \"Create\" },\r\n                        new() { Label = \"Read\", Icon = \"mdi-file-outline\", Value = \"Read\" },\r\n                        new() { Label = \"Update\", Icon = \"mdi-update\", Value = \"Update\" },\r\n                        new() { Label = \"Delete\", Icon = \"mdi-delete\", Value = \"Delete\" },\r\n                    }\r\n                },\r\n            }\r\n        },\r\n    };\r\n\r\n    StringNumber selectedKey = \"Management\";\r\n\r\n    void Click(Menu item)\r\n    {\r\n    // code with clicked item\r\n    }\r\n\r\n    class Menu\r\n    {\r\n        public string Label { get; set; }\r\n\r\n        public string Value { get; set; }\r\n\r\n        public string Icon { get; set; }\r\n\r\n        public List<Menu> SubMenus { get; set; }\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.NotGrouped.props.Sidebar",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/buttons",
      "/components/text-fields",
      "/components/lists"
    ],
    "Subtitle": "未分组的",
    "Title": "Not Grouped",
    "Type": "未分组的",
    "Tag": "preset"
  },
  {
    "Desc": "<p><code>Overlay</code> 组件用于强调特定元素或其中的一部分。 它向用户发出应用程序内状态更改的信号，可用于创建加载程序，对话框等。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MOverlay\">MOverlay</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.6925224+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>以最简单的形式，<code>MOverlay</code> 组件将在您的应用程序上添加暗淡的图层。</p>\n",
        "Code": "<div style=\"text-align: center\">\r\n    <MButton Color=\"error\"\r\n             OnClick=\"OnClick\"\r\n             StopPropagation>\r\n        Show Overlay\r\n    </MButton>\r\n\r\n    <MOverlay Value=\"overlay\"></MOverlay>\r\n</div>\r\n\r\n@code {\r\n    bool overlay = false;\r\n\r\n    async Task OnClick(MouseEventArgs args)\r\n    {\r\n        overlay = true;\r\n        await InvokeAsync(StateHasChanged);\r\n\r\n        await Task.Delay(2000);\r\n        overlay = false;\r\n    }\r\n}\r\n",
        "Type": "Demos.Components.Overlay.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "absolute",
        "Title": "绝对定位",
        "Description": "<p><strong>Absolute</strong> 遮罩层被放置在绝对位置，并包含在父元素中。</p>\n",
        "Code": "<MRow Align=\"@AlignTypes.Center\"\r\n      Justify=\"@JustifyTypes.Center\">\r\n    <MCard Style=\"height:300px;width:250px\">\r\n        <MRow Justify=\"@JustifyTypes.Center\">\r\n            <MButton Color=\"success\"\r\n                     Style=\"margin-top:24px\"\r\n                     OnClick=\"Toggle\">\r\n                Show Overlay\r\n            </MButton>\r\n\r\n            <MOverlay Absolute\r\n                      Value=\"overlay\">\r\n                <MButton Color=\"success\"\r\n                         OnClick=\"Hide\">\r\n                    Hide Overlay\r\n                </MButton>\r\n            </MOverlay>\r\n        </MRow>\r\n    </MCard>\r\n</MRow>\r\n\r\n@code {\r\n    bool overlay = false;\r\n\r\n    void Toggle(MouseEventArgs args)\r\n    {\r\n        overlay = !overlay;\r\n    }\r\n\r\n    void Hide(MouseEventArgs args)\r\n    {\r\n        overlay = false;\r\n    }\r\n}",
        "Type": "Demos.Components.Overlay.props.Absolute",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "opacity",
        "Title": "透明度",
        "Description": "<p><strong>Opacity</strong> 允许您自定义组件的透明度。</p>\n",
        "Code": "<MRow Align=\"@AlignTypes.Center\"\r\n      Justify=\"@JustifyTypes.Center\">\r\n    <MCard Style=\"height:300px;width:250px\">\r\n        <MRow Justify=\"@JustifyTypes.Center\">\r\n            <MButton Color=\"orange lighten-2\"\r\n                     Style=\"margin-top:24px\"\r\n                     OnClick=\"Toggle\">\r\n                Show Overlay\r\n            </MButton>\r\n\r\n            <MOverlay Absolute\r\n                      Opacity=\"1.0\"\r\n                      Value=\"overlay\">\r\n                <MButton Color=\"orange lighten-2\"\r\n                         OnClick=\"Hide\">\r\n                    Hide Overlay\r\n                </MButton>\r\n            </MOverlay>\r\n        </MRow>\r\n    </MCard>\r\n</MRow>\r\n@code {\r\n    bool overlay = false;\r\n\r\n    void Toggle(MouseEventArgs args)\r\n    {\r\n        overlay = !overlay;\r\n    }\r\n\r\n    void Hide(MouseEventArgs args)\r\n    {\r\n        overlay = false;\r\n    }\r\n}",
        "Type": "Demos.Components.Overlay.props.Opacity",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 3,
        "Name": "zIndex",
        "Title": "Z-index",
        "Description": "<p><strong>ZIndex</strong> 使您能够轻松地更改 <code>MOverlay</code> 组件的覆盖顺序。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.Center\">\r\n    <MButton Class=\"white--text\"\r\n             Color=\"teal\"\r\n             OnClick=\"()=>_overlay = !_overlay\">\r\n        Show Overlay\r\n    </MButton>\r\n\r\n    <MOverlay ZIndex=\"_zIndex\"\r\n              Value=\"_overlay\">\r\n        <MButton Class=\"white--text\"\r\n                 Color=\"teal\"\r\n                 OnClick=\"()=>_overlay = false\">\r\n            Hide Overlay\r\n        </MButton>\r\n    </MOverlay>\r\n</MRow>\r\n\r\n@code {\r\n    private bool _overlay = false;\r\n    private int _zIndex = 0;\r\n}",
        "Type": "Demos.Components.Overlay.props.ZIndex",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 4,
        "Name": "Advanced",
        "Title": "高级版",
        "Description": "<p>使用 <a href=\"/components/hover\">MHover</a> 作为背景，添加进度组件来轻松创建自定义加载器。</p>\n",
        "Code": "<MHover>\r\n    <MCard @attributes=\"context.Attrs\" Class=\"mx-auto\"\r\n           MaxWidth=\"344\">\r\n        <MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/cards/forest-art.jpg\"></MImage>\r\n\r\n        <MCardText>\r\n            <h2 class=\"text-h6 primary--text\">\r\n                Magento Forests\r\n            </h2>\r\n            Travel to the best outdoor experience on planet Earth. A vacation you will never forget!\r\n        </MCardText>\r\n\r\n        <MCardTitle>\r\n            <MRating Value=\"4\"\r\n                     Dense\r\n                     Color=\"orange\"\r\n                     BackgroundColor=\"orange\"\r\n                     Hover\r\n                     Class=\"mr-2\"></MRating>\r\n            <span class=\"primary--text text-subtitle-2\">64 Reviews</span>\r\n        </MCardTitle>\r\n\r\n        <FadeTransition>\r\n            <ShowTransitionElement Value=\"@context.Hover\" Class=\"text-center\">\r\n                <MOverlay Absolute Value=\"@context.Hover\"\r\n                          Color=\"#036358\">\r\n                    <MButton>See more info</MButton>\r\n                </MOverlay>\r\n            </ShowTransitionElement>\r\n        </FadeTransition>\r\n    </MCard>\r\n</MHover>",
        "Type": "Demos.Components.Overlay.misc.Advanced",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 5,
        "Name": "loader",
        "Title": "加载器",
        "Description": "<p>使用 <code>MOverlay</code> 作为背景，添加进度组件来轻松创建自定义加载器。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MButton Color=\"deep-purple accent-4\"\r\n             Class=\"white--text\"\r\n             OnClick=\"Toggle\">\r\n        Launch Application\r\n        <MIcon Right>\r\n            mdi-open-in-new\r\n        </MIcon>\r\n    </MButton>\r\n\r\n    <MOverlay Value=\"overlay\">\r\n        <MProgressCircular indeterminate\r\n                           Size=\"64\"></MProgressCircular>\r\n    </MOverlay>\r\n</div>\r\n\r\n@code {\r\n    bool overlay = false;\r\n\r\n    void Toggle(MouseEventArgs args)\r\n    {\r\n        overlay = true;\r\n\r\n        Task.Run(async () =>\r\n        {\r\n            await Task.Delay(3000);\r\n            overlay = false;\r\n\r\n            await InvokeAsync(StateHasChanged);\r\n        });\r\n    }\r\n}",
        "Type": "Demos.Components.Overlay.misc.Loader",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/cards",
      "/components/sheets",
      "/components/dialogs"
    ],
    "Subtitle": "遮罩层",
    "Title": "Overlays",
    "Type": "遮罩层"
  },
  {
    "Desc": "<p><code>MPagination</code> 组件用于分离长数据集，以便用户消化信息。 根据提供的数据量，分页组件将自动缩放。 要维护当前页面，只需提供 Value 属性。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MPagination\">MPagination</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.6955246+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>分页默认根据设置的 <strong>Length</strong> 属性显示页数，两边有 <strong>Prev</strong> 和 <strong>Next</strong> 按钮帮助导航。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MPagination @bind-Value=\"_page\" Length=\"6\"></MPagination>\r\n</div>\r\n\r\n@code{\r\n    private int _page = 1;\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pagination.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "circle",
        "Title": "圆形",
        "Description": "<p><strong>Circle</strong> 属性为你提供了分页按钮的另一种样式。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MPagination @bind-Value=\"_page\"\r\n                 Length=\"4\"\r\n                 Circle></MPagination>\r\n</div>\r\n\r\n@code{\r\n    private int _page = 1;\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pagination.props.Circle",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "disabled",
        "Title": "禁用",
        "Description": "<p>使用 <strong>Disabled</strong> 属性，可以手动禁用分页。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MPagination Length=\"3\"\r\n                 Disabled></MPagination>\r\n</div>\r\n\r\n",
        "Type": "Demos.Components.Pagination.props.Disabled",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "icon",
        "Title": "图标",
        "Description": "<p>上一页和下一页的图标可以通过 <strong>PrevIcon</strong> 和 <strong>NextIcon</strong> 属性自定义。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MPagination @bind-Value=\"_page\"\r\n                 Length=\"4\"\r\n                 PrevIcon=\"mdi-menu-left\"\r\n                 NextIcon=\"mdi-menu-right\"></MPagination>\r\n</div>\r\n\r\n@code{\r\n    private int _page = 1;\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pagination.props.Icon",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "length",
        "Title": "长度",
        "Description": "<p>使用 <strong>Length</strong> 属性可以设置 <code>MPagination</code> 的长度，如果页面按钮的数量超过了父容器，分页将被从中截断。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MContainer>\r\n        <MRow Justify=\"JustifyTypes.Center\">\r\n            <MCol Cols=\"8\">\r\n                <MContainer Class=\"max-width\">\r\n                    <MPagination @bind-Value=\"_page\" Class=\"my-4\" Length=15></MPagination>\r\n                </MContainer>\r\n            </MCol>\r\n        </MRow>\r\n    </MContainer>\r\n</div>\r\n\r\n@code\r\n{\r\n    private int _page = 1;\r\n}",
        "Type": "Demos.Components.Pagination.props.Length",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "totalVisible",
        "Title": "最大可见分页数",
        "Description": "<p>你也可以通过 <strong>TotalVisible</strong> 属性手动设置最大可见分页数。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MPagination @bind-Value=\"_page\"\r\n                 Length=\"15\"\r\n                 TotalVisible=\"7\"></MPagination>\r\n</div>\r\n\r\n@code{\r\n    private int _page = 1;\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pagination.props.TotalVisible",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/data-iterators",
      "/components/data-tables",
      "/components/lists"
    ],
    "Subtitle": "分页",
    "Title": "Pagination",
    "Type": "分页"
  },
  {
    "Desc": "<p><code>MDatePicker</code> 是一个功能齐全的日期选择组件, 它让用户选择一个日期或日期范围。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MDatePicker\">MDatePicker</a></li>\n</ul>\n",
      "注意": "\n<!--alert:warning--> \n<p><code>MDatePicker</code> 接受ISO 8601 <strong>日期</strong> 字符串(YYYY-MM-DD)。 有关 ISO 8601 和其他标准的更多信息，请访问 ISO（国际标准化组织） <a href=\"https://www.iso.org/standards.html\">国际标准</a> 官方网页。</p>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7045238+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>日期选择器有两种方向变化，纵向（默认）和横向。 默认情况下，当日期（用于日期选择器）或月份（用于月份选择器）选中时它们将发出<code>input</code>事件，但使用<strong>Reactive</strong>，它们甚至可以在单击年/月之后更新模型。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.Center\">\r\n    <MDatePicker @bind-Value=\"_picker\"></MDatePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private DateOnly _picker = DateOnly.FromDateTime(DateTime.Now);\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.DatePickers.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "allowedDates",
        "Title": "允许的日期",
        "Description": "<p>您可以使用数组、对象和函数指定允许的日期。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.Center\">\r\n    <MDatePicker Class=\"mt-4\"\r\n                 AllowedDates=\"_allowedDates\"\r\n                 @bind-Value=\"_date\"\r\n                 Min=\"_min\"\r\n                 Max=\"_max\"></MDatePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private DateOnly _date = DateOnly.Parse(\"2018-03-02\");\r\n    private DateOnly _min = DateOnly.Parse(\"2016-06-15\");\r\n    private DateOnly _max = DateOnly.Parse(\"2018-03-20\");\r\n    private Func<DateOnly, bool> _allowedDates = value => value.Day % 2 == 0;\r\n}",
        "Type": "Demos.Components.Pickers.children.DatePickers.props.AllowedDates",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "colors",
        "Title": "颜色",
        "Description": "<p>可以使用 <strong>Color</strong> 和 <strong>HeaderColor</strong> 设置日期选择器颜色。 如果没有提供 <strong>HeaderColor</strong>, 头部将使用 <strong>Color</strong> 值。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.SpaceAround\">\r\n    <MDatePicker @bind-Value=\"_picker\"\r\n                 Color=\"green lighten-1\"></MDatePicker>\r\n    <MDatePicker @bind-Value=\"_picker2\"\r\n                 Color=\"green lighten-1\"\r\n                 HeaderColor=\"primary\"></MDatePicker>\r\n</MRow>\r\n\r\n@code{\r\n    private DateOnly _picker = DateOnly.FromDateTime(DateTime.Now);\r\n    private DateOnly _picker2 = DateOnly.FromDateTime(DateTime.Now);\r\n}",
        "Type": "Demos.Components.Pickers.children.DatePickers.props.Colors",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "elevation",
        "Title": "高度(z轴)",
        "Description": "<p><code>MDatePicker</code> 组件支持最高高度(z轴)值为24。\n欲了解更多关于高度的信息，请访问官方的 <a href=\"https://material.io/design/environment/elevation.html\">Material Design elevations</a> 页面。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.SpaceAround\"\r\n      Align=\"@AlignTypes.Center\">\r\n    <MDatePicker @bind-Value=\"_picker\"\r\n                 Flat></MDatePicker>\r\n\r\n    <MDatePicker @bind-Value=\"_picker\"\r\n                 Elevation=\"15\"></MDatePicker>\r\n</MRow>\r\n\r\n@code{\r\n    private DateOnly? _picker;\r\n}",
        "Type": "Demos.Components.Pickers.children.DatePickers.props.Elevation",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "icons",
        "Title": "图标",
        "Description": "<p>您可以覆盖选择器中使用的默认图标。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.Center\">\r\n    <MDatePicker @bind-Value=\"_picker\"\r\n                 YearIcon=\"mdi-calendar-blank\"\r\n                 PrevIcon=\"mdi-skip-previous\"\r\n                 NextIcon=\"mdi-skip-next\"></MDatePicker>\r\n</MRow>\r\n\r\n@code{\r\n    private DateOnly _picker = DateOnly.FromDateTime(DateTime.Now);\r\n}",
        "Type": "Demos.Components.Pickers.children.DatePickers.props.Icons",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "multiple",
        "Title": "多选",
        "Description": "<p>日期选择器可以使用 <strong>Multiple</strong> 选择多个日期。 如果使用 <strong>Multiple</strong> ，日期选择器就会要求它的model是一个数组。</p>\n",
        "Code": "<MRow>\r\n    <MCol Cols=\"12\"\r\n          Sm=\"6\">\r\n        <MDatePicker @bind-Value=\"_dates\"\r\n                     Multiple></MDatePicker>\r\n    </MCol>\r\n    <MCol Cols=\"12\"\r\n          Sm=\"6\">\r\n        TODO...\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n    private IList<DateOnly> _dates = new List<DateOnly>\r\n        {\r\n            new DateOnly(2018,9,15),\r\n            new DateOnly(2018,9,20)\r\n        };\r\n}",
        "Type": "Demos.Components.Pickers.children.DatePickers.props.Multiple",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "pickerDate",
        "Title": "选取的日期",
        "Description": "<p>您可以使用 <strong>OnPickerDateUpdate</strong> ，它是显示的月份/年份（取决于选择器类型和激活的视图），以便在其更改时执行某些操作。</p>\n",
        "Code": "<MRow>\r\n    <MCol Cols=\"12\"\r\n          Sm=\"6\"\r\n          Class=\"my-2 px-1\">\r\n        <MDatePicker @bind-Value=\"_date\"\r\n                     OnPickerDateUpdate=\"HandleOnPickerDateUpdate\"\r\n                     FullWidth></MDatePicker>\r\n    </MCol>\r\n    <MCol Cols=\"12\"\r\n          Sm=\"6\"\r\n          Class=\"my-2 px-1\">\r\n        <div class=\"text-h6\">\r\n            Month news (@_pickerDate.ToString(\"yyyy-MM\"))\r\n        </div>\r\n        <div class=\"subheading\">\r\n            Change month to see other news\r\n        </div>\r\n        <ul class=\"ma-4\">\r\n            @foreach (var note in _notes)\r\n            {\r\n                <li @key=\"note\">\r\n                    @note\r\n                </li>\r\n            }\r\n        </ul>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n    private DateOnly _date = DateOnly.FromDateTime(DateTime.Now);\r\n    private DateOnly _pickerDate;\r\n    private IEnumerable<string> _notes = new List<string>();\r\n    private List<string> _allNotes = new List<string>\r\n        {\r\n            \"President met with prime minister\",\r\n            \"New power plant opened\",\r\n            \"Rocket launch announced\",\r\n            \"Global warming discussion cancelled\",\r\n            \"Company changed its location\",\r\n        };\r\n\r\n    public void HandleOnPickerDateUpdate(DateOnly date)\r\n    {\r\n        _pickerDate = date;\r\n        _notes = new List<string>\r\n            {\r\n                _allNotes[Random.Shared.Next(0,5)],\r\n                _allNotes[Random.Shared.Next(0,5)],\r\n                _allNotes[Random.Shared.Next(0,5)]\r\n            }.Distinct();\r\n    }\r\n}",
        "Type": "Demos.Components.Pickers.children.DatePickers.props.PickerDate",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "range",
        "Title": "范围",
        "Description": "<p>日期选择器使用 <strong>Range</strong> 选择日期范围。 当使用 <strong>Range</strong> 日期选择器要求其model是长度为2的数组或空数组。</p>\n",
        "Code": "<MRow>\r\n    <MCol Cols=\"12\"\r\n          Sm=\"6\">\r\n        <MDatePicker @bind-Value=\"_dates\"\r\n                     Range></MDatePicker>\r\n    </MCol>\r\n    <MCol Cols=\"12\"\r\n          Sm=\"6\">\r\n        <MTextField Value=\"DateRangeText\"\r\n                    Label=\"Date range\"\r\n                    PrependIcon=\"mdi-calendar\"\r\n                    Readonly></MTextField>\r\n    </MCol>\r\n</MRow>\r\n\r\n  @code {\r\n    private List<DateOnly> _dates = new List<DateOnly>\r\n        {\r\n            new DateOnly(2019,9,10),\r\n            new DateOnly(2019,9,20)\r\n        };\r\n\r\n    public string DateRangeText => string.Join(\" ~ \", _dates.Select(date => date.ToString(\"yyyy-MM-dd\")));\r\n  }",
        "Type": "Demos.Components.Pickers.children.DatePickers.props.Range",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "readonly",
        "Title": "只读",
        "Description": "<p>可以添加 <strong>Readonly</strong> 来禁用选择新日期。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\">\r\n    <MDatePicker @bind-Value=\"_picker\"\r\n                 Readonly>\r\n    </MDatePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private DateOnly _picker = DateOnly.FromDateTime(DateTime.Now);\r\n}",
        "Type": "Demos.Components.Pickers.children.DatePickers.props.Readonly",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "showCurrent",
        "Title": "显示当前月份",
        "Description": "<p>默认情况下，当前日期是使用边框按钮显示的 - <strong>ShowCurrent</strong> 允许您删除边框或选择其他日期显示为当前日期。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.SpaceAround\">\r\n    <MDatePicker @bind-Value=\"_picker1\"\r\n                 ShowCurrent=\"false\"></MDatePicker>\r\n    <MDatePicker @bind-Value=\"_picker2\"\r\n                 ShowCurrent=\"_current\"></MDatePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private DateOnly _picker1 = DateOnly.FromDateTime(DateTime.Now);\r\n    private DateOnly _picker2 = new DateOnly(2013, 7, 29);\r\n    private DateOnly _current = new DateOnly(2013, 07, 13);\r\n}",
        "Type": "Demos.Components.Pickers.children.DatePickers.props.ShowCurrent",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "showSiblingMonths",
        "Title": "显示相邻月份",
        "Description": "<p>默认情况下，上个月和下个月的天数不可见。它们可以使用 <strong>ShowAdjacentMonths</strong> 属性显示。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\">\r\n    <MDatePicker @bind-Value=\"_picker\"\r\n                 ShowAdjacentMonths>\r\n    </MDatePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private DateOnly _picker = DateOnly.FromDateTime(DateTime.Now);\r\n}",
        "Type": "Demos.Components.Pickers.children.DatePickers.props.ShowSiblingMonths",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "width",
        "Title": "宽度",
        "Description": "<p>您可以指定选择器的宽度或使其全宽度。</p>\n",
        "Code": "<MRow Align=\"@AlignTypes.Center\">\r\n    <MDatePicker @bind-Value=\"_picker\"\r\n                 Width=\"290\"\r\n                 Class=\"mt-4\"></MDatePicker>\r\n    <MDatePicker @bind-Value=\"_picker\"\r\n                 FullWidth\r\n                 Class=\"mt-4\"></MDatePicker>\r\n</MRow>\r\n\r\n@code{\r\n    private DateOnly _picker = DateOnly.FromDateTime(DateTime.Now);\r\n}",
        "Type": "Demos.Components.Pickers.children.DatePickers.props.Width",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "dateButtons",
        "Title": "日期按钮(TODO)",
        "Description": "",
        "Code": "<div>\r\n    TODO...\r\n</div>",
        "Type": "Demos.Components.Pickers.children.DatePickers.events.DateButtons",
        "Style": "",
        "Debug": false,
        "Group": 1
      },
      {
        "Order": 0,
        "Name": "dateEvents",
        "Title": "日期事件(TODO)",
        "Description": "",
        "Code": "<div>\r\n    TODO...\r\n</div>\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.DatePickers.events.DateEvents",
        "Style": "",
        "Debug": false,
        "Group": 1
      },
      {
        "Order": 0,
        "Name": "activePicker",
        "Title": "激活的选择器",
        "Description": "<p>您可以创建一个生日选择器-默认情况下从年份选择器开始，限制日期范围，并在选择日期后关闭选择器菜单，使之成为完美的生日选择器。</p>\n",
        "Code": "<div>\r\n    <div class=\"mb-6\">Active picker: <code> @_activePicker </code></div>\r\n    <MMenu @bind-Value=\"_menu\"\r\n           CloseOnContentClick=\"false\"\r\n           Transition=\"scale-transition\"\r\n           OffsetY\r\n           MinWidth=\"@(\"auto\")\">\r\n        <ActivatorContent>\r\n            <MTextField @bind-Value=\"_date\"\r\n                        Label=\"Birthday date\"\r\n                        PrependIcon=\"mdi-calendar\"\r\n                        Readonly\r\n                        @attributes=\"context.Attrs\"></MTextField>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <MDatePicker @bind-Value=\"_date\"\r\n                         ActivePicker=\"_activePicker\"\r\n                         OnActivePickerUpdate=\"val=>_activePicker=val\"\r\n                         Max=\"DateOnly.FromDateTime(DateTime.Now)\"\r\n                         OnInput=\"()=>_menu=false\"\r\n                         Min=\"new DateOnly(1950,1,1)\"></MDatePicker>\r\n        </ChildContent>\r\n    </MMenu>\r\n</div>\r\n\r\n  @code {\r\n    private DatePickerType _activePicker = DatePickerType.Year;\r\n    private DateOnly _date = DateOnly.FromDateTime(DateTime.Now);\r\n    private bool _menu;\r\n  }\r\n",
        "Type": "Demos.Components.Pickers.children.DatePickers.misc.ActivePicker",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 0,
        "Name": "dialogAndMenu",
        "Title": "对话框和菜单",
        "Description": "<p>将选择器集成到 <code>MTextField</code> 中时，建议使用 <strong>Readonly</strong>。 这将防止手机键盘触发。 要节省垂直空间，还可以隐藏选择器标题。</p>\n<p>拾取器公开一个允许您挂起保存和取消功能的插槽。 这将保持一个用户取消时可以替换的旧值。</p>\n",
        "Code": "<MRow>\r\n    <MCol Cols=\"12\"\r\n          Sm=\"6\"\r\n          Md=\"4\">\r\n        <MMenu @bind-Value=\"_menu\"\r\n               CloseOnContentClick=\"false\"\r\n               Transition=\"scale-transition\"\r\n               OffsetY\r\n               MinWidth=\"@(\"auto\")\">\r\n            <ActivatorContent>\r\n                <MTextField @bind-Value=\"_date\"\r\n                            Label=\"Picker in menu\"\r\n                            PrependIcon=\"mdi-calendar\"\r\n                            Readonly\r\n                            @attributes=\"context.Attrs\"></MTextField>\r\n            </ActivatorContent>\r\n            <ChildContent>\r\n                <MDatePicker @bind-Value=\"_date\"\r\n                             NoTitle\r\n                             Scrollable>\r\n                    <MSpacer></MSpacer>\r\n                    <MButton Text\r\n                             Color=\"primary\"\r\n                             OnClick=\"MenuCancel\">\r\n                        Cancel\r\n                    </MButton>\r\n                    <MButton Text\r\n                             Color=\"primary\"\r\n                             OnClick=\"MenuOK\">\r\n                        OK\r\n                    </MButton>\r\n                </MDatePicker>\r\n            </ChildContent>\r\n        </MMenu>\r\n    </MCol>\r\n    <MSpacer></MSpacer>\r\n    <MCol Cols=\"12\"\r\n          Sm=\"6\"\r\n          Md=\"4\">\r\n        <MDialog @bind-Value=\"_modal\"\r\n                 Persistent\r\n                 Width=\"290\">\r\n            <ActivatorContent>\r\n                <MTextField @bind-Value=\"_date\"\r\n                            Label=\"Picker in dialog\"\r\n                            PrependIcon=\"mdi-calendar\"\r\n                            Readonly\r\n                            @attributes=\"context.Attrs\"></MTextField>\r\n            </ActivatorContent>\r\n            <ChildContent>\r\n                <MDatePicker @bind-Value=\"_date\"\r\n                             Scrollable>\r\n                    <MSpacer></MSpacer>\r\n                    <MButton Text\r\n                             Color=\"primary\"\r\n                             OnClick=\"ModalCancel\">\r\n                        Cancel\r\n                    </MButton>\r\n                    <MButton Text\r\n                             Color=\"primary\"\r\n                             OnClick=\"ModalOK\">\r\n                        OK\r\n                    </MButton>\r\n                </MDatePicker>\r\n            </ChildContent>\r\n        </MDialog>\r\n    </MCol>\r\n    <MCol Cols=\"12\"\r\n          Sm=\"6\"\r\n          Md=\"4\">\r\n        <MMenu @bind-Value=\"_menu2\"\r\n               CloseOnContentClick=\"false\"\r\n               NudgeRight=\"40\"\r\n               Transition=\"scale-transition\"\r\n               OffsetY\r\n               MinWidth=\"@(\"auto\")\">\r\n            <ActivatorContent>\r\n                <MTextField @bind-Value=\"_date\"\r\n                            Label=\"Picker without buttons\"\r\n                            PrependIcon=\"mdi-calendar\"\r\n                            Readonly\r\n                            @attributes=\"context.Attrs\"></MTextField>\r\n            </ActivatorContent>\r\n            <ChildContent>\r\n                <MDatePicker @bind-Value=\"_date\"\r\n                    OnInput=\"()=>_menu2=false\"></MDatePicker>\r\n            </ChildContent>\r\n        </MMenu>\r\n    </MCol>\r\n    <MSpacer></MSpacer>\r\n</MRow>\r\n\r\n@code {\r\n    private DateOnly _prevDate = DateOnly.FromDateTime(DateTime.Now);\r\n    private DateOnly _date = DateOnly.FromDateTime(DateTime.Now);\r\n    private bool _menu;\r\n    private bool _modal;\r\n    private bool _menu2;\r\n\r\n    public void MenuCancel()\r\n    {\r\n        _date = _prevDate;\r\n        _menu = false;\r\n    }\r\n\r\n    public void MenuOK()\r\n    {\r\n        _prevDate = _date;\r\n        _menu = false;\r\n    }\r\n\r\n    public void ModalCancel()\r\n    {\r\n        _date = _prevDate;\r\n        _modal = false;\r\n    }\r\n\r\n    public void ModalOK()\r\n    {\r\n        _prevDate = _date;\r\n        _modal = false;\r\n    }\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.DatePickers.misc.DialogAndMenu",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 0,
        "Name": "formatting",
        "Title": "自定义格式",
        "Description": "<p>如果需要以自定义格式（不同于YYYY-MM-DD）显示日期，则需要使用格式化功能。</p>\n",
        "Code": "<MContainer>\r\n    <MRow>\r\n        <MCol Cols=\"12\"\r\n              Lg=\"6\">\r\n            <MMenu @bind-Value=\"_menu1\"\r\n                   CloseOnContentClick=\"false\"\r\n                   Transition=\"scale-transition\"\r\n                   OffsetY\r\n                   MaxWidth=\"290\"\r\n                   MinWidth=\"@(\"auto\")\">\r\n                <ActivatorContent>\r\n                    <MTextField @bind-Value=\"_dateFormatted\"\r\n                                Label=\"Date\"\r\n                                Hint=\"MM/DD/YYYY format\"\r\n                                PersistentHint\r\n                                PrependIcon=\"mdi-calendar\"\r\n                                @attributes=\"context.Attrs\"></MTextField>\r\n                </ActivatorContent>\r\n                <ChildContent>\r\n                    <MDatePicker @bind-Value=\"Date\"\r\n                                 OnInput=\"()=>_menu1=false\"\r\n                                 NoTitle></MDatePicker>\r\n                </ChildContent>\r\n            </MMenu>\r\n            <p>Date in ISO format: <strong> @Date.ToString(\"yyyy-MM-dd\") </strong></p>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"12\"\r\n              Lg=\"6\">\r\n            <MMenu @bind-Value=\"_menu2\"\r\n                   CloseOnContentClick=\"false\"\r\n                   Transition=\"scale-transition\"\r\n                   OffsetY\r\n                   MaxWidth=\"290\"\r\n                   MinWidth=\"@(\"auto\")\">\r\n                <ActivatorContent>\r\n                    <MTextField Value=\"ComputedDateFormatted\"\r\n                                Label=\"Date (read only text field)\"\r\n                                Hint=\"MM/DD/YYYY format\"\r\n                                PersistentHint\r\n                                PrependIcon=\"mdi-calendar\"\r\n                                Readonly\r\n                                @attributes=\"context.Attrs\"></MTextField>\r\n                </ActivatorContent>\r\n                <ChildContent>\r\n                    <MDatePicker @bind-Value=\"Date\"\r\n                                 OnInput=\"()=>_menu2=false\"\r\n                                 NoTitle></MDatePicker>\r\n                </ChildContent>\r\n            </MMenu>\r\n            <p>Date in ISO format: <strong> @Date.ToString(\"yyyy-MM-dd\") </strong></p>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code {\r\n    private DateOnly _date = DateOnly.FromDateTime(DateTime.Now);\r\n    private string _dateFormatted = FormateDate(DateOnly.FromDateTime(DateTime.Now));\r\n    private bool _menu1;\r\n    private bool _menu2;\r\n\r\n    private DateOnly Date\r\n    {\r\n        get\r\n        {\r\n            return _date;\r\n        }\r\n        set\r\n        {\r\n            _date = value;\r\n            _dateFormatted = FormateDate(_date);\r\n        }\r\n    }\r\n\r\n    public string ComputedDateFormatted => FormateDate(_date);\r\n\r\n    public static string FormateDate(DateOnly date)\r\n    {\r\n        return date.ToString(\"MM/dd/yyyy\");\r\n    }\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.DatePickers.misc.Formatting",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 0,
        "Name": "formattingWithExternalLibraries",
        "Title": "使用外部库自定义格式(TODO)",
        "Description": "<p>也可以使用外部库（如Moment.js或date fns）格式化日期</p>\n",
        "Code": "<div>\r\n    TODO...\r\n</div>\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.DatePickers.misc.FormattingWithExternalLibraries",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 0,
        "Name": "internationalization",
        "Title": "国际化(TODO)",
        "Description": "<p>日期选择器通过JavaScript日期对象支持国际化。使用区域设置道具指定BCP 47语言标记，然后使用每周第一天属性设置每周第一天。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.SpaceAround\">\r\n    <MDatePicker @bind-Value=\"_picker\"\r\n                 NoTitle\r\n                 Locale=\"zh-CN\"></MDatePicker>\r\n</MRow>\r\n\r\n  @code {\r\n    private DateOnly _picker = DateOnly.FromDateTime(DateTime.Now);\r\n  }\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.DatePickers.misc.Internationalization",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 0,
        "Name": "orientation",
        "Title": "方向",
        "Description": "<p>日期选择器有两种方向变化，纵向（默认）和横向。</p>\n",
        "Code": "<MRow Align=\"AlignTypes.Center\">\r\n    <MCheckbox @bind-Value=\"_landscape\"\r\n               Label=\"Landscape\"></MCheckbox>\r\n    <MDatePicker @bind-Value=\"_picker\"\r\n                 Landscape=\"_landscape\"></MDatePicker>\r\n</MRow>\r\n\r\n  @code {\r\n    private DateOnly _picker = DateOnly.FromDateTime(DateTime.Now);\r\n    private bool _landscape;\r\n  }\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.DatePickers.misc.Orientation",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/buttons",
      "/components/text-fields",
      "/components/time-pickers"
    ],
    "Subtitle": "日期选择器",
    "Title": "Date pickers",
    "Type": "日期选择器"
  },
  {
    "Desc": "<p><code>MDatePicker</code>  可以用作一个独立的月份选择器组件。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MDatePicker\">MDatePicker</a></li>\n</ul>\n",
      "注意": "\n<!--alert:warning--> \n<p><code>MDatePicker</code> 接受ISO 8601 <strong>日期</strong> 字符串(YYYY-MM-DD)。 有关 ISO 8601 和其他标准的更多信息，请访问 ISO（国际标准化组织） <a href=\"https://www.iso.org/standards.html\">国际标准</a> 官方网页。</p>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7096649+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>月份选择器有两种方向变化：纵向 (默认) 和横向。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.Center\">\r\n    <MDatePicker @bind-Value=\"_picker\"\r\n                 Type=\"DatePickerType.Month\"></MDatePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private DateOnly _picker = DateOnly.FromDateTime(DateTime.Now);\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.DatePickersMonth.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "allowedDates",
        "Title": "允许的月份",
        "Description": "<p>您可以使用数组、对象或函数指定允许的月份。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.Center\">\r\n    <MDatePicker Class=\"mt-4\"\r\n                 AllowedDates=\"_allowedMonths\"\r\n                 @bind-Value=\"_date\"\r\n                 Type=\"DatePickerType.Month\"\r\n                 Min=\"_min\"\r\n                 Max=\"_max\"></MDatePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private DateOnly _date = DateOnly.Parse(\"2017-12\");\r\n    private DateOnly _min = DateOnly.Parse(\"2017-06\");\r\n    private DateOnly _max = DateOnly.Parse(\"2019-10\");\r\n    private Func<DateOnly, bool> _allowedMonths = value => value.Month % 2 == 0;\r\n}",
        "Type": "Demos.Components.Pickers.children.DatePickersMonth.props.AllowedDates",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "colors",
        "Title": "颜色",
        "Description": "<p>可以使用 <strong>Color</strong> 和 <strong>HeaderColor</strong> 设置日期选择器颜色。 如果没有提供 <strong>HeaderColor</strong>, 头部将使用 <strong>Color</strong> 值。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.SpaceAround\">\r\n    <MDatePicker @bind-Value=\"_picker\"\r\n                 Type=\"DatePickerType.Month\"\r\n                 Color=\"green lighten-1\"></MDatePicker>\r\n    <MDatePicker @bind-Value=\"_picker2\"\r\n                 Type=\"DatePickerType.Month\"\r\n                 Color=\"green lighten-1\"\r\n                 HeaderColor=\"primary\"></MDatePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private DateOnly _picker = DateOnly.FromDateTime(DateTime.Now);\r\n    private DateOnly _picker2 = DateOnly.FromDateTime(DateTime.Now);\r\n}",
        "Type": "Demos.Components.Pickers.children.DatePickersMonth.props.Colors",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "icons",
        "Title": "图标",
        "Description": "<p>您可以覆盖选择器中使用的默认图标。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.Center\">\r\n    <MDatePicker @bind-Value=\"_picker\"\r\n                 Type=\"DatePickerType.Month\"\r\n                 YearIcon=\"mdi-calendar-blank\"\r\n                 PrevIcon=\"mdi-skip-previous\"\r\n                 NextIcon=\"mdi-skip-next\"></MDatePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private DateOnly _picker = DateOnly.FromDateTime(DateTime.Now);\r\n}",
        "Type": "Demos.Components.Pickers.children.DatePickersMonth.props.Icons",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "multiple",
        "Title": "多选",
        "Description": "<p>日期选择器可以使用 <strong>Multiple</strong> 选择多个日期。 如果使用 <strong>Multiple</strong> ，日期选择器就会要求它的model是一个数组。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\">\r\n    <MDatePicker @bind-Value=\"_months\"\r\n                 Type=\"DatePickerType.Month\"\r\n                 Multiple></MDatePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private IList<DateOnly> _months = new List<DateOnly>\r\n        {\r\n            new DateOnly(2018,9,1),\r\n            new DateOnly(2018,10,1)\r\n        };\r\n}",
        "Type": "Demos.Components.Pickers.children.DatePickersMonth.props.Multiple",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "readonly",
        "Title": "只读",
        "Description": "<p>可以添加 <strong>Readonly</strong> 来禁用选择新日期。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\">\r\n    <MDatePicker @bind-Value=\"_picker\"\r\n                 Type=\"DatePickerType.Month\"\r\n                 Readonly>\r\n    </MDatePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private DateOnly _picker = DateOnly.FromDateTime(DateTime.Now);\r\n}",
        "Type": "Demos.Components.Pickers.children.DatePickersMonth.props.Readonly",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "showCurrent",
        "Title": "显示当前月份",
        "Description": "<p>默认情况下，当前日期是使用边框按钮显示的 - <strong>ShowCurrent</strong> 允许您删除边框或选择其他日期显示为当前日期。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.SpaceAround\">\r\n    <MDatePicker @bind-Value=\"_picker1\"\r\n                 Type=\"DatePickerType.Month\"\r\n                 ShowCurrent=\"false\"></MDatePicker>\r\n    <MDatePicker @bind-Value=\"_picker2\"\r\n                 Type=\"DatePickerType.Month\"\r\n                 ShowCurrent=\"_current\"></MDatePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private DateOnly _picker1 = DateOnly.FromDateTime(DateTime.Now);\r\n    private DateOnly _picker2 = new DateOnly(2013, 9, 1);\r\n    private DateOnly _current = new DateOnly(2013, 7, 1);\r\n}",
        "Type": "Demos.Components.Pickers.children.DatePickersMonth.props.ShowCurrent",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "width",
        "Title": "宽度",
        "Description": "<p>您可以指定选择器的宽度或使其全宽度。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.SpaceAround\">\r\n    <MDatePicker @bind-Value=\"_picker\"\r\n                 Width=\"290\"\r\n                 Type=\"DatePickerType.Month\"\r\n                 Class=\"mt-4\"></MDatePicker>\r\n    <MDatePicker @bind-Value=\"_picker\"\r\n                 FullWidth\r\n                 Type=\"DatePickerType.Month\"\r\n                 Class=\"mt-4\"></MDatePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private DateOnly _picker = DateOnly.FromDateTime(DateTime.Now);\r\n}",
        "Type": "Demos.Components.Pickers.children.DatePickersMonth.props.Width",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "dialogAndMenu",
        "Title": "对话框和菜单",
        "Description": "<p>将选择器集成到 <code>MTextField</code> 中时，建议使用 <strong>Readonly</strong>。 这将防止手机键盘触发。 要节省垂直空间，还可以隐藏选择器标题。</p>\n<p>拾取器公开一个允许您挂起保存和取消功能的插槽。 这将保持一个用户取消时可以替换的旧值。</p>\n",
        "Code": "<MRow>\r\n    <MCol Cols=\"11\"\r\n          Sm=\"5\">\r\n        <MMenu @bind-Value=\"_menu\"\r\n               CloseOnContentClick=\"false\"\r\n               Transition=\"scale-transition\"\r\n               OffsetY\r\n               MaxWidth=\"290\"\r\n               MinWidth=\"@(\"auto\")\">\r\n            <ActivatorContent>\r\n                <MTextField @bind-Value=\"_date\"\r\n                            Label=\"Picker in menu\"\r\n                            PrependIcon=\"mdi-calendar\"\r\n                            Readonly\r\n                            @attributes=\"context.Attrs\"></MTextField>\r\n            </ActivatorContent>\r\n            <ChildContent>\r\n                <MDatePicker @bind-Value=\"_date\"\r\n                             Type=\"DatePickerType.Month\"\r\n                             NoTitle\r\n                             Scrollable>\r\n                    <MSpacer></MSpacer>\r\n                    <MButton Text\r\n                             Color=\"primary\"\r\n                             OnClick=\"MenuCancel\">\r\n                        Cancel\r\n                    </MButton>\r\n                    <MButton Text\r\n                             Color=\"primary\"\r\n                             OnClick=\"MenuOk\">\r\n                        OK\r\n                    </MButton>\r\n                </MDatePicker>\r\n            </ChildContent>\r\n        </MMenu>\r\n    </MCol>\r\n    <MSpacer></MSpacer>\r\n    <MCol Cols=\"11\"\r\n          Sm=\"5\">\r\n        <MDialog @bind-Value=\"_modal\"\r\n                 Persistent\r\n                 Width=\"290\">\r\n            <ActivatorContent>\r\n                <MTextField @bind-Value=\"_date\"\r\n                            Label=\"Picker in dialog\"\r\n                            PrependIcon=\"mdi-calendar\"\r\n                            Readonly\r\n                            @attributes=\"context.Attrs\"></MTextField>\r\n            </ActivatorContent>\r\n            <ChildContent>\r\n                <MDatePicker @bind-Value=\"_date\"\r\n                             Type=\"DatePickerType.Month\"\r\n                             Scrollable>\r\n                    <MSpacer></MSpacer>\r\n                    <MButton Text\r\n                             Color=\"primary\"\r\n                             OnClick=\"ModalCancel\">\r\n                        Cancel\r\n                    </MButton>\r\n                    <MButton Text\r\n                             Color=\"primary\"\r\n                             OnClick=\"ModalOk\">\r\n                        OK\r\n                    </MButton>\r\n                </MDatePicker>\r\n            </ChildContent>\r\n        </MDialog>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n    private DateOnly _prevDate = DateOnly.FromDateTime(DateTime.Now);\r\n    private DateOnly _date = DateOnly.FromDateTime(DateTime.Now);\r\n    private bool _menu;\r\n    private bool _modal;\r\n\r\n    public void MenuCancel()\r\n    {\r\n        _date = _prevDate;\r\n        _menu = false;\r\n    }\r\n\r\n    public void MenuOk()\r\n    {\r\n        _prevDate = _date;\r\n        _menu = false;\r\n    }\r\n\r\n    public void ModalCancel()\r\n    {\r\n        _date = _prevDate;\r\n        _modal = false;\r\n    }\r\n\r\n    public void ModalOk()\r\n    {\r\n        _prevDate = _date;\r\n        _modal = false;\r\n    }\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.DatePickersMonth.misc.DialogAndMenu",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 0,
        "Name": "internationalization",
        "Title": "国际化(TODO)",
        "Description": "<p>日期选择器通过JavaScript日期对象支持国际化。使用区域设置道具指定BCP 47语言标记，然后使用每周第一天属性设置每周第一天。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.SpaceAround\">\r\n    <MDatePicker @bind-Value=\"_picker\"\r\n                 Type=\"DatePickerType.Month\"\r\n                 NoTitle\r\n                 Locale=\"zh-CN\"></MDatePicker>\r\n</MRow>\r\n\r\n  @code {\r\n    private DateOnly _picker = DateOnly.FromDateTime(DateTime.Now);\r\n  }\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.DatePickersMonth.misc.Internationalization",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 0,
        "Name": "orientation",
        "Title": "方向",
        "Description": "<p>日期选择器有两种方向变化，纵向（默认）和横向。</p>\n",
        "Code": "<MRow Align=\"AlignTypes.Center\">\r\n    <MCheckbox @bind-Value=\"_landscape\"\r\n               Label=\"Landscape\"></MCheckbox>\r\n    <MDatePicker @bind-Value=\"_picker\"\r\n                 Type=\"DatePickerType.Month\"\r\n                 Landscape=\"_landscape\"></MDatePicker>\r\n</MRow>\r\n\r\n  @code {\r\n    private DateOnly _picker = DateOnly.FromDateTime(DateTime.Now);\r\n    private bool _landscape;\r\n  }\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.DatePickersMonth.misc.Orientation",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/date-pickers",
      "/components/menus",
      "/components/time-pickers"
    ],
    "Subtitle": "月份选择器",
    "Title": "Date pickers month",
    "Type": "月份选择器"
  },
  {
    "Desc": "<p><code>MTimePicker</code> 是独立的组件，可以用于许多现有的 MASA Blazor 组件。 它为用户提供了选择时间的视觉表现。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MTimePicker\">MTimePicker</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7156641+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>时间选择器默认情况下启用了浅色主题。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.Center\">\r\n    <MTimePicker Format=\"TimeFormat.AmPm\"></MTimePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private TimeOnly? _picker = TimeOnly.FromDateTime(DateTime.Now);\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.TimePickers.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "allowedTimes",
        "Title": "允许的时间",
        "Description": "<p>您可以使用数组、对象和函数指定允许的时间。 您也可以指定时间步进/精度/间隔 - 例如10分钟。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.SpaceAround\">\r\n    <MTimePicker @bind-Value=\"_time\"\r\n                 AllowedHours=\"_allowedHours\"\r\n                 AllowedMinutes=\"_allowedMinutes\"\r\n                 Class=\"mt-4\"\r\n                 Format=\"TimeFormat.Hr24\"\r\n                 Scrollable\r\n                 Min=\"new TimeOnly(9,30)\"\r\n                 Max=\"new TimeOnly(22,15)\"></MTimePicker>\r\n    <MTimePicker @bind-Value=\"_timeStep\"\r\n                 AllowedMinutes=\"_allowedStep\"\r\n                 Class=\"mt-4\"\r\n                 Format=\"TimeFormat.Hr24\"></MTimePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private TimeOnly? _time = new TimeOnly(11, 15, 0);\r\n    private TimeOnly? _timeStep = new TimeOnly(10, 10, 0);\r\n    private Func<int, bool> _allowedHours = v => v % 2 != 0;\r\n    private Func<int, bool> _allowedMinutes = v => v >= 10 && v <= 50;\r\n    private Func<int, bool> _allowedStep = m => m % 10 == 0;\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.TimePickers.props.AllowedTimes",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "AMPMInTitle",
        "Title": "标题中的AM/PM",
        "Description": "<p>您可以移动 AM/PM 切换到选择器的标题。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.SpaceAround\"\r\n      Align=\"AlignTypes.Center\">\r\n    <MTimePicker @bind-Value=\"_picker\"\r\n                 AmPmInTitle></MTimePicker>\r\n    <MTimePicker @bind-Value=\"_picker\"\r\n                 Landscape\r\n                 AmPmInTitle></MTimePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private TimeOnly? _picker;\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.TimePickers.props.AMPMInTitle",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "colors",
        "Title": "颜色",
        "Description": "<p>时间选择器颜色可以使用 <strong>Color</strong> 和 <strong>HeaderColor</strong> 属性设定。如果没有提供 <strong>HeaderColor</strong> 属性, 头部将使用 <strong>Color</strong> 属性值。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.SpaceAround\">\r\n    <MTimePicker @bind-Value=\"_e4\"\r\n                 Color=\"green lighten-1\"></MTimePicker>\r\n    <MTimePicker @bind-Value=\"_e4\"\r\n                 Color=\"green lighten-1\"\r\n                 HeaderColor=\"primary\"></MTimePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private TimeOnly? _e4;\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.TimePickers.props.Colors",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "disabled",
        "Title": "禁用",
        "Description": "<p>您无法使用已禁用的选择器。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.SpaceAround\"\r\n      Align=\"AlignTypes.Center\">\r\n    <MTimePicker @bind-Value=\"_picker\"\r\n                 Disabled></MTimePicker>\r\n    <MTimePicker @bind-Value=\"_picker\"\r\n                 Landscape\r\n                 Disabled></MTimePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private TimeOnly? _picker;\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.TimePickers.props.Disabled",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "elevation",
        "Title": "高度(z轴)",
        "Description": "<p>通过设置 <strong>Elevation</strong> 从 0 到 24 来突出 <code>MTimePicker</code> 组件。 高度(z轴)将修改 <code>box-shadow</code> css 属性。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.SpaceAround\"\r\n      Align=\"AlignTypes.Center\">\r\n    <MTimePicker @bind-Value=\"_picker\"\r\n                 Flat></MTimePicker>\r\n\r\n    <MTimePicker @bind-Value=\"_picker\"\r\n                 Elevation=\"15\"></MTimePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private TimeOnly? _picker;\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.TimePickers.props.Elevation",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "format",
        "Title": "格式化",
        "Description": "<p>时间选择器可以切换为24小时格式。 请注意， <strong>Format</strong> 只定义选取器的显示方式，选取器的值 (model) 总是以24小时格式。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.Center\">\r\n    <MCol>\r\n        <MTimePicker @bind-Value=\"_e7\"\r\n                     Format=\"TimeFormat.Hr24\"></MTimePicker>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n    private TimeOnly? _e7;\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.TimePickers.props.Format",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "noTitle",
        "Title": "无标题",
        "Description": "<p>您可以删除选择器的标题。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.SpaceAround\">\r\n    <MTimePicker @bind-Value=\"_picker\"\r\n                 NoTitle></MTimePicker>\r\n    <MTimePicker @bind-Value=\"_picker\"\r\n                 Landscape\r\n                 NoTitle></MTimePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private TimeOnly? _picker;\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.TimePickers.props.NoTitle",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "range",
        "Title": "范围",
        "Description": "<p>这是一个用 <strong>Min</strong> 和 <strong>Max</strong> 合并选择器的例子。</p>\n",
        "Code": "<div>\r\n    <h1>Plan your event:</h1>\r\n    <MRow Justify=\"JustifyTypes.SpaceAround\"\r\n          Align=\"AlignTypes.Center\">\r\n        <MCol Style=\"width: 350px; flex: 0 1 auto;\">\r\n            <h2>Start:</h2>\r\n            <MTimePicker @bind-Value=\"_start\"\r\n                         Max=\"_end\">\r\n            </MTimePicker>\r\n        </MCol>\r\n        <MCol Style=\"width: 350px; flex: 0 1 auto;\">\r\n            <h2>End:</h2>\r\n            <MTimePicker @bind-Value=\"_end\"\r\n                         Min=\"_start\">\r\n            </MTimePicker>\r\n        </MCol>\r\n    </MRow>\r\n</div>\r\n\r\n@code {\r\n    private TimeOnly? _start;\r\n    private TimeOnly? _end;\r\n}\r\n",
        "Type": "Demos.Components.Pickers.children.TimePickers.props.Range",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "readonly",
        "Title": "只读",
        "Description": "<p>只读选择器的行为与禁用的一样，但看起来像默认的。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.SpaceAround\"\r\n      Align=\"AlignTypes.Center\">\r\n    <MTimePicker @bind-Value=\"_picker\"\r\n                 Readonly></MTimePicker>\r\n    <MTimePicker @bind-Value=\"_picker\"\r\n                 Landscape\r\n                 readonly></MTimePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private TimeOnly? _picker;\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.TimePickers.props.Readonly",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "scrollable",
        "Title": "可滚动",
        "Description": "<p>您可以使用鼠标滚轮编辑时间选择器的值。</p>\n",
        "Code": "<MRow Justify=\"@JustifyTypes.Center\"\r\n      Align=\"AlignTypes.Center\">\r\n    <MTimePicker @bind-Value=\"_picker\"\r\n                 Scrollable></MTimePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private TimeOnly? _picker;\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.TimePickers.props.Scrollable",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "useSeconds",
        "Title": "使用秒",
        "Description": "<p>时间选择器可以输入秒数。</p>\n",
        "Code": "<MRow Justify=\"JustifyTypes.SpaceAround\"\r\n      Align=\"AlignTypes.Center\">\r\n    <MTimePicker @bind-Value=\"_picker\"\r\n                 UseSeconds></MTimePicker>\r\n    <MTimePicker @bind-Value=\"_picker\"\r\n                 Landscape\r\n                 UseSeconds></MTimePicker>\r\n</MRow>\r\n\r\n@code {\r\n    private TimeOnly? _picker;\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.TimePickers.props.UseSeconds",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "width",
        "Title": "宽度",
        "Description": "<p>您可以指定选择器的宽度或使其为全宽度。</p>\n",
        "Code": "<MRow Align=\"AlignTypes.Center\">\r\n    <MTimePicker @bind-Value=\"_time\"\r\n                 Width=\"290\"\r\n                 Class=\"ml-4\"></MTimePicker>\r\n    <MCol Class=\"pa-0 mx-4 mt-4 mt-sm-0\">\r\n        <MTimePicker @bind-Value=\"_time\"\r\n                     Landscape\r\n                     FullWidth></MTimePicker>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n    private TimeOnly? _time = new TimeOnly(11, 15, 1);\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.TimePickers.props.Width",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "dialogAndMenu",
        "Title": "对话框和菜单",
        "Description": "<p>由于选择器的灵活性，您可以真正按照自己的意愿进行输入。</p>\n",
        "Code": "<MRow>\r\n    <MCol Cols=\"11\"\r\n          Sm=\"5\">\r\n        <MMenu @bind-Value=\"_menu2\"\r\n               CloseOnContentClick=\"false\"\r\n               NudgeRight=\"40\"\r\n               Transition=\"scale-transition\"\r\n               OffsetY\r\n               MaxWidth=\"290\"\r\n               MinWidth=\"290\">\r\n            <ActivatorContent>\r\n                <MTextField @bind-Value=\"_time\"\r\n                            Label=\"Picker in menu\"\r\n                            PrependIcon=\"mdi-clock-time-four-outline\"\r\n                            Readonly\r\n                            @attributes=\"context.Attrs\"></MTextField>\r\n            </ActivatorContent>\r\n            <ChildContent>\r\n                @if (_menu2)\r\n                {\r\n                    <MTimePicker @bind-Value=\"_time\"\r\n                             FullWidth></MTimePicker>\r\n                }\r\n            </ChildContent>\r\n        </MMenu>\r\n    </MCol>\r\n    <MSpacer></MSpacer>\r\n    <MCol Cols=\"11\"\r\n          Sm=\"5\">\r\n        <MDialog @bind-Value=\"_modal2\"\r\n                 Persistent\r\n                 Width=\"290\">\r\n            <ActivatorContent>\r\n                <MTextField @bind-Value=\"_time\"\r\n                            Label=\"Picker in dialog\"\r\n                            PrependIcon=\"mdi-clock-time-four-outline\"\r\n                            Readonly\r\n                            @attributes=\"context.Attrs\"></MTextField>\r\n            </ActivatorContent>\r\n            <ChildContent>\r\n                @if (_modal2)\r\n                {\r\n                    <MTimePicker @bind-Value=\"_time\"\r\n                             FullWidth>\r\n                        <MSpacer></MSpacer>\r\n                        <MButton Text\r\n                             Color=\"primary\"\r\n                             OnClick=\"Cancel\">\r\n                            Cancel\r\n                        </MButton>\r\n                        <MButton Text\r\n                             OnClick=\"Ok\"\r\n                             Color=\"primary\">\r\n                            OK\r\n                        </MButton>\r\n                    </MTimePicker>\r\n                }\r\n            </ChildContent>\r\n        </MDialog>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code {\r\n    private TimeOnly? _prevTime;\r\n    private TimeOnly? _time;\r\n    private bool _menu2;\r\n    private bool _modal2;\r\n\r\n    public void Cancel()\r\n    {\r\n        _time = _prevTime;\r\n        _modal2 = false;\r\n    }\r\n\r\n    public void Ok()\r\n    {\r\n        _prevTime = _time;\r\n        _modal2 = false;\r\n    }\r\n}\r\n\r\n",
        "Type": "Demos.Components.Pickers.children.TimePickers.misc.DialogAndMenu",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/buttons",
      "/components/date-pickers",
      "/components/text-fields"
    ],
    "Subtitle": "时间选择器",
    "Title": "Time pickers",
    "Type": "时间选择器"
  },
  {
    "Desc": "<p>提供全局服务调用Alert、Confirm、Prompt和Toast等弹出层组件。</p>\n",
    "Order": 0,
    "OtherDocs": {},
    "LastWriteTime": "2022-10-20T23:42:05.717664+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "alert",
        "Title": "警告",
        "Description": "",
        "Code": "@inject IPopupService PopupService\r\n\r\n<MAlert Type=\"AlertTypes.Info\">\r\n    <div>\r\n        在 <code>MApp</code> 组件通过 <code>AlertParameters</code> 设置Alert的默认样式和行为。\r\n    </div>\r\n    <div>\r\n        例如：<code>AlertParameters=\"param => { param.Right = true; }\"</code>。\r\n    </div>\r\n</MAlert>\r\n\r\n<MDivider Class=\"my-4\" />\r\n\r\n<MButton OnClick=\"ShowBasic\">Basic Alert</MButton>\r\n\r\n<MDivider Class=\"my-4\" />\r\n\r\n<MRadioGroup @bind-Value=\"alertType\">\r\n    <MRadio Value=\"AlertTypes.Success\" Label=\"@nameof(AlertTypes.Success)\"></MRadio>\r\n    <MRadio Value=\"AlertTypes.Warning\" Label=\"@nameof(AlertTypes.Warning)\"></MRadio>\r\n    <MRadio Value=\"AlertTypes.Error\" Label=\"@nameof(AlertTypes.Error)\"></MRadio>\r\n    <MRadio Value=\"AlertTypes.Info\" Label=\"@nameof(AlertTypes.Info)\"></MRadio>\r\n</MRadioGroup>\r\n\r\n<MButton OnClick=\"ShowTyped\">Typed Alert</MButton>\r\n\r\n<MDivider Class=\"my-4\" />\r\n\r\n<MButton OnClick=\"ShowException\">Exception Alert</MButton>\r\n\r\n<MDivider Class=\"my-4\" />\r\n\r\n<MButton OnClick=\"ShowCustom\">Custom Alert</MButton>\r\n\r\n@code {\r\n\r\n    AlertTypes alertType = AlertTypes.None;\r\n\r\n    private Task ShowBasic()\r\n    {\r\n        return PopupService.AlertAsync(\"This is the alert content!\");\r\n    }\r\n\r\n    private Task ShowTyped()\r\n    {\r\n        return PopupService.AlertAsync(\"This is the alert content!\", alertType);\r\n    }\r\n\r\n    private Task ShowException()\r\n    {\r\n        try\r\n        {\r\n            throw new Exception(\"something wrong!\");\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            return PopupService.AlertAsync(e);\r\n        }\r\n    }\r\n\r\n    private Task ShowCustom()\r\n    {\r\n        return PopupService.AlertAsync(param =>\r\n        {\r\n            param.Centered = true;\r\n            param.Content = \"This is the alert content!\";\r\n            param.Color = \"error\";\r\n            param.Light = true;\r\n            param.Outlined = true;\r\n            param.Right = true;\r\n            param.Top = true;\r\n            param.ActionProps = a =>\r\n            {\r\n                a.Small = true;\r\n                a.Color = \"error\";\r\n            };\r\n        });\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.PopupService.events.Alert",
        "Style": "",
        "Debug": false,
        "Group": 1
      },
      {
        "Order": 0,
        "Name": "confirm",
        "Title": "确认",
        "Description": "",
        "Code": "@inject IPopupService PopupService\r\n\r\n<MAlert Type=\"AlertTypes.Info\">\r\n    <div>\r\n        在 <code>MApp</code> 组件通过 <code>ConfirmParameters</code> 设置Confirm的默认样式和行为。\r\n    </div>\r\n    <div>\r\n        例如：<code>ConfirmParameters=\"@@(\"param => { param.OkText = \"Confirm\"; })\"</code>。\r\n    </div>\r\n</MAlert>\r\n\r\n<MDivider Class=\"my-4\" />\r\n\r\n<MButton OnClick=\"ShowBasic\">Basic Confirm</MButton>\r\n\r\n<MDivider Class=\"my-4\" />\r\n\r\n<MRadioGroup @bind-Value=\"alertType\">\r\n    <MRadio Value=\"AlertTypes.Success\" Label=\"@nameof(AlertTypes.Success)\"></MRadio>\r\n    <MRadio Value=\"AlertTypes.Warning\" Label=\"@nameof(AlertTypes.Warning)\"></MRadio>\r\n    <MRadio Value=\"AlertTypes.Error\" Label=\"@nameof(AlertTypes.Error)\"></MRadio>\r\n    <MRadio Value=\"AlertTypes.Info\" Label=\"@nameof(AlertTypes.Info)\"></MRadio>\r\n</MRadioGroup>\r\n\r\n<MButton OnClick=\"ShowTyped\">Typed Confirm</MButton>\r\n\r\n<MDivider Class=\"my-4\" />\r\n\r\n<MCheckbox @bind-Value=\"throwException\" Label=\"Throw exception\"></MCheckbox>\r\n<MButton OnClick=\"ShowAsync\">Async Confirm</MButton>\r\n\r\n<MDivider Class=\"my-4\" />\r\n\r\n<MButton OnClick=\"ShowCustom\">Custom Confirm</MButton>\r\n\r\n@code {\r\n\r\n    private AlertTypes alertType = AlertTypes.None;\r\n    private bool throwException;\r\n\r\n    private async Task ShowBasic()\r\n    {\r\n        var confirmed = await PopupService.ConfirmAsync(\"Title\", \"This is the confirm content!\");\r\n\r\n        await HandleConfirmResult(confirmed);\r\n    }\r\n\r\n    private async Task ShowTyped()\r\n    {\r\n        var confirmed = await PopupService.ConfirmAsync(\r\n            \"Title\",\r\n            \"This is the confirm content!\",\r\n            alertType);\r\n\r\n        await HandleConfirmResult(confirmed);\r\n    }\r\n\r\n    private async Task ShowAsync()\r\n    {\r\n        await PopupService.ConfirmAsync(\r\n            \"Title\",\r\n            \"This is the confirm content!\",\r\n            async args =>\r\n            {\r\n                try\r\n                {\r\n                    await Task.Delay(1000);\r\n\r\n                    if (throwException)\r\n                    {\r\n                        throw new Exception(\"something wrong!\");\r\n                    }\r\n\r\n                    await PopupService.AlertAsync(\"Handle onOk successfully!\", AlertTypes.Success);\r\n                }\r\n                catch (Exception e)\r\n                {\r\n                    args.Cancel();\r\n\r\n                    await PopupService.AlertAsync(e);\r\n                }\r\n            });\r\n    }\r\n\r\n    private async Task ShowCustom()\r\n    {\r\n        var confirmed = await PopupService.ConfirmAsync(param =>\r\n        {\r\n            param.Title = \"Title\";\r\n            param.Content = \"This is the confirm content!\";\r\n            param.OkText = \"Confirm\";\r\n            param.CancelText = \"Ignore\";\r\n        });\r\n\r\n        await HandleConfirmResult(confirmed);\r\n    }\r\n\r\n    private async Task HandleConfirmResult(bool confirmed)\r\n    {\r\n        if (confirmed)\r\n        {\r\n            await PopupService.AlertAsync(\"Ok was clicked!\", AlertTypes.Info);\r\n        }\r\n        else\r\n        {\r\n            await PopupService.AlertAsync(\"Cancel was clicked!\", AlertTypes.Warning);\r\n        }\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.PopupService.events.Confirm",
        "Style": "",
        "Debug": false,
        "Group": 1
      },
      {
        "Order": 0,
        "Name": "prompt",
        "Title": "输入确认",
        "Description": "",
        "Code": "@inject IPopupService PopupService\r\n\r\n<MAlert Type=\"AlertTypes.Info\">\r\n    <div>\r\n        在 <code>MApp</code> 组件通过 <code>PromptParameters</code> 设置Prompt的默认样式和行为。\r\n    </div>\r\n    <div>\r\n        例如：<code>PromptParameters=\"@@(\"param => { param.OkText = \"Confirm\"; })\"</code>。\r\n    </div>\r\n</MAlert>\r\n\r\n<MDivider Class=\"my-4\" />\r\n\r\n<MButton OnClick=\"ShowBasic\">Basic Prompt</MButton>\r\n\r\n<MDivider Class=\"my-4\" />\r\n\r\n<MCheckbox @bind-Value=\"throwException\" Label=\"Throw exception\"></MCheckbox>\r\n<MButton OnClick=\"ShowAsync\">Async Prompt</MButton>\r\n\r\n<MDivider Class=\"my-4\" />\r\n\r\n<MButton OnClick=\"ShowCustom\">Custom Prompt</MButton>\r\n\r\n@code {\r\n\r\n    private bool throwException;\r\n    private readonly string checkInput = \"identity\";\r\n\r\n    private async Task ShowBasic()\r\n    {\r\n        var confirmed = await PopupService.PromptAsync(\r\n            \"Title\",\r\n            $\"Enter \\\"{checkInput}\\\" in the input box below to confirm the operation\"\r\n            );\r\n\r\n        await HandlePromptResult(confirmed);\r\n    }\r\n\r\n    private async Task ShowAsync()\r\n    {\r\n        await PopupService.PromptAsync(\r\n            \"Title\",\r\n            $\"Enter \\\"{checkInput}\\\" in the input box below to confirm the operation\",\r\n            async args =>\r\n            {\r\n                try\r\n                {\r\n                    if (args.Value == checkInput)\r\n                    {\r\n                        await PopupService.AlertAsync($\"Input('{args.Value}') is equal to '{checkInput}'\", AlertTypes.Info);\r\n                        \r\n                        await Task.Delay(1000);\r\n\r\n                        if (throwException)\r\n                        {\r\n                            throw new Exception(\"something wrong!\");\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        await PopupService.AlertAsync($\"Input('{args.Value}') is no equal to '{checkInput}'\", AlertTypes.Error);\r\n                        args.Cancel();\r\n                    }\r\n                }\r\n                catch (Exception e)\r\n                {\r\n                    args.Cancel();\r\n\r\n                    await PopupService.AlertAsync(e);\r\n                }\r\n            });\r\n    }\r\n\r\n    private async Task ShowCustom()\r\n    {\r\n        var input = await PopupService.PromptAsync(param =>\r\n        {\r\n            param.Title = \"Title\";\r\n            param.Content = $\"Enter \\\"{checkInput}\\\" in the input box below to confirm the operation\";\r\n            param.OkText = \"Confirm\";\r\n            param.CancelText = \"Ignore\";\r\n        });\r\n\r\n        await HandlePromptResult(input);\r\n    }\r\n\r\n    private async Task HandlePromptResult(string input)\r\n    {\r\n        if (input is null)\r\n        {\r\n            await PopupService.AlertAsync(\"Cancel was clicked\", AlertTypes.Warning);\r\n        }\r\n        else if (input == checkInput)\r\n        {\r\n            await PopupService.AlertAsync($\"Input('{input}') is equal to '{checkInput}'\", AlertTypes.Info);\r\n        }\r\n        else\r\n        {\r\n            await PopupService.AlertAsync($\"Input('{input}') is no equal to '{checkInput}'\", AlertTypes.Error);\r\n        }\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.PopupService.events.Prompt",
        "Style": "",
        "Debug": false,
        "Group": 1
      },
      {
        "Order": 0,
        "Name": "toast",
        "Title": "Toast",
        "Description": "",
        "Code": "@using Masa.Blazor.Popup.Components\r\n@inject IPopupService PopupService\r\n\r\n<MButton OnClick=\"ShowBasic\">Basic Toast</MButton>\r\n\r\n<MDivider Class=\"my-4\" />\r\n\r\n<MRadioGroup @bind-Value=\"toastType\" Row>\r\n    <MRadio Value=\"AlertTypes.None\" Label=\"None Icon\"></MRadio>\r\n    <MRadio Value=\"AlertTypes.Success\" Label=\"@nameof(AlertTypes.Success)\"></MRadio>\r\n    <MRadio Value=\"AlertTypes.Warning\" Label=\"@nameof(AlertTypes.Warning)\"></MRadio>\r\n    <MRadio Value=\"AlertTypes.Error\" Label=\"@nameof(AlertTypes.Error)\"></MRadio>\r\n    <MRadio Value=\"AlertTypes.Info\" Label=\"@nameof(AlertTypes.Info)\"></MRadio>\r\n</MRadioGroup>\r\n\r\n<MButton OnClick=\"ShowTyped\">Typed Toast</MButton>\r\n\r\n<MDivider Class=\"my-4\" />\r\n\r\n<MRadioGroup @bind-Value=\"isDark\" Row>\r\n    <MRadio Value=\"true\" Label=\"Drak\"></MRadio>\r\n    <MRadio Value=\"false\" Label=\"Light\"></MRadio>\r\n</MRadioGroup>\r\n\r\n<MButton OnClick=\"ShowTheme\">Show Theme</MButton>\r\n\r\n<MDivider Class=\"my-4\" />\r\n\r\n<MButton OnClick=\"ShowContent\">Show with Title and Content</MButton>\r\n\r\n<MDivider Class=\"my-4\" />\r\n\r\n<MButton OnClick=\"CustomAction\">Custom Action</MButton>\r\n\r\n<MDivider Class=\"my-4\" />\r\n\r\n<MRadioGroup Value=\"position\" TValue=\"ToastPosition\" Row ValueChanged=\"OnChangePosition\">\r\n    <MRadio Value=\"ToastPosition.TopLeft\" Label=\"Top Left\"></MRadio>\r\n    <MRadio Value=\"ToastPosition.TopRight\" Label=\"Top Right\"></MRadio>\r\n    <MRadio Value=\"ToastPosition.BottomLeft\" Label=\"Bottom Left\"></MRadio>\r\n    <MRadio Value=\"ToastPosition.BottomRight\" Label=\"Bottom Right\"></MRadio>\r\n</MRadioGroup>\r\n\r\n@code {\r\n\r\n    AlertTypes toastType = AlertTypes.Success;\r\n\r\n    bool isDark = true;\r\n\r\n    ToastPosition position = ToastPosition.BottomRight;\r\n\r\n    private Task ShowBasic()\r\n    {\r\n        return PopupService.ToastInfoAsync(\"Info Toast Title\");\r\n    }\r\n\r\n    private Task ShowTyped()\r\n    {\r\n        return PopupService.ToastAsync($\"{toastType.ToString()} Toast Title\", toastType);\r\n    }\r\n\r\n    private Task ShowTheme()\r\n    {\r\n        return PopupService.ToastAsync((config) =>\r\n        {\r\n            config.Dark = isDark;\r\n            config.Type = toastType;\r\n            config.Title = $\"Now is {(isDark ? \"Dark\" : \"Light\")} theme\";\r\n        });\r\n    }\r\n\r\n    private Task ShowContent()\r\n    {\r\n        var config = new ToastConfig()\r\n        {\r\n            Title = \"Message Title\",\r\n            Content = \"Message details\",\r\n            Dark = isDark,\r\n            Type = toastType\r\n        };\r\n        return PopupService.ToastAsync(config);\r\n    }\r\n\r\n    private Task HandleOnView()\r\n    {\r\n        return PopupService.ToastInfoAsync(\"View button click\");\r\n    }\r\n\r\n    private async Task CustomAction()\r\n    {\r\n        RenderFragment customViewAction = (builder) =>\r\n        {\r\n            builder.AddContent(0, @<MButton OnClick=\"HandleOnView\" Text> View </MButton>);\r\n        };\r\n\r\n        await PopupService.ToastAsync((config) =>\r\n        {\r\n            config.Title = \"Custom Action Message\";\r\n            config.Duration = 0;\r\n            config.Content = \"Not auto close\";\r\n            config.Type = toastType;\r\n            config.ActionContent = customViewAction;\r\n            config.Dark = isDark;\r\n            config.OnClose = (key) =>\r\n            {\r\n                Console.WriteLine($\"Key: {key} Close\");\r\n                return Task.CompletedTask;\r\n            };\r\n        });\r\n    }\r\n\r\n    private Task OnChangePosition(ToastPosition position)\r\n    {\r\n        this.position = position;\r\n        return PopupService.ConfigToast((config) =>\r\n        {\r\n            config.Position = position;\r\n        });\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.PopupService.events.Toast",
        "Style": "",
        "Debug": false,
        "Group": 1
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/dialogs",
      "/components/buttons",
      "/components/snackbars"
    ],
    "Subtitle": "弹出层服务",
    "Title": "Popup service",
    "Type": "弹出层服务",
    "Tag": "service"
  },
  {
    "Desc": "<p>该组件用于向用户展示环形的数据。 它也可以设置为不确定的状态来表示加载。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MProgressCircular\">MProgressCircular</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7216647+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p><code>MProgressCircular</code> 以其最简单的形式显示圆形进度条。使用 <strong>value</strong> 属性控制进度。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MProgressCircular Value=\"20\" Size=\"40\"></MProgressCircular>\r\n    <MProgressCircular Value=\"40\" Size=\"40\"></MProgressCircular>\r\n    <MProgressCircular Value=\"60\" Size=\"40\"></MProgressCircular>\r\n    <MProgressCircular Value=\"80\" Size=\"40\"></MProgressCircular>\r\n    <MProgressCircular Value=\"100\" Size=\"40\"></MProgressCircular>\r\n</div>\r\n\r\n<style>\r\n\t.m-progress-circular {\r\n      margin: 1rem;\r\n    }\r\n</style>",
        "Type": "Demos.Components.Progress.children.ProgressCircular.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "color",
        "Title": "颜色",
        "Description": "<p>可以使用 <strong>Color</strong> 属性为 <code>MProgressCircular</code> 设置其他颜色。</p>\n",
        "Code": "<div class=\"text-center\" >\r\n\t<MProgressCircular Value=\"100\" Size=\"40\" Color=\"indigo\"></MProgressCircular>\r\n\t<MProgressCircular Value=\"80\" Size=\"40\" Color=\"lime\"></MProgressCircular>\r\n\t<MProgressCircular Value=\"60\" Size=\"40\" Color=\"brown\"></MProgressCircular>\r\n\t<MProgressCircular Value=\"40\" Size=\"40\" Color=\"deep-orange\"></MProgressCircular>\r\n\t<MProgressCircular Value=\"20\" Size=\"40\" Color=\"blue\"></MProgressCircular>\r\n</div>\r\n\r\n<style>\r\n\t.m-progress-circular {\r\n      margin: 1rem;\r\n    }\r\n</style>",
        "Type": "Demos.Components.Progress.children.ProgressCircular.props.Color",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "indeterminate",
        "Title": "不定线条",
        "Description": "<p>使用 <strong>Indeterminate</strong> 属性，<strong>MProgressCircular</strong> 将会一直处于动画中。</p>\n",
        "Code": "<div class=\"text-center\" >\r\n\t<MProgressCircular Size=\"40\" Indeterminate Color=\"primary\"></MProgressCircular>\r\n\t<MProgressCircular Size=\"40\" Indeterminate Color=\"red\"></MProgressCircular>\r\n\t<MProgressCircular Size=\"40\" Indeterminate Color=\"purple\"></MProgressCircular>\r\n\t<MProgressCircular Size=\"40\" Indeterminate Color=\"amber\"></MProgressCircular>\r\n\t<MProgressCircular Size=\"40\" Indeterminate Color=\"green\"></MProgressCircular>\r\n</div>\r\n\r\n<style>\r\n\t.m-progress-circular {\r\n      margin: 1rem;\r\n    }\r\n</style>",
        "Type": "Demos.Components.Progress.children.ProgressCircular.props.Indeterminate",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 3,
        "Name": "rotate",
        "Title": "旋转",
        "Description": "<p><strong>Rotate</strong> 参数使您能够自定义 <strong>MProgressCircular</strong> 的原点。</p>\n",
        "Code": "@using System.Timers;\r\n@using Timer = System.Timers.Timer;\r\n\r\n<div class=\"text-center\" >\r\n\t<MProgressCircular Value=\"_value\" Size=\"100\" Width=\"15\" Rotate=\"90\" Color=\"lime\">@_value</MProgressCircular>\r\n\t<MProgressCircular Value=\"_value\" Size=\"100\" Width=\"15\" Rotate=\"180\" Color=\"brown\">@_value</MProgressCircular>\r\n\t<MProgressCircular Value=\"_value\" Size=\"100\" Width=\"15\" Rotate=\"270\" Color=\"red\">@_value</MProgressCircular>\r\n\t<MProgressCircular Value=\"_value\" Size=\"100\" Width=\"15\" Rotate=\"360\" Color=\"teal\">@_value</MProgressCircular>\r\n</div>\r\n\r\n@code\r\n{\r\n    private StringNumber _value = 0;\r\n    protected Timer Timer { get; set; }\r\n    protected override void OnInitialized()\r\n    {\r\n        if (Timer == null)\r\n        {\r\n            Timer = new Timer\r\n            {\r\n                Interval = 1000\r\n            };\r\n            Timer.Elapsed += Timer_Elapsed;\r\n            Timer.Start();\r\n        }\r\n    }\r\n    \r\n    private async void Timer_Elapsed(object sender, ElapsedEventArgs e)\r\n    {\r\n        await InvokeAsync(() =>\r\n        {\r\n            var value = _value.ToInt32();\r\n            if (value >= 100)\r\n            {\r\n                Timer.Stop();\r\n                _value = 0;\r\n                Timer.Start();\r\n            }\r\n            else\r\n            {\r\n                _value = value + 10;\r\n            }\r\n    \r\n            StateHasChanged();\r\n        });\r\n    }\r\n}\r\n\r\n<style>\r\n\t.m-progress-circular {\r\n      margin: 1rem;\r\n    }\r\n</style>",
        "Type": "Demos.Components.Progress.children.ProgressCircular.props.Rotate",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 4,
        "Name": "sizeorwidth",
        "Title": "大小和宽度",
        "Description": "<p><strong>Size</strong> 和 <strong>Width</strong> 属性允许您轻松修改 <strong>MProgressCircular</strong> 组件的大小和宽度。</p>\n",
        "Code": "<div class=\"text-center\" >\r\n\t<MProgressCircular Size=\"60\" Width=\"6\" Indeterminate Color=\"primary\"></MProgressCircular>\r\n\t<MProgressCircular Size=\"40\" Indeterminate Color=\"red\"></MProgressCircular>\r\n\t<MProgressCircular Size=\"80\" Width=\"8\" Indeterminate Color=\"purple\"></MProgressCircular>\r\n\t<MProgressCircular Size=\"40\" Indeterminate Color=\"amber\"></MProgressCircular>\r\n\t<MProgressCircular Size=\"60\" Width=\"6\" Indeterminate Color=\"green\"></MProgressCircular>\r\n</div>\r\n\r\n<style>\r\n\t.m-progress-circular {\r\n      margin: 1rem;\r\n    }\r\n</style>",
        "Type": "Demos.Components.Progress.children.ProgressCircular.props.SizeOrWidth",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/cards",
      "/components/progress-linear",
      "/components/lists"
    ],
    "Subtitle": "进度环",
    "Title": "Progress circular",
    "Type": "进度环"
  },
  {
    "Desc": "<p>该组件用于将数据环传递给用户。 也可以将其置于不确定状态来描述加载。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MProgressLinear\">MProgressLinear</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7276646+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>最简单的形式， <code>MProgressLinear</code> 显示一个水平进度条。使用 <strong>Value</strong> 属性来控制进度。</p>\n",
        "Code": "<MContainer>\r\n\t<MProgressLinear Value=\"15\"></MProgressLinear>\r\n</MContainer>\r\n\r\n",
        "Type": "Demos.Components.Progress.children.ProgressLinear.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "BufferValue",
        "Title": "缓冲值",
        "Description": "<p>缓冲状态同时表示两个值。 主值由 <strong>@bind-Value</strong> 控制，而缓冲值则由 <strong>BufferValue</strong> 属性控制。</p>\n",
        "Code": "@using System.Timers;\r\n@using Timer = System.Timers.Timer;\r\n\r\n<MContainer>\r\n    <MProgressLinear Value=\"@_value\" BufferValue=\"@_bufferValue\"></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n    <MProgressLinear Value=\"@_value\" BufferValue=\"@_bufferValue\" Color=\"purple\"></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n    <MProgressLinear Value=\"@_value\" BufferValue=\"@_bufferValue\" Color=\"red lighten-2\"></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n    <MProgressLinear Value=\"@_value\" BufferValue=\"@_bufferValue\" Color=\"black\"></MProgressLinear>\r\n</MContainer>\r\n\r\n@code\r\n{\r\n    private double _value = 10;\r\n    private double _bufferValue = 20;\r\n    protected Timer Timer { get; set; }\r\n    protected override void OnInitialized()\r\n    {\r\n        if (Timer == null)\r\n        {\r\n            Timer = new Timer\r\n            {\r\n                Interval = 2000\r\n            };\r\n            Timer.Elapsed += Timer_Elapsed;\r\n            Timer.Start();\r\n        }\r\n    }\r\n\r\n    private async void Timer_Elapsed(object sender, ElapsedEventArgs e)\r\n    {\r\n        await InvokeAsync(() =>\r\n        {\r\n            if (_bufferValue >= 100)\r\n            {\r\n                Timer.Stop();\r\n                _value = 0;\r\n                _bufferValue = 10;\r\n                Timer.Start();\r\n            }\r\n            else\r\n            {\r\n                _value += new Random().NextDouble() * (15 - 5) + 5;\r\n                _bufferValue += new Random().NextDouble() * (15 - 5) + 6;\r\n            }\r\n\r\n            StateHasChanged();\r\n        });\r\n    }\r\n}",
        "Type": "Demos.Components.Progress.children.ProgressLinear.props.BufferValue",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "color",
        "Title": "颜色",
        "Description": "<p>您可以使用 <strong>Color</strong> 和 <strong>BackgroundColor</strong> 属性设置颜色。</p>\n",
        "Code": "<MContainer>\r\n    <MProgressLinear Value=\"15\" BackgroundColor=\"pink lighten-3\" Color=\"pink lighten-1\"></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n    <MProgressLinear Value=\"30\" BackgroundColor=\"blue-grey\" Color=\"lime\"></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n    <MProgressLinear Value=\"45\" BackgroundColor=\"success\" Color=\"error\"></MProgressLinear>\r\n</MContainer>\r\n\r\n",
        "Type": "Demos.Components.Progress.children.ProgressLinear.props.Color",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 3,
        "Name": "indeterminate",
        "Title": "不定线条",
        "Description": "<p>使用 <strong>Indeterminate</strong> 属性，<code>MProgressLinear</code> 会保持动画状态。</p>\n",
        "Code": "<MContainer>\r\n\t<MProgressLinear Indeterminate Color=\"yellow darken-2\"></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n\t<MProgressLinear Indeterminate Color=\"green\"></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n\t<MProgressLinear Indeterminate Color=\"teal\"></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n\t<MProgressLinear Indeterminate Color=\"cyan\"></MProgressLinear>\r\n</MContainer>\r\n\r\n",
        "Type": "Demos.Components.Progress.children.ProgressLinear.props.Indeterminate",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 8,
        "Name": "query",
        "Title": "查询",
        "Description": "<p>当 <strong>Query</strong> 设置为 <code>true</code> 时，<strong>Query</strong> 属性值由不确定的真实性控制。</p>\n",
        "Code": "@using System.Timers;\r\n@using Timer = System.Timers.Timer;\r\n\r\n<MContainer>\r\n    <MProgressLinear Query Active=\"@_show\" Value=\"@_value\" Indeterminate=\"@_query\"></MProgressLinear>\r\n</MContainer>\r\n\r\n@code {\r\n    private bool _query;\r\n    private bool _show = true;\r\n    private double _value = 0;\r\n    protected Timer Timer { get; set; }\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        if (Timer == null)\r\n        {\r\n            Timer = new Timer\r\n                {\r\n                    Interval = 1000\r\n                };\r\n            Timer.Elapsed += Timer_Elapsed;\r\n        }\r\n        QueryAndIndeterminate();\r\n    }\r\n\r\n    private async void Timer_Elapsed(object sender, ElapsedEventArgs e)\r\n    {\r\n        await InvokeAsync(() =>\r\n        {\r\n            if (_value == 100)\r\n            {\r\n                Timer.Stop();\r\n\r\n                _show = false;\r\n                StateHasChanged();\r\n                Task.Run(async () =>\r\n                {\r\n                    await Task.Delay(2000);\r\n                    QueryAndIndeterminate();\r\n                });\r\n            }\r\n            else\r\n            {\r\n                _value += 25;\r\n\r\n                StateHasChanged();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void QueryAndIndeterminate()\r\n    {\r\n        _query = true;\r\n        _show = true;\r\n        _value = 0;\r\n\r\n        InvokeAsync(StateHasChanged);\r\n\r\n        Task.Run(async () =>\r\n        {\r\n            await Task.Delay(2500);\r\n\r\n            _query = false;\r\n            await InvokeAsync(StateHasChanged);\r\n            Timer.Start();\r\n\r\n        });\r\n    }\r\n}\r\n\r\n\r\n",
        "Type": "Demos.Components.Progress.children.ProgressLinear.props.Query",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 4,
        "Name": "reversed",
        "Title": "反转",
        "Description": "<p>使用 <strong>Reverse</strong> 属性显示反转的进度条(LTR模式为从右到左，RTL模式为从左到右)。</p>\n",
        "Code": "<MContainer>\r\n    <MProgressLinear Color=\"pink\" Value=\"15\" Reverse></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n    <MProgressLinear Color=\"lime\" Indeterminate Reverse></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n    <MProgressLinear BufferValue=\"55\" Color=\"success\" Reverse Stream Value=\"30\"></MProgressLinear>\r\n</MContainer>\r\n<br>\r\n<MSubheader>In specific cases you may want progress to display in left-to-right mode regardless of the application direction (LTR or RTL):</MSubheader>\r\n<MContainer>\r\n    <MProgressLinear Reverse=\"@_rtl\" Value=\"15\"></MProgressLinear>\r\n</MContainer>\r\n\r\n@code {\r\n    private bool _rtl = false;\r\n}\r\n",
        "Type": "Demos.Components.Progress.children.ProgressLinear.props.Reversed",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 5,
        "Name": "rounded",
        "Title": "Rounded（圆角）",
        "Description": "<p><strong>Rounded</strong> 属性是另一种样式，它为 <code>MProgressLinear</code> 组件添加了圆角。</p>\n",
        "Code": "<MContainer>\r\n\t<MProgressLinear Color=\"red darken-2\" Rounded Value=\"100\"></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n\t<MProgressLinear Color=\"indigo\" Rounded Value=\"100\"></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n\t<MProgressLinear Color=\"teal\" Rounded Value=\"100\"></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n\t<MProgressLinear Color=\"cyan darken-2\" Rounded Value=\"100\"></MProgressLinear>\r\n</MContainer>\r\n\r\n",
        "Type": "Demos.Components.Progress.children.ProgressLinear.props.Rounded",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 6,
        "Name": "stream",
        "Title": "流",
        "Description": "<p><strong>Stream</strong> 属性可以使用 <strong>BufferValue</strong> 向用户表示正在进行一些操作。 您可以使用 <strong>BufferValue</strong> 和 <strong>Value</strong> 的任何组合来实现您的设计。</p>\n",
        "Code": "<MContainer>\r\n\t<MProgressLinear Color=\"red lighten-2\" BufferValue=\"0\" Stream></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n\t<MProgressLinear Color=\"teal\" BufferValue=\"0\" Value=\"20\" Stream></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n\t<MProgressLinear Color=\"cyan\" BufferValue=\"50\" Stream></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n\t<MProgressLinear Color=\"orange\" BufferValue=\"60\" Value=\"40\" Stream></MProgressLinear>\r\n</MContainer>\r\n\r\n",
        "Type": "Demos.Components.Progress.children.ProgressLinear.props.Stream",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 7,
        "Name": "striped",
        "Title": "有条纹的",
        "Description": "<p>使用 <strong>Striped</strong> 属性对 <code>MProgressLinear</code> 的值部分应用条纹背景。</p>\n",
        "Code": "<MContainer>\r\n\t<MProgressLinear Striped Value=\"10\" Height=\"10\" Color=\"light-blue\"></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n\t<MProgressLinear Striped Value=\"20\" Height=\"10\" Color=\"light-green darken-4\"></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n\t<MProgressLinear Striped Value=\"45\" Height=\"10\" Color=\"lime\"></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n\t<MProgressLinear Striped Value=\"60\" Height=\"10\" Color=\"deep-orange\"></MProgressLinear>\r\n</MContainer>\r\n\r\n",
        "Type": "Demos.Components.Progress.children.ProgressLinear.props.Striped",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 9,
        "Name": "default",
        "Title": "默认值",
        "Description": "<p><code>MProgressLinear</code> 组件将在使用 <strong>@bind-Value</strong> 时响应用户输入。 您可以使用默认插槽或绑定本地model在进度内显示。 如果您在寻找线性组件上的高级功能，请查看 <a href=\"/components/sliders\">MSlider</a>。</p>\n",
        "Code": "<MContainer>\r\n    <MProgressLinear Value=\"@_power\" Color=\"amber\" Height=\"25\" OnChange=\"PowerChanged\"></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n    <MProgressLinear Value=\"@_skill\" Color=\"blue-grey\" Height=\"25\" OnChange=\"SkillChanged\">\r\n        <strong>@($\"{context}%\")</strong>\r\n    </MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n    <MProgressLinear Value=\"@_knowledge\" Height=\"25\" OnChange=\"KnowledgeChanged\">\r\n        <strong>@($\"{context}%\")</strong>\r\n    </MProgressLinear>\r\n</MContainer>\r\n\r\n@code {\r\n    private double _skill = 20;\r\n    private double _knowledge = 33;\r\n    private double _power = 78;\r\n\r\n    private void SkillChanged(double value)\r\n    {\r\n        _skill = value;\r\n    }\r\n\r\n    private void KnowledgeChanged(double value)\r\n    {\r\n        _knowledge = value;\r\n    }\r\n\r\n    private void PowerChanged(double value)\r\n    {\r\n        _power = value;\r\n    }\r\n}\r\n\r\n",
        "Type": "Demos.Components.Progress.children.ProgressLinear.contents.Default",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 10,
        "Name": "determinate",
        "Title": "定值线条",
        "Description": "<p>进度条组件有一个由 <strong>@bind-Value</strong> 修改的确定状态。</p>\n",
        "Code": "<MContainer>\r\n\t<MProgressLinear @bind-Value=\"_valueDeterminate\" Color=\"deep-purple accent-4\" OnChange=\"HandleOnChange\"></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n\t<MProgressLinear @bind-Value=\"_valueDeterminate\" Color=\"pink\" OnChange=\"HandleOnChange\"></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n\t<MProgressLinear @bind-Value=\"_valueDeterminate\" Color=\"indigo darken-2\" OnChange=\"HandleOnChange\"></MProgressLinear>\r\n</MContainer>\r\n<MContainer>\r\n\t<MProgressLinear @bind-Value=\"_valueDeterminate\" Color=\"amber\" OnChange=\"HandleOnChange\"></MProgressLinear>\r\n</MContainer>\r\n\r\n\r\n@code{\r\n\tprivate double _valueDeterminate = 50;\r\n\r\n\tprivate void HandleOnChange(double value)\r\n\t{\r\n\t\t_valueDeterminate = value;\r\n\t}\r\n}\r\n\r\n",
        "Type": "Demos.Components.Progress.children.ProgressLinear.misc.Determinate",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 11,
        "Name": "fileLoader",
        "Title": "文件加载器",
        "Description": "<p><code>MProgressLinear</code> 组件有助于向用户解释他们正在等待响应。</p>\n",
        "Code": "<MContainer>\r\n    <MCard Class=\"mx-auto\"\r\n           MaxWidth=\"344\">\r\n        <MToolbar Color=\"deep-purple accent-4\"\r\n                  Dark\r\n                  Prominent>\r\n\r\n            <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n            <MToolbarTitle>My Files</MToolbarTitle>\r\n\r\n            <MButton Absolute\r\n                     Bottom\r\n                     Color=\"white\"\r\n                     Fab\r\n                     Left\r\n                     Light>\r\n                <MIcon>mdi-plus</MIcon>\r\n            </MButton>\r\n\r\n            <MSpacer></MSpacer>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-share-variant</MIcon>\r\n            </MButton>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-magnify</MIcon>\r\n            </MButton>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-dots-vertical</MIcon>\r\n            </MButton>\r\n        </MToolbar>\r\n\r\n        <MContainer Style=\"height: 400px;\">\r\n            <MRow Class=\"fill-height\"\r\n                  AlignContent=\"@AlignContentTypes.Center\"\r\n                  Justify=\"@JustifyTypes.Center\">\r\n                <MCol Class=\"text-subtitle-1 text-center\"\r\n                      Cols=\"12\">\r\n                    Getting your files\r\n                </MCol>\r\n                <MCol Cols=\"6\">\r\n                    <MProgressLinear Color=\"deep-purple accent-4\"\r\n                                     Indeterminate\r\n                                     Rounded\r\n                                     Height=\"6\">\r\n                    </MProgressLinear>\r\n                </MCol>\r\n            </MRow>\r\n        </MContainer>\r\n    </MCard>\r\n</MContainer>\r\n",
        "Type": "Demos.Components.Progress.children.ProgressLinear.misc.FileLoader",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 12,
        "Name": "toolbarLoader",
        "Title": "工具栏加载器",
        "Description": "<p>使用 <strong>Absolute</strong> 属性，我们可以将 <code>MProgressLinear</code> 组件定位在 <strong>MToolbar</strong> 的底部。 我们还使用了 <strong>Active</strong> 属性来控制进度条的可见性。</p>\n",
        "Code": "<MContainer>\r\n    <MCard Class=\"mx-auto mt-6\"\r\n           Width=\"344\">\r\n        <MSystemBar>\r\n            <MSpacer></MSpacer>\r\n            <MIcon>mdi-square</MIcon>\r\n            <MIcon>mdi-circle</MIcon>\r\n            <MIcon>mdi-triangle</MIcon>\r\n        </MSystemBar>\r\n\r\n        <MToolbar>\r\n            <MButton Icon>\r\n                <MIcon>mdi-arrow-left</MIcon>\r\n            </MButton>\r\n\r\n            <MToolbarTitle>My Recipes</MToolbarTitle>\r\n\r\n            <MProgressLinear Active=\"_loading\"\r\n                            Indeterminate=\"_loading\"\r\n                            Absolute\r\n                            Bottom\r\n                            Color=\"deep-purple accent-4\">\r\n            </MProgressLinear>\r\n\r\n            <MSpacer></MSpacer>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-magnify</MIcon>\r\n            </MButton>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-dots-vertical</MIcon>\r\n            </MButton>\r\n        </MToolbar>\r\n\r\n        <MContainer Style=\"height: 282px;\">\r\n            <MRow Class=\"fill-height\"\r\n                  Align=\"AlignTypes.Center\"\r\n                  Justify=\"JustifyTypes.Center\">\r\n\t\t\t\t<ScaleTransition>\r\n\t\t\t\t\t<ShowTransitionElement Value=\"!_loading\" Class=\"text-center\">\r\n\t\t\t\t\t\t<MButton Color=\"primary\" OnClick=\"()=>Loading(true)\">\r\n                        Start loading\r\n                    </MButton>\r\n\t\t\t\t\t</ShowTransitionElement>\r\n\t\t\t\t</ScaleTransition>\r\n            </MRow>\r\n        </MContainer>\r\n    </MCard>\r\n</MContainer>\r\n\r\n@code {\r\n    private bool _loading = false;\r\n\r\n    private void Loading(bool val)\r\n    {\r\n        if (!val) return;\r\n\r\n        _loading = true;\r\n\r\n        Task.Run(async () =>\r\n        {\r\n            await Task.Delay(3000);\r\n            _loading = false;\r\n\r\n            await InvokeAsync(StateHasChanged);\r\n        });\r\n    }\r\n}\r\n\r\n",
        "Type": "Demos.Components.Progress.children.ProgressLinear.misc.ToolbarLoader",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/cards",
      "/components/progress-circular",
      "/components/lists"
    ],
    "Subtitle": "进度条",
    "Title": "Progress linear",
    "Type": "进度条"
  },
  {
    "Desc": "<p>评级组件是构建用户小部件的一个特殊但至关重要的部分。 通过评级收集用户反馈是一种简单的分析工具，可以为您的产品或应用程序提供大量反馈。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MRating\">MRating</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7296643+08:00",
    "DemoList": [
      {
        "Order": 1,
        "Name": "color",
        "Title": "颜色",
        "Description": "<p><code>MRating</code>  组件可以根据您的需要进行着色，您可以设置选定和未选定的颜色。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MRating @bind-Value=\"_rating\" BackgroundColor=\"purple lighten-3\" Color=\"purple\" Large></MRating>\r\n    <MRating @bind-Value=\"_rating\" BackgroundColor=\"pink lighten-3\" Color=\"pink\" Large></MRating>\r\n    <MRating @bind-Value=\"_rating\" BackgroundColor=\"orange lighten-3\" Color=\"orange\" Large></MRating>\r\n    <MRating @bind-Value=\"_rating\" BackgroundColor=\"green lighten-3\" Color=\"green\" Large></MRating>\r\n    <MRating @bind-Value=\"_rating\" BackgroundColor=\"red lighten-3\" Color=\"red\" Large></MRating>\r\n    <MRating @bind-Value=\"_rating\" BackgroundColor=\"indigo lighten-3\" Color=\"indigo\" Large></MRating>\r\n</div>\r\n\r\n@code\r\n{\r\n    private double _rating = 4;\r\n}",
        "Type": "Demos.Components.Rating.props.Color",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 5,
        "Name": "iconLabel",
        "Title": "图标标签",
        "Description": "<p>为图标的提供标签。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MRating @bind-Value=\"_rating\" IconLabel=\"custom icon label text {0} of {1}\"></MRating>\r\n</div>\r\n\r\n@code\r\n{\r\n    private double _rating = 4;\r\n}",
        "Type": "Demos.Components.Rating.props.IconLabel",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 3,
        "Name": "incremented",
        "Title": "增量",
        "Description": "<p><code>MRating</code> 有3个定义的图标，全图标、半图标和空图标。</p>\n",
        "Code": "<MCard Class=\"elevation-16 mx-auto\" Width=\"300\">\r\n    <MCardTitle Class=\"text-h5\">\r\n        Rate Our Framework\r\n    </MCardTitle>\r\n    <MCardText>\r\n        If you enjoy using MASA Blazor, please take a few seconds to rate your experience with the framework. It really helps!\r\n\r\n        <div class=\"text-center mt-12\">\r\n            <MRating @bind-Value=\"_rating\" Color=\"yellow darken-3\" BackgroundColor=\"grey darken-1\" EmptyIcon=\"mdi-star\" HalfIncrements Hover Large></MRating>\r\n        </div>\r\n    </MCardText>\r\n    <MDivider></MDivider>\r\n    <MCardActions Class=\"justify-space-between\">\r\n        <MButton Text>\r\n            No Thanks\r\n        </MButton>\r\n        <MButton Color=\"primary\" Text>\r\n            Rate Now\r\n        </MButton>\r\n    </MCardActions>\r\n</MCard>\r\n\r\n@code\r\n{\r\n    private double _rating = 4.5;\r\n}",
        "Type": "Demos.Components.Rating.props.Incremented",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "length",
        "Title": "长度",
        "Description": "<p>可以使用 <code>MSilder</code> 组件轻松更改 <code>MRating</code> 组件的长度。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MSlider @bind-Value=\"_length\" Color=\"red darken-4\" Min=\"1\" Max=\"15\" Label=\"Custom length\"></MSlider>\r\n    <MRating @bind-Value=\"_rating\" @bind-Length=\"_length\" Color=\"red lighten-3\" BackgroundColor=\"grey lighten-1\" Large></MRating>\r\n    <div>\r\n        <span class=\"text-caption text-uppercase\">model:</span>\r\n        <span class=\"font-weight-bold\"> @_rating</span>\r\n    </div>\r\n</div>\r\n\r\n@code {\r\n    private double _rating = 2;\r\n    private double _length = 5;\r\n}",
        "Type": "Demos.Components.Rating.props.Length",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 4,
        "Name": "size",
        "Title": "尺寸",
        "Description": "<p>使用 <code>MButton</code> 中提供的相同尺寸等级，或提供您自己的<strong>Size</strong>属性。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MRating @bind-Value=\"_rating\" BackgroundColor=\"purple lighten-3\" Color=\"purple\" Small></MRating>\r\n    <MRating @bind-Value=\"_rating\" BackgroundColor=\"pink lighten-3\" Color=\"pink\"></MRating>\r\n    <MRating @bind-Value=\"_rating\" BackgroundColor=\"green lighten-3\" Color=\"green\" Large></MRating>\r\n    <MRating @bind-Value=\"_rating\" BackgroundColor=\"red lighten-3\" Color=\"red\" XLarge></MRating>\r\n    <MRating @bind-Value=\"_rating\" BackgroundColor=\"indigo lighten-3\" Color=\"indigo\" XLarge Size=\"64\"></MRating>\r\n</div>\r\n\r\n@code\r\n{\r\n    private double _rating = 4;\r\n}",
        "Type": "Demos.Components.Rating.props.Size",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 6,
        "Name": "itemContent",
        "Title": "ItemContent",
        "Description": "<p>提供插槽是为了让您在显示评级的方式上有更多的自由。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MRating @bind-Value=\"_rating\" Items=\"_items\">\r\n        <ItemContent Context=\"props\">\r\n            <MButton Icon Color=\"@(props.IsFilled ? GenColor(props.Index) : \"grey lighten-1\")\" Large @onexclick=\"props.Click\">\r\n                <MIcon>\r\n                    @(props.IsFilled ? \"mdi-star-circle\" : \"mdi-star-circle-outline\")\r\n                </MIcon>\r\n            </MButton>\r\n        </ItemContent>\r\n    </MRating>\r\n</div>\r\n\r\n@code\r\n{\r\n    private static double _rating = 4.5;\r\n    private string[] _colors = new string[5] { \"green\", \"purple\", \"orange\", \"indigo\", \"red\" };\r\n    private List<RatingItem> _items = new List<RatingItem>\r\n    {\r\n        new RatingItem { Index = 1, IsFilled = true, IsHovered = true, Value = 1, Click = x => _rating = 2},\r\n        new RatingItem { Index = 2, IsFilled = true, IsHovered = true, Value = 2, Click = x => _rating = 3},\r\n        new RatingItem { Index = 3, IsFilled = true, IsHovered = true, Value = 3, Click = x => _rating = 4},\r\n        new RatingItem { Index = 4, IsFilled = true, IsHovered = true, Value = 4, Click = x => _rating = 5},\r\n        new RatingItem { Index = 5, IsFilled = true, IsHovered = true, Value = 5, Click = x => _rating = 6}\r\n    };\r\n\r\n    private string GenColor(int index)\r\n    {\r\n        return _colors[index];\r\n    }\r\n}",
        "Type": "Demos.Components.Rating.contents.ItemContent",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 7,
        "Name": "advanced",
        "Title": "高级用法",
        "Description": "<p><code>MRating</code> 组件可与现有组件相匹配。 用丰富的功能和漂亮的设计构建复杂的例子。</p>\n",
        "Code": "@using BlazorComponent.Web;\r\n\r\n<MCard Class=\"mx-auto overflow-hidden\" Style=\"max-width: 600px;\">\r\n    <MRow>\r\n        <MCol Class=\"d-flex\" Cols=\"6\">\r\n            <MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/ratings/fortnite1.png\"></MImage>\r\n        </MCol>\r\n        <MCol Cols=\"6\">\r\n            <MContainer Class=\"pa-0 pl-2\" Style=\"margin: -4px 0\">\r\n                <MRow>\r\n                    <MCol Class=\"d-flex\" Cols=\"7\">\r\n                        <MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/ratings/fortnite2.png\"></MImage>\r\n                    </MCol>\r\n                    <MCol Class=\"d-flex\" Cols=\"5\">\r\n                        <MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/ratings/fortnite3.png\"></MImage>\r\n                    </MCol>\r\n                    <MCol Class=\"d-flex\" Cols=\"5\">\r\n                        <MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/ratings/fortnite4.png\"></MImage>\r\n                    </MCol>\r\n                    <MCol Class=\"d-flex\" Cols=\"7\">\r\n                        <MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/ratings/fortnite5.png\"></MImage>\r\n                    </MCol>\r\n                </MRow>\r\n            </MContainer>\r\n        </MCol>\r\n    </MRow>\r\n\r\n    <MCardTitle Class=\"align-start\">\r\n        <div>\r\n            <span class=\"text-h5\">FORTNITE</span>\r\n            <div class=\"grey--text font-weight-light\">\r\n                Video game\r\n            </div>\r\n        </div>\r\n        <MSpacer></MSpacer>\r\n        <MDialog @bind-Value=\"_dialog\" Width=\"400\">\r\n            <ActivatorContent>\r\n                <MIcon @attributes=\"@context.Attrs\">mdi-share-variant</MIcon>\r\n            </ActivatorContent>\r\n            <ChildContent>\r\n                <MCard>\r\n                    <MCardTitle>\r\n                        <span class=\"text-h6 font-weight-bold\">Share</span>\r\n                        <MSpacer></MSpacer>\r\n                        <MButton Class=\"mx-0\" Icon OnClick=\"() => _dialog = false\">\r\n                            <MIcon>mdi-close-circle-outline</MIcon>\r\n                        </MButton>\r\n                    </MCardTitle>\r\n                    <MList>\r\n                        <MListItem>\r\n                            <MListItemAction>\r\n                                <MIcon Color=\"indigo\">mdi-facebook</MIcon>\r\n                            </MListItemAction>\r\n                            <MCardTitle>Facebook</MCardTitle>\r\n                        </MListItem>\r\n                        <MListItem>\r\n                            <MListItemAction>\r\n                                <MIcon Color=\"cyan\">mdi-twitter</MIcon>\r\n                            </MListItemAction>\r\n                            <MCardTitle>Twitter</MCardTitle>\r\n                        </MListItem>\r\n                        <MListItem>\r\n                            <MListItemAction>\r\n                                <MIcon Color=\"cyan\">mdi-email</MIcon>\r\n                            </MListItemAction>\r\n                            <MCardTitle>Email</MCardTitle>\r\n                        </MListItem>\r\n                    </MList>\r\n                    <MTextField @ref=\"_ref\" Label=\"@(_copied ? \"Link copied\" : \"Click to copy link\")\"\r\n                                Class=\"pa-4\" Readonly Value=\"@(\"https://g.co/kgs/nkrK43\")\" OnFocus=\"Copy\">\r\n                    </MTextField>\r\n                </MCard>\r\n            </ChildContent>\r\n        </MDialog>\r\n    </MCardTitle>\r\n\r\n    <MDivider></MDivider>\r\n    <MCardActions>\r\n        <span class=\"pl-2 grey--text text--darken-2 font-weight-light text-caption\">\r\n            16,544 reviews\r\n        </span>\r\n        <MSpacer></MSpacer>\r\n        <MRating @bind-Value=\"_rating\" Length=\"10\" Readonly Items=\"_items\">\r\n            <ItemContent Context=\"props\">\r\n                <MIcon Large Color=\"@(props.IsFilled ? \"purple darken-4\" : \"\")\">\r\n                    @($\"mdi-numeric-{props.Index}-box\")\r\n                </MIcon>\r\n            </ItemContent>\r\n        </MRating>\r\n    </MCardActions>\r\n    <div class=\"pa-4 pt-0 text-caption\">\r\n        <em>Portions of the materials used are trademarks and/or copyrighted works of Epic Games, Inc. All rights reserved by Epic. This material is not official and is not endorsed by Epic.</em>\r\n    </div>\r\n</MCard>\r\n\r\n@code\r\n{\r\n    [Inject]\r\n    public Document Document { get; set; }\r\n\r\n    private bool _copied = false;\r\n    private bool _dialog = false;\r\n    private double _rating = 10;\r\n    private MTextField<string> _ref;\r\n\r\n    private List<RatingItem> _items = new List<RatingItem>\r\n    {\r\n        new RatingItem {Index = 1, IsFilled = true},\r\n        new RatingItem {Index = 2, IsFilled = true},\r\n        new RatingItem {Index = 3, IsFilled = true},\r\n        new RatingItem {Index = 4, IsFilled = true},\r\n        new RatingItem {Index = 5, IsFilled = true},\r\n        new RatingItem {Index = 6, IsFilled = true},\r\n        new RatingItem {Index = 7, IsFilled = true},\r\n        new RatingItem {Index = 8, IsFilled = true},\r\n        new RatingItem {Index = 9, IsFilled = true},\r\n        new RatingItem {Index = 10, IsFilled = true}\r\n    };\r\n\r\n    private async Task Copy(FocusEventArgs args)\r\n    {\r\n        await Document.ExecCommandAsync(\"selectAll\", false, null);\r\n        _copied = await Document.ExecCommandAsync<bool>(\"copy\", false, null);\r\n    }\r\n}",
        "Type": "Demos.Components.Rating.misc.Advanced",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 7,
        "Name": "card",
        "Title": "卡片评级",
        "Description": "<p><code>MRating</code> 组件与产品搭配良好，使你能够收集和显示客户反馈。</p>\n",
        "Code": "<MCard Class=\"mx-auto elevation-20\" Color=\"purple\" Dark Style=\"max-width: 400px;\">\r\n    <MRow Justify=\"JustifyTypes.SpaceBetween\">\r\n        <MCol Cols=\"8\">\r\n            <MCardTitle>\r\n                <div>\r\n                    <div class=\"text-h5\">Halycon Days</div>\r\n                    <div>Ellie Goulding</div>\r\n                    <div>(2013)</div>\r\n                </div>\r\n            </MCardTitle>\r\n        </MCol>\r\n        <MImage Class=\"shrink ma-2\" Contain Height=\"125\" Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/cards/halcyon.png\" Style=\"flex-basis: 125px\"></MImage>\r\n    </MRow>\r\n    <MDivider Dark></MDivider>\r\n    <MCardActions Class=\"pa-4\">\r\n        Rate this album\r\n        <MSpacer></MSpacer>\r\n        <span class=\"grey--text text--lighten-2 text-caption mr-2\">(@_rating)</span>\r\n        <MRating @bind-Value=\"_rating\" BackgroundColor=\"white\" Color=\"yellow accent-4\" Dense HalfIncrements Hover Size=\"18\"></MRating>\r\n    </MCardActions>\r\n</MCard>\r\n\r\n@code\r\n{\r\n    private double _rating = 4.3;\r\n}",
        "Type": "Demos.Components.Rating.misc.Card",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/cards",
      "/components/icons",
      "/components/lists"
    ],
    "Subtitle": "评级",
    "Title": "Ratings",
    "Type": "评级"
  },
  {
    "Desc": "<p><code>MSheet</code> 组件是许多组件的基础，如 <a href=\"/components/cards\">MCard</a>, <a href=\"/components/toolbars\">MToolbar</a>等等。 可用属性是Material Design的基础 - 纸和立面（阴影）的概念。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MSheet\">MSheet</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7326715+08:00",
    "DemoList": [
      {
        "Order": 2,
        "Name": "color",
        "Title": "颜色",
        "Description": "<p>纸张和基于它们的部件可以有不同的尺寸和颜色。</p>\n<p><code>MSheet</code> 组件接受自定义<a href=\"/stylesandanimations/colors\">Material Design Color</a>值，例如 <code>warning</code>、<code>amber darken-3</code>\n和 <code>deep-purple accent</code>，以及 <em>rgb</em>、<em>rgba</em>和<em>十六进制</em>值。</p>\n",
        "Code": "<MContainer>\r\n    <MRow Class=\"flex-child\">\r\n        <MCol Class=\"d-flex\"\r\n              Cols=\"12\"\r\n              Md=\"4\">\r\n            <MSheet Class=\"d-flex\"\r\n                    Color=\"grey lighten-3\"\r\n                    Height=\"424\">\r\n                <MSheet Class=\"mt-auto align-center justify-center d-flex px-2\"\r\n                        Color=\"rgba(0, 0, 0, .36)\"\r\n                        Dark\r\n                        Height=\"50\">\r\n                    #1: (3r x 2c)\r\n                </MSheet>\r\n            </MSheet>\r\n        </MCol>\r\n        <MCol Class=\"d-flex\"\r\n              Cols=\"12\"\r\n              Md=\"4\">\r\n            <MRow Class=\"ma-n3\">\r\n                <MCol Cols=\"6\">\r\n                    <MSheet Class=\"d-flex\"\r\n                            Color=\"green lighten-3\"\r\n                            Height=\"150\">\r\n                        <MSheet Class=\"mt-auto align-center justify-center d-flex px-2\"\r\n                                Color=\"rgba(0, 0, 0, .36)\"\r\n                                Dark\r\n                                Height=\"50\">\r\n                            #2: (1r x 1c)\r\n                        </MSheet>\r\n                    </MSheet>\r\n                </MCol>\r\n\r\n                <MCol Cols=\"6\">\r\n                    <MSheet Class=\"d-flex\"\r\n                            Color=\"yellow lighten-3\"\r\n                            Height=\"150\">\r\n                        <MSheet Class=\"mt-auto align-center justify-center d-flex px-2\"\r\n                                Color=\"rgba(0, 0, 0, .36)\"\r\n                                Dark\r\n                                Height=\"50\">\r\n                            #3: (1r x 1c)\r\n                        </MSheet>\r\n                    </MSheet>\r\n                </MCol>\r\n\r\n                <MCol Cols=\"12\">\r\n                    <MSheet Class=\"d-flex\"\r\n                            Color=\"red lighten-3\"\r\n                            Height=\"250\">\r\n                        <MSheet Class=\"mt-auto align-center justify-center d-flex px-2\"\r\n                                Color=\"rgba(0, 0, 0, .36)\"\r\n                                Dark\r\n                                Height=\"50\">\r\n                            #5: (2r x 2c)\r\n                        </MSheet>\r\n                    </MSheet>\r\n                </MCol>\r\n            </MRow>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"6\"\r\n              Md=\"2\">\r\n            <MSheet Class=\"d-flex\"\r\n                    Color=\"teal lighten-3\"\r\n                    Height=\"300\">\r\n                <MSheet Class=\"mt-auto align-center justify-center d-flex px-2\"\r\n                        Color=\"rgba(0, 0, 0, .36)\"\r\n                        Dark\r\n                        Height=\"50\">\r\n                    #4: (2r x 1c)\r\n                </MSheet>\r\n            </MSheet>\r\n        </MCol>\r\n\r\n        <MCol Class=\"d-flex\"\r\n              Cols=\"6\"\r\n              Md=\"2\">\r\n            <MSheet Class=\"d-flex mt-auto\"\r\n                    Color=\"purple lighten-3\"\r\n                    Height=\"300\">\r\n                <MSheet Class=\"mt-auto align-center justify-center d-flex px-2\"\r\n                        Color=\"rgba(0, 0, 0, .36)\"\r\n                        Dark\r\n                        Height=\"50\">\r\n                    #6: (2r x 1c)\r\n                </MSheet>\r\n            </MSheet>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n\r\n\r\n",
        "Type": "Demos.Components.Sheet.props.Color",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "elevation",
        "Title": "高度(z轴)",
        "Description": "<p><code>MSheet</code> 组件接受一个介于 <strong>0(默认值) 至 24</strong> 之间的自定义高度(z轴)。 <em>elevation</em> 属性修改 <code>box-shadow</code> 属性。 更多信息位于\nMD <a href=\"https://material.io/design/environment/elevation.html\">Elevation Design Specification</a>。</p>\n",
        "Code": "<MContainer>\r\n    <MRow Justify=\"@JustifyTypes.SpaceAround\">\r\n        @foreach (var elevation in _elevations)\r\n        {\r\n            <MCol Cols=\"12\"\r\n                  Md=\"4\">\r\n                <MSheet Class=\"pa-12\"\r\n                        Color=\"grey lighten-3\">\r\n                    <MSheet Elevation=\"elevation\"\r\n                            Class=\"mx-auto\"\r\n                            Height=\"100\"\r\n                            Width=\"100\"></MSheet>\r\n                </MSheet>\r\n            </MCol>\r\n        }\r\n\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code{\r\n    private int[] _elevations = new int[]\r\n    {\r\n        6,12,18\r\n    };\r\n}\r\n\r\n\r\n",
        "Type": "Demos.Components.Sheet.props.Elevation",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "rounded",
        "Title": "圆角",
        "Description": "<p><strong>Rounded</strong> 增加了默认 <em>4px</em> 的 <code>border-radius</code>。 默认情况下， <code>MSheet</code> 组件没有边框半径。 通过提供自定义的圆角值来定义半径的大小和位置；例如，圆角值 <em>tr-xl</em> <em>l-pill</em> 等于\n<em>rounded-tr-xl</em> <em>rounded-l-pill</em>。 关于圆角样式的其他信息在 <a href=\"/stylesandanimations/border-radius\">Border Radius</a> 页。</p>\n",
        "Code": "<MContainer>\r\n    <MRow Justify=\"@JustifyTypes.SpaceAround\">\r\n        @foreach (var rounded in _roundeds)\r\n        {\r\n            <MCol Cols=\"12\"\r\n                  Md=\"4\">\r\n                <MSheet Class=\"pa-12\"\r\n                        Color=\"grey lighten-3\">\r\n                    <div></div>\r\n                    <MSheet Rounded=\"rounded\"\r\n                            Class=\"mx-auto\"\r\n                            Height=\"100\"\r\n                            Width=\"100\"></MSheet>\r\n                    <div></div>\r\n                </MSheet>\r\n            </MCol>\r\n        }\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code{\r\n    private StringBoolean[] _roundeds = new StringBoolean[]\r\n    {\r\n        false,true,\"xl\"\r\n    };\r\n}\r\n\r\n\r\n",
        "Type": "Demos.Components.Sheet.props.Rounded",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/cards",
      "/components/grid-system",
      "/stylesandanimations/elevation"
    ],
    "Subtitle": "工作表",
    "Title": "Sheets",
    "Type": "工作表"
  },
  {
    "Desc": "<p><code>MSkeletonLoader</code> 组件是一个多功能工具，可以在一个项目中填充许多角色。 在其核心部分，该组件向用户提供了一个指示，指出某些东西即将出现但尚未可用。 有超过30个预先定义的选项，可以组合成定制的示例。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MSkeletonLoader\">MSkeletonLoader</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7346719+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p><code>MSkeletonLoader</code> 组件为用户提供了一个内容即将到来/加载的视觉指示器。 这比传统的全屏加载器要好。</p>\n",
        "Code": "<MSheet Color=\"@($\"grey {(IsDark?\"darken-2\":\"lighten-4\")}\")\"\r\n        Class=\"pa-3\">\r\n    <MSkeletonLoader Class=\"mx-auto\"\r\n                     MaxWidth=\"300\"\r\n                     Type=\"card\">\r\n    </MSkeletonLoader>\r\n</MSheet>\r\n\r\n@code {\r\n    [CascadingParameter(Name = \"IsDark\")]\r\n    public bool IsDark { get; set; }\r\n}",
        "Type": "Demos.Components.SkeletonLoader.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "BoilerplateComponent",
        "Title": "样板组件",
        "Description": "<p>MSkeletonLoader可以在创建实体模型时用作样板设计。 混合和匹配各种预定义的选项或创建您自己独特的实现。 在此示例中，我们使用自定义 data 属性来将相同的属性一次应用到多个 MSkeletonLoader。</p>\n",
        "Code": "<MContainer>\r\n    <MRow>\r\n\r\n        <MCol Cols=\"12\" Md=\"4\">\r\n            <MSkeletonLoader Class=\"@_attrs.Class\" Boilerplate=\"@_attrs.Boilerplate\" Elevation=\"@_attrs.Elevation\" Type=\"card-avatar,article,actions\"></MSkeletonLoader>\r\n            <MSkeletonLoader Class=\"@_attrs.Class\" Boilerplate=\"@_attrs.Boilerplate\" Elevation=\"@_attrs.Elevation\" Type=\"date-picker\"></MSkeletonLoader>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"12\" Md=\"4\">\r\n            <MSkeletonLoader Class=\"@_attrs.Class\" Boilerplate=\"@_attrs.Boilerplate\" Elevation=\"@_attrs.Elevation\" Type=\"article, actions\"></MSkeletonLoader>\r\n            <MSkeletonLoader Class=\"@_attrs.Class\" Boilerplate=\"@_attrs.Boilerplate\" Elevation=\"@_attrs.Elevation\" Type=\"table-heading, list-item-two-line, image, table-tfoot\"></MSkeletonLoader>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"12\" Md=\"4\">\r\n            <MSkeletonLoader Class=\"@_attrs.Class\" Boilerplate=\"@_attrs.Boilerplate\" Elevation=\"@_attrs.Elevation\" Style=\"margin-bottom:24px !important\" Type=\"list-item-avatar, divider, list-item-three-line, card-heading, image, actions\"></MSkeletonLoader>\r\n            <MSkeletonLoader Class=\"@_attrs.Class\" Boilerplate=\"@_attrs.Boilerplate\" Elevation=\"@_attrs.Elevation\" Type=\"list-item-avatar-three-line, image, article\"></MSkeletonLoader>\r\n        </MCol>\r\n\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code{\r\n    Attrs _attrs = new Attrs\r\n    {\r\n        Class =\"mb-6\",\r\n        Boilerplate=true,\r\n        Elevation=2\r\n    };\r\n\r\n    class Attrs\r\n    {\r\n        public string Class { get; set; }\r\n\r\n        public bool Boilerplate { get; set; } \r\n\r\n        public StringNumber Elevation { get; set; } \r\n    }\r\n}",
        "Type": "Demos.Components.SkeletonLoader.misc.BoilerplateComponent",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/cards",
      "/components/progress-circular",
      "/components/buttons"
    ],
    "Subtitle": "骨架装载器",
    "Title": "Skeleton loaders",
    "Type": "骨架装载器"
  },
  {
    "Desc": "<p>MSnackbar 组件用于向用户显示快速消息。 Snackbars 支持定位、移除延迟和回调。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MSnackbar\">MSnackbar</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7376715+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p><code>MSnackbar</code> 以最简单的形式向用户显示一个临时且可关闭的通知。</p>\n",
        "Code": "<div class=\"text-center ma-2\">\r\n    <MButton OnClick=\"Show\" Dark>\r\n        Open Snackbar\r\n    </MButton>\r\n    <MSnackbar @bind-Value=\"_show\" Dark>\r\n        <ChildContent>\r\n            Hello, I'm a snackbar\r\n        </ChildContent>\r\n        <ActionContent>\r\n            <MButton Color=\"pink\" Text OnClick=\"Close\">\r\n                Close\r\n            </MButton>\r\n        </ActionContent>\r\n    </MSnackbar>\r\n</div>\r\n\r\n@code{\r\n    private bool _show;\r\n\r\n    public void Show()\r\n    {\r\n        _show = true;\r\n    }\r\n\r\n    public void Close()\r\n    {\r\n        _show = false;\r\n    }\r\n}\r\n",
        "Type": "Demos.Components.Snackbar.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "multiLine",
        "Title": "多行",
        "Description": "<p><strong>MultiLine</strong> 属性扩展了 <code>MSnackbar</code> 的高度，让您有更多的内容空间。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MButton Dark\r\n           Color=\"red darken-2\"\r\n           OnClick=\"Show\">\r\n        Open Snackbar\r\n    </MButton>\r\n\r\n    <MSnackbar @bind-Value=\"_show\"\r\n               MultiLine Dark>\r\n        <ChildContent>\r\n            Hello, I'm a snackbar\r\n        </ChildContent>\r\n        <ActionContent>\r\n            <MButton Color=\"red\"\r\n                   Text\r\n                   OnClick=\"()=>_show = false\">\r\n                Close\r\n            </MButton>\r\n        </ActionContent>\r\n    </MSnackbar>\r\n</div>\r\n\r\n@code{\r\n    private bool _show;\r\n\r\n    public void Show()\r\n    {\r\n        _show = true;\r\n    }\r\n}\r\n",
        "Type": "Demos.Components.Snackbar.props.MultiLine",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "timeout",
        "Title": "超时",
        "Description": "<p><strong>Timeout</strong> 属性允许您自定义 <code>MSnackbar</code> 隐藏之前的延迟。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MButton Dark\r\n           Color=\"orange darken-2\"\r\n           OnClick=\"()=>_snackbar = true\">\r\n        Open Snackbar\r\n    </MButton>\r\n\r\n    <MSnackbar @bind-Value=\"_snackbar\"\r\n                Timeout=\"2000\" Dark>\r\n        <ChildContent>\r\n            My timeout is set to 2000.\r\n        </ChildContent>\r\n        <ActionContent>\r\n            <MButton Color=\"blue\"\r\n                     Text\r\n                     OnClick=\"()=>_snackbar = false\">\r\n                Close\r\n            </MButton>\r\n        </ActionContent>\r\n    </MSnackbar>\r\n</div>\r\n\r\n@code{\r\n    private bool _snackbar;\r\n}\r\n",
        "Type": "Demos.Components.Snackbar.props.Timeout",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "variants",
        "Title": "变体",
        "Description": "<p>使用 <strong>Text</strong>, <strong>Shaped</strong>, <strong>Outlined</strong> 等属性将不同样式应用于 <code>MSnackbar</code>。</p>\n",
        "Code": "<MCard Height=\"300\"\r\n        Flat>\r\n    <MSnackbar Timeout=\"-1\"\r\n                Value\r\n                Absolute\r\n                Left\r\n                Dark\r\n                Shaped\r\n                Top>\r\n        Lorem ipsum dolor sit amet consectetur.\r\n    </MSnackbar>\r\n\r\n    <MSnackbar Timeout=\"-1\"\r\n                Value\r\n                Color=\"blue-grey\"\r\n                Absolute\r\n                Right\r\n                Dark\r\n                Rounded=\"@(\"pill\")\"\r\n                Top>\r\n        Lorem ipsum dolor sit amet consectetur.\r\n    </MSnackbar>\r\n\r\n    <MSnackbar Timeout=\"-1\"\r\n                Value\r\n                Absolute\r\n                Dark\r\n                Centered\r\n                Color=\"deep-purple accent-4\"\r\n                Elevation=\"24\">\r\n        Lorem ipsum dolor sit amet consectetur.\r\n    </MSnackbar>\r\n\r\n    <MSnackbar Timeout=\"-1\"\r\n                Value\r\n                Absolute\r\n                Bottom\r\n                Color=\"primary\"\r\n                Left\r\n                Text>\r\n        Lorem ipsum dolor sit amet consectetur.\r\n    </MSnackbar>\r\n\r\n    <MSnackbar Timeout=\"-1\"\r\n                Value\r\n                Absolute\r\n                Bottom\r\n                Color=\"success\"\r\n                Outlined\r\n                Right>\r\n        Lorem ipsum dolor sit amet consectetur.\r\n    </MSnackbar>\r\n</MCard>\r\n\r\n",
        "Type": "Demos.Components.Snackbar.props.Variants",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "vertical",
        "Title": "垂直",
        "Description": "<p><strong>Vertical</strong> 属性允许您堆叠 <code>MSnackbar</code> 的内容。</p>\n",
        "Code": "<div class=\"text-center\">\r\n    <MButton Dark\r\n           Color=\"indigo\"\r\n           OnClick=\"()=>_snackbar = true\">\r\n        Open Snackbar\r\n    </MButton>\r\n\r\n    <MSnackbar @bind-Value=\"_snackbar\"\r\n                Vertical Dark>\r\n        <ChildContent>\r\n            Lorem ipsum dolor sit amet\r\n        </ChildContent>\r\n        <ActionContent>\r\n            <MButton Color=\"indigo\"\r\n                     Text\r\n                     OnClick=\"()=>_snackbar = false\">\r\n                Close\r\n            </MButton>\r\n        </ActionContent>\r\n    </MSnackbar>\r\n</div>\r\n\r\n@code{\r\n    private bool _snackbar;\r\n}\r\n",
        "Type": "Demos.Components.Snackbar.props.Vertical",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/buttons",
      "/stylesandanimations/colors",
      "/components/forms"
    ],
    "Subtitle": "消息条",
    "Title": "Snackbars",
    "Type": "消息条"
  },
  {
    "Desc": "<p><code>MStepper</code> 组件通过数字步骤显示进度。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MStepper\">MStepper</a></li>\n<li><a href=\"/api/MStepperContent\">MStepperContent</a></li>\n<li><a href=\"/api/MStepperHeader\">MStepperHeader</a></li>\n<li><a href=\"/api/MStepperItems\">MStepperItems</a></li>\n<li><a href=\"/api/MStepperStep\">MStepperStep</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7436723+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>一个步骤组件适用于多种场景，包括购物车、创建记录等等。</p>\n",
        "Code": "<MStepper Value=\"_step\">\r\n    <MStepperHeader>\r\n        <MStepperStep Step=\"1\" Complete=\"_step>1\">\r\n            Name of step 1\r\n        </MStepperStep>\r\n        <MDivider></MDivider>\r\n        <MStepperStep Step=\"2\" Complete=\"_step>2\">\r\n            Name of step 2\r\n        </MStepperStep>\r\n        <MDivider></MDivider>\r\n        <MStepperStep Step=\"3\">\r\n            Name of step 3\r\n        </MStepperStep>\r\n    </MStepperHeader>\r\n\r\n    <MStepperItems>\r\n        <MStepperContent Step=\"1\">\r\n            <MCard Class=\"mb-12\" Height=\"200\" Color=\"grey lighten-1\"></MCard>\r\n            <MButton Color=\"primary\" OnClick=\"()=>_step=2\">Continue</MButton>\r\n            <MButton Text>Cancel</MButton>\r\n        </MStepperContent>\r\n        <MStepperContent Step=\"2\">\r\n            <MCard Class=\"mb-12\" Height=\"200\" Color=\"grey lighten-1\"></MCard>\r\n            <MButton Color=\"primary\" OnClick=\"()=>_step=3\">Continue</MButton>\r\n            <MButton Text>Cancel</MButton>\r\n        </MStepperContent>\r\n        <MStepperContent Step=\"3\">\r\n            <MCard Class=\"mb-12\" Height=\"200\" Color=\"grey lighten-1\"></MCard>\r\n            <MButton Color=\"primary\" OnClick=\"()=>_step=1\">Continue</MButton>\r\n            <MButton Text>Cancel</MButton>\r\n        </MStepperContent>\r\n    </MStepperItems>\r\n</MStepper>\r\n\r\n@code {\r\n    private int _step = 1;\r\n}",
        "Type": "Demos.Components.Stepper.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "alternateLabel",
        "Title": "备用标签",
        "Description": "<p>步骤组件也有一个放置在步骤下方的备用标签样式。</p>\n",
        "Code": "<div>\r\n    <MStepper AltLabels>\r\n        <MStepperHeader>\r\n            <MStepperStep Step=\"1\">\r\n                Ad unit details\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Step=\"2\">\r\n                Ad sizes\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Step=\"3\">\r\n                Ad templates\r\n            </MStepperStep>\r\n        </MStepperHeader>\r\n    </MStepper>\r\n\r\n    <MStepper AltLabels\r\n              Class=\"mt-12\">\r\n        <MStepperHeader>\r\n            <MStepperStep Step=\"1\">\r\n                Ad unit details\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Step=\"2\">\r\n                Ad sizes\r\n                <small>Optional</small>\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Step=\"3\">\r\n                Ad templates\r\n            </MStepperStep>\r\n        </MStepperHeader>\r\n    </MStepper>\r\n</div>\r\n\r\n",
        "Type": "Demos.Components.Stepper.props.AlternateLabel",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "nonLinear",
        "Title": "非线性的步骤条",
        "Description": "<p><strong>NonLinear</strong> 步骤可以让用户按照自己选择路线在流程中移动。</p>\n",
        "Code": "<div>\r\n    <MStepper NonLinear>\r\n        <MStepperHeader>\r\n            <MStepperStep Editable\r\n                          Step=\"1\">\r\n                Select campaign settings\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Editable\r\n                          Step=\"2\">\r\n                Create an ad group\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Step=\"3\"\r\n                          Editable>\r\n                Create an ad\r\n            </MStepperStep>\r\n        </MStepperHeader>\r\n    </MStepper>\r\n\r\n    <MStepper Class=\"mt-12\"\r\n              non-linear>\r\n        <MStepperHeader>\r\n            <MStepperStep Complete\r\n                          Editable\r\n                          Step=\"1\">\r\n                Select campaign settings\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Editable\r\n                          Step=\"2\">\r\n                Create an ad group\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Complete\r\n                          Editable\r\n                          Step=\"3\">\r\n                Create an ad\r\n            </MStepperStep>\r\n        </MStepperHeader>\r\n    </MStepper>\r\n\r\n    <MStepper Class=\"mt-12\"\r\n              NonLinear\r\n              Value=\"3\">\r\n        <MStepperHeader>\r\n            <MStepperStep Complete\r\n                          Editable\r\n                          Step=\"1\">\r\n                Select campaign settings\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Complete\r\n                          Editable\r\n                          Step=\"2\">\r\n                Create an ad group\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Complete\r\n                          Editable\r\n                          Step=\"3\">\r\n                Create an ad\r\n            </MStepperStep>\r\n        </MStepperHeader>\r\n    </MStepper>\r\n</div>\r\n",
        "Type": "Demos.Components.Stepper.props.NonLinear",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 3,
        "Name": "vertical",
        "Title": "垂直",
        "Description": "<p>水平步骤线通过定义的步骤将用户沿Y轴移动。其他地方与水平方向的一致。</p>\n",
        "Code": "<MStepper Value=\"_step\" Vertical>\r\n    <MStepperStep Step=\"1\" Complete=\"_step>1\">\r\n        Select an app\r\n        <small>Summarize if needed</small>\r\n    </MStepperStep>\r\n    <MStepperContent Step=\"1\">\r\n        <MCard Class=\"mb-12\" Height=\"200\" Color=\"grey lighten-1\"></MCard>\r\n        <MButton Color=\"primary\" OnClick=\"()=>_step=2\">Continue</MButton>\r\n        <MButton Text>Cancel</MButton>\r\n    </MStepperContent>\r\n    <MStepperStep Step=\"2\" Complete=\"_step>2\">\r\n        Configure analytics for this app\r\n    </MStepperStep>\r\n    <MStepperContent Step=\"2\">\r\n        <MCard Class=\"mb-12\" Height=\"200\" Color=\"grey lighten-1\"></MCard>\r\n        <MButton Color=\"primary\" OnClick=\"()=>_step=3\">Continue</MButton>\r\n        <MButton Text>Cancel</MButton>\r\n    </MStepperContent>\r\n    <MStepperStep Step=\"3\" Complete=\"_step>3\">\r\n        Select an ad format and name ad unit\r\n    </MStepperStep>\r\n    <MStepperContent Step=\"3\">\r\n        <MCard Class=\"mb-12\" Height=\"200\" Color=\"grey lighten-1\"></MCard>\r\n        <MButton Color=\"primary\" OnClick=\"()=>_step=4\">Continue</MButton>\r\n        <MButton Text>Cancel</MButton>\r\n    </MStepperContent>\r\n    <MStepperStep Step=\"4\">\r\n        View setup instructions\r\n    </MStepperStep>\r\n    <MStepperContent Step=\"4\">\r\n        <MCard Class=\"mb-12\" Height=\"200\" Color=\"grey lighten-1\"></MCard>\r\n        <MButton Color=\"primary\" OnClick=\"()=>_step=1\">Continue</MButton>\r\n        <MButton Text>Cancel</MButton>\r\n    </MStepperContent>\r\n</MStepper>\r\n\r\n@code {\r\n    private int _step = 1;\r\n}",
        "Type": "Demos.Components.Stepper.props.Vertical",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 4,
        "Name": "alternativeLabelWithErrors",
        "Title": "错误状态的备用标签",
        "Description": "<p>错误状态同样可以应用于备用标签样式的显示。</p>\n",
        "Code": "<MStepper AltLabels>\r\n    <MStepperHeader>\r\n        <MStepperStep Step=\"3\"\r\n                      complete>\r\n            Ad type\r\n        </MStepperStep>\r\n\r\n        <MDivider></MDivider>\r\n\r\n        <MStepperStep Step=\"4\"\r\n                      complete>\r\n            Ad style\r\n        </MStepperStep>\r\n\r\n        <MDivider></MDivider>\r\n\r\n        <MStepperStep Rules=\"rules\"\r\n                      Step=\"5\">\r\n            Custom channels\r\n            <small>Alert message</small>\r\n        </MStepperStep>\r\n\r\n        <MDivider></MDivider>\r\n\r\n        <MStepperStep Step=\"6\">\r\n            Get code\r\n        </MStepperStep>\r\n    </MStepperHeader>\r\n</MStepper>\r\n\r\n@code {\r\n    List<Func<bool>> rules = new() { Rule };\r\n    \r\n    private static bool Rule()\r\n    {\r\n        return false;\r\n    }\r\n}\r\n",
        "Type": "Demos.Components.Stepper.misc.AlternativeLabelWithErrors",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 5,
        "Name": "dynamicSteps",
        "Title": "动态步骤",
        "Description": "<p>步骤条可以动态地添加或移除他们的步骤。 如果删除了一个当前激活的步骤，请务必通过更改应用model来说明这一点。</p>\n",
        "Code": "<div>\r\n    <MCard Class=\"mb-4\">\r\n        <MCardText>\r\n            <MSelect @bind-Value=\"Steps\"\r\n                     Items=\"_items\"\r\n                     ItemValue=\"v=>v\"\r\n                     ItemText=\"v=>v.ToString()\"\r\n                     Label=\"# of steps\"></MSelect>\r\n        </MCardText>\r\n    </MCard>\r\n    <MStepper @bind-Value=\"_el\">\r\n        <MStepperHeader>\r\n\r\n            @for (var n = 1; n <= Steps; n++)\r\n            {\r\n                var i = n;\r\n                <MStepperStep Complete=\"_el > i\"\r\n                          Step=\"i\"\r\n                          Editable>\r\n                    Step @i\r\n                </MStepperStep>\r\n\r\n                @if (i != Steps)\r\n                {\r\n                    <MDivider></MDivider>\r\n                }\r\n            }\r\n        </MStepperHeader>\r\n\r\n        <MStepperItems>\r\n            @for (var n = 1; n <= Steps; n++)\r\n            {\r\n                var i = n;\r\n                <MStepperContent Step=\"i\">\r\n                    <MCard Class=\"mb-12\"\r\n                       Color=\"grey lighten-1\"\r\n                       Height=\"200\">\r\n                    </MCard>\r\n\r\n                    <MButton Color=\"primary\"\r\n                         OnClick=\"()=>NextStep(i)\">\r\n                        Continue\r\n                    </MButton>\r\n\r\n                    <MButton Text>\r\n                        Cancel\r\n                    </MButton>\r\n                </MStepperContent>\r\n            }\r\n        </MStepperItems>\r\n    </MStepper>\r\n</div>\r\n\r\n@code {\r\n    private List<int> _items = new List<int> { 2, 3, 4, 5, 6 };\r\n    private int _el = 1;\r\n    private int _steps = 2;\r\n    protected int Steps\r\n    {\r\n        get\r\n        {\r\n            return _steps;\r\n        }\r\n        set\r\n        {\r\n            if (_el > value)\r\n            {\r\n                _el = value;\r\n            }\r\n            _steps = value;\r\n        }\r\n    }\r\n\r\n    private void NextStep(int step)\r\n    {\r\n        if (step == Steps)\r\n        {\r\n            _el = 1;\r\n        }\r\n        else\r\n        {\r\n            _el = step + 1;\r\n        }\r\n    }\r\n}",
        "Type": "Demos.Components.Stepper.misc.DynamicSteps",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 6,
        "Name": "editableSteps",
        "Title": "可编辑步骤",
        "Description": "<p>用户随时可以选择可编辑的步骤并将跳转到该步。</p>\n",
        "Code": "<MStepper>\r\n    <MStepperHeader>\r\n        <MStepperStep Complete\r\n                      Editable\r\n                      Step=\"1\">\r\n            Select campaign settings\r\n        </MStepperStep>\r\n\r\n        <MDivider></MDivider>\r\n\r\n        <MStepperStep Complete\r\n                      Step=\"2\">\r\n            Create an ad group\r\n        </MStepperStep>\r\n\r\n        <MDivider></MDivider>\r\n\r\n        <MStepperStep Step=\"3\"\r\n                      Editable>\r\n            Create an ad\r\n        </MStepperStep>\r\n    </MStepperHeader>\r\n</MStepper>\r\n",
        "Type": "Demos.Components.Stepper.misc.EditableSteps",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 7,
        "Name": "errors",
        "Title": "错误状态",
        "Description": "<p>可以显示错误状态来通知用户必须采取的一些行动。</p>\n",
        "Code": "<MStepper>\r\n    <MStepperHeader>\r\n        <MStepperStep Step=\"1\">\r\n            Ad unit details\r\n        </MStepperStep>\r\n\r\n        <MDivider></MDivider>\r\n\r\n        <MStepperStep Rules=\"rules\"\r\n                      Step=\"2\">\r\n            Ad templates\r\n            <small>Alert message</small>\r\n        </MStepperStep>\r\n\r\n        <MDivider></MDivider>\r\n\r\n        <MStepperStep Step=\"3\">\r\n            Ad sizes\r\n        </MStepperStep>\r\n    </MStepperHeader>\r\n</MStepper>\r\n\r\n@code {\r\n    List<Func<bool>> rules = new() { Rule };\r\n\r\n    private static bool Rule()\r\n    {\r\n        return false;\r\n    }\r\n}",
        "Type": "Demos.Components.Stepper.misc.Errors",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 8,
        "Name": "horizontalSteps",
        "Title": "水平步骤线",
        "Description": "<p>水平步骤线通过定义的步骤将用户沿 x轴 移动。</p>\n",
        "Code": "<MStepper Value=\"1\">\r\n    <MStepperHeader>\r\n        <MStepperStep Step=\"1\">\r\n            Select campaign settings\r\n        </MStepperStep>\r\n\r\n        <MDivider></MDivider>\r\n\r\n        <MStepperStep Step=\"2\">\r\n            Create an ad group\r\n        </MStepperStep>\r\n\r\n        <MDivider></MDivider>\r\n\r\n        <MStepperStep Step=\"3\">\r\n            Create an ad\r\n        </MStepperStep>\r\n    </MStepperHeader>\r\n</MStepper>\r\n",
        "Type": "Demos.Components.Stepper.misc.HorizontalSteps",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 9,
        "Name": "linearSteppers",
        "Title": "线性步骤",
        "Description": "<p>线性步骤始终沿着你定义的路径移动。</p>\n",
        "Code": "<div>\r\n    <MStepper>\r\n        <MStepperHeader>\r\n            <MStepperStep Step=\"1\">\r\n                Select campaign settings\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Step=\"2\">\r\n                Create an ad group\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Step=\"3\">\r\n                Create an ad\r\n            </MStepperStep>\r\n        </MStepperHeader>\r\n    </MStepper>\r\n\r\n    <MStepper Value=\"2\"\r\n              Class=\"mt-12\">\r\n        <MStepperHeader>\r\n            <MStepperStep Step=\"1\"\r\n                          complete>\r\n                Select campaign settings\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Step=\"2\">\r\n                Create an ad group\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Step=\"3\">\r\n                Create an ad\r\n            </MStepperStep>\r\n        </MStepperHeader>\r\n    </MStepper>\r\n\r\n    <MStepper Value=\"3\"\r\n              Class=\"mt-12\">\r\n        <MStepperHeader>\r\n            <MStepperStep Step=\"1\"\r\n                          complete>\r\n                Select campaign settings\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Step=\"2\"\r\n                          Complete>\r\n                Create an ad group\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Step=\"3\">\r\n                Create an ad\r\n            </MStepperStep>\r\n        </MStepperHeader>\r\n    </MStepper>\r\n</div>\r\n",
        "Type": "Demos.Components.Stepper.misc.LinearSteppers",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 10,
        "Name": "nonEditableSteps",
        "Title": "不可编辑步骤",
        "Description": "<p>不可编辑步骤（Non-editable steps）强制用户在整个流程中进行线性处理。</p>\n",
        "Code": "<MStepper Value=\"2\">\r\n    <MStepperHeader>\r\n        <MStepperStep Step=\"1\"\r\n                      Complete>\r\n            Select campaign settings\r\n        </MStepperStep>\r\n\r\n        <MDivider></MDivider>\r\n\r\n        <MStepperStep Step=\"2\">\r\n            Create an ad group\r\n        </MStepperStep>\r\n\r\n        <MDivider></MDivider>\r\n\r\n        <MStepperStep Step=\"3\">\r\n            Create an ad\r\n        </MStepperStep>\r\n    </MStepperHeader>\r\n</MStepper>\r\n",
        "Type": "Demos.Components.Stepper.misc.NonEditableSteps",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 11,
        "Name": "optionalSteps",
        "Title": "可选步骤",
        "Description": "<p>可选步骤可由子文本调出。</p>\n",
        "Code": "<div>\r\n    <MStepper Value=\"1\">\r\n        <MStepperHeader>\r\n            <MStepperStep Step=\"1\">\r\n                Select campaign settings\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Step=\"2\">\r\n                Create an ad group\r\n                <small>Optional</small>\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Step=\"3\">\r\n                Create an ad\r\n            </MStepperStep>\r\n        </MStepperHeader>\r\n    </MStepper>\r\n\r\n    <MStepper Value=\"2\"\r\n              Class=\"mt-12\">\r\n        <MStepperHeader>\r\n            <MStepperStep Step=\"1\"\r\n                          Complete>\r\n                Select campaign settings\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Step=\"2\">\r\n                Create an ad group\r\n                <small>Optional</small>\r\n            </MStepperStep>\r\n\r\n            <MDivider></MDivider>\r\n\r\n            <MStepperStep Step=\"3\">\r\n                Create an ad\r\n            </MStepperStep>\r\n        </MStepperHeader>\r\n    </MStepper>\r\n</div>\r\n",
        "Type": "Demos.Components.Stepper.misc.OptionalSteps",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 12,
        "Name": "verticalErrors",
        "Title": "垂直错误",
        "Description": "<p>同样的，错误状态也可以应用于垂直的步骤。</p>\n",
        "Code": "<MStepper @bind-Value=\"e13\"\r\n          Vertical>\r\n    <MStepperStep Step=\"1\"\r\n                  Complete>\r\n        Name of Step 1\r\n    </MStepperStep>\r\n\r\n    <MStepperContent Step=\"1\">\r\n        <MCard Color=\"grey lighten-1\"\r\n               Class=\"mb-12\"\r\n               Height=\"200\"></MCard>\r\n        <MButton Color=\"primary\"\r\n                 OnClick=\"()=>e13 = 2\">\r\n            Continue\r\n        </MButton>\r\n        <MButton Text>\r\n            Cancel\r\n        </MButton>\r\n    </MStepperContent>\r\n\r\n    <MStepperStep Step=\"2\"\r\n                  Complete>\r\n        Name of Step 2\r\n    </MStepperStep>\r\n\r\n    <MStepperContent Step=\"2\">\r\n        <MCard Color=\"grey lighten-1\"\r\n               Class=\"mb-12\"\r\n               Height=\"200\"></MCard>\r\n        <MButton Color=\"primary\"\r\n                 OnClick=\"()=>e13 = 3\">\r\n            Continue\r\n        </MButton>\r\n        <MButton Text>\r\n            Cancel\r\n        </MButton>\r\n    </MStepperContent>\r\n\r\n    <MStepperStep Rules=\"rules\"\r\n                  Step=\"3\">\r\n        Ad templates\r\n        <small>Alert message</small>\r\n    </MStepperStep>\r\n\r\n    <MStepperContent Step=\"3\">\r\n        <MCard Color=\"grey lighten-1\"\r\n               Class=\"mb-12\"\r\n               Height=\"200\"></MCard>\r\n        <MButton Color=\"primary\"\r\n                 OnClick=\"()=>e13 = 4\">\r\n            Continue\r\n        </MButton>\r\n        <MButton Text>\r\n            Cancel\r\n        </MButton>\r\n    </MStepperContent>\r\n\r\n    <MStepperStep Step=\"4\">\r\n        View setup instructions\r\n    </MStepperStep>\r\n\r\n    <MStepperContent Step=\"4\">\r\n        <MCard Color=\"grey lighten-1\"\r\n               Class=\"mb-12\"\r\n               Height=\"200\"></MCard>\r\n        <MButton Color=\"primary\"\r\n                 OnClick=\"()=>e13 = 1\">\r\n            Continue\r\n        </MButton>\r\n        <MButton Text>\r\n            Cancel\r\n        </MButton>\r\n    </MStepperContent>\r\n</MStepper>\r\n\r\n@code {\r\n    private int e13 = 2;\r\n    List<Func<bool>> rules = new List<Func<bool>>() { Rule };\r\n    private static bool Rule()\r\n    {\r\n        return false;\r\n    }\r\n}",
        "Type": "Demos.Components.Stepper.misc.VerticalErrors",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/tabs",
      "/components/buttons",
      "/components/windows"
    ],
    "Subtitle": "步骤条",
    "Title": "Steppers",
    "Type": "步骤条"
  },
  {
    "Desc": "<p>用于分隔列表的各个部分。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MSubheader\">MSubheader</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7471771+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>最简单形式的副标题显示带有默认主题的副标题。</p>\n",
        "Code": "<MSubheader>Subheader</MSubheader>",
        "Type": "Demos.Components.Subheader.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "inset",
        "Title": "嵌入",
        "Description": "<p><strong>Inset</strong> 的副标题向右移动72像素。 这使您可以选择将它们与列表项和插入分隔符对齐。</p>\n",
        "Code": "<MCol Cols=\"12\"\r\n      Sm=\"6\"\r\n      OffsetSm=\"3\">\r\n    <MCard>\r\n        <MSubheader Inset>\r\n            Subheader\r\n        </MSubheader>\r\n\r\n        <MList>\r\n            @foreach (var item in _items)\r\n            {\r\n                if (item.Action != null)\r\n                {\r\n                    <MListItem>\r\n                        <MListItemAction>\r\n                            <MIcon>@item.Action</MIcon>\r\n                        </MListItemAction>\r\n\r\n                        <MListItemContent>\r\n                            <MListItemTitle>@item.Title</MListItemTitle>\r\n                        </MListItemContent>\r\n                    </MListItem>\r\n                }\r\n                else if (item.Divider)\r\n                {\r\n                    <MDivider Inset></MDivider>\r\n                }\r\n            }\r\n        </MList>\r\n    </MCard>\r\n</MCol>\r\n\r\n@code{\r\n    class Item\r\n    {\r\n        public string Action { get; set; }\r\n        public string Title { get; set; }\r\n        public bool Divider { get; set; }\r\n    }\r\n\r\n    private List<Item> _items = new List<Item>\r\n    {\r\n       new Item \r\n       {\r\n          Action= \"mdi-label\",\r\n          Title= \"List item 1\",\r\n       },\r\n       new Item \r\n       {\r\n          Divider= true,\r\n       },\r\n       new Item \r\n       {\r\n          Action= \"mdi-label\",\r\n          Title= \"List item 2\",\r\n       },\r\n       new Item \r\n       {\r\n          Divider= true,\r\n       },\r\n        new Item\r\n        {\r\n          Action= \"mdi-label\",\r\n          Title= \"List item 3\",\r\n        }\r\n    };\r\n}",
        "Type": "Demos.Components.Subheader.props.Inset",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "grid",
        "Title": "栅格",
        "Description": "<p>一个副标题可以添加到上下文中，对用户正在看的东西起到分类等作用。</p>\n",
        "Code": "<MRow>\r\n    <MCol Cols=\"12\" Sm=\"6\" OffsetSm=\"3\">\r\n        <MCard>\r\n            <MToolbar Color=\"white\" Flat>\r\n                <MButton Icon Light>\r\n                    <MIcon Color=\"grey darken-2\">mdi-arrow-left</MIcon>\r\n                </MButton>\r\n\r\n                <MToolbarTitle Class=\"grey--text text--darken-4\">Albums</MToolbarTitle>\r\n\r\n                <MSpacer></MSpacer>\r\n\r\n                <MButton Icon Light>\r\n                    <MIcon Color=\"grey darken-2\">mdi-magnify</MIcon>\r\n                </MButton>\r\n            </MToolbar>\r\n\r\n            <MSubheader>May</MSubheader>\r\n            <MContainer Fluid>\r\n                <MRow>\r\n                    @for (var i = 1; i <= 6; i++)\r\n                    {\r\n                        var index = i + 20;\r\n                        <MCol Cols=\"4\">\r\n                            <MImage Src=\"@($\"https://randomuser.me/api/portraits/men/{index}.jpg\")\" Alt=\"lorem\" Class=\"image\" Height=\"@(\"100%\")\" Width=\"@(\"100%\")\"></MImage>\r\n                        </MCol>\r\n                    }\r\n                </MRow>\r\n            </MContainer>\r\n\r\n            <MSubheader>June</MSubheader>\r\n            <MContainer Fluid>\r\n                <MRow>\r\n                    @for (var i = 1; i <= 6; i++)\r\n                    {\r\n                        var index = i + 5;\r\n                        <MCol Cols=\"4\">\r\n                            <MImage Src=\"@($\"https://randomuser.me/api/portraits/women/{index}.jpg\")\" Alt=\"lorem\" Class=\"image\" Height=\"@(\"100%\")\" Width=\"@(\"100%\")\"></MImage>\r\n                        </MCol>\r\n                    }\r\n                </MRow>\r\n            </MContainer>\r\n\r\n            <MFooter Class=\"mt-12\"></MFooter>\r\n        </MCard>\r\n    </MCol>\r\n</MRow>",
        "Type": "Demos.Components.Subheader.misc.Grid",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 1,
        "Name": "menu",
        "Title": "菜单",
        "Description": "<p>使用副标题可以帮助分离不同类型的操作。</p>\n",
        "Code": "<MRow>\r\n    <MCol Cols=\"12\" Sm=\"6\" OffsetSm=\"3\">\r\n        <MCard>\r\n            <MToolbar Color=\"teal\" Dark>\r\n                <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n                <MToolbarTitle>Manage</MToolbarTitle>\r\n\r\n                <MSpacer></MSpacer>\r\n\r\n                <MButton Icon>\r\n                    <MIcon>mdi-dots-vertical</MIcon>\r\n                </MButton>\r\n            </MToolbar>\r\n\r\n            <MList>\r\n                @foreach (var item in _items)\r\n                {\r\n                    if (!string.IsNullOrWhiteSpace(item.Action))\r\n                    {\r\n                        <MListItem>\r\n                            <MListItemAction>\r\n                                <MIcon>@item.Action</MIcon>\r\n                            </MListItemAction>\r\n\r\n                            <MListItemContent>\r\n                                <MListItemTitle>@item.Title</MListItemTitle>\r\n                            </MListItemContent>\r\n                        </MListItem>\r\n                    }\r\n                    else if (item.Divider)\r\n                    {\r\n                        <MDivider></MDivider>\r\n                    }\r\n                    else if (!string.IsNullOrWhiteSpace(item.Header))\r\n                    {\r\n                        <MSubheader>@item.Header</MSubheader>\r\n                    }\r\n                }\r\n            </MList>\r\n        </MCard>\r\n    </MCol>\r\n</MRow>\r\n\r\n@code\r\n{\r\n    private class DataDemo\r\n    {\r\n        public string Action { get; set; }\r\n        public string Title { get; set; }\r\n        public bool Divider { get; set; }\r\n        public string Header { get; set; }\r\n    }\r\n\r\n    private List<DataDemo> _items = new List<DataDemo>()\r\n    {\r\n        new DataDemo { Action = \"mdi-inbox-arrow-down\", Title = \"Inbox\" },\r\n        new DataDemo { Action = \"mdi-send\", Title = \"Sent\" },\r\n        new DataDemo { Action = \"mdi-delete\", Title = \"Trash\" },\r\n        new DataDemo { Action = \"mdi-alert-octagon\", Title = \"Spam\" },\r\n        new DataDemo { Divider = true },\r\n        new DataDemo { Header = \"Labels\" },\r\n        new DataDemo { Action = \"mdi-label\", Title = \"Family\" },\r\n        new DataDemo { Action = \"mdi-label\", Title = \"Friends\" },\r\n        new DataDemo { Action = \"mdi-label\", Title = \"Work\" }\r\n    };\r\n}",
        "Type": "Demos.Components.Subheader.misc.Menu",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 2,
        "Name": "socialMedia",
        "Title": "社交媒体",
        "Description": "<p>在社交媒体互动中使用子标题。</p>\n",
        "Code": "<MCard Flat Tile>\r\n    <MToolbar Color=\"cyan\" Dark>\r\n        <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n        <MToolbarTitle>Application</MToolbarTitle>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Icon>\r\n            <MIcon>mdi-magnify</MIcon>\r\n        </MButton>\r\n    </MToolbar>\r\n\r\n    @foreach (var type in types)\r\n    {\r\n        <MContainer Class=\"grey lighten-4\" Fluid>\r\n            <MSubheader>@type</MSubheader>\r\n\r\n            <MRow>\r\n                <MSpacer></MSpacer>\r\n                @foreach (var card in cards)\r\n                {\r\n                    <MCol Cols=\"12\" Sm=\"6\" Md=\"4\">\r\n                        <MCard>\r\n                            <MImage Src=\"@($\"https://picsum.photos/200/300?image={GetImage(type,card)}\")\" Height=\"300\">\r\n                                <span class=\"text-h5 white--text pl-4 pt-4 d-inline-block\">@card</span>\r\n                            </MImage>\r\n\r\n                            <MCardActions Class=\"white justify-center\">\r\n                                @foreach (var social in socials)\r\n                                {\r\n                                    <MButton Color=\"@social.Color\" Class=\"white-text\" Fab Icon Small>\r\n                                        <MIcon>@social.Icon</MIcon>\r\n                                    </MButton>\r\n                                }\r\n                            </MCardActions>\r\n                        </MCard>\r\n                    </MCol>\r\n                }\r\n            </MRow>\r\n        </MContainer>\r\n    }\r\n</MCard>\r\n\r\n@code\r\n{\r\n    string[] cards = new string[3] {\"Good\", \"Best\", \"Finest\"};\r\n    \r\n    List<Social> socials = new List<Social>\r\n    {\r\n        new Social {Icon = \"mdi-facebook\", Color = \"indigo\"},\r\n        new Social {Icon = \"mdi-linkedin\", Color = \"cyan darken-1\"},\r\n        new Social {Icon = \"mdi-instagram\", Color = \"red lighten-3\"}\r\n    };\r\n    \r\n    string[] types = new string[2] {\"Places to Be\", \"Places to See\"};\r\n\r\n    double GetImage(string type, string card)\r\n    {\r\n        var row = Array.IndexOf(types, type);\r\n        var col = Array.IndexOf(cards, card)+1;\r\n\r\n        return 550 + types.Length * row + col;\r\n    }\r\n    \r\n    public class Social\r\n    {\r\n        public string Icon { get; set; }\r\n        public string Color { get; set; }\r\n    }\r\n}",
        "Type": "Demos.Components.Subheader.misc.SocialMedia",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/cards",
      "/components/grid-system",
      "/components/lists"
    ],
    "Subtitle": "副标题",
    "Title": "Subheaders",
    "Type": "副标题"
  },
  {
    "Desc": "<p><code>MDataIterator</code> 组件用于显示数据，并且与 <code>MDataTable</code> 组件共享其大部分功能。 功能包括排序、搜索、分页和选择。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MDataIterator\">MDataIterator</a></li>\n<li><a href=\"/api/MDataFooter\">MDataFooter</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7481854+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "default",
        "Title": "默认插槽",
        "Description": "<p><code>MDataIterator</code> 的内部具有选择和扩展状态，就像 <code>MDataTable</code> 一样。 在这个示例中，我们在默认插槽上使用使用 <code>isExpanded</code> 和 <code>expand</code> 。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MSwitch @bind-Value=\"_singleExpand\"\r\n             Label=\"Expand Single Item\"></MSwitch>\r\n    <MDataIterator Items=\"_desserts\"\r\n                   ItemKey=\"r=>r.Name\"\r\n                   ItemsPerPage=\"4\"\r\n                   SingleExpand=\"_singleExpand\"\r\n                   HideDefaultFooter>\r\n        <ChildContent Context=\"props\">\r\n            <MRow>\r\n                @foreach (var item in props.Items)\r\n                {\r\n                    var expanded = props.IsExpanded(item);\r\n                    var expand = delegate (bool v) { props.Expand(item, v); };\r\n                    <MCol @key=\"item.Name\"\r\n                      Cols=\"12\"\r\n                      Sm=\"6\"\r\n                      Md=\"4\"\r\n                      Lg=\"3\">\r\n                        <MCard>\r\n                            <MCardTitle>\r\n                                <h4>@item.Name</h4>\r\n                            </MCardTitle>\r\n                            <MSwitch Value=\"expanded\" ValueChanged=\"expand\" Label=\"@(expanded?\"Expanded\":\"Closed\")\" Class=\"pl-4 mt-0\"></MSwitch>\r\n                            <MDivider></MDivider>\r\n                            @if (expanded)\r\n                            {\r\n                                <MList Dense>\r\n                                    <MListItem>\r\n                                        <MListItemContent>Calories:</MListItemContent>\r\n                                        <MListItemContent Class=\"align-end\">\r\n                                            @item.Calories\r\n                                        </MListItemContent>\r\n                                    </MListItem>\r\n                                    <MListItem>\r\n                                        <MListItemContent>Fat:</MListItemContent>\r\n                                        <MListItemContent Class=\"align-end\">\r\n                                            @item.Fat\r\n                                        </MListItemContent>\r\n                                    </MListItem>\r\n                                    <MListItem>\r\n                                        <MListItemContent>Carbs:</MListItemContent>\r\n                                        <MListItemContent Class=\"align-end\">\r\n                                            @item.Carbs\r\n                                        </MListItemContent>\r\n                                    </MListItem>\r\n                                    <MListItem>\r\n                                        <MListItemContent>Protein:</MListItemContent>\r\n                                        <MListItemContent Class=\"align-end\">\r\n                                            @item.Protein\r\n                                        </MListItemContent>\r\n                                    </MListItem>\r\n                                    <MListItem>\r\n                                        <MListItemContent>Sodium:</MListItemContent>\r\n                                        <MListItemContent Class=\"align-end\">\r\n                                            @item.Sodium\r\n                                        </MListItemContent>\r\n                                    </MListItem>\r\n                                    <MListItem>\r\n                                        <MListItemContent>Calcium:</MListItemContent>\r\n                                        <MListItemContent Class=\"align-end\">\r\n                                            @item.Calcium\r\n                                        </MListItemContent>\r\n                                    </MListItem>\r\n                                    <MListItem>\r\n                                        <MListItemContent>Iron:</MListItemContent>\r\n                                        <MListItemContent Class=\"align-end\">\r\n                                            @item.Iron\r\n                                        </MListItemContent>\r\n                                    </MListItem>\r\n                                </MList>\r\n                            }\r\n                        </MCard>\r\n                    </MCol>\r\n                }\r\n            </MRow>\r\n        </ChildContent>\r\n    </MDataIterator>\r\n</MContainer>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public int Sodium { get; set; }\r\n\r\n        public string Calcium { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private bool _singleExpand;\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 159,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0,\r\n              Sodium= 87,\r\n              Calcium= \"14%\",\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 237,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3,\r\n              Sodium= 129,\r\n              Calcium= \"8%\",\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 262,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0,\r\n              Sodium= 337,\r\n              Calcium= \"6%\",\r\n              Iron= \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Calories= 305,\r\n              Fat= 3.7,\r\n              Carbs= 67,\r\n              Protein= 4.3,\r\n              Sodium= 413,\r\n              Calcium= \"3%\",\r\n              Iron= \"8%\",\r\n            },\r\n        };\r\n  }",
        "Type": "Demos.Components.Tables.children.DataIterator.props.Default",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "headerAndFooter",
        "Title": "页眉和页脚",
        "Description": "<p><code>MDataIterator</code> 有用于添加额外内容的 <strong>HeaderContent</strong> 和 <strong>FooterContent</strong> 插槽。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MDataIterator Items=\"_desserts\"\r\n                   ItemsPerPage=\"_itemsPerPage\"\r\n                   HideDefaultFooter>\r\n        <HeaderContent>\r\n            <MToolbar Class=\"mb-2\"\r\n                      Color=\"indigo darken-5\"\r\n                      Dark\r\n                      Flat>\r\n                <MToolbarTitle>This is a header</MToolbarTitle>\r\n            </MToolbar>\r\n        </HeaderContent>\r\n        <ChildContent>\r\n            <MRow>\r\n                @foreach (var item in _desserts)\r\n                {\r\n                    <MCol @key=\"item.Name\"\r\n                      Cols=\"12\"\r\n                      Sm=\"6\"\r\n                      Md=\"4\"\r\n                      Lg=\"3\">\r\n                        <MCard>\r\n                            <MCardTitle Class=\"subheading font-weight-bold\">\r\n                                @item.Name\r\n                            </MCardTitle>\r\n\r\n                            <MDivider></MDivider>\r\n\r\n                            <MList Dense>\r\n                                <MListItem>\r\n                                    <MListItemContent>Calories:</MListItemContent>\r\n                                    <MListItemContent Class=\"align-end\">\r\n                                        @item.Calories\r\n                                    </MListItemContent>\r\n                                </MListItem>\r\n\r\n                                <MListItem>\r\n                                    <MListItemContent>Fat:</MListItemContent>\r\n                                    <MListItemContent Class=\"align-end\">\r\n                                        @item.Fat\r\n                                    </MListItemContent>\r\n                                </MListItem>\r\n\r\n                                <MListItem>\r\n                                    <MListItemContent>Carbs:</MListItemContent>\r\n                                    <MListItemContent Class=\"align-end\">\r\n                                        @item.Carbs\r\n                                    </MListItemContent>\r\n                                </MListItem>\r\n\r\n                                <MListItem>\r\n                                    <MListItemContent>Protein:</MListItemContent>\r\n                                    <MListItemContent Class=\"align-end\">\r\n                                        @item.Protein\r\n                                    </MListItemContent>\r\n                                </MListItem>\r\n\r\n                                <MListItem>\r\n                                    <MListItemContent>Sodium:</MListItemContent>\r\n                                    <MListItemContent Class=\"align-end\">\r\n                                        @item.Sodium\r\n                                    </MListItemContent>\r\n                                </MListItem>\r\n\r\n                                <MListItem>\r\n                                    <MListItemContent>Calcium:</MListItemContent>\r\n                                    <MListItemContent Class=\"align-end\">\r\n                                        @item.Calcium\r\n                                    </MListItemContent>\r\n                                </MListItem>\r\n\r\n                                <MListItem>\r\n                                    <MListItemContent>Iron:</MListItemContent>\r\n                                    <MListItemContent Class=\"align-end\">\r\n                                        @item.Iron\r\n                                    </MListItemContent>\r\n                                </MListItem>\r\n                            </MList>\r\n                        </MCard>\r\n                    </MCol>\r\n                }\r\n            </MRow>\r\n        </ChildContent>\r\n        <FooterContent>\r\n            <MToolbar Class=\"mt-2\"\r\n                      Color=\"indigo\"\r\n                      Dark\r\n                      Flat>\r\n                <MToolbarTitle Class=\"subheading\">\r\n                    This is a footer\r\n                </MToolbarTitle>\r\n            </MToolbar>\r\n        </FooterContent>\r\n    </MDataIterator>\r\n</MContainer>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public int Sodium { get; set; }\r\n\r\n        public string Calcium { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private int _itemsPerPage = 4;\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 159,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0,\r\n              Sodium= 87,\r\n              Calcium= \"14%\",\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 237,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3,\r\n              Sodium= 129,\r\n              Calcium= \"8%\",\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 262,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0,\r\n              Sodium= 337,\r\n              Calcium= \"6%\",\r\n              Iron= \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Calories= 305,\r\n              Fat= 3.7,\r\n              Carbs= 67,\r\n              Protein= 4.3,\r\n              Sodium= 413,\r\n              Calcium= \"3%\",\r\n              Iron= \"8%\",\r\n            },\r\n        };\r\n  }",
        "Type": "Demos.Components.Tables.children.DataIterator.props.HeaderAndFooter",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "filter",
        "Title": "过滤器",
        "Description": "<p>排序，过滤和分页可以从外部使用单独的属性进行控制。</p>\n",
        "Code": "<MContainer Fluid>\r\n    <MDataIterator Items=\"_desserts\"\r\n                   ItemsPerPage=\"_itemsPerPage\"\r\n                   Page=\"_page\"\r\n                   Search=\"@_search\"\r\n                   SortBy=\"_sortBy\"\r\n                   SortDesc=\"_sortDesc\"\r\n                   ItemValues=\"_keys\"\r\n                   HideDefaultFooter>\r\n        <HeaderContent>\r\n            <MToolbar Class=\"mb-1\"\r\n                      Color=\"blue darken-3\"\r\n                      Dark>\r\n                <MTextField @bind-Value=\"_search\"\r\n                            Clearable\r\n                            Flat\r\n                            SoloInverted\r\n                            HideDetails=\"true\"\r\n                            PrependInnerIcon=\"mdi-magnify\"\r\n                            Label=\"Search\"></MTextField>\r\n                <MSpacer></MSpacer>\r\n                <MSelect @bind-Value=\"_sortBy\"\r\n                         Flat\r\n                         SoloInverted\r\n                         HideDetails=\"true\"\r\n                         Items=\"_keys\"\r\n                         ItemValue=\"r=>r.Name\"\r\n                         ItemText=\"r=>r.Name\"\r\n                         PrependInnerIcon=\"mdi-magnify\"\r\n                         Label=\"Sort by\"></MSelect>\r\n                <MSpacer></MSpacer>\r\n                <MButtonGroup @bind-Value=\"_sortDescStr\" Mandatory>\r\n                    <MButton Large\r\n                             Depressed\r\n                             Color=\"blue\"\r\n                             Value=\"@(\"false\")\">\r\n                        <MIcon>mdi-arrow-up</MIcon>\r\n                    </MButton>\r\n                    <MButton Large\r\n                             Depressed\r\n                             Color=\"blue\"\r\n                             Value=\"@(\"true\")\">\r\n                        <MIcon>mdi-arrow-down</MIcon>\r\n                    </MButton>\r\n                </MButtonGroup>\r\n            </MToolbar>\r\n        </HeaderContent>\r\n        <ChildContent Context=\"props\">\r\n            <MRow>\r\n                @foreach (var item in props.Items)\r\n                {\r\n                    <MCol @key=\"item.Name\"\r\n                      Cols=\"12\"\r\n                      Sm=\"6\"\r\n                      Md=\"4\"\r\n                      Lg=\"3\">\r\n                        <MCard>\r\n                            <MCardTitle Class=\"subheading font-weight-bold\">\r\n                                @item.Name\r\n                            </MCardTitle>\r\n\r\n                            <MDivider></MDivider>\r\n\r\n                            <MList Dense>\r\n                                @for (var i = 0; i < FilteredKeys.Count; i++)\r\n                                {\r\n                                    var key = FilteredKeys[i];\r\n                                    var blue = key == _sortBy;\r\n                                    var value = key.Invoke(item);\r\n                                    <MListItem @key=\"i\">\r\n                                        <MListItemContent Class=\"@(blue?\"blue--text\":null)\">\r\n                                            @key:\r\n                                        </MListItemContent>\r\n                                        <MListItemContent Class=\"@(blue?\"blue--text align-end\":\"align-end\")\">\r\n                                            @value\r\n                                        </MListItemContent>\r\n                                    </MListItem>\r\n                                }\r\n                            </MList>\r\n                        </MCard>\r\n                    </MCol>\r\n                }\r\n            </MRow>\r\n        </ChildContent>\r\n        <FooterContent>\r\n            <MRow Class=\"mt-2\"\r\n                  Align=\"@(\"center\")\"\r\n                  Justify=\"@(\"center\")\">\r\n                <span class=\"grey--text\">Items per page</span>\r\n                <MMenu OffsetY>\r\n                    <ActivatorContent>\r\n                        <MButton Dark\r\n                                 Text\r\n                                 Color=\"primary\"\r\n                                 Class=\"ml-2\"\r\n                                 @attributes=\"@context.Attrs\">\r\n                            @_itemsPerPage\r\n                            <MIcon>mdi-chevron-down</MIcon>\r\n                        </MButton>\r\n                    </ActivatorContent>\r\n                    <ChildContent>\r\n                        <MList>\r\n                            @for (var i = 0; i < _itemsPerPageArray.Count; i++)\r\n                            {\r\n                                var index = i;\r\n                                var number = _itemsPerPageArray[i];\r\n                                <MListItem @key=\"index\"\r\n                                       OnClick=\"()=>UpdateItemsPerPage(number)\">\r\n                                    <MListItemTitle>@number</MListItemTitle>\r\n                                </MListItem>\r\n                            }\r\n                        </MList>\r\n                    </ChildContent>\r\n                </MMenu>\r\n\r\n                <MSpacer></MSpacer>\r\n\r\n                <span class=\"mr-4 grey--text\">\r\n                    Page @_page of @_numberOfPages\r\n                </span>\r\n                <MButton Fab\r\n                         Dark\r\n                         Color=\"blue darken-3\"\r\n                         Class=\"mr-1\"\r\n                         OnClick=\"FormerPage\">\r\n                    <MIcon>mdi-chevron-left</MIcon>\r\n                </MButton>\r\n                <MButton Fab\r\n                         Dark\r\n                         Color=\"blue darken-3\"\r\n                         Class=\"ml-1\"\r\n                         OnClick=\"NextPage\">\r\n                    <MIcon>mdi-chevron-right</MIcon>\r\n                </MButton>\r\n            </MRow>\r\n        </FooterContent>\r\n    </MDataIterator>\r\n</MContainer>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public int Sodium { get; set; }\r\n\r\n        public string Calcium { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private List<int> _itemsPerPageArray = new List<int>\r\n    {\r\n        4,8,12\r\n    };\r\n    private StringNumber _sortDescStr = \"false\";\r\n    private string _sortBy;\r\n    private List<bool> _sortDesc => new List<bool>\r\n        {\r\n            Convert.ToBoolean(_sortDescStr.Value)\r\n        };\r\n    private string _search;\r\n    private int _itemsPerPage = 4;\r\n    private int _page = 1;\r\n    private List<ItemValue<Dessert>> _keys => new List<ItemValue<Dessert>>()\r\n        {\r\n            nameof(Dessert.Name),\r\n            nameof(Dessert.Calories),\r\n            nameof(Dessert.Fat),\r\n            nameof(Dessert.Carbs),\r\n            nameof(Dessert.Protein),\r\n            nameof(Dessert.Sodium),\r\n            nameof(Dessert.Calcium),\r\n            nameof(Dessert.Iron)\r\n        };\r\n    private int _numberOfPages => Convert.ToInt32(Math.Ceiling(_desserts.Count / (_itemsPerPage * 1.0)));\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 159,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0,\r\n              Sodium= 87,\r\n              Calcium= \"14%\",\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 237,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3,\r\n              Sodium= 129,\r\n              Calcium= \"8%\",\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 262,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0,\r\n              Sodium= 337,\r\n              Calcium= \"6%\",\r\n              Iron= \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Calories= 305,\r\n              Fat= 3.7,\r\n              Carbs= 67,\r\n              Protein= 4.3,\r\n              Sodium= 413,\r\n              Calcium= \"3%\",\r\n              Iron= \"8%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Gingerbread\",\r\n              Calories= 356,\r\n              Fat= 16.0,\r\n              Carbs= 49,\r\n              Protein= 3.9,\r\n              Sodium= 327,\r\n              Calcium= \"7%\",\r\n              Iron= \"16%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Jelly bean\",\r\n              Calories= 375,\r\n              Fat= 0.0,\r\n              Carbs= 94,\r\n              Protein= 0.0,\r\n              Sodium= 50,\r\n              Calcium= \"0%\",\r\n              Iron= \"0%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Lollipop\",\r\n              Calories= 392,\r\n              Fat= 0.2,\r\n              Carbs= 98,\r\n              Protein= 0,\r\n              Sodium= 38,\r\n              Calcium= \"0%\",\r\n              Iron= \"2%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Honeycomb\",\r\n              Calories= 408,\r\n              Fat= 3.2,\r\n              Carbs= 87,\r\n              Protein= 6.5,\r\n              Sodium= 562,\r\n              Calcium= \"0%\",\r\n              Iron= \"45%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Donut\",\r\n              Calories= 452,\r\n              Fat= 25.0,\r\n              Carbs= 51,\r\n              Protein= 4.9,\r\n              Sodium= 326,\r\n              Calcium= \"2%\",\r\n              Iron= \"22%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"KitKat\",\r\n              Calories= 518,\r\n              Fat= 26.0,\r\n              Carbs= 65,\r\n              Protein= 7,\r\n              Sodium= 54,\r\n              Calcium= \"12%\",\r\n              Iron= \"6%\",\r\n            }\r\n\r\n        };\r\n\r\n    public List<ItemValue<Dessert>> FilteredKeys => _keys\r\n        .Where(r => r != nameof(Dessert.Name))\r\n        .ToList();\r\n\r\n    public void UpdateItemsPerPage(int number)\r\n    {\r\n        _itemsPerPage = number;\r\n    }\r\n\r\n    public void NextPage()\r\n    {\r\n        if (_page + 1 <= _numberOfPages) _page += 1;\r\n    }\r\n\r\n    public void FormerPage()\r\n    {\r\n        if (_page - 1 >= 1) _page -= 1;\r\n    }\r\n  }",
        "Type": "Demos.Components.Tables.children.DataIterator.misc.Filter",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/data-tables",
      "/components/simple-tables",
      "/components/toolbars"
    ],
    "Subtitle": "数据迭代器",
    "Title": "Data iterators",
    "Type": "数据迭代器"
  },
  {
    "Desc": "<p><code>MDataTable</code> 组件用于显示表格数据。 功能包括排序，搜索，分页，内容编辑和行选择。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MDataTable\">MDataTable</a></li>\n<li><a href=\"/api/MDataTableHeader\">MDataTableHeader</a></li>\n<li><a href=\"/api/MDataFooter\">MDataFooter</a></li>\n<li><a href=\"/api/MSimpleCheckbox\">MSimpleCheckbox</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7591843+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>标准数据表格默认会将数据呈现为简单的行。</p>\n",
        "Code": "<MDataTable Headers=\"_headers\"\r\n            Items=\"_desserts\"\r\n            ItemsPerPage=\"5\"\r\n            Class=\"elevation-1\"></MDataTable>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public int Sodium { get; set; }\r\n\r\n        public string Calcium { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new List<DataTableHeader<Dessert>>\r\n        {\r\n           new ()\r\n           {\r\n            Text= \"Dessert (100g serving)\",\r\n            Align= DataTableHeaderAlign.Start,\r\n            Sortable= false,\r\n            Value= nameof(Dessert.Name)\r\n          },\r\n          new (){ Text= \"Calories\", Value= nameof(Dessert.Calories)},\r\n          new (){ Text= \"Fat (g)\", Value= nameof(Dessert.Fat)},\r\n          new (){ Text= \"Carbs (g)\", Value= nameof(Dessert.Carbs)},\r\n          new (){ Text= \"Protein (g)\", Value= nameof(Dessert.Protein)},\r\n          new (){ Text= \"Iron (%)\", Value= nameof(Dessert.Iron) }\r\n        };\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 159,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 237,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 262,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0,\r\n              Iron= \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Calories= 305,\r\n              Fat= 3.7,\r\n              Carbs= 67,\r\n              Protein= 4.3,\r\n              Iron= \"8%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Gingerbread\",\r\n                Calories= 356,\r\n                Fat= 16.0,\r\n                Carbs= 49,\r\n                Protein= 3.9,\r\n                Iron= \"16%\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Jelly bean\",\r\n                Calories= 375,\r\n                Fat= 0.0,\r\n                Carbs= 94,\r\n                Protein= 0.0,\r\n                Iron= \"0%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Lollipop\",\r\n                Calories= 392,\r\n                Fat= 0.2,\r\n                Carbs= 98,\r\n                Protein= 0,\r\n                Iron= \"2%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Honeycomb\",\r\n                Calories= 408,\r\n                Fat= 3.2,\r\n                Carbs= 87,\r\n                Protein= 6.5,\r\n                Iron= \"45%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Donut\",\r\n                Calories= 452,\r\n                Fat= 25.0,\r\n                Carbs= 51,\r\n                Protein= 4.9,\r\n                Iron= \"22%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"KitKat\",\r\n                Calories= 518,\r\n                Fat= 26.0,\r\n                Carbs= 65,\r\n                Protein= 7,\r\n                Iron= \"6%\",\r\n            }\r\n        };\r\n  }",
        "Type": "Demos.Components.Tables.children.DataTable.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "customFilter",
        "Title": "自定义过滤器",
        "Description": "<p>你可以向 <strong>CustomFilter</strong> 属性提供一个函数，覆盖 <strong>Search</strong> 属性的默认过滤。 如果你需要自定义特定列的过滤，你可以给表头数据项的 <strong>Filter</strong> 属性提供一个函数。\n类型是<code>Func&lt;object, string, TItem, bool&gt;</code>。 即使没有提供 <strong>Search</strong> 属性，这个函数也会一直运作。 因此，你需要确保在不应用过滤器的情况下，函数会返回 true。</p>\n",
        "Code": "<div>\r\n    <MDataTable Headers=\"Headers\"\r\n                Items=\"_desserts\"\r\n                ItemKey=\"r=>r.Name\"\r\n                Class=\"elevation-1\"\r\n                Search=\"@_search\"\r\n                CustomItemFilter=\"FilterOnlyCapsText\">\r\n        <TopContent>\r\n            <MTextField @bind-Value=\"_search\"\r\n                        Label=\"Search (UPPER CASE ONLY)\"\r\n                        Class=\"mx-4\"></MTextField>\r\n        </TopContent>\r\n        <BodyAppendContent>\r\n            <tr>\r\n                <td></td>\r\n                <td>\r\n                    <MTextField @bind-Value=\"_calories\"\r\n                                Type=\"number\"\r\n                                Label=\"Less than\"></MTextField>\r\n                </td>\r\n                <td colspan=\"4\"></td>\r\n            </tr>\r\n        </BodyAppendContent>\r\n    </MDataTable>\r\n</div>\r\n\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public int Sodium { get; set; }\r\n\r\n        public string Calcium { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private string _search;\r\n    private string _calories;\r\n\r\n    public List<DataTableHeader<Dessert>> Headers => new List<DataTableHeader<Dessert>>\r\n        {\r\n           new ()\r\n           {\r\n                Text= \"Dessert (100g serving)\",\r\n                Align= DataTableHeaderAlign.Start,\r\n                Sortable= false,\r\n                Value= nameof(Dessert.Name)\r\n          },\r\n          new ()\r\n          {\r\n              Text= \"Calories\",\r\n              Value= nameof(Dessert.Calories),\r\n              Filter = (value, search, item) =>\r\n              {\r\n                  if (string.IsNullOrEmpty(_calories))\r\n                  {\r\n                      return true;\r\n                  }\r\n\r\n                  return item.Calories<Convert.ToInt32(_calories);\r\n              }\r\n          },\r\n          new (){ Text= \"Fat (g)\", Value= nameof(Dessert.Fat) },\r\n          new (){ Text= \"Carbs (g)\", Value= nameof(Dessert.Carbs)},\r\n          new (){ Text= \"Protein (g)\", Value= nameof(Dessert.Protein)},\r\n          new (){ Text= \"Iron (%)\", Value= nameof(Dessert.Iron)}\r\n        };\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 159,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 237,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 262,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0,\r\n              Iron= \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Calories= 305,\r\n              Fat= 3.7,\r\n              Carbs= 67,\r\n              Protein= 4.3,\r\n              Iron= \"8%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Gingerbread\",\r\n                Calories= 356,\r\n                Fat= 16.0,\r\n                Carbs= 49,\r\n                Protein= 3.9,\r\n                Iron= \"16%\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Jelly bean\",\r\n                Calories= 375,\r\n                Fat= 0.0,\r\n                Carbs= 94,\r\n                Protein= 0.0,\r\n                Iron= \"0%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Lollipop\",\r\n                Calories= 392,\r\n                Fat= 0.2,\r\n                Carbs= 98,\r\n                Protein= 0,\r\n                Iron= \"2%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Honeycomb\",\r\n                Calories= 408,\r\n                Fat= 3.2,\r\n                Carbs= 87,\r\n                Protein= 6.5,\r\n                Iron= \"45%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Donut\",\r\n                Calories= 452,\r\n                Fat= 25.0,\r\n                Carbs= 51,\r\n                Protein= 4.9,\r\n                Iron= \"22%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"KitKat\",\r\n                Calories= 518,\r\n                Fat= 26.0,\r\n                Carbs= 65,\r\n                Protein= 7,\r\n                Iron= \"6%\",\r\n            }\r\n        };\r\n\r\n    public bool FilterOnlyCapsText(object value, string search, Dessert item)\r\n    {\r\n        return value != null && search != null && value is string\r\n            && value.ToString().ToUpperInvariant().IndexOf(search) != -1;\r\n    }\r\n  }",
        "Type": "Demos.Components.Tables.children.DataTable.props.CustomFilter",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "dense",
        "Title": "紧凑",
        "Description": "<p>使用 <strong>Dense</strong> 属性，可以让数据表格表现为另一种样式。</p>\n",
        "Code": "<MDataTable Dense\r\n            Headers=\"_headers\"\r\n            Items=\"_desserts\"\r\n            ItemKey=\"r=>r.Name\"\r\n            Class=\"elevation-1\"></MDataTable>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public int Sodium { get; set; }\r\n\r\n        public string Calcium { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new List<DataTableHeader<Dessert>>\r\n        {\r\n           new ()\r\n           {\r\n            Text= \"Dessert (100g serving)\",\r\n            Align= DataTableHeaderAlign.Start,\r\n            Sortable= false,\r\n            Value= nameof(Dessert.Name)\r\n          },\r\n          new (){ Text= \"Calories\", Value= nameof(Dessert.Calories)},\r\n          new (){ Text= \"Fat (g)\", Value= nameof(Dessert.Fat)},\r\n          new (){ Text= \"Carbs (g)\", Value= nameof(Dessert.Carbs)},\r\n          new (){ Text= \"Protein (g)\", Value= nameof(Dessert.Protein)},\r\n          new (){ Text= \"Iron (%)\", Value= nameof(Dessert.Iron)}\r\n        };\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 159,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 237,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 262,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0,\r\n              Iron= \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Calories= 305,\r\n              Fat= 3.7,\r\n              Carbs= 67,\r\n              Protein= 4.3,\r\n              Iron= \"8%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Gingerbread\",\r\n                Calories= 356,\r\n                Fat= 16.0,\r\n                Carbs= 49,\r\n                Protein= 3.9,\r\n                Iron= \"16%\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Jelly bean\",\r\n                Calories= 375,\r\n                Fat= 0.0,\r\n                Carbs= 94,\r\n                Protein= 0.0,\r\n                Iron= \"0%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Lollipop\",\r\n                Calories= 392,\r\n                Fat= 0.2,\r\n                Carbs= 98,\r\n                Protein= 0,\r\n                Iron= \"2%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Honeycomb\",\r\n                Calories= 408,\r\n                Fat= 3.2,\r\n                Carbs= 87,\r\n                Protein= 6.5,\r\n                Iron= \"45%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Donut\",\r\n                Calories= 452,\r\n                Fat= 25.0,\r\n                Carbs= 51,\r\n                Protein= 4.9,\r\n                Iron= \"22%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"KitKat\",\r\n                Calories= 518,\r\n                Fat= 26.0,\r\n                Carbs= 65,\r\n                Protein= 7,\r\n                Iron= \"6%\",\r\n            }\r\n        };\r\n  }",
        "Type": "Demos.Components.Tables.children.DataTable.props.Dense",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "filterable",
        "Title": "可过滤",
        "Description": "<p>在搜索表格内容时，你可以设置表头数据项的 <strong>Filterable</strong> 属性为 false，禁止对应列的内容被包含在搜索结果内。 下面的示例中，不会被搜索到 Dessert 列的内容。</p>\n",
        "Code": "<MCard>\r\n    <MCardTitle>\r\n        <MTextField @bind-Value=\"_search\"\r\n                    AppendIcon=\"mdi-magnify\"\r\n                    Label=\"Search\"\r\n                    SingleLine\r\n                    HideDetails=\"true\"></MTextField>\r\n    </MCardTitle>\r\n    <MDataTable Headers=\"_headers\"\r\n                Items=\"_desserts\"\r\n                Search=\"@_search\"></MDataTable>\r\n</MCard>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public int Sodium { get; set; }\r\n\r\n        public string Calcium { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private string _search;\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new List<DataTableHeader<Dessert>>\r\n        {\r\n           new ()\r\n           {\r\n            Text= \"Dessert (100g serving)\",\r\n            Align= DataTableHeaderAlign.Start,\r\n            Sortable= false,\r\n            Filterable = false,\r\n            Value= nameof(Dessert.Name)\r\n          },\r\n          new (){ Text= \"Calories\", Value= nameof(Dessert.Calories)},\r\n          new (){ Text= \"Fat (g)\", Value= nameof(Dessert.Fat)},\r\n          new (){ Text= \"Carbs (g)\", Value= nameof(Dessert.Carbs)},\r\n          new (){ Text= \"Protein (g)\", Value= nameof(Dessert.Protein)},\r\n          new (){ Text= \"Iron (%)\", Value= nameof(Dessert.Iron)}\r\n        };\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 159,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 237,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 262,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0,\r\n              Iron= \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Calories= 305,\r\n              Fat= 3.7,\r\n              Carbs= 67,\r\n              Protein= 4.3,\r\n              Iron= \"8%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Gingerbread\",\r\n                Calories= 356,\r\n                Fat= 16.0,\r\n                Carbs= 49,\r\n                Protein= 3.9,\r\n                Iron= \"16%\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Jelly bean\",\r\n                Calories= 375,\r\n                Fat= 0.0,\r\n                Carbs= 94,\r\n                Protein= 0.0,\r\n                Iron= \"0%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Lollipop\",\r\n                Calories= 392,\r\n                Fat= 0.2,\r\n                Carbs= 98,\r\n                Protein= 0,\r\n                Iron= \"2%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Honeycomb\",\r\n                Calories= 408,\r\n                Fat= 3.2,\r\n                Carbs= 87,\r\n                Protein= 6.5,\r\n                Iron= \"45%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Donut\",\r\n                Calories= 452,\r\n                Fat= 25.0,\r\n                Carbs= 51,\r\n                Protein= 4.9,\r\n                Iron= \"22%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"KitKat\",\r\n                Calories= 518,\r\n                Fat= 26.0,\r\n                Carbs= 65,\r\n                Protein= 7,\r\n                Iron= \"6%\",\r\n            }\r\n        };\r\n  }",
        "Type": "Demos.Components.Tables.children.DataTable.props.Filterable",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 4,
        "Name": "fixed",
        "Title": "固定列",
        "Description": "<p>默认固定最后一列。</p>\n",
        "Code": "@inject MasaBlazor MasaBlazor\r\n@implements IDisposable\r\n\r\n<MDataTable FixedRight\r\n            Headers=\"_headers\"\r\n            Items=\"_desserts\"\r\n            Width=\"@_width\"\r\n            ItemKey=\"r => r.Name\"\r\n            Class=\"elevation-1\">\r\n    <ItemColContent>\r\n        @if (context.Header.Value == \"actions\")\r\n        {\r\n            <MIcon Small\r\n                   Class=\"mr-2\"\r\n                   OnClick=\"() => EditItem(context.Item)\">\r\n                mdi-pencil\r\n            </MIcon>\r\n            <MIcon Small\r\n                   OnClick=\"() => DeleteItem(context.Item)\">\r\n                mdi-delete\r\n            </MIcon>\r\n        }\r\n        else\r\n        {\r\n            @context.Value\r\n        }\r\n    </ItemColContent>\r\n</MDataTable>\r\n<MDialog @bind-Value=\"_dialog\"\r\n         MaxWidth=\"500\">\r\n    <MCard>\r\n        <MCardTitle>\r\n            <span class=\"text-h5\">@FormTitle</span>\r\n        </MCardTitle>\r\n\r\n        <MCardText>\r\n            <MContainer>\r\n                <MRow>\r\n                    <MCol Cols=\"12\"\r\n                          Sm=\"6\"\r\n                          Md=\"4\">\r\n                        <MTextField @bind-Value=\"_editedItem.Name\"\r\n                                    Label=\"Dessert name\">\r\n                        </MTextField>\r\n                    </MCol>\r\n                    <MCol Cols=\"12\"\r\n                          Sm=\"6\"\r\n                          Md=\"4\">\r\n                        <MTextField @bind-Value=\"_editedItem.Calories\"\r\n                                    Label=\"Calories\">\r\n                        </MTextField>\r\n                    </MCol>\r\n                    <MCol Cols=\"12\"\r\n                          Sm=\"6\"\r\n                          Md=\"4\">\r\n                        <MTextField @bind-Value=\"_editedItem.Fat\"\r\n                                    Label=\"Fat (g)\">\r\n                        </MTextField>\r\n                    </MCol>\r\n                    <MCol Cols=\"12\"\r\n                          Sm=\"6\"\r\n                          Md=\"4\">\r\n                        <MTextField @bind-Value=\"_editedItem.Carbs\"\r\n                                    Label=\"Carbs (g)\">\r\n                        </MTextField>\r\n                    </MCol>\r\n                    <MCol Cols=\"12\"\r\n                          Sm=\"6\"\r\n                          Md=\"4\">\r\n                        <MTextField @bind-Value=\"_editedItem.Protein\"\r\n                                    Label=\"Protein (g)\">\r\n                        </MTextField>\r\n                    </MCol>\r\n                </MRow>\r\n            </MContainer>\r\n        </MCardText>\r\n\r\n        <MCardActions>\r\n            <MSpacer></MSpacer>\r\n            <MButton Color=\"blue darken-1\"\r\n                     Text\r\n                     OnClick=\"Close\">\r\n                Cancel\r\n            </MButton>\r\n            <MButton Color=\"blue darken-1\"\r\n                     Text\r\n                     OnClick=\"Save\">\r\n                Save\r\n            </MButton>\r\n        </MCardActions>\r\n    </MCard>\r\n</MDialog>\r\n<MDialog @bind-Value=\"_dialogDelete\" MaxWidth=\"500\">\r\n    <MCard>\r\n        <MCardTitle Class=\"text-h5\">Are you sure you want to delete this item?</MCardTitle>\r\n        <MCardActions>\r\n            <MSpacer></MSpacer>\r\n            <MButton Color=\"blue darken-1\" Text OnClick=\"CloseDelete\">Cancel</MButton>\r\n            <MButton Color=\"blue darken-1\" Text OnClick=\"DeleteItemConfirm\">OK</MButton>\r\n            <MSpacer></MSpacer>\r\n        </MCardActions>\r\n    </MCard>\r\n</MDialog>\r\n\r\n@code {\r\n\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public int Sodium { get; set; }\r\n\r\n        public string Calcium { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private string _width;\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        base.OnInitialized();\r\n\r\n        MasaBlazor.Breakpoint.OnUpdate += BreakpointOnOnUpdate;\r\n    }\r\n\r\n    private Task BreakpointOnOnUpdate()\r\n    {\r\n        InvokeAsync(() =>\r\n        {\r\n            _width = MasaBlazor.Breakpoint.Mobile ? null : \"120%\";\r\n            StateHasChanged();\r\n        });\r\n\r\n        return Task.CompletedTask;\r\n    }\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new List<DataTableHeader<Dessert>>\r\n    {\r\n        new()\r\n        {\r\n            Text = \"Dessert (100g serving)\",\r\n            Align = DataTableHeaderAlign.Start,\r\n            Sortable = false,\r\n            Value = nameof(Dessert.Name)\r\n        },\r\n        new() { Text = \"Calories\", Value = nameof(Dessert.Calories) },\r\n        new() { Text = \"Fat (g)\", Value = nameof(Dessert.Fat) },\r\n        new() { Text = \"Carbs (g)\", Value = nameof(Dessert.Carbs) },\r\n        new() { Text = \"Protein (g)\", Value = nameof(Dessert.Protein) },\r\n        new() { Text = \"Actions\", Value = \"actions\", Sortable = false, Width = \"100px\", Align = DataTableHeaderAlign.Center }\r\n    };\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n    {\r\n        new Dessert\r\n        {\r\n            Name = \"Frozen Yogurt\",\r\n            Calories = 159,\r\n            Fat = 6.0,\r\n            Carbs = 24,\r\n            Protein = 4.0,\r\n            Iron = \"1%\",\r\n        },\r\n        new Dessert\r\n        {\r\n            Name = \"Ice cream sandwich\",\r\n            Calories = 237,\r\n            Fat = 9.0,\r\n            Carbs = 37,\r\n            Protein = 4.3,\r\n            Iron = \"1%\",\r\n        },\r\n        new Dessert\r\n        {\r\n            Name = \"Eclair\",\r\n            Calories = 262,\r\n            Fat = 16.0,\r\n            Carbs = 23,\r\n            Protein = 6.0,\r\n            Iron = \"7%\",\r\n        },\r\n        new Dessert\r\n        {\r\n            Name = \"Cupcake\",\r\n            Calories = 305,\r\n            Fat = 3.7,\r\n            Carbs = 67,\r\n            Protein = 4.3,\r\n            Iron = \"8%\",\r\n        },\r\n        new Dessert\r\n        {\r\n            Name = \"Gingerbread\",\r\n            Calories = 356,\r\n            Fat = 16.0,\r\n            Carbs = 49,\r\n            Protein = 3.9,\r\n            Iron = \"16%\"\r\n        },\r\n        new Dessert\r\n        {\r\n            Name = \"Jelly bean\",\r\n            Calories = 375,\r\n            Fat = 0.0,\r\n            Carbs = 94,\r\n            Protein = 0.0,\r\n            Iron = \"0%\",\r\n        },\r\n        new Dessert\r\n        {\r\n            Name = \"Lollipop\",\r\n            Calories = 392,\r\n            Fat = 0.2,\r\n            Carbs = 98,\r\n            Protein = 0,\r\n            Iron = \"2%\",\r\n        },\r\n        new Dessert\r\n        {\r\n            Name = \"Honeycomb\",\r\n            Calories = 408,\r\n            Fat = 3.2,\r\n            Carbs = 87,\r\n            Protein = 6.5,\r\n            Iron = \"45%\",\r\n        },\r\n        new Dessert\r\n        {\r\n            Name = \"Donut\",\r\n            Calories = 452,\r\n            Fat = 25.0,\r\n            Carbs = 51,\r\n            Protein = 4.9,\r\n            Iron = \"22%\",\r\n        },\r\n        new Dessert\r\n        {\r\n            Name = \"KitKat\",\r\n            Calories = 518,\r\n            Fat = 26.0,\r\n            Carbs = 65,\r\n            Protein = 7,\r\n            Iron = \"6%\",\r\n        }\r\n    };\r\n\r\n    private int _editedIndex;\r\n    private bool _dialog;\r\n    private bool _dialogDelete;\r\n\r\n    private Dessert _editedItem = new Dessert\r\n    {\r\n        Name = \"\",\r\n        Calories = 0,\r\n        Fat = 0,\r\n        Carbs = 0,\r\n        Protein = 0,\r\n    };\r\n\r\n    public string FormTitle\r\n    {\r\n        get { return _editedIndex == -1 ? \"New Item\" : \"Edit Item\"; }\r\n    }\r\n\r\n    public void Close()\r\n    {\r\n        _dialog = false;\r\n        _editedItem = new Dessert();\r\n        _editedIndex = -1;\r\n    }\r\n\r\n    public void Save()\r\n    {\r\n        if (_editedIndex > -1)\r\n        {\r\n            var item = _desserts[_editedIndex];\r\n            item.Fat = _editedItem.Fat;\r\n            item.Protein = _editedItem.Protein;\r\n            item.Calories = _editedItem.Calories;\r\n            item.Carbs = _editedItem.Carbs;\r\n            item.Name = _editedItem.Name;\r\n        }\r\n        else\r\n        {\r\n            _desserts.Add(_editedItem);\r\n        }\r\n        Close();\r\n    }\r\n\r\n    public void EditItem(Dessert item)\r\n    {\r\n        _editedIndex = _desserts.IndexOf(item);\r\n        _editedItem = new Dessert()\r\n        {\r\n            Calories = item.Calories,\r\n            Carbs = item.Carbs,\r\n            Fat = item.Fat,\r\n            Name = item.Name,\r\n            Protein = item.Protein\r\n        };\r\n        _dialog = true;\r\n    }\r\n\r\n    public void DeleteItem(Dessert item)\r\n    {\r\n        _editedIndex = _desserts.IndexOf(item);\r\n        _editedItem = new Dessert()\r\n        {\r\n            Calories = item.Calories,\r\n            Carbs = item.Carbs,\r\n            Fat = item.Fat,\r\n            Name = item.Name,\r\n            Protein = item.Protein\r\n        };\r\n        _dialogDelete = true;\r\n    }\r\n\r\n    public void DeleteItemConfirm()\r\n    {\r\n        _desserts.RemoveAt(_editedIndex);\r\n        CloseDelete();\r\n    }\r\n\r\n    public void CloseDelete()\r\n    {\r\n        _dialogDelete = false;\r\n        _editedItem = new();\r\n        _editedIndex = -1;\r\n    }\r\n\r\n    public void Dispose()\r\n    {\r\n        MasaBlazor.Breakpoint.OnUpdate -= BreakpointOnOnUpdate;\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.Tables.children.DataTable.props.Fixed",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "footer",
        "Title": "表脚属性",
        "Description": "<p><code>MDataTable</code> 使用 <code>MDataFooter</code> 组件渲染一个默认的表脚。 你可以使用 <code>FooterProps</code> 将属性传递给这个组件。</p>\n",
        "Code": "<MDataTable Headers=\"_headers\"\r\n            Items=\"_desserts\"\r\n            ItemsPerPage=\"5\"\r\n            ItemKey=\"r => r.Name\"\r\n            Class=\"elevation-1\"\r\n            FooterProps=\"@(props => {\r\n                props.ShowFirstLastPage = true;\r\n                props.FirstIcon = \"mdi-arrow-collapse-left\";\r\n                props.LastIcon = \"mdi-arrow-collapse-right\";\r\n                props.PrevIcon = \"mdi-minus\";\r\n                props.NextIcon = \"mdi-plus\";\r\n            })\">\r\n</MDataTable>\r\n\r\n@code {\r\n\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public string Category { get; set; }\r\n    }\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new()\r\n    {\r\n        new()\r\n        {\r\n            Text = \"Dessert (100g serving)\",\r\n            Align = DataTableHeaderAlign.Start,\r\n            Value = nameof(Dessert.Name)\r\n        },\r\n        new() { Text = \"Category\", Value = nameof(Dessert.Category) }\r\n    };\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n    {\r\n        new Dessert\r\n        {\r\n            Name = \"Frozen Yogurt\",\r\n            Category = \"Ice cream\"\r\n        },\r\n        new Dessert\r\n        {\r\n            Name = \"Ice cream sandwich\",\r\n            Category = \"Ice cream\"\r\n        },\r\n        new Dessert\r\n        {\r\n            Name = \"Eclair\",\r\n            Category = \"Cookie\"\r\n        },\r\n        new Dessert\r\n        {\r\n            Name = \"Cupcake\",\r\n            Category = \"Pastry\"\r\n        },\r\n        new Dessert\r\n        {\r\n            Name = \"Gingerbread\",\r\n            Category = \"Cookie\"\r\n        },\r\n        new Dessert\r\n        {\r\n            Name = \"Jelly bean\",\r\n            Category = \"Candy\"\r\n        },\r\n        new Dessert\r\n        {\r\n            Name = \"Lollipop\",\r\n            Category = \"Candy\"\r\n        },\r\n        new Dessert\r\n        {\r\n            Name = \"Honeycomb\",\r\n            Category = \"Toffee\"\r\n        },\r\n        new Dessert\r\n        {\r\n            Name = \"Donut\",\r\n            Category = \"Pastry\"\r\n        },\r\n        new Dessert\r\n        {\r\n            Name = \"KitKat\",\r\n            Category = \"Candy\"\r\n        }\r\n    };\r\n\r\n}\r\n",
        "Type": "Demos.Components.Tables.children.DataTable.props.Footer",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "group",
        "Title": "分组",
        "Description": "<p>你可以使用 <strong>GroupBy</strong> 和 <strong>GroupDesc</strong> 属性分组。 <strong>ShowGroupBy</strong> 属性将在默认表头中显示分组按钮。 你可以设置表头数据项的 <strong>Groupable</strong> 属性为 false ，禁用对应属性的分组。</p>\n",
        "Code": "<MDataTable Headers=\"_headers\"\r\n            Items=\"_desserts\"\r\n            ItemKey=\"r=>r.Name\"\r\n            SortBy=\"nameof(Dessert.Name)\"\r\n            GroupBy=\"nameof(Dessert.Category)\"\r\n            Class=\"elevation-1\"\r\n            ShowGroupBy>\r\n</MDataTable>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public string Category { get; set; }\r\n\r\n        public string Dairy { get; set; }\r\n    }\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new List<DataTableHeader<Dessert>>\r\n        {\r\n           new ()\r\n           {\r\n            Text= \"Dessert (100g serving)\",\r\n            Align= DataTableHeaderAlign.Start,\r\n            Value= nameof(Dessert.Name),\r\n            Groupable=false\r\n          },\r\n          new (){ Text= \"Category\", Value= nameof(Dessert.Category),Align= DataTableHeaderAlign.End},\r\n          new (){ Text= \"Dairy\", Value= nameof(Dessert.Dairy),Align= DataTableHeaderAlign.End}\r\n        };\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Category=\"Ice cream\",\r\n              Dairy=\"Yes\"\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Category=\"Ice cream\",\r\n              Dairy=\"Yes\"\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Category=\"Cookie\",\r\n              Dairy=\"Yes\"\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Category=\"Pastry\",\r\n              Dairy=\"Yes\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Gingerbread\",\r\n                Category=\"Cookie\",\r\n                Dairy=\"No\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Jelly bean\",\r\n                Category=\"Candy\",\r\n                Dairy=\"No\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Lollipop\",\r\n                Category=\"Candy\",\r\n                Dairy=\"No\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Honeycomb\",\r\n                Category=\"Toffee\",\r\n                Dairy=\"No\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Donut\",\r\n                Category=\"Pastry\",\r\n                Dairy=\"Yes\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"KitKat\",\r\n                Category=\"Candy\",\r\n                Dairy=\"Yes\"\r\n            }\r\n        };\r\n  }",
        "Type": "Demos.Components.Tables.children.DataTable.props.Group",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "hideDefaultHeaderAndFooter",
        "Title": "隐藏默认表头和表脚",
        "Description": "<p>你可以应用 <strong>HideDefaultHeader</strong> 和 <strong>HideDefaultFooter</strong> 属性，分别移除默认表头和表脚。</p>\n",
        "Code": "<MDataTable Headers=\"_headers\"\r\n            Items=\"_desserts\"\r\n            HideDefaultHeader\r\n            HideDefaultFooter\r\n            Class=\"elevation-1\"></MDataTable>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public int Sodium { get; set; }\r\n\r\n        public string Calcium { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new List<DataTableHeader<Dessert>>\r\n        {\r\n           new ()\r\n           {\r\n            Text= \"Dessert (100g serving)\",\r\n            Align= DataTableHeaderAlign.Start,\r\n            Sortable= false,\r\n            Value= nameof(Dessert.Name)\r\n          },\r\n          new (){ Text= \"Calories\", Value= nameof(Dessert.Calories)},\r\n          new (){ Text= \"Fat (g)\", Value= nameof(Dessert.Fat)},\r\n          new (){ Text= \"Carbs (g)\", Value= nameof(Dessert.Carbs)},\r\n          new (){ Text= \"Protein (g)\", Value= nameof(Dessert.Protein)},\r\n          new (){ Text= \"Iron (%)\", Value= nameof(Dessert.Iron)}\r\n        };\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 159,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 237,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 262,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0,\r\n              Iron= \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Calories= 305,\r\n              Fat= 3.7,\r\n              Carbs= 67,\r\n              Protein= 4.3,\r\n              Iron= \"8%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Gingerbread\",\r\n                Calories= 356,\r\n                Fat= 16.0,\r\n                Carbs= 49,\r\n                Protein= 3.9,\r\n                Iron= \"16%\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Jelly bean\",\r\n                Calories= 375,\r\n                Fat= 0.0,\r\n                Carbs= 94,\r\n                Protein= 0.0,\r\n                Iron= \"0%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Lollipop\",\r\n                Calories= 392,\r\n                Fat= 0.2,\r\n                Carbs= 98,\r\n                Protein= 0,\r\n                Iron= \"2%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Honeycomb\",\r\n                Calories= 408,\r\n                Fat= 3.2,\r\n                Carbs= 87,\r\n                Protein= 6.5,\r\n                Iron= \"45%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Donut\",\r\n                Calories= 452,\r\n                Fat= 25.0,\r\n                Carbs= 51,\r\n                Protein= 4.9,\r\n                Iron= \"22%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"KitKat\",\r\n                Calories= 518,\r\n                Fat= 26.0,\r\n                Carbs= 65,\r\n                Protein= 7,\r\n                Iron= \"6%\",\r\n            }\r\n        };\r\n  }\r\n\r\n",
        "Type": "Demos.Components.Tables.children.DataTable.props.HideDefaultHeaderAndFooter",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "loading",
        "Title": "加载中",
        "Description": "<p>你可以使用 <strong>Loading</strong> 属性来表示正在加载表格数据。 即使表格中没有数据，也会显示一条加载信息。 加载信息可以使用 <strong>LoadingText</strong> 属性或 <strong>LoadingContent</strong> 插槽来自定义。</p>\n",
        "Code": "<MDataTable TItem=\"Dessert\"\r\n            ItemKey=\"r=>r.Name\"\r\n            Class=\"elevation-1\"\r\n            Loading=\"true\"\r\n            LoadingText=\"Loading... Please wait\">\r\n</MDataTable>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n        public int Calories { get; set; }\r\n    }\r\n}\r\n\r\n",
        "Type": "Demos.Components.Tables.children.DataTable.props.Loading",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "multiSort",
        "Title": "多列排序",
        "Description": "<p>使用 <strong>MultiSort</strong> 属性可以根据多列同时排序。 启用后，你可以向 <strong>SortBy</strong> 和 <strong>SortDesc</strong> 传递数组以控制排序。</p>\n",
        "Code": "<MDataTable Headers=\"_headers\"\r\n            Items=\"_desserts\"\r\n            SortBy=\"_sortBy\"\r\n            SortDesc=\"_sortDesc\"\r\n            MultiSort\r\n            Class=\"elevation-1\">\r\n</MDataTable>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public int Sodium { get; set; }\r\n\r\n        public string Calcium { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new List<DataTableHeader<Dessert>>\r\n        {\r\n           new ()\r\n           {\r\n            Text= \"Dessert (100g serving)\",\r\n            Align= DataTableHeaderAlign.Start,\r\n            Sortable= false,\r\n            Value= nameof(Dessert.Name)\r\n          },\r\n          new (){ Text= \"Calories\", Value= nameof(Dessert.Calories)},\r\n          new (){ Text= \"Fat (g)\", Value= nameof(Dessert.Fat)},\r\n          new (){ Text= \"Carbs (g)\", Value= nameof(Dessert.Carbs)},\r\n          new (){ Text= \"Protein (g)\", Value= nameof(Dessert.Protein)},\r\n          new (){ Text= \"Iron (%)\", Value= nameof(Dessert.Iron)}\r\n        };\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 200,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 200,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 300,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0,\r\n              Iron= \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Calories= 300,\r\n              Fat= 3.7,\r\n              Carbs= 67,\r\n              Protein= 4.3,\r\n              Iron= \"8%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Gingerbread\",\r\n                Calories= 400,\r\n                Fat= 16.0,\r\n                Carbs= 49,\r\n                Protein= 3.9,\r\n                Iron= \"16%\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Jelly bean\",\r\n                Calories= 400,\r\n                Fat= 0.0,\r\n                Carbs= 94,\r\n                Protein= 0.0,\r\n                Iron= \"0%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Lollipop\",\r\n                Calories= 400,\r\n                Fat= 0.2,\r\n                Carbs= 98,\r\n                Protein= 0,\r\n                Iron= \"2%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Honeycomb\",\r\n                Calories= 400,\r\n                Fat= 3.2,\r\n                Carbs= 87,\r\n                Protein= 6.5,\r\n                Iron= \"45%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Donut\",\r\n                Calories= 500,\r\n                Fat= 25.0,\r\n                Carbs= 51,\r\n                Protein= 4.9,\r\n                Iron= \"22%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"KitKat\",\r\n                Calories= 500,\r\n                Fat= 26.0,\r\n                Carbs= 65,\r\n                Protein= 7,\r\n                Iron= \"6%\",\r\n            }\r\n        };\r\n\r\n    public List<string> _sortBy = new List<string>\r\n        {\r\n            nameof(Dessert.Calories),\r\n            nameof(Dessert.Fat)\r\n        };\r\n\r\n    public List<bool> _sortDesc = new List<bool>\r\n        {\r\n            false,\r\n            true\r\n        };\r\n  }\r\n\r\n",
        "Type": "Demos.Components.Tables.children.DataTable.props.MultiSort",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "rowSelection",
        "Title": "行选择",
        "Description": "<p><strong>ShowSelect</strong> 属性将在默认表头中渲染一个复选框以切换所有行是否被选择，同时也为每个默认行渲染一个复选框。你还可以使用 <strong>SingleSelect</strong> 属性，指定能同时选择多行还是只能选择一行。</p>\n",
        "Code": "<MDataTable @bind-Value=\"_selected\"\r\n            Headers=\"_headers\"\r\n            Items=\"_desserts\"\r\n            SingleSelect=\"_singleSelect\"\r\n            ItemKey=\"r=>r.Name\"\r\n            ShowSelect\r\n            Class=\"elevation-1\">\r\n    <TopContent>\r\n        <MSwitch @bind-Value=\"_singleSelect\"\r\n                 Label=\"Single select\"\r\n                 Class=\"pa-3\"></MSwitch>\r\n    </TopContent>\r\n</MDataTable>\r\n\r\n  @code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public int Sodium { get; set; }\r\n\r\n        public string Calcium { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new List<DataTableHeader<Dessert>>\r\n        {\r\n           new ()\r\n           {\r\n            Text= \"Dessert (100g serving)\",\r\n            Align= DataTableHeaderAlign.Start,\r\n            Sortable= false,\r\n            Value= nameof(Dessert.Name)\r\n          },\r\n          new (){ Text= \"Calories\", Value= nameof(Dessert.Calories)},\r\n          new (){ Text= \"Fat (g)\", Value= nameof(Dessert.Fat)},\r\n          new (){ Text= \"Carbs (g)\", Value= nameof(Dessert.Carbs)},\r\n          new (){ Text= \"Protein (g)\", Value= nameof(Dessert.Protein)},\r\n          new (){ Text= \"Iron (%)\", Value= nameof(Dessert.Iron)}\r\n        };\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 159,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 237,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 262,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0,\r\n              Iron= \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Calories= 305,\r\n              Fat= 3.7,\r\n              Carbs= 67,\r\n              Protein= 4.3,\r\n              Iron= \"8%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Gingerbread\",\r\n                Calories= 356,\r\n                Fat= 16.0,\r\n                Carbs= 49,\r\n                Protein= 3.9,\r\n                Iron= \"16%\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Jelly bean\",\r\n                Calories= 375,\r\n                Fat= 0.0,\r\n                Carbs= 94,\r\n                Protein= 0.0,\r\n                Iron= \"0%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Lollipop\",\r\n                Calories= 392,\r\n                Fat= 0.2,\r\n                Carbs= 98,\r\n                Protein= 0,\r\n                Iron= \"2%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Honeycomb\",\r\n                Calories= 408,\r\n                Fat= 3.2,\r\n                Carbs= 87,\r\n                Protein= 6.5,\r\n                Iron= \"45%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Donut\",\r\n                Calories= 452,\r\n                Fat= 25.0,\r\n                Carbs= 51,\r\n                Protein= 4.9,\r\n                Iron= \"22%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"KitKat\",\r\n                Calories= 518,\r\n                Fat= 26.0,\r\n                Carbs= 65,\r\n                Protein= 7,\r\n                Iron= \"6%\",\r\n            }\r\n        };\r\n\r\n    private bool _singleSelect;\r\n\r\n    private IEnumerable<Dessert> _selected = new List<Dessert>();\r\n  }\r\n\r\n",
        "Type": "Demos.Components.Tables.children.DataTable.props.RowSelection",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "search",
        "Title": "搜索",
        "Description": "<p>数据表格还提供了 <strong>Search</strong> 属性以过滤数据。</p>\n",
        "Code": "<MCard>\r\n    <MCardTitle>\r\n        Nutrition\r\n        <MSpacer></MSpacer>\r\n        <MTextField @bind-Value=\"_search\"\r\n                    AppendIcon=\"mdi-magnify\"\r\n                    Label=\"Search\"\r\n                    SingleLine\r\n                    HideDetails=\"true\"></MTextField>\r\n    </MCardTitle>\r\n    <MDataTable Headers=\"_headers\"\r\n                Items=\"_desserts\"\r\n                Search=\"@_search\"></MDataTable>\r\n</MCard>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public int Sodium { get; set; }\r\n\r\n        public string Calcium { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private string _search;\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new List<DataTableHeader<Dessert>>\r\n        {\r\n           new ()\r\n           {\r\n            Text= \"Dessert (100g serving)\",\r\n            Align= DataTableHeaderAlign.Start,\r\n            Sortable= false,\r\n            Value= nameof(Dessert.Name)\r\n          },\r\n          new (){ Text= \"Calories\", Value= nameof(Dessert.Calories)},\r\n          new (){ Text= \"Fat (g)\", Value= nameof(Dessert.Fat)},\r\n          new (){ Text= \"Carbs (g)\", Value= nameof(Dessert.Carbs)},\r\n          new (){ Text= \"Protein (g)\", Value= nameof(Dessert.Protein)},\r\n          new (){ Text= \"Iron (%)\", Value= nameof(Dessert.Iron)}\r\n        };\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 159,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 237,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 262,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0,\r\n              Iron= \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Calories= 305,\r\n              Fat= 3.7,\r\n              Carbs= 67,\r\n              Protein= 4.3,\r\n              Iron= \"8%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Gingerbread\",\r\n                Calories= 356,\r\n                Fat= 16.0,\r\n                Carbs= 49,\r\n                Protein= 3.9,\r\n                Iron= \"16%\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Jelly bean\",\r\n                Calories= 375,\r\n                Fat= 0.0,\r\n                Carbs= 94,\r\n                Protein= 0.0,\r\n                Iron= \"0%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Lollipop\",\r\n                Calories= 392,\r\n                Fat= 0.2,\r\n                Carbs= 98,\r\n                Protein= 0,\r\n                Iron= \"2%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Honeycomb\",\r\n                Calories= 408,\r\n                Fat= 3.2,\r\n                Carbs= 87,\r\n                Protein= 6.5,\r\n                Iron= \"45%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Donut\",\r\n                Calories= 452,\r\n                Fat= 25.0,\r\n                Carbs= 51,\r\n                Protein= 4.9,\r\n                Iron= \"22%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"KitKat\",\r\n                Calories= 518,\r\n                Fat= 26.0,\r\n                Carbs= 65,\r\n                Protein= 7,\r\n                Iron= \"6%\",\r\n            }\r\n        };\r\n  }\r\n\r\n",
        "Type": "Demos.Components.Tables.children.DataTable.props.Search",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 4,
        "Name": "stripe",
        "Title": "斑马纹",
        "Description": "<p>明暗相间的条纹。</p>\n",
        "Code": "<MDataTable Stripe\r\n            Headers=\"_headers\"\r\n            Items=\"_desserts\"\r\n            ItemKey=\"r=>r.Name\"\r\n            Class=\"elevation-1\"></MDataTable>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public int Sodium { get; set; }\r\n\r\n        public string Calcium { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new List<DataTableHeader<Dessert>>\r\n        {\r\n           new ()\r\n           {\r\n            Text= \"Dessert (100g serving)\",\r\n            Align= DataTableHeaderAlign.Start,\r\n            Sortable= false,\r\n            Value= nameof(Dessert.Name)\r\n          },\r\n          new (){ Text= \"Calories\", Value= nameof(Dessert.Calories)},\r\n          new (){ Text= \"Fat (g)\", Value= nameof(Dessert.Fat)},\r\n          new (){ Text= \"Carbs (g)\", Value= nameof(Dessert.Carbs)},\r\n          new (){ Text= \"Protein (g)\", Value= nameof(Dessert.Protein)},\r\n          new (){ Text= \"Iron (%)\", Value= nameof(Dessert.Iron)}\r\n        };\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 159,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 237,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 262,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0,\r\n              Iron= \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Calories= 305,\r\n              Fat= 3.7,\r\n              Carbs= 67,\r\n              Protein= 4.3,\r\n              Iron= \"8%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Gingerbread\",\r\n                Calories= 356,\r\n                Fat= 16.0,\r\n                Carbs= 49,\r\n                Protein= 3.9,\r\n                Iron= \"16%\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Jelly bean\",\r\n                Calories= 375,\r\n                Fat= 0.0,\r\n                Carbs= 94,\r\n                Protein= 0.0,\r\n                Iron= \"0%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Lollipop\",\r\n                Calories= 392,\r\n                Fat= 0.2,\r\n                Carbs= 98,\r\n                Protein= 0,\r\n                Iron= \"2%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Honeycomb\",\r\n                Calories= 408,\r\n                Fat= 3.2,\r\n                Carbs= 87,\r\n                Protein= 6.5,\r\n                Iron= \"45%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Donut\",\r\n                Calories= 452,\r\n                Fat= 25.0,\r\n                Carbs= 51,\r\n                Protein= 4.9,\r\n                Iron= \"22%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"KitKat\",\r\n                Calories= 518,\r\n                Fat= 26.0,\r\n                Carbs= 65,\r\n                Protein= 7,\r\n                Iron= \"6%\",\r\n            }\r\n        };\r\n  }",
        "Type": "Demos.Components.Tables.children.DataTable.props.Stripe",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "header",
        "Title": "表头",
        "Description": "<p>你可以使用插槽 <strong>HeaderColContent</strong> 来自定义某些列。</p>\n",
        "Code": "<MDataTable TItem=\"Dessert\" Items=\"_desserts\" Headers=\"_headers\" Class=\"elevation-1\">\r\n    <HeaderColContent Context=\"header\">\r\n        @if (header.Value == nameof(Dessert.Name))\r\n        {\r\n            @header.Text.ToUpperInvariant()\r\n        }\r\n        else\r\n        {\r\n            @header.Text\r\n        }\r\n    </HeaderColContent>\r\n</MDataTable>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public int Sodium { get; set; }\r\n\r\n        public string Calcium { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new List<DataTableHeader<Dessert>>\r\n        {\r\n           new ()\r\n           {\r\n            Text= \"Dessert (100g serving)\",\r\n            Align= DataTableHeaderAlign.Start,\r\n            Sortable= false,\r\n            Value= nameof(Dessert.Name)\r\n          },\r\n          new (){ Text= \"Calories\", Value= nameof(Dessert.Calories)},\r\n          new (){ Text= \"Fat (g)\", Value= nameof(Dessert.Fat)},\r\n          new (){ Text= \"Carbs (g)\", Value= nameof(Dessert.Carbs)},\r\n          new (){ Text= \"Protein (g)\", Value= nameof(Dessert.Protein)},\r\n          new (){ Text= \"Iron (%)\", Value= nameof(Dessert.Iron)}\r\n        };\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 159,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 237,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 262,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0,\r\n              Iron= \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Calories= 305,\r\n              Fat= 3.7,\r\n              Carbs= 67,\r\n              Protein= 4.3,\r\n              Iron= \"8%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Gingerbread\",\r\n                Calories= 356,\r\n                Fat= 16.0,\r\n                Carbs= 49,\r\n                Protein= 3.9,\r\n                Iron= \"16%\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Jelly bean\",\r\n                Calories= 375,\r\n                Fat= 0.0,\r\n                Carbs= 94,\r\n                Protein= 0.0,\r\n                Iron= \"0%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Lollipop\",\r\n                Calories= 392,\r\n                Fat= 0.2,\r\n                Carbs= 98,\r\n                Protein= 0,\r\n                Iron= \"2%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Honeycomb\",\r\n                Calories= 408,\r\n                Fat= 3.2,\r\n                Carbs= 87,\r\n                Protein= 6.5,\r\n                Iron= \"45%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Donut\",\r\n                Calories= 452,\r\n                Fat= 25.0,\r\n                Carbs= 51,\r\n                Protein= 4.9,\r\n                Iron= \"22%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"KitKat\",\r\n                Calories= 518,\r\n                Fat= 26.0,\r\n                Carbs= 65,\r\n                Protein= 7,\r\n                Iron= \"6%\",\r\n            }\r\n        };\r\n  }\r\n",
        "Type": "Demos.Components.Tables.children.DataTable.contents.Header",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 2,
        "Name": "item",
        "Title": "项目",
        "Description": "<p>你可以使用动态插槽 <strong>ItemColContent</strong> 来自定义某些列。</p>\n",
        "Code": "<MDataTable TItem=\"Dessert\" Headers=\"_headers\" Items=\"_desserts\" Class=\"elevation-1\">\r\n    <ItemColContent>\r\n        @if (context.Header.Value == nameof(Dessert.Calories))\r\n        {\r\n            <MChip Color=\"@GetColor(context.Item.Calories)\" Dark>\r\n                @context.Item.Calories\r\n            </MChip>\r\n        }\r\n        else\r\n        {\r\n            @context.Value\r\n        }\r\n    </ItemColContent>\r\n</MDataTable>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public int Sodium { get; set; }\r\n\r\n        public string Calcium { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new List<DataTableHeader<Dessert>>\r\n        {\r\n           new ()\r\n           {\r\n            Text= \"Dessert (100g serving)\",\r\n            Align= DataTableHeaderAlign.Start,\r\n            Sortable= false,\r\n            Value= nameof(Dessert.Name)\r\n          },\r\n          new (){ Text= \"Calories\", Value= nameof(Dessert.Calories)},\r\n          new (){ Text= \"Fat (g)\", Value= nameof(Dessert.Fat)},\r\n          new (){ Text= \"Carbs (g)\", Value= nameof(Dessert.Carbs)},\r\n          new (){ Text= \"Protein (g)\", Value= nameof(Dessert.Protein)},\r\n          new (){ Text= \"Iron (%)\", Value= nameof(Dessert.Iron)}\r\n        };\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 159,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 237,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 262,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0,\r\n              Iron= \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Calories= 305,\r\n              Fat= 3.7,\r\n              Carbs= 67,\r\n              Protein= 4.3,\r\n              Iron= \"8%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Gingerbread\",\r\n                Calories= 356,\r\n                Fat= 16.0,\r\n                Carbs= 49,\r\n                Protein= 3.9,\r\n                Iron= \"16%\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Jelly bean\",\r\n                Calories= 375,\r\n                Fat= 0.0,\r\n                Carbs= 94,\r\n                Protein= 0.0,\r\n                Iron= \"0%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Lollipop\",\r\n                Calories= 392,\r\n                Fat= 0.2,\r\n                Carbs= 98,\r\n                Protein= 0,\r\n                Iron= \"2%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Honeycomb\",\r\n                Calories= 408,\r\n                Fat= 3.2,\r\n                Carbs= 87,\r\n                Protein= 6.5,\r\n                Iron= \"45%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Donut\",\r\n                Calories= 452,\r\n                Fat= 25.0,\r\n                Carbs= 51,\r\n                Protein= 4.9,\r\n                Iron= \"22%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"KitKat\",\r\n                Calories= 518,\r\n                Fat= 26.0,\r\n                Carbs= 65,\r\n                Protein= 7,\r\n                Iron= \"6%\",\r\n            }\r\n        };\r\n\r\n    public string GetColor(int calories)\r\n    {\r\n        if (calories > 400)\r\n        {\r\n            return \"red\";\r\n        }\r\n\r\n        if (calories > 200)\r\n        {\r\n            return \"orange\";\r\n        }\r\n\r\n        return \"green\";\r\n    }\r\n  }\r\n",
        "Type": "Demos.Components.Tables.children.DataTable.contents.Item",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 2,
        "Name": "simpleCheckbox",
        "Title": "简单复选框",
        "Description": "<p>如果想要在数据表格的插槽模板中使用复选框，请使用 <code>MSimpleCheckbox</code> 组件，而不是 <code>MCheckbox</code> 组件。 <code>MSimplleChecbox</code> 组件被内部使用，跟随表头对齐方式。</p>\n",
        "Code": "<div>\r\n    <MDataTable Headers=\"_headers\"\r\n                Items=\"_desserts\"\r\n                Class=\"elevation-1\">\r\n        <ItemColContent>\r\n            @if (context.Header.Value == nameof(Dessert.Glutenfree))\r\n            {\r\n                <MSimpleCheckbox Value=\"@context.Item.Glutenfree\"\r\n                             Disabled></MSimpleCheckbox>\r\n            }\r\n            else\r\n            {\r\n                @context.Value\r\n            }\r\n        </ItemColContent>\r\n    </MDataTable>\r\n</div>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n\r\n        public bool Glutenfree { get; set; }\r\n    }\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new List<DataTableHeader<Dessert>>\r\n        {\r\n           new ()\r\n           {\r\n            Text= \"Dessert (100g serving)\",\r\n            Align= DataTableHeaderAlign.Start,\r\n            Sortable= false,\r\n            Value= nameof(Dessert.Name)\r\n          },\r\n          new (){ Text= \"Calories\", Value= nameof(Dessert.Calories)},\r\n          new (){ Text= \"Fat (g)\", Value= nameof(Dessert.Fat)},\r\n          new (){ Text= \"Carbs (g)\", Value= nameof(Dessert.Carbs)},\r\n          new (){ Text= \"Protein (g)\", Value= nameof(Dessert.Protein)},\r\n          new (){ Text= \"Iron (%)\", Value= nameof(Dessert.Iron)},\r\n          new (){ Text=\"Gluten-Free\",Value=nameof(Dessert.Glutenfree)}\r\n        };\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 159,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0,\r\n              Iron= \"1%\",\r\n              Glutenfree=true\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 237,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 262,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0,\r\n              Iron= \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Jelly bean\",\r\n                Calories= 375,\r\n                Fat= 0.0,\r\n                Carbs= 94,\r\n                Protein= 0.0,\r\n                Iron= \"0%\",\r\n                Glutenfree=true\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Lollipop\",\r\n                Calories= 392,\r\n                Fat= 0.2,\r\n                Carbs= 98,\r\n                Protein= 0,\r\n                Iron= \"2%\",\r\n                Glutenfree=true\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"KitKat\",\r\n                Calories= 518,\r\n                Fat= 26.0,\r\n                Carbs= 65,\r\n                Protein= 7,\r\n                Iron= \"6%\",\r\n            }\r\n        };\r\n  }\r\n",
        "Type": "Demos.Components.Tables.children.DataTable.contents.SimpleCheckbox",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 3,
        "Name": "cRUDActions",
        "Title": "CRUD操作",
        "Description": "<p>带 CRUD 操作的 <code>MDataTable</code> 使用 <code>MDialog</code> 组件来编辑每行数据。</p>\n",
        "Code": "<MDataTable Headers=\"_headers\"\r\n            Items=\"_desserts\"\r\n            Class=\"elevation-1\">\r\n    <TopContent>\r\n        <MToolbar Flat>\r\n            <MToolbarTitle>My CRUD</MToolbarTitle>\r\n            <MDivider Class=\"mx-4\"\r\n                      Inset\r\n                      Vertical></MDivider>\r\n            <MSpacer></MSpacer>\r\n            <MButton Color=\"primary\"\r\n                     Dark\r\n                     Class=\"mb-2\"\r\n                     OnClick=\"()=>_dialog=true\">\r\n                New Item\r\n            </MButton>\r\n            <MDialog @bind-Value=\"_dialog\"\r\n                     MaxWidth=\"500\">\r\n                <MCard>\r\n                    <MCardTitle>\r\n                        <span class=\"text-h5\">@FormTitle</span>\r\n                    </MCardTitle>\r\n\r\n                    <MCardText>\r\n                        <MContainer>\r\n                            <MRow>\r\n                                <MCol Cols=\"12\"\r\n                                      Sm=\"6\"\r\n                                      Md=\"4\">\r\n                                    <MTextField @bind-Value=\"_editedItem.Name\"\r\n                                                Label=\"Dessert name\"></MTextField>\r\n                                </MCol>\r\n                                <MCol Cols=\"12\"\r\n                                      Sm=\"6\"\r\n                                      Md=\"4\">\r\n                                    <MTextField @bind-Value=\"_editedItem.Calories\"\r\n                                                Label=\"Calories\"></MTextField>\r\n                                </MCol>\r\n                                <MCol Cols=\"12\"\r\n                                      Sm=\"6\"\r\n                                      Md=\"4\">\r\n                                    <MTextField @bind-Value=\"_editedItem.Fat\"\r\n                                                Label=\"Fat (g)\"></MTextField>\r\n                                </MCol>\r\n                                <MCol Cols=\"12\"\r\n                                      Sm=\"6\"\r\n                                      Md=\"4\">\r\n                                    <MTextField @bind-Value=\"_editedItem.Carbs\"\r\n                                                Label=\"Carbs (g)\"></MTextField>\r\n                                </MCol>\r\n                                <MCol Cols=\"12\"\r\n                                      Sm=\"6\"\r\n                                      Md=\"4\">\r\n                                    <MTextField @bind-Value=\"_editedItem.Protein\"\r\n                                                Label=\"Protein (g)\"></MTextField>\r\n                                </MCol>\r\n                            </MRow>\r\n                        </MContainer>\r\n                    </MCardText>\r\n\r\n                    <MCardActions>\r\n                        <MSpacer></MSpacer>\r\n                        <MButton Color=\"blue darken-1\"\r\n                                 Text\r\n                                 OnClick=\"Close\">\r\n                            Cancel\r\n                        </MButton>\r\n                        <MButton Color=\"blue darken-1\"\r\n                                 Text\r\n                                 OnClick=\"Save\">\r\n                            Save\r\n                        </MButton>\r\n                    </MCardActions>\r\n                </MCard>\r\n            </MDialog>\r\n            <MDialog @bind-Value=\"_dialogDelete\" MaxWidth=\"500\">\r\n                <MCard>\r\n                    <MCardTitle Class=\"text-h5\">Are you sure you want to delete this item?</MCardTitle>\r\n                    <MCardActions>\r\n                        <MSpacer></MSpacer>\r\n                        <MButton Color=\"blue darken-1\" Text OnClick=\"CloseDelete\">Cancel</MButton>\r\n                        <MButton Color=\"blue darken-1\" Text OnClick=\"DeleteItemConfirm\">OK</MButton>\r\n                        <MSpacer></MSpacer>\r\n                    </MCardActions>\r\n                </MCard>\r\n            </MDialog>\r\n        </MToolbar>\r\n    </TopContent>\r\n    <ItemColContent>\r\n        @if (context.Header.Value == \"actions\")\r\n        {\r\n            <MIcon Small\r\n               Class=\"mr-2\"\r\n               OnClick=\"()=>EditItem(context.Item)\">mdi-pencil</MIcon>\r\n            <MIcon Small\r\n               OnClick=\"()=>DeleteItem(context.Item)\">mdi-delete</MIcon>\r\n        }\r\n        else\r\n        {\r\n            @context.Value\r\n        }\r\n    </ItemColContent>\r\n    <NoDataContent>\r\n        <MButton Color=\"primary\"\r\n                 OnClick=\"Initialize\">\r\n            Reset\r\n        </MButton>\r\n    </NoDataContent>\r\n</MDataTable>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n    }\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new List<DataTableHeader<Dessert>>\r\n        {\r\n           new ()\r\n           {\r\n            Text= \"Dessert (100g serving)\",\r\n            Align= DataTableHeaderAlign.Start,\r\n            Sortable= false,\r\n            Value= nameof(Dessert.Name)\r\n          },\r\n          new (){ Text= \"Calories\", Value= nameof(Dessert.Calories)},\r\n          new (){ Text= \"Fat (g)\", Value= nameof(Dessert.Fat)},\r\n          new (){ Text= \"Carbs (g)\", Value= nameof(Dessert.Carbs)},\r\n          new (){ Text= \"Protein (g)\", Value= nameof(Dessert.Protein)},\r\n          new (){ Text= \"Actions\", Value= \"actions\",Sortable=false }\r\n        };\r\n\r\n    private List<Dessert> _desserts;\r\n\r\n    private bool _dialog;\r\n    private bool _dialogDelete;\r\n    private Dessert _editedItem = new Dessert\r\n        {\r\n            Name = \"\",\r\n            Calories = 0,\r\n            Fat = 0,\r\n            Carbs = 0,\r\n            Protein = 0,\r\n        };\r\n    private int _editedIndex;\r\n\r\n    public string FormTitle\r\n    {\r\n        get\r\n        {\r\n            return _editedIndex == -1 ? \"New Item\" : \"Edit Item\";\r\n        }\r\n    }\r\n\r\n    protected override void OnInitialized()\r\n    {\r\n        Initialize();\r\n    }\r\n\r\n    public void Initialize()\r\n    {\r\n         _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 159,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 237,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 262,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Calories= 305,\r\n              Fat= 3.7,\r\n              Carbs= 67,\r\n              Protein= 4.3\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Gingerbread\",\r\n                Calories= 356,\r\n                Fat= 16.0,\r\n                Carbs= 49,\r\n                Protein= 3.9\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Jelly bean\",\r\n                Calories= 375,\r\n                Fat= 0.0,\r\n                Carbs= 94,\r\n                Protein= 0.0\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Lollipop\",\r\n                Calories= 392,\r\n                Fat= 0.2,\r\n                Carbs= 98,\r\n                Protein= 0\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Honeycomb\",\r\n                Calories= 408,\r\n                Fat= 3.2,\r\n                Carbs= 87,\r\n                Protein= 6.5\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Donut\",\r\n                Calories= 452,\r\n                Fat= 25.0,\r\n                Carbs= 51,\r\n                Protein= 4.9\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"KitKat\",\r\n                Calories= 518,\r\n                Fat= 26.0,\r\n                Carbs= 65,\r\n                Protein= 7\r\n            }\r\n        };\r\n    }\r\n\r\n    public void Close()\r\n    {\r\n        _dialog = false;\r\n        _editedItem = new Dessert();\r\n        _editedIndex = -1;\r\n    }\r\n\r\n    public void Save()\r\n    {\r\n        if (_editedIndex > -1)\r\n        {\r\n            var item = _desserts[_editedIndex];\r\n            item.Fat = _editedItem.Fat;\r\n            item.Protein = _editedItem.Protein;\r\n            item.Calories = _editedItem.Calories;\r\n            item.Carbs = _editedItem.Carbs;\r\n            item.Name = _editedItem.Name;\r\n        }\r\n        else\r\n        {\r\n            _desserts.Add(_editedItem);\r\n        }\r\n        Close();\r\n    }\r\n\r\n    public void EditItem(Dessert item)\r\n    {\r\n        _editedIndex = _desserts.IndexOf(item);\r\n        _editedItem = new Dessert()\r\n            {\r\n                Calories = item.Calories,\r\n                Carbs = item.Carbs,\r\n                Fat = item.Fat,\r\n                Name = item.Name,\r\n                Protein = item.Protein\r\n            };\r\n        _dialog = true;\r\n    }\r\n\r\n    public void DeleteItem(Dessert item)\r\n    {\r\n        _editedIndex = _desserts.IndexOf(item);\r\n        _editedItem = new Dessert()\r\n            {\r\n                Calories = item.Calories,\r\n                Carbs = item.Carbs,\r\n                Fat = item.Fat,\r\n                Name = item.Name,\r\n                Protein = item.Protein\r\n            };\r\n        _dialogDelete = true;\r\n    }\r\n\r\n    public void DeleteItemConfirm()\r\n    {\r\n        _desserts.RemoveAt(_editedIndex);\r\n        CloseDelete();\r\n    }\r\n\r\n    public void CloseDelete()\r\n    {\r\n        _dialogDelete = false;\r\n        _editedItem = new();\r\n        _editedIndex = -1;\r\n    }\r\n  }\r\n",
        "Type": "Demos.Components.Tables.children.DataTable.misc.CRUDActions",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 3,
        "Name": "editDialog",
        "Title": "编辑用对话框",
        "Description": "<p><code>MEditDialog</code> 组件可用于直接在 <code>MDataTable</code> 中编辑数据。 如果点击 <code>MEditDialog</code> 外部时不想关闭对话框，可以添加 <strong>Persistent</strong> 属性。</p>\n",
        "Code": "<div>\r\n    Todo...\r\n</div>",
        "Type": "Demos.Components.Tables.children.DataTable.misc.EditDialog",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 3,
        "Name": "expandableRow",
        "Title": "可展开行",
        "Description": "<p><code>ShowExpand</code> 属性会在每个默认行上渲染一个展开图标。 你可以使用 <code>ItemDataTableExpandContent</code> 插槽来自定义。 添加一列 <code>Value=&quot;data-table-expand&quot;</code> 到 **\nHeaders**\n数组，就能自定义这个插槽的位置。 你还可以使用 <code>SingleExpand</code> 属性，指定能同时展开多行还是只能展开一行。 行需要唯一的Key才能进行展开，使用<strong>ItemKey</strong>进行指定。</p>\n",
        "Code": "<MDataTable Headers=\"_headers\"\r\n            Items=\"_desserts\"\r\n            SingleExpand=\"_singleExpand\"\r\n            ItemKey=\"r=>r.Name\"\r\n            ShowExpand\r\n            Class=\"elevation-1\">\r\n    <TopContent>\r\n        <MToolbar Flat>\r\n            <MToolbarTitle>Expandable Table</MToolbarTitle>\r\n            <MSpacer></MSpacer>\r\n            <MSwitch @bind-Value=\"_singleExpand\"\r\n                     Label=\"Single expand\"\r\n                     Class=\"mt-2\"></MSwitch>\r\n        </MToolbar>\r\n    </TopContent>\r\n    <ExpandedItemContent>\r\n        <td colspan=\"@_headers.Count\">\r\n            More info about @context.Item.Name\r\n        </td>\r\n    </ExpandedItemContent>\r\n</MDataTable>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private bool _singleExpand;\r\n    //private List<Dessert> _expanded;\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new List<DataTableHeader<Dessert>>\r\n        {\r\n           new ()\r\n           {\r\n            Text= \"Dessert (100g serving)\",\r\n            Align= DataTableHeaderAlign.Start,\r\n            Sortable= false,\r\n            Value= nameof(Dessert.Name)\r\n          },\r\n          new (){ Text= \"Calories\", Value= nameof(Dessert.Calories)},\r\n          new (){ Text= \"Fat (g)\", Value= nameof(Dessert.Fat)},\r\n          new (){ Text= \"Carbs (g)\", Value= nameof(Dessert.Carbs)},\r\n          new (){ Text= \"Protein (g)\", Value= nameof(Dessert.Protein)},\r\n          new (){ Text= \"Iron (%)\", Value= nameof(Dessert.Iron)},\r\n          new (){ Text=\"\",Value=\"data-table-expand\"}\r\n        };\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 159,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 237,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 262,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0,\r\n              Iron= \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Calories= 305,\r\n              Fat= 3.7,\r\n              Carbs= 67,\r\n              Protein= 4.3,\r\n              Iron= \"8%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Gingerbread\",\r\n                Calories= 356,\r\n                Fat= 16.0,\r\n                Carbs= 49,\r\n                Protein= 3.9,\r\n                Iron= \"16%\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Jelly bean\",\r\n                Calories= 375,\r\n                Fat= 0.0,\r\n                Carbs= 94,\r\n                Protein= 0.0,\r\n                Iron= \"0%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Lollipop\",\r\n                Calories= 392,\r\n                Fat= 0.2,\r\n                Carbs= 98,\r\n                Protein= 0,\r\n                Iron= \"2%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Honeycomb\",\r\n                Calories= 408,\r\n                Fat= 3.2,\r\n                Carbs= 87,\r\n                Protein= 6.5,\r\n                Iron= \"45%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Donut\",\r\n                Calories= 452,\r\n                Fat= 25.0,\r\n                Carbs= 51,\r\n                Protein= 4.9,\r\n                Iron= \"22%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"KitKat\",\r\n                Calories= 518,\r\n                Fat= 26.0,\r\n                Carbs= 65,\r\n                Protein= 7,\r\n                Iron= \"6%\",\r\n            }\r\n        };\r\n}\r\n",
        "Type": "Demos.Components.Tables.children.DataTable.misc.ExpandableRow",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 3,
        "Name": "externalPagination",
        "Title": "外部分页",
        "Description": "<p>要在外部控制分页，可以使用单独的属性或使用 <strong>Options</strong> 属性。</p>\n",
        "Code": "<div>\r\n    <MDataTable Headers=\"_headers\"\r\n                Items=\"_desserts\"\r\n                Page=\"_page\"\r\n                ItemsPerPage=\"_itemsPerPage\"\r\n                HideDefaultFooter\r\n                OnPageCount=\"val=>_pageCount=val\"\r\n                Class=\"elevation-1\">\r\n    </MDataTable>\r\n    <div class=\"text-center pt-2\">\r\n        <MPagination @bind-Value=\"_page\"\r\n                     Length=\"_pageCount\"></MPagination>\r\n        <MTextField @bind-Value=\"_itemsPerPage\"\r\n                    Label=\"Items per page\"\r\n                    Type=\"number\"\r\n                    Style=\"margin:0 5px\"\r\n                    min=\"-1\"\r\n                    max=\"15\"></MTextField>\r\n    </div>\r\n</div>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new List<DataTableHeader<Dessert>>\r\n        {\r\n           new ()\r\n           {\r\n            Text= \"Dessert (100g serving)\",\r\n            Align= DataTableHeaderAlign.Start,\r\n            Sortable= false,\r\n            Value= nameof(Dessert.Name)\r\n          },\r\n          new (){ Text= \"Calories\", Value= nameof(Dessert.Calories)},\r\n          new (){ Text= \"Fat (g)\", Value= nameof(Dessert.Fat)},\r\n          new (){ Text= \"Carbs (g)\", Value= nameof(Dessert.Carbs)},\r\n          new (){ Text= \"Protein (g)\", Value= nameof(Dessert.Protein)},\r\n          new (){ Text= \"Iron (%)\", Value= nameof(Dessert.Iron)}\r\n        };\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 159,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 237,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 262,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0,\r\n              Iron= \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Calories= 305,\r\n              Fat= 3.7,\r\n              Carbs= 67,\r\n              Protein= 4.3,\r\n              Iron= \"8%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Gingerbread\",\r\n                Calories= 356,\r\n                Fat= 16.0,\r\n                Carbs= 49,\r\n                Protein= 3.9,\r\n                Iron= \"16%\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Jelly bean\",\r\n                Calories= 375,\r\n                Fat= 0.0,\r\n                Carbs= 94,\r\n                Protein= 0.0,\r\n                Iron= \"0%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Lollipop\",\r\n                Calories= 392,\r\n                Fat= 0.2,\r\n                Carbs= 98,\r\n                Protein= 0,\r\n                Iron= \"2%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Honeycomb\",\r\n                Calories= 408,\r\n                Fat= 3.2,\r\n                Carbs= 87,\r\n                Protein= 6.5,\r\n                Iron= \"45%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Donut\",\r\n                Calories= 452,\r\n                Fat= 25.0,\r\n                Carbs= 51,\r\n                Protein= 4.9,\r\n                Iron= \"22%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"KitKat\",\r\n                Calories= 518,\r\n                Fat= 26.0,\r\n                Carbs= 65,\r\n                Protein= 7,\r\n                Iron= \"6%\",\r\n            }\r\n        };\r\n\r\n    private int _page = 1;\r\n    private int _pageCount = 0;\r\n    private int _itemsPerPage = 10;\r\n}\r\n",
        "Type": "Demos.Components.Tables.children.DataTable.misc.ExternalPagination",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 3,
        "Name": "externalSorting",
        "Title": "外部排序",
        "Description": "<p>要在外部控制排序，可以使用单独的属性或使用 <strong>Options</strong> 属性。</p>\n",
        "Code": "<div>\r\n    <MDataTable Headers=\"_headers\"\r\n                Items=\"_desserts\"\r\n                SortBy=\"_sortBy\"\r\n                SortDesc=\"_sortDesc\"\r\n                OnOptionsUpdate=\"HandleOnOptionsUpdate\"\r\n                Class=\"elevation-1\">\r\n    </MDataTable>\r\n    <div class=\"text-center pt-2\">\r\n        <MButton Color=\"primary\" Class=\"mr-2 mb-1\" OnClick=\"ToggleOrder\">\r\n            Toggle sort order\r\n        </MButton>\r\n        <MButton Color=\"primary\" Class=\"mr-2 mb-1\" OnClick=\"NextSort\">\r\n            Sort next column\r\n        </MButton>\r\n    </div>\r\n</div>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new List<DataTableHeader<Dessert>>\r\n        {\r\n           new ()\r\n           {\r\n            Text= \"Dessert (100g serving)\",\r\n            Align= DataTableHeaderAlign.Start,\r\n            Value= nameof(Dessert.Name)\r\n          },\r\n          new (){ Text= \"Calories\", Value= nameof(Dessert.Calories)},\r\n          new (){ Text= \"Fat (g)\", Value= nameof(Dessert.Fat)},\r\n          new (){ Text= \"Carbs (g)\", Value= nameof(Dessert.Carbs)},\r\n          new (){ Text= \"Protein (g)\", Value= nameof(Dessert.Protein)},\r\n          new (){ Text= \"Iron (%)\", Value= nameof(Dessert.Iron)}\r\n        };\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert\r\n           {\r\n              Name= \"Frozen Yogurt\",\r\n              Calories= 159,\r\n              Fat= 6.0,\r\n              Carbs= 24,\r\n              Protein= 4.0,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Ice cream sandwich\",\r\n              Calories= 237,\r\n              Fat= 9.0,\r\n              Carbs= 37,\r\n              Protein= 4.3,\r\n              Iron= \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Eclair\",\r\n              Calories= 262,\r\n              Fat= 16.0,\r\n              Carbs= 23,\r\n              Protein= 6.0,\r\n              Iron= \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n              Name= \"Cupcake\",\r\n              Calories= 305,\r\n              Fat= 3.7,\r\n              Carbs= 67,\r\n              Protein= 4.3,\r\n              Iron= \"8%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Gingerbread\",\r\n                Calories= 356,\r\n                Fat= 16.0,\r\n                Carbs= 49,\r\n                Protein= 3.9,\r\n                Iron= \"16%\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Jelly bean\",\r\n                Calories= 375,\r\n                Fat= 0.0,\r\n                Carbs= 94,\r\n                Protein= 0.0,\r\n                Iron= \"0%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Lollipop\",\r\n                Calories= 392,\r\n                Fat= 0.2,\r\n                Carbs= 98,\r\n                Protein= 0,\r\n                Iron= \"2%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Honeycomb\",\r\n                Calories= 408,\r\n                Fat= 3.2,\r\n                Carbs= 87,\r\n                Protein= 6.5,\r\n                Iron= \"45%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"Donut\",\r\n                Calories= 452,\r\n                Fat= 25.0,\r\n                Carbs= 51,\r\n                Protein= 4.9,\r\n                Iron= \"22%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name= \"KitKat\",\r\n                Calories= 518,\r\n                Fat= 26.0,\r\n                Carbs= 65,\r\n                Protein= 7,\r\n                Iron= \"6%\",\r\n            }\r\n        };\r\n\r\n    private string _sortBy = nameof(Dessert.Fat);\r\n    private bool _sortDesc = false;\r\n\r\n    public void HandleOnOptionsUpdate(DataOptions options)\r\n    {\r\n        _sortBy = options.SortBy.FirstOrDefault();\r\n        _sortDesc = options.SortDesc.FirstOrDefault();\r\n    }\r\n\r\n    public void ToggleOrder()\r\n    {\r\n        _sortDesc = !_sortDesc;\r\n    }\r\n\r\n    public void NextSort()\r\n    {\r\n        var index = _headers.FindIndex(h => h.Value == _sortBy);\r\n        index = (index + 1) % _headers.Count;\r\n        _sortBy = _headers[index].Value;\r\n    }\r\n}\r\n",
        "Type": "Demos.Components.Tables.children.DataTable.misc.ExternalSorting",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 3,
        "Name": "serverSidePaginateAndSort",
        "Title": "服务器端分页和排序",
        "Description": "<p>如果你正在从后端服务器加载已经分页和排序的数据，你可以使用 <strong>ServerItemsLength</strong> 属性。 使用这个属性会禁用内置的排序和分页，因此，你需要用特定事件（<strong>OnPageUpdate</strong>，**\nOnSortByUpdate**，<strong>OnOptionsUpdate</strong> 等）来得知什么时候要向后端服务器请求新页面。 获取数据时，使用 <strong>Loading</strong> 属性显示进度条。</p>\n",
        "Code": "<div>\r\n    <MDataTable Headers=\"_headers\"\r\n                Items=\"_desserts\"\r\n                OnOptionsUpdate=\"HandleOnOptionsUpdate\"\r\n                ServerItemsLength=\"_totalDesserts\"\r\n                ItemsPerPage=\"5\"\r\n                Loading=\"_loading\"\r\n                Class=\"elevation-1\"\r\n                @ref=\"_dataTable\">\r\n    </MDataTable>\r\n</div>\r\n\r\n@code {\r\n\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n\r\n        public double Fat { get; set; }\r\n\r\n        public int Carbs { get; set; }\r\n\r\n        public double Protein { get; set; }\r\n\r\n        public int Sodium { get; set; }\r\n\r\n        public string Calcium { get; set; }\r\n\r\n        public string Iron { get; set; }\r\n    }\r\n\r\n    private int _totalDesserts = 0;\r\n    private IEnumerable<Dessert> _desserts = new List<Dessert>();\r\n    private bool _loading = true;\r\n    private DataOptions _options = new DataOptions();\r\n\r\n    private MDataTable<Dessert> _dataTable;\r\n\r\n    private List<DataTableHeader<Dessert>> _headers = new List<DataTableHeader<Dessert>>\r\n    {\r\n        new()\r\n        {\r\n            Text = \"Dessert (100g serving)\",\r\n            Align = DataTableHeaderAlign.Start,\r\n            Sortable = false,\r\n            Value = nameof(Dessert.Name)\r\n        },\r\n        new() { Text = \"Calories\", Value = nameof(Dessert.Calories) },\r\n        new() { Text = \"Fat (g)\", Value = nameof(Dessert.Fat) },\r\n        new() { Text = \"Carbs (g)\", Value = nameof(Dessert.Carbs) },\r\n        new() { Text = \"Protein (g)\", Value = nameof(Dessert.Protein) },\r\n        new() { Text = \"Iron (%)\", Value = nameof(Dessert.Iron) }\r\n    };\r\n\r\n    private async Task HandleOnOptionsUpdate(DataOptions options)\r\n    {\r\n        _options = options;\r\n        await GetDataFromApi();\r\n    }\r\n\r\n    protected override async Task OnAfterRenderAsync(bool firstRender)\r\n    {\r\n        if (firstRender)\r\n        {\r\n            _options = _dataTable.Options;\r\n            await GetDataFromApi();\r\n            StateHasChanged();\r\n        }\r\n    }\r\n\r\n    private async Task GetDataFromApi()\r\n    {\r\n        _loading = true;\r\n        (_desserts, _totalDesserts) = await FakeApiCallAsync();\r\n        _loading = false;\r\n    }\r\n\r\n    private async Task<(IEnumerable<Dessert> items, int total)> FakeApiCallAsync()\r\n    {\r\n        var sortBy = _options.SortBy;\r\n        var sortDesc = _options.SortDesc;\r\n        var page = _options.Page;\r\n        var itemsPerPage = _options.ItemsPerPage;\r\n\r\n        var items = GetDesserts();\r\n        var total = items.Count();\r\n\r\n        if (sortBy.Count == 1 && sortDesc.Count == 1)\r\n        {\r\n            var header = _headers.Find(header => header.Value == sortBy[0]);\r\n            var selector = header.ItemValue.Factory;\r\n\r\n            if (!sortDesc[0])\r\n            {\r\n                items = items.OrderBy(selector);\r\n            }\r\n            else\r\n            {\r\n                items = items.OrderByDescending(selector);\r\n            }\r\n        }\r\n\r\n        if (itemsPerPage > 0)\r\n        {\r\n            items = items.Skip((page - 1) * itemsPerPage).Take(page * itemsPerPage);\r\n        }\r\n\r\n        await Task.Delay(1000);\r\n        return (items, total);\r\n    }\r\n\r\n    public IEnumerable<Dessert> GetDesserts()\r\n    {\r\n        return new List<Dessert>\r\n        {\r\n            new Dessert\r\n            {\r\n                Name = \"Frozen Yogurt\",\r\n                Calories = 159,\r\n                Fat = 6.0,\r\n                Carbs = 24,\r\n                Protein = 4.0,\r\n                Iron = \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name = \"Ice cream sandwich\",\r\n                Calories = 237,\r\n                Fat = 9.0,\r\n                Carbs = 37,\r\n                Protein = 4.3,\r\n                Iron = \"1%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name = \"Eclair\",\r\n                Calories = 262,\r\n                Fat = 16.0,\r\n                Carbs = 23,\r\n                Protein = 6.0,\r\n                Iron = \"7%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name = \"Cupcake\",\r\n                Calories = 305,\r\n                Fat = 3.7,\r\n                Carbs = 67,\r\n                Protein = 4.3,\r\n                Iron = \"8%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name = \"Gingerbread\",\r\n                Calories = 356,\r\n                Fat = 16.0,\r\n                Carbs = 49,\r\n                Protein = 3.9,\r\n                Iron = \"16%\"\r\n            },\r\n            new Dessert\r\n            {\r\n                Name = \"Jelly bean\",\r\n                Calories = 375,\r\n                Fat = 0.0,\r\n                Carbs = 94,\r\n                Protein = 0.0,\r\n                Iron = \"0%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name = \"Lollipop\",\r\n                Calories = 392,\r\n                Fat = 0.2,\r\n                Carbs = 98,\r\n                Protein = 0,\r\n                Iron = \"2%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name = \"Honeycomb\",\r\n                Calories = 408,\r\n                Fat = 3.2,\r\n                Carbs = 87,\r\n                Protein = 6.5,\r\n                Iron = \"45%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name = \"Donut\",\r\n                Calories = 452,\r\n                Fat = 25.0,\r\n                Carbs = 51,\r\n                Protein = 4.9,\r\n                Iron = \"22%\",\r\n            },\r\n            new Dessert\r\n            {\r\n                Name = \"KitKat\",\r\n                Calories = 518,\r\n                Fat = 26.0,\r\n                Carbs = 65,\r\n                Protein = 7,\r\n                Iron = \"6%\",\r\n            }\r\n        };\r\n    }\r\n\r\n}\r\n",
        "Type": "Demos.Components.Tables.children.DataTable.misc.ServerSidePaginateAndSort",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/data-iterators",
      "/components/simple-tables",
      "/components/lists"
    ],
    "Subtitle": "数据表格",
    "Title": "Data tables",
    "Type": "数据表格"
  },
  {
    "Desc": "<p>MSimpleTable组件是 table 元素的简单封装组件。 在组件中，你可以使用所有常规表元素，如 thead ， tbody ，tr 等。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MSimpleTable\">MSimpleTable</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7621849+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>简单表格组件是 <code>&lt;table&gt;</code> 元素的封装组件。</p>\n",
        "Code": "<MSimpleTable>\r\n    <thead>\r\n        <tr>\r\n            <th class=\"text-left\">\r\n                Name\r\n            </th>\r\n            <th class=\"text-left\">\r\n                Calories\r\n            </th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        @foreach (var item in _desserts)\r\n        {\r\n            <tr @key=\"item.Name\">\r\n                <td>@item.Name</td>\r\n                <td>@item.Calories</td>\r\n            </tr>\r\n        }\r\n    </tbody>\r\n</MSimpleTable>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n    }\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert {\r\n            Name= \"Frozen Yogurt\",\r\n            Calories= 159,\r\n          },\r\n          new Dessert{\r\n            Name= \"Ice cream sandwich\",\r\n            Calories= 237,\r\n          },\r\n          new Dessert {\r\n            Name= \"Eclair\",\r\n            Calories= 262,\r\n          },\r\n          new Dessert {\r\n            Name= \"Cupcake\",\r\n            Calories= 305,\r\n          },\r\n          new Dessert {\r\n            Name= \"Gingerbread\",\r\n            Calories= 356,\r\n          },\r\n          new Dessert {\r\n            Name= \"Jelly bean\",\r\n            Calories= 375,\r\n          },\r\n          new Dessert {\r\n            Name= \"Lollipop\",\r\n            Calories= 392,\r\n          },\r\n          new Dessert {\r\n            Name= \"Honeycomb\",\r\n            Calories= 408,\r\n          },\r\n          new Dessert {\r\n            Name= \"Donut\",\r\n            Calories= 452,\r\n          },\r\n          new Dessert {\r\n            Name= \"KitKat\",\r\n            Calories= 518,\r\n          },\r\n        };\r\n}\r\n\r\n",
        "Type": "Demos.Components.Tables.children.SimpleTables.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "dark",
        "Title": "暗色主题",
        "Description": "<p>使用 <code>Dark</code> 属性把表格切换到暗色主题。</p>\n",
        "Code": "<MSimpleTable Dark>\r\n    <thead>\r\n        <tr>\r\n            <th class=\"text-left\">\r\n                Name\r\n            </th>\r\n            <th class=\"text-left\">\r\n                Calories\r\n            </th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        @foreach (var item in _desserts)\r\n        {\r\n            <tr @key=\"item.Name\">\r\n                <td>@item.Name</td>\r\n                <td>@item.Calories</td>\r\n            </tr>\r\n        }\r\n    </tbody>\r\n</MSimpleTable>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n    }\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert {\r\n            Name= \"Frozen Yogurt\",\r\n            Calories= 159,\r\n          },\r\n          new Dessert{\r\n            Name= \"Ice cream sandwich\",\r\n            Calories= 237,\r\n          },\r\n          new Dessert {\r\n            Name= \"Eclair\",\r\n            Calories= 262,\r\n          },\r\n          new Dessert {\r\n            Name= \"Cupcake\",\r\n            Calories= 305,\r\n          },\r\n          new Dessert {\r\n            Name= \"Gingerbread\",\r\n            Calories= 356,\r\n          },\r\n          new Dessert {\r\n            Name= \"Jelly bean\",\r\n            Calories= 375,\r\n          },\r\n          new Dessert {\r\n            Name= \"Lollipop\",\r\n            Calories= 392,\r\n          },\r\n          new Dessert {\r\n            Name= \"Honeycomb\",\r\n            Calories= 408,\r\n          },\r\n          new Dessert {\r\n            Name= \"Donut\",\r\n            Calories= 452,\r\n          },\r\n          new Dessert {\r\n            Name= \"KitKat\",\r\n            Calories= 518,\r\n          },\r\n        };\r\n}\r\n\r\n",
        "Type": "Demos.Components.Tables.children.SimpleTables.props.Dark",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "dense",
        "Title": "紧凑",
        "Description": "<p>你可以使用 <strong>Dense</strong> 属性来显示紧凑表格。</p>\n",
        "Code": "<MSimpleTable Dense>\r\n    <thead>\r\n        <tr>\r\n            <th class=\"text-left\">\r\n                Name\r\n            </th>\r\n            <th class=\"text-left\">\r\n                Calories\r\n            </th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        @foreach (var item in _desserts)\r\n        {\r\n            <tr @key=\"item.Name\">\r\n                <td>@item.Name</td>\r\n                <td>@item.Calories</td>\r\n            </tr>\r\n        }\r\n    </tbody>\r\n</MSimpleTable>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n    }\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert {\r\n            Name= \"Frozen Yogurt\",\r\n            Calories= 159,\r\n          },\r\n          new Dessert{\r\n            Name= \"Ice cream sandwich\",\r\n            Calories= 237,\r\n          },\r\n          new Dessert {\r\n            Name= \"Eclair\",\r\n            Calories= 262,\r\n          },\r\n          new Dessert {\r\n            Name= \"Cupcake\",\r\n            Calories= 305,\r\n          },\r\n          new Dessert {\r\n            Name= \"Gingerbread\",\r\n            Calories= 356,\r\n          },\r\n          new Dessert {\r\n            Name= \"Jelly bean\",\r\n            Calories= 375,\r\n          },\r\n          new Dessert {\r\n            Name= \"Lollipop\",\r\n            Calories= 392,\r\n          },\r\n          new Dessert {\r\n            Name= \"Honeycomb\",\r\n            Calories= 408,\r\n          },\r\n          new Dessert {\r\n            Name= \"Donut\",\r\n            Calories= 452,\r\n          },\r\n          new Dessert {\r\n            Name= \"KitKat\",\r\n            Calories= 518,\r\n          },\r\n        };\r\n}\r\n\r\n",
        "Type": "Demos.Components.Tables.children.SimpleTables.props.Dense",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "fixedHeader",
        "Title": "固定表头",
        "Description": "<p>使用 <strong>FixedHeader</strong> 属性和 <strong>Height</strong> 属性，将表头固定在表格的顶部。</p>\n",
        "Code": "<MSimpleTable \r\n    FixedHeader\r\n    Height=\"300\">\r\n    <thead>\r\n        <tr>\r\n            <th class=\"text-left\">\r\n                Name\r\n            </th>\r\n            <th class=\"text-left\">\r\n                Calories\r\n            </th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        @foreach (var item in _desserts)\r\n        {\r\n            <tr @key=\"item.Name\">\r\n                <td>@item.Name</td>\r\n                <td>@item.Calories</td>\r\n            </tr>\r\n        }\r\n    </tbody>\r\n</MSimpleTable>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n    }\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert {\r\n            Name= \"Frozen Yogurt\",\r\n            Calories= 159,\r\n          },\r\n          new Dessert{\r\n            Name= \"Ice cream sandwich\",\r\n            Calories= 237,\r\n          },\r\n          new Dessert {\r\n            Name= \"Eclair\",\r\n            Calories= 262,\r\n          },\r\n          new Dessert {\r\n            Name= \"Cupcake\",\r\n            Calories= 305,\r\n          },\r\n          new Dessert {\r\n            Name= \"Gingerbread\",\r\n            Calories= 356,\r\n          },\r\n          new Dessert {\r\n            Name= \"Jelly bean\",\r\n            Calories= 375,\r\n          },\r\n          new Dessert {\r\n            Name= \"Lollipop\",\r\n            Calories= 392,\r\n          },\r\n          new Dessert {\r\n            Name= \"Honeycomb\",\r\n            Calories= 408,\r\n          },\r\n          new Dessert {\r\n            Name= \"Donut\",\r\n            Calories= 452,\r\n          },\r\n          new Dessert {\r\n            Name= \"KitKat\",\r\n            Calories= 518,\r\n          },\r\n        };\r\n}\r\n\r\n",
        "Type": "Demos.Components.Tables.children.SimpleTables.props.FixedHeader",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "height",
        "Title": "高度",
        "Description": "<p>使用 <strong>Height</strong> 属性设置表格的高度。</p>\n",
        "Code": "<MSimpleTable \r\n    Height=\"300\">\r\n    <thead>\r\n        <tr>\r\n            <th class=\"text-left\">\r\n                Name\r\n            </th>\r\n            <th class=\"text-left\">\r\n                Calories\r\n            </th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        @foreach (var item in _desserts)\r\n        {\r\n            <tr @key=\"item.Name\">\r\n                <td>@item.Name</td>\r\n                <td>@item.Calories</td>\r\n            </tr>\r\n        }\r\n    </tbody>\r\n</MSimpleTable>\r\n\r\n@code {\r\n    public class Dessert\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public int Calories { get; set; }\r\n    }\r\n\r\n    private List<Dessert> _desserts = new List<Dessert>\r\n        {\r\n           new Dessert {\r\n            Name= \"Frozen Yogurt\",\r\n            Calories= 159,\r\n          },\r\n          new Dessert{\r\n            Name= \"Ice cream sandwich\",\r\n            Calories= 237,\r\n          },\r\n          new Dessert {\r\n            Name= \"Eclair\",\r\n            Calories= 262,\r\n          },\r\n          new Dessert {\r\n            Name= \"Cupcake\",\r\n            Calories= 305,\r\n          },\r\n          new Dessert {\r\n            Name= \"Gingerbread\",\r\n            Calories= 356,\r\n          },\r\n          new Dessert {\r\n            Name= \"Jelly bean\",\r\n            Calories= 375,\r\n          },\r\n          new Dessert {\r\n            Name= \"Lollipop\",\r\n            Calories= 392,\r\n          },\r\n          new Dessert {\r\n            Name= \"Honeycomb\",\r\n            Calories= 408,\r\n          },\r\n          new Dessert {\r\n            Name= \"Donut\",\r\n            Calories= 452,\r\n          },\r\n          new Dessert {\r\n            Name= \"KitKat\",\r\n            Calories= 518,\r\n          },\r\n        };\r\n}\r\n\r\n",
        "Type": "Demos.Components.Tables.children.SimpleTables.props.Height",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/data-iterators",
      "/components/data-tables",
      "/components/lists"
    ],
    "Subtitle": "简单表格",
    "Title": "Simple tables",
    "Type": "简单表格"
  },
  {
    "Desc": "<p><code>MTabs</code> 组件用于将内容隐藏在可选择的项目后面。 这也可以用作页面的伪导航，其中选项卡是链接，选项卡项是内容。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MTabs\">MTabs</a></li>\n<li><a href=\"/api/MTab\">MTab</a></li>\n<li><a href=\"/api/MTabItem\">MTabItem</a></li>\n<li><a href=\"/api/MTabsItems\">MTabsItems</a></li>\n</ul>\n",
      "注意": "\n<!--alert:warning-->\n<p>当使用 <strong>Dark</strong> 属性和 <strong>不</strong> 提供自定义 <strong>Color</strong> 时，<code>MTabs</code>组件会将其颜色默认为 white。</p>\n<!--alert:warning-->\n<!--alert:warning-->\n<p>当使用包含必填输入字段的 <code>MTabItem</code> 时，你必须使用 <strong>eager</strong> prop 来验证尚未显示的必填字段。</p>\n<!--alert:warning-->\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7691844+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p><code>MTabs</code> 组件是 <a href=\"/components/item-groups\"><strong>MItemGroup</strong></a> 的样式扩展。 它提供了一个易于使用的接口来组织内容组。</p>\n",
        "Code": "<MTabs>\r\n    <MTab>Item One</MTab>\r\n    <MTab>Item Two</MTab>\r\n    <MTab>Item Three</MTab>\r\n</MTabs>",
        "Type": "Demos.Components.Tabs.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "alignWithTitle",
        "Title": "对齐标题",
        "Description": "<p>使用 <strong>AlignWithTitle</strong> 属性将 <code>MTabs</code> <code>MToolbarTitle</code> 对齐（<code>MAppBarNavIcon</code> 或 <code>MButton</code> 必须在 <code>MToolbar</code> 中使用)。</p>\n",
        "Code": "<MCard>\r\n    <MToolbar Color=\"cyan\" Dark Flat>\r\n        <ChildContent>\r\n            <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n            <MToolbarTitle>Your Dashboard</MToolbarTitle>\r\n\r\n            <MSpacer></MSpacer>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-magnify</MIcon>\r\n            </MButton>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-dots-vertical</MIcon>\r\n            </MButton>\r\n        </ChildContent>\r\n\r\n        <ExtensionContent>\r\n            <MTabs @bind-Value=\"tab\" \r\n                   AlignWithTitle\r\n                   SliderColor=\"yellow\">\r\n                @foreach (var item in items)\r\n                {\r\n                    <MTab Value=\"item\">\r\n                        @item\r\n                    </MTab>\r\n                }\r\n            </MTabs>\r\n        </ExtensionContent>\r\n    </MToolbar>\r\n\r\n    <MTabsItems @bind-Value=\"tab\">\r\n        @foreach (var item in items)\r\n        {\r\n            <MTabItem Value=\"item\">\r\n                <MCard Flat>\r\n                    <MCardText>@text</MCardText>\r\n                </MCard>\r\n            </MTabItem>\r\n        }\r\n    </MTabsItems>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    StringNumber tab;\r\n\r\n    List<string> items = new()\r\n    {\r\n        \"web\", \"shopping\", \"videos\", \"images\", \"news\",\r\n    };\r\n\r\n    string text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\r\n\r\n}",
        "Type": "Demos.Components.Tabs.props.AlignWithTitle",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "centerActive",
        "Title": "激活项居中",
        "Description": "<p><strong>CenterActive</strong> 属性将使活动标签始终居中。</p>\n",
        "Code": "<MCard>\r\n    <MTabs BackgroundColor=\"deep-purple accent-4\" CenterActive Dark>\r\n        <MTab>One</MTab>\r\n        <MTab>Two</MTab>\r\n        <MTab>Three</MTab>\r\n        <MTab>Four</MTab>\r\n        <MTab>Five</MTab>\r\n        <MTab>Six</MTab>\r\n        <MTab>Seven</MTab>\r\n        <MTab>Eight</MTab>\r\n        <MTab>Nine</MTab>\r\n        <MTab>Ten</MTab>\r\n        <MTab>Eleven</MTab>\r\n        <MTab>Twelve</MTab>\r\n        <MTab>Thirteen</MTab>\r\n        <MTab>Fourteen</MTab>\r\n        <MTab>Fifteen</MTab>\r\n        <MTab>Sixteen</MTab>\r\n        <MTab>Seventeen</MTab>\r\n        <MTab>Eighteen</MTab>\r\n        <MTab>Nineteen</MTab>\r\n        <MTab>Twenty</MTab>\r\n    </MTabs>\r\n</MCard>",
        "Type": "Demos.Components.Tabs.props.CenterActive",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "customIcons",
        "Title": "自定义分隔符",
        "Description": "<p><strong>PrevIcon</strong> 和 <strong>NextIcon</strong> 可以用于应用自定义分页图标。</p>\n",
        "Code": "<MSheet Elevation=\"6\">\r\n    <MTabs BackgroundColor=\"cyan\"\r\n           Dark \r\n           NextIcon=\"mdi-arrow-right-bold-box-outline\"\r\n           PrevIcon=\"mdi-arrow-left-bold-box-outline\"\r\n           ShowArrows=\"@true\"\r\n           SliderColor=\"yellow\">\r\n        @foreach (var i in Enumerable.Range(1, 30))\r\n        {\r\n            <MTab>Item @i</MTab>\r\n        }\r\n    </MTabs>\r\n</MSheet>",
        "Type": "Demos.Components.Tabs.props.CustomIcons",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "fixedTabs",
        "Title": "固定选项卡",
        "Description": "<p><strong>FixedTabs</strong> 属性迫使 <code>MTab</code> 占用所有可用的空间，直到最大宽度(300px)。</p>\n",
        "Code": "<MTabs FixedTabs BackgroundColor=\"indigo\" Dark>\r\n    <MTab>Option</MTab>\r\n    <MTab>Another Selection</MTab>\r\n    <MTab>Items</MTab>\r\n    <MTab>Another Screen</MTab>\r\n</MTabs>",
        "Type": "Demos.Components.Tabs.props.FixedTabs",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "grow",
        "Title": "增长",
        "Description": "<p><strong>Grow</strong> 属性将使选项卡项目占用所有可用的空间，最大宽度为300px。</p>\n",
        "Code": "<MCard Color=\"basil\">\r\n    <MCardTitle Class=\"text-center justify-center py-6\">\r\n        <h1 class=\"font-weight-bold text-h2 basil--text\">BASiL</h1>\r\n    </MCardTitle>\r\n\r\n    <MTabs @bind-Value=\"tab\"\r\n           BackgroundColor=\"transparent\"\r\n           Color=\"basil\"\r\n           Grow>\r\n        @foreach (var item in items)\r\n        {\r\n            <MTab Value=\"@item\">@item</MTab>\r\n        }\r\n    </MTabs>\r\n\r\n    <MTabsItems Value=\"@tab\">\r\n        @foreach (var item in items)\r\n        {\r\n            <MTabItem Value=\"@item\">\r\n                <MCard Color=\"basil\" Flat>\r\n                    <MCardText>@text</MCardText>\r\n                </MCard>\r\n            </MTabItem>\r\n        }\r\n    </MTabsItems>\r\n</MCard>\r\n\r\n<style>\r\n/* Helper classes */\r\n.basil {\r\n  background-color: #FFFBE6 !important;\r\n}\r\n.basil--text {\r\n  color: #356859 !important;\r\n}\r\n</style>\r\n\r\n@code {\r\n\r\n    StringNumber tab;\r\n\r\n    List<string> items = new List<string>() {\"petizers\", \"Entrees\", \"Deserts\", \"Cocktails\"};\r\n\r\n    string text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\r\n\r\n}",
        "Type": "Demos.Components.Tabs.props.Grow",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "iconAndText",
        "Title": "图标和文本",
        "Description": "<p>使用 <strong>IconsWithText</strong> 属性将 <code>MTabs</code> 的高度增加到72px，以便图标和文本都能被使用。</p>\n",
        "Code": "<MCard>\r\n    <MTabs\r\n        @bind-Value=\"tab\"\r\n        BackgroundColor=\"deep-purple accent-4\"\r\n        Centered\r\n        Dark\r\n        IconsAndText>\r\n        <MTab>\r\n            Recents\r\n            <MIcon>mdi-phone</MIcon>\r\n        </MTab>\r\n\r\n        <MTab>\r\n            Favorites\r\n            <MIcon>mdi-heart</MIcon>\r\n        </MTab>\r\n\r\n        <MTab>\r\n            Nearby\r\n            <MIcon>mdi-account-box</MIcon>\r\n        </MTab>\r\n    </MTabs>\r\n\r\n    <MTabsItems Value=\"tab\">\r\n        @foreach (var item in Enumerable.Range(0, 3))\r\n        {\r\n            <MTabItem>\r\n                <MCard Flat>\r\n                    <MCardText>@text</MCardText>\r\n                </MCard>\r\n            </MTabItem>\r\n        }\r\n    </MTabsItems>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    StringNumber tab;\r\n\r\n    string text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\r\n}",
        "Type": "Demos.Components.Tabs.props.IconAndText",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "pagination",
        "Title": "分页",
        "Description": "<p>如果选项卡项溢出它们的容器，分页控件将出现在桌面上。对于移动设备，箭头只会与 <strong>ShowArrows</strong> 属性一起显示。</p>\n",
        "Code": "<MCard>\r\n    <MTabs Dark BackgroundColor=\"teal darken-3\" ShowArrows=\"@(true)\" SliderColor=\"teal lighten-3\">\r\n        @foreach (var i in Enumerable.Range(1, 30))\r\n        {\r\n            <MTab>Item @i</MTab>\r\n        }\r\n    </MTabs>\r\n</MCard>",
        "Type": "Demos.Components.Tabs.props.Pagination",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "right",
        "Title": "右对齐",
        "Description": "<p><strong>Right</strong> 属性将选项卡对齐到右边。</p>\n",
        "Code": "<MCard>\r\n    <MTabs\r\n        Color=\"deep-purple accent-4\"\r\n        Right>\r\n        <MTab>Landscape</MTab>\r\n        <MTab>City</MTab>\r\n        <MTab>Abstract</MTab>\r\n\r\n        @foreach (var item in Enumerable.Range(1, 3))\r\n        {\r\n            <MTabItem>\r\n                <MContainer Fluid>\r\n                    <MRow>\r\n                        @foreach (var col in Enumerable.Range(1, 6))\r\n                        {\r\n                            <MCol\r\n                                Cols=\"12\"\r\n                                Md=\"4\">\r\n                                <MImage\r\n                                    Src=\"@($\"https://picsum.photos/500/300?image={col * item * 5 + 10}\")\"\r\n                                    LazySrc=\"@($\"https://picsum.photos/10/6?image={col * item * 5 + 10}\")\"\r\n                                    AspectRatio=\"1\">\r\n                                </MImage>\r\n                            </MCol>\r\n                        }\r\n                    </MRow>\r\n                </MContainer>\r\n            </MTabItem>\r\n        }\r\n    </MTabs>\r\n</MCard>",
        "Type": "Demos.Components.Tabs.props.Right",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "verticalTabs",
        "Title": "垂直标签页",
        "Description": "<p><strong>Vertical</strong> 属性允许 <code>MTab</code> 组件垂直堆叠。</p>\n",
        "Code": "<MCard>\r\n    <MToolbar\r\n        Flat\r\n        Color=\"primary\"\r\n        Dark>\r\n        <MToolbarTitle>User Profile</MToolbarTitle>\r\n    </MToolbar>\r\n    <MTabs Vertical>\r\n        <MTab>\r\n            <MIcon Left>\r\n                mdi-account\r\n            </MIcon>\r\n            Option 1\r\n        </MTab>\r\n        <MTab>\r\n            <MIcon Left>\r\n                mdi-lock\r\n            </MIcon>\r\n            Option 2\r\n        </MTab>\r\n        <MTab>\r\n            <MIcon Left>\r\n                mdi-access-point\r\n            </MIcon>\r\n            Option 3\r\n        </MTab>\r\n\r\n        <MTabItem>\r\n            <MCard Flat>\r\n                <MCardText>\r\n                    <p>\r\n                        Sed aliquam ultrices mauris. Donec posuere vulputate arcu. Morbi ac felis. Etiam feugiat lorem non metus. Sed a libero.\r\n                    </p>\r\n\r\n                    <p>\r\n                        Nam ipsum risus, rutrum vitae, vestibulum eu, molestie vel, lacus. Aenean tellus metus, bibendum sed, posuere ac, mattis non, nunc. Aliquam lobortis. Aliquam lobortis. Suspendisse non nisl sit amet velit hendrerit rutrum.\r\n                    </p>\r\n\r\n                    <p class=\"mb-0\">\r\n                        Phasellus dolor. Fusce neque. Fusce fermentum odio nec arcu. Pellentesque libero tortor, tincidunt et, tincidunt eget, semper nec, quam. Phasellus blandit leo ut odio.\r\n                    </p>\r\n                </MCardText>\r\n            </MCard>\r\n        </MTabItem>\r\n        <MTabItem>\r\n            <MCard Flat>\r\n                <MCardText>\r\n                    <p>\r\n                        Morbi nec metus. Suspendisse faucibus, nunc et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id tortor. Sed mollis, eros et ultrices tempus, mauris ipsum aliquam libero, non adipiscing dolor urna a orci. Curabitur ligula sapien, tincidunt non, euismod vitae, posuere imperdiet, leo. Nunc sed turpis.\r\n                    </p>\r\n\r\n                    <p>\r\n                        Suspendisse feugiat. Suspendisse faucibus, nunc et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id tortor. Proin viverra, ligula sit amet ultrices semper, ligula arcu tristique sapien, a accumsan nisi mauris ac eros. In hac habitasse platea dictumst. Fusce ac felis sit amet ligula pharetra condimentum.\r\n                    </p>\r\n\r\n                    <p>\r\n                        Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero. Nam commodo suscipit quam. In consectetuer turpis ut velit. Sed cursus turpis vitae tortor. Aliquam eu nunc.\r\n                    </p>\r\n\r\n                    <p>\r\n                        Etiam ut purus mattis mauris sodales aliquam. Ut varius tincidunt libero. Aenean viverra rhoncus pede. Duis leo. Fusce fermentum odio nec arcu.\r\n                    </p>\r\n\r\n                    <p class=\"mb-0\">\r\n                        Donec venenatis vulputate lorem. Aenean viverra rhoncus pede. In dui magna, posuere eget, vestibulum et, tempor auctor, justo. Fusce commodo aliquam arcu. Suspendisse enim turpis, dictum sed, iaculis a, condimentum nec, nisi.\r\n                    </p>\r\n                </MCardText>\r\n            </MCard>\r\n        </MTabItem>\r\n        <MTabItem>\r\n            <MCard Flat>\r\n                <MCardText>\r\n                    <p>\r\n                        Fusce a quam. Phasellus nec sem in justo pellentesque facilisis. Nam eget dui. Proin viverra, ligula sit amet ultrices semper, ligula arcu tristique sapien, a accumsan nisi mauris ac eros. In dui magna, posuere eget, vestibulum et, tempor auctor, justo.\r\n                    </p>\r\n\r\n                    <p class=\"mb-0\">\r\n                        Cras sagittis. Phasellus nec sem in justo pellentesque facilisis. Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nam at tortor in tellus interdum sagittis.\r\n                    </p>\r\n                </MCardText>\r\n            </MCard>\r\n        </MTabItem>\r\n    </MTabs>\r\n</MCard>",
        "Type": "Demos.Components.Tabs.props.VerticalTabs",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 10,
        "Name": "content",
        "Title": "内容",
        "Description": "<p>在 <code>MToolbar</code> 的扩展槽中放置 <code>MTabs</code> 是很常见的。使用 <code>MToolbar</code> 的tabs属性自动将其高度调整为48px以匹配 <code>MTabs</code>。</p>\n",
        "Code": "<MCard>\r\n    <MToolbar\r\n        Color=\"cyan\"\r\n        Dark\r\n        Flat>\r\n        <ChildContent>\r\n            <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n            <MToolbarTitle>Page title</MToolbarTitle>\r\n\r\n            <MSpacer></MSpacer>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-magnify</MIcon>\r\n            </MButton>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-dots-vertical</MIcon>\r\n            </MButton>\r\n        </ChildContent>\r\n\r\n        <ExtensionContent>\r\n            <MTabs\r\n                @bind-Value=\"model\"\r\n                Centered\r\n                SliderColor=\"yellow\">\r\n                @foreach (var item in Enumerable.Range(1, 3))\r\n                {\r\n                    <MTab Value=\"item\">\r\n                        Item @item\r\n                    </MTab>\r\n                }\r\n            </MTabs>\r\n        </ExtensionContent>\r\n    </MToolbar>\r\n\r\n    <MTabsItems @bind-Value=\"model\">\r\n        @foreach (var item in Enumerable.Range(1, 3))\r\n        {\r\n            <MTabItem Value=\"item\">\r\n                <MCard Flat>\r\n                    <MCardText>@text</MCardText>\r\n                </MCard>\r\n            </MTabItem>\r\n        }\r\n    </MTabsItems>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    StringNumber model = 2;\r\n\r\n    string text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\r\n\r\n}",
        "Type": "Demos.Components.Tabs.misc.Content",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 11,
        "Name": "desktopTabs",
        "Title": "桌面选项卡",
        "Description": "<p>您可以使用单个图标表示 <code>MTabs</code> 动作。当很容易将内容关联到每个选项卡时，这非常有用。</p>\n",
        "Code": "<MCard>\r\n    <MToolbar Flat>\r\n        <ChildContent>\r\n            <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n            <MToolbarTitle>Contact Database</MToolbarTitle>\r\n\r\n            <MSpacer></MSpacer>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-magnify</MIcon>\r\n            </MButton>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-dots-vertical</MIcon>\r\n            </MButton>\r\n        </ChildContent>\r\n\r\n        <ExtensionContent>\r\n            <MTabs\r\n                @bind-Value=\"tabs\"\r\n                FixedTabs>\r\n                <MTab\r\n                    Value=\"@(\"mobile-tabs-5-1\")\"\r\n                    Class=\"primary--text\">\r\n                    <MIcon>mdi-phone</MIcon>\r\n                </MTab>\r\n\r\n                <MTab\r\n                    Value=\"@(\"mobile-tabs-5-2\")\"\r\n                    Class=\"primary--text\">\r\n                    <MIcon>mdi-heart</MIcon>\r\n                </MTab>\r\n\r\n                <MTab\r\n                    Value=\"@(\"mobile-tabs-5-3\")\"\r\n                    Class=\"primary--text\">\r\n                    <MIcon>mdi-account-box</MIcon>\r\n                </MTab>\r\n            </MTabs>\r\n        </ExtensionContent>\r\n    </MToolbar>\r\n\r\n    <MTabsItems Value=\"tabs\">\r\n        @foreach (var item in Enumerable.Range(1, 3))\r\n        {\r\n            <MTabItem\r\n                Value=\"@($\"mobile-tabs-5-{item}\")\">\r\n                <MCard Flat>\r\n                    <MCardText>@text</MCardText>\r\n                </MCard>\r\n            </MTabItem>\r\n        }\r\n    </MTabsItems>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    StringNumber tabs;\r\n\r\n    string text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\r\n\r\n}",
        "Type": "Demos.Components.Tabs.misc.DesktopTabs",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 12,
        "Name": "dynamicHeight",
        "Title": "动态高度",
        "Description": "<p>更改 <code>MTabItem</code>，内容区域将平滑缩放到新大小。</p>\n",
        "Code": "<MCard>\r\n    <MToolbar Color=\"purple\"\r\n              Dark\r\n              Flat\r\n              Prominent>\r\n        <ChildContent>\r\n            <MTextField\r\n                AppendIcon=\"mdi-microphone\"\r\n                Class=\"mx-4\"\r\n                Flat\r\n                HideDetails=\"@true\"\r\n                Label=\"Search\"\r\n                PrependInnerIcon=\"mdi-magnify\"\r\n                TValue=\"string\"\r\n                SoloInverted>\r\n            </MTextField>\r\n        </ChildContent>\r\n\r\n        <ExtensionContent>\r\n            <MTabs\r\n                @bind-Value=\"tabs\"\r\n                Centered>\r\n                @foreach (var item in Enumerable.Range(1, 3))\r\n                {\r\n                    <MTab>\r\n                        Item @item\r\n                    </MTab>\r\n                }\r\n            </MTabs>\r\n        </ExtensionContent>\r\n    </MToolbar>\r\n\r\n    <MTabsItems Value=\"tabs\">\r\n        <MTabItem>\r\n            <MCard Flat>\r\n                <MCardText>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                </MCardText>\r\n            </MCard>\r\n        </MTabItem>\r\n        <MTabItem>\r\n            <MCard Flat>\r\n                <MCardTitle Class=\"text-h5\">\r\n                    An awesome title\r\n                </MCardTitle>\r\n                <MCardText>\r\n                    <p>\r\n                        Duis lobortis massa imperdiet quam. Donec vitae orci sed dolor rutrum auctor. Vestibulum facilisis, purus nec pulvinar iaculis, ligula mi congue nunc, vitae euismod ligula urna in dolor. Praesent congue erat at massa.\r\n                    </p>\r\n\r\n                    <p>\r\n                        Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc, eu sollicitudin urna dolor sagittis lacus. Pellentesque egestas, neque sit amet convallis pulvinar, justo nulla eleifend augue, ac auctor orci leo non est. Etiam sit amet orci eget eros faucibus tincidunt. Donec sodales sagittis magna.\r\n                    </p>\r\n\r\n                    <p class=\"mb-0\">\r\n                        Ut leo. Suspendisse potenti. Duis vel nibh at velit scelerisque suscipit. Fusce pharetra convallis urna.\r\n                    </p>\r\n                </MCardText>\r\n            </MCard>\r\n        </MTabItem>\r\n        <MTabItem>\r\n            <MCard Flat>\r\n                <MCardTitle Class=\"text-h5\">\r\n                    An even better title\r\n                </MCardTitle>\r\n                <MCardText>\r\n                    <p>\r\n                        Maecenas ullamcorper, dui et placerat feugiat, eros pede varius nisi, condimentum viverra felis nunc et lorem. Sed hendrerit. Maecenas malesuada. Vestibulum ullamcorper mauris at ligula. Proin faucibus arcu quis ante.\r\n                    </p>\r\n\r\n                    <p class=\"mb-0\">\r\n                        Etiam vitae tortor. Curabitur ullamcorper ultricies nisi. Sed magna purus, fermentum eu, tincidunt eu, varius ut, felis. Aliquam lobortis. Suspendisse potenti.\r\n                    </p>\r\n                </MCardText>\r\n            </MCard>\r\n        </MTabItem>\r\n    </MTabsItems>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    StringNumber tabs;\r\n}",
        "Type": "Demos.Components.Tabs.misc.DynamicHeight",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 13,
        "Name": "dynamicTabs",
        "Title": "动态标签",
        "Description": "<p>可以动态添加和删除选项卡。这允许您更新到任何数字，<code>MTabs</code>组件将做出反应。在本例中，当我们添加一个新选项卡时，我们会自动更改模型以匹配。当我们添加更多选项卡并溢出容器时，所选项目将自动滚动到视图中。删除所有<code>MTAB</code>，滑块将消失。</p>\n",
        "Code": "<MCard>\r\n    <MTabs\r\n        @bind-Value=\"tab\"\r\n        BackgroundColor=\"red lighten-2\"\r\n        Dark>\r\n        @foreach (var item in Enumerable.Range(0, Length))\r\n        {\r\n            <MTab Value=\"item\" @key=\"item\">\r\n                Item @(item + 1)\r\n            </MTab>\r\n        }\r\n    </MTabs>\r\n    <MCardText Class=\"text-center\">\r\n        <MButton\r\n            Disabled=\"@(Length == 0)\"\r\n            Text\r\n            OnClick=\"() => Length--\">\r\n            Remove Tab\r\n        </MButton>\r\n        <MDivider\r\n            Class=\"mx-4\"\r\n            Vertical>\r\n        </MDivider>\r\n        <MButton\r\n            Text\r\n            OnClick=\"() => Length++\">\r\n            Add Tab\r\n        </MButton>\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code {\r\n\r\n\r\n    int _length = 1;\r\n\r\n    int Length\r\n    {\r\n        get => _length;\r\n        set\r\n        {\r\n            _length = value;\r\n            tab = value - 1;\r\n        }\r\n    }\r\n\r\n    StringNumber tab;\r\n\r\n\r\n\r\n}",
        "Type": "Demos.Components.Tabs.misc.DynamicTabs",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 14,
        "Name": "overflowToMenu",
        "Title": "溢出到菜单",
        "Description": "<p>您可以使用菜单来保存其他选项卡，并在运行时将其交换。</p>\n",
        "Code": "@using System.Net.Security\r\n<MCard>\r\n    <MToolbar\r\n        Color=\"deep-purple accent-4\"\r\n        Dark\r\n        Flat>\r\n        <ChildContent>\r\n            <MAppBarNavIcon></MAppBarNavIcon>\r\n\r\n            <MToolbarTitle>Page title</MToolbarTitle>\r\n\r\n            <MSpacer></MSpacer>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-magnify</MIcon>\r\n            </MButton>\r\n\r\n            <MButton Icon>\r\n                <MIcon>mdi-dots-vertical</MIcon>\r\n            </MButton>\r\n        </ChildContent>\r\n\r\n        <ExtensionContent>\r\n            <MTabs\r\n                @bind-Value=\"currentItem\"\r\n                FixedTabs\r\n                SliderColor=\"white\">\r\n\r\n                @foreach (var item in items)\r\n                {\r\n                    <MTab Value=\"item\">\r\n                        @item\r\n                    </MTab>\r\n                }\r\n\r\n                @if (more.Count > 0)\r\n                {\r\n                    <MMenu\r\n                        Bottom\r\n                        Left>\r\n                        <ActivatorContent>\r\n                            <MButton\r\n                                Text\r\n                                Class=\"align-self-center mr-4\"\r\n                                @attributes=\"@context.Attrs\">\r\n                                more\r\n                                <MIcon Right>\r\n                                    mdi-menu-down\r\n                                </MIcon>\r\n                            </MButton>\r\n                        </ActivatorContent>\r\n\r\n                        <ChildContent>\r\n                            <MList Class=\"grey lighten-3\">\r\n                                @foreach (var item in more)\r\n                                {\r\n                                    <MListItem\r\n                                        Value=\"item\"\r\n                                        OnClick=\"() => addItem(item)\">\r\n                                        @item\r\n                                    </MListItem>\r\n                                }\r\n                            </MList>\r\n                        </ChildContent>\r\n                    </MMenu>\r\n                }\r\n            </MTabs>\r\n        </ExtensionContent>\r\n    </MToolbar>\r\n\r\n    <MTabsItems Value=\"currentItem\">\r\n        @foreach (var item in items.Concat(more))\r\n        {\r\n            <MTabItem Value=\"item\">\r\n                <MCard Flat>\r\n                    <MCardText>\r\n                        <h2> @item </h2>\r\n                        @text\r\n                    </MCardText>\r\n                </MCard>\r\n            </MTabItem>\r\n        }\r\n    </MTabsItems>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    StringNumber currentItem;\r\n\r\n    List<string> items = new List<string>()\r\n    {\r\n        \"Web\", \"Shopping\", \"Videos\", \"Images\"\r\n    };\r\n\r\n    List<string> more = new List<string>()\r\n    {\r\n        \"News\", \"Maps\", \"Books\", \"Flights\", \"Apps\"\r\n    };\r\n\r\n    string text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\r\n\r\n    void addItem(string item)\r\n    {\r\n        var removed = items.First();\r\n        items.Remove(removed);\r\n\r\n        var index = more.IndexOf(item);\r\n        more.RemoveAt(index);\r\n        items.Add(item);\r\n\r\n        more.Add(removed);\r\n\r\n        currentItem = item;\r\n    }\r\n}",
        "Type": "Demos.Components.Tabs.misc.OverflowToMenu",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 15,
        "Name": "tabItems",
        "Title": "标签项",
        "Description": "<p><code>MTabsItems</code>组件允许您自定义每个选项卡的内容。使用共享变量，<code>MTabsItems</code>将与当前选定的<code>MTab</code>同步。</p>\n",
        "Code": "<MCard>\r\n    <MTabs\r\n        @bind-Value=\"tab\"\r\n        BackgroundColor=\"primary\"\r\n        Dark>\r\n        @foreach (var (tab, _) in items)\r\n        {\r\n            <MTab Value=\"tab\">\r\n                @tab\r\n            </MTab>\r\n        }\r\n    </MTabs>\r\n\r\n    <MTabsItems Value=\"tab\">\r\n        @foreach (var (tab, content) in items)\r\n        {\r\n            <MTabItem Value=\"tab\">\r\n                <MCard Flat>\r\n                    <MCardText>@content</MCardText>\r\n                </MCard>\r\n            </MTabItem>\r\n        }\r\n    </MTabsItems>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    StringNumber tab;\r\n\r\n    List<(string tab, string content)> items = new()\r\n    {\r\n        new(\"One\", \"Tab 1 Content\"),\r\n        new(\"Two\", \"Tab 2 Content\"),\r\n        new(\"Three\", \"Tab 3 Content\"),\r\n        new(\"Four\", \"Tab 4 Content\"),\r\n        new(\"Five\", \"Tab 5 Content\"),\r\n        new(\"Six\", \"Tab 6 Content\"),\r\n        new(\"Seven\", \"Tab 7 Content\"),\r\n        new(\"Eight\", \"Tab 8 Content\"),\r\n        new(\"Nine\", \"Tab 9 Content\"),\r\n        new(\"Ten\", \"Tab 10 Content\"),\r\n    };\r\n\r\n}",
        "Type": "Demos.Components.Tabs.misc.TabItems",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/icons",
      "/components/toolbars",
      "/components/windows"
    ],
    "Subtitle": "选项卡",
    "Title": "Tabs",
    "Type": "选项卡"
  },
  {
    "Desc": "<p><code>MTimeline</code> 对于显示时间顺序信息非常有用。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MTimeline\">MTimeline</a></li>\n<li><a href=\"/api/MTimelineItem\">MTimelineItem</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7741843+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p><code>MTimeline</code> 以最简单的形式显示了一个垂直时间轴, 它至少应该包含一个 <code>MTimelineItem</code>。</p>\n",
        "Code": "<MTimeline>\r\n    <MTimelineItem>timeline item</MTimelineItem>\r\n    <MTimelineItem Class=\"text-right\">timeline item</MTimelineItem>\r\n    <MTimelineItem>timeline item</MTimelineItem>\r\n</MTimeline>\r\n\r\n\r\n",
        "Type": "Demos.Components.Timeline.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "color",
        "Title": "颜色",
        "Description": "<p>彩色的点可以创建可视的断点，使您的时间轴更容易阅读。</p>\n",
        "Code": "<MCard Class=\"mx-auto\"\r\n        MaxWidth=\"400\">\r\n    <MCard Dark\r\n            Flat>\r\n        <MButton Absolute\r\n               Bottom\r\n               Color=\"pink\"\r\n               Right\r\n               Fab>\r\n            <MIcon>mdi-plus</MIcon>\r\n        </MButton>\r\n        <MCardTitle Class=\"pa-2 purple lighten-3\">\r\n            <MButton Icon>\r\n                <MIcon>mdi-menu</MIcon>\r\n            </MButton>\r\n            <h3 class=\"text-h6 font-weight-light text-center grow\">\r\n                Timeline\r\n            </h3>\r\n            <MAvatar>\r\n                <MImage Src=\"https://avataaars.io/?avatarStyle=Circle&topType=LongHairStraight&accessoriesType=Blank&hairColor=BrownDark&facialHairType=Blank&clotheType=BlazerShirt&eyeType=Default&eyebrowType=Default&mouthType=Default&skinColor=Light\"></MImage>\r\n            </MAvatar>\r\n        </MCardTitle>\r\n        <MImage Src=\"https://cdn.masastack.com/stack/images/website/masa-blazor/cards/forest.jpg\"\r\n               Gradient=\"to top, rgba(0,0,0,.44), rgba(0,0,0,.44)\" Dark>\r\n            <MContainer Class=\"fill-height\">\r\n                <MRow Align=\"@AlignTypes.Center\">\r\n                    <strong class=\"text-h1 font-weight-regular mr-6\">8</strong>\r\n                    <MRow Justify=\"@JustifyTypes.End\">\r\n                        <div class=\"text-h5 font-weight-light\">\r\n                            Monday\r\n                        </div>\r\n                        <div class=\"text-uppercase font-weight-light\">\r\n                            February 2015\r\n                        </div>\r\n                    </MRow>\r\n                </MRow>\r\n            </MContainer>\r\n        </MImage>\r\n    </MCard>\r\n    <MCardText Class=\"py-0\">\r\n        <MTimeline AlignTop\r\n                    Dense>\r\n            <MTimelineItem Color=\"pink\"\r\n                             Small>\r\n                <MRow Class=\"pt-1\">\r\n                    <MCol Cols=\"3\">\r\n                        <strong>5pm</strong>\r\n                    </MCol>\r\n                    <MCol>\r\n                        <strong>New Icon</strong>\r\n                        <div class=\"text-caption\">\r\n                            Mobile App\r\n                        </div>\r\n                    </MCol>\r\n                </MRow>\r\n            </MTimelineItem>\r\n\r\n            <MTimelineItem Color=\"teal lighten-3\"\r\n                             Small>\r\n                <MRow Class=\"pt-1\">\r\n                    <MCol Cols=\"3\">\r\n                        <strong>3-4pm</strong>\r\n                    </MCol>\r\n                    <MCol>\r\n                        <strong>Design Stand Up</strong>\r\n                        <div class=\"text-caption mb-2\">\r\n                            Hangouts\r\n                        </div>\r\n                        <MAvatar>\r\n                            <MImage Src=\"https://avataaars.io/?avatarStyle=Circle&topType=LongHairFrida&accessoriesType=Kurt&hairColor=Red&facialHairType=BeardLight&facialHairColor=BrownDark&clotheType=GraphicShirt&clotheColor=Gray01&graphicType=Skull&eyeType=Wink&eyebrowType=RaisedExcitedNatural&mouthType=Disbelief&skinColor=Brown\"></MImage>\r\n                        </MAvatar>\r\n                        <MAvatar>\r\n                            <MImage Src=\"https://avataaars.io/?avatarStyle=Circle&topType=ShortHairFrizzle&accessoriesType=Prescription02&hairColor=Black&facialHairType=MoustacheMagnum&facialHairColor=BrownDark&clotheType=BlazerSweater&clotheColor=Black&eyeType=Default&eyebrowType=FlatNatural&mouthType=Default&skinColor=Tanned\"></MImage>\r\n                        </MAvatar>\r\n                        <MAvatar>\r\n                            <MImage Src=\"https://avataaars.io/?avatarStyle=Circle&topType=LongHairMiaWallace&accessoriesType=Sunglasses&hairColor=BlondeGolden&facialHairType=Blank&clotheType=BlazerSweater&eyeType=Surprised&eyebrowType=RaisedExcited&mouthType=Smile&skinColor=Pale\"></MImage>\r\n                        </MAvatar>\r\n                    </MCol>\r\n                </MRow>\r\n            </MTimelineItem>\r\n\r\n            <MTimelineItem Color=\"pink\"\r\n                             Small>\r\n                <MRow Class=\"pt-1\">\r\n                    <MCol Cols=\"3\">\r\n                        <strong>12pm</strong>\r\n                    </MCol>\r\n                    <MCol>\r\n                        <strong>Lunch break</strong>\r\n                    </MCol>\r\n                </MRow>\r\n            </MTimelineItem>\r\n\r\n            <MTimelineItem Color=\"teal lighten-3\"\r\n                             Small>\r\n                <MRow Class=\"pt-1\">\r\n                    <MCol Cols=\"3\">\r\n                        <strong>9-11am</strong>\r\n                    </MCol>\r\n                    <MCol>\r\n                        <strong>Finish Home Screen</strong>\r\n                        <div class=\"text-caption\">\r\n                            Web App\r\n                        </div>\r\n                    </MCol>\r\n                </MRow>\r\n            </MTimelineItem>\r\n        </MTimeline>\r\n    </MCardText>\r\n</MCard>",
        "Type": "Demos.Components.Timeline.props.Color",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "dense",
        "Title": "密集",
        "Description": "<p><strong>Dense</strong> 的时间轴将所有内容置于右侧。在这个示例中，<code>MAlert</code> 代替卡片以提供不同的设计。</p>\n",
        "Code": "@using System.Timers;\r\n@using Timer = System.Timers.Timer;\r\n\r\n<MCard Class=\"mx-auto\" MaxWidth=\"600\">\r\n    <MCardTitle Class=\"blue-grey white--text\">\r\n        <span class=\"text-h6\">Logs</span>\r\n        <MSpacer></MSpacer>\r\n        <MButton Outlined=\"_interval == null\" Color=\"@_btnColor\" Dark Depressed OnClick=\"_interval == null ? Start : Stop\">\r\n            Realtime Logging\r\n        </MButton>\r\n    </MCardTitle>\r\n    <MCardText Class=\"py-0\">\r\n        <MTimeline Dense>\r\n            @foreach (var item in _items)\r\n            {\r\n                <MTimelineItem Color=\"@item.Color\" Small FillDot Id=\"@item.Id.ToString()\">\r\n                    <MAlert Value Color=\"@item.Color\" Icon=\"@item.Icon\" Class=\"white--text\">\r\n                        Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.\r\n                    </MAlert>\r\n                </MTimelineItem>\r\n            }\r\n        </MTimeline>\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code\r\n{\r\n    private string[] _colors = new string[4] { \"info\", \"warning\", \"error\", \"success\" };\r\n    private Dictionary<string, string> _icons = new Dictionary<string, string>\r\n    {\r\n        { \"info\",\"mdi-information\"},\r\n        { \"warning\",\"mdi-alert\"},\r\n        { \"error\",\"mdi-alert-circle\"},\r\n        { \"success\",\"mdi-check-circle\"}\r\n    };\r\n    private class ItemDemo\r\n    {\r\n        public int Id { get; set; }\r\n        public string Color { get; set; }\r\n        public string Icon { get; set; }\r\n    }\r\n    private List<ItemDemo> _items = new List<ItemDemo>\r\n    {\r\n        new ItemDemo { Id = 1, Color = \"info\", Icon = \"mdi-information\" }\r\n    };\r\n    private int _nonce = 2;\r\n    private Timer _interval { get; set; }\r\n    private string _btnColor => _interval == null ? \"white\" : \"primary\";\r\n\r\n    private void AddEvent()\r\n    {\r\n        var (color, icon) = GenAlert();\r\n\r\n        var previousColor = _items[0].Color;\r\n\r\n        while (previousColor == color)\r\n        {\r\n            (color, icon) = GenAlert();\r\n        };\r\n\r\n        _items.Insert(0, new ItemDemo { Id = _nonce++, Color = color, Icon = icon });\r\n\r\n        if (_nonce > 6)\r\n        {\r\n            _items.RemoveAt(_items.Count - 1);\r\n        }\r\n    }\r\n\r\n    private (string, string) GenAlert()\r\n    {\r\n        var color = GenColor();\r\n\r\n        return (color, GenIcon(color));\r\n    }\r\n\r\n    private string GenColor()\r\n    {\r\n        var random = new Random();\r\n        var num = random.Next(0, 10);\r\n\r\n        return _colors[num % 4];\r\n    }\r\n\r\n    private string GenIcon(string color)\r\n    {\r\n        _icons.TryGetValue(color, out var icon);\r\n\r\n        return icon;\r\n    }\r\n\r\n    private void Start()\r\n    {\r\n        if (_interval == null)\r\n        {\r\n            _interval = new Timer\r\n            {\r\n                Interval = 3000\r\n            };\r\n            _interval.Elapsed += Timer_Elapsed;\r\n        }\r\n\r\n        _interval.Start();\r\n    }\r\n\r\n    private async void Timer_Elapsed(object sender, ElapsedEventArgs e)\r\n    {\r\n        await InvokeAsync(() =>\r\n        {\r\n            AddEvent();\r\n\r\n            StateHasChanged();\r\n        });\r\n    }\r\n\r\n    private void Stop()\r\n    {\r\n        _interval.Stop();\r\n        _interval.Dispose();\r\n        _interval.Close();\r\n\r\n        _interval = null;\r\n    }\r\n}",
        "Type": "Demos.Components.Timeline.props.Dense",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "iconDots",
        "Title": "图标点",
        "Description": "<p>使用 <code>MTimelineItem</code> 圆点内的图标来提供额外的上下文。</p>\n",
        "Code": "<MTimeline AlignTop\r\n           Dense=\"false\">\r\n    @foreach (var item in _items)\r\n    {\r\n        <MTimelineItem Color=\"@item.Color\"\r\n                       Icon=\"@item.Icon\"\r\n                       FillDot>\r\n            <MCard Color=\"@item.Color\"\r\n                    Dark>\r\n                <MCardTitle Class=\"text-h6\">\r\n                    Lorem Ipsum Dolor\r\n                </MCardTitle>\r\n                <MCardText Class=\"white text--primary\">\r\n                    <p>Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.</p>\r\n                    <MButton Color=\"@item.Color\"\r\n                           Class=\"mx-0\"\r\n                           Outlined>\r\n                        Button\r\n                    </MButton>\r\n                </MCardText>\r\n            </MCard>\r\n        </MTimelineItem>\r\n    }\r\n</MTimeline>\r\n\r\n@code{\r\n    private List<Item> _items = new List<Item>\r\n    {\r\n       new Item \r\n       {\r\n          Color= \"red lighten-2\",\r\n          Icon= \"mdi-star\",\r\n       },\r\n        new Item\r\n        {\r\n          Color= \"purple darken-1\",\r\n          Icon= \"mdi-book-variant\",\r\n        },\r\n        new Item\r\n        {\r\n          Color= \"green lighten-1\",\r\n          Icon= \"mdi-airballoon\",\r\n        },\r\n        new Item\r\n        {\r\n          Color= \"indigo\",\r\n          Icon= \"mdi-buffer\",\r\n        }\r\n    };\r\n\r\n    class Item\r\n    {\r\n        public string Color { get; set; }\r\n        public string Icon { get; set; }\r\n    }\r\n}",
        "Type": "Demos.Components.Timeline.props.IconDots",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "reverse",
        "Title": "反转",
        "Description": "<p>您可以使用 <strong>Reverse</strong> 属性来反转时间轴项目的方向。这在默认模式和 <strong>Dense</strong> 模式下都可以工作。</p>\n",
        "Code": "<div>\r\n    <MSwitch @bind-Value=\"_reverse\"\r\n             Label=\"Toggle reverse\"></MSwitch>\r\n    <MTimeline Reverse=\"_reverse\"\r\n               Dense=\"false\">\r\n        @for (int i = 0; i < 2; i++)\r\n        {\r\n            <MTimelineItem>\r\n                <OppositeContent>\r\n                    <span>Tus eu perfecto</span>\r\n                </OppositeContent>\r\n                <ChildContent>\r\n                    <MCard Class=\"elevation-2\">\r\n                        <MCardTitle Class=\"text-h5\">\r\n                            Lorem ipsum\r\n                        </MCardTitle>\r\n                        <MCardText>\r\n                            Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.\r\n                        </MCardText>\r\n                    </MCard>\r\n                </ChildContent>\r\n            </MTimelineItem>\r\n        }\r\n\r\n    </MTimeline>\r\n    <MTimeline Reverse=\"_reverse\"\r\n               Dense>\r\n        @for (int i = 0; i < 2; i++)\r\n        {\r\n            <MTimelineItem>\r\n                <OppositeContent>\r\n                    <span>Tus eu perfecto</span>\r\n                </OppositeContent>\r\n                <ChildContent>\r\n                    <MCard Class=\"elevation-2\">\r\n                        <MCardTitle Class=\"text-h5\">\r\n                            Lorem ipsum\r\n                        </MCardTitle>\r\n                        <MCardText>\r\n                            Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.\r\n                        </MCardText>\r\n                    </MCard>\r\n                </ChildContent>\r\n            </MTimelineItem>\r\n        }\r\n    </MTimeline>\r\n</div>\r\n\r\n@code{\r\n    private bool _reverse = true;\r\n}\r\n\r\n",
        "Type": "Demos.Components.Timeline.props.Reverse",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "small",
        "Title": "小号",
        "Description": "<p><strong>Small</strong> 属性允许不同的样式提供独特的设计。</p>\n",
        "Code": "<MTimeline Dense=\"false\">\r\n    <MTimelineItem Color=\"purple lighten-2\"\r\n                     FillDot\r\n                     Right>\r\n        <MCard>\r\n            <MCardTitle Class=\"purple lighten-2\">\r\n                <MIcon Dark\r\n                        Size=\"42\"\r\n                        Class=\"mr-4\">\r\n                    mdi-magnify\r\n                </MIcon>\r\n                <h2 class=\"text-h4 white--text font-weight-light\">\r\n                    Title 1\r\n                </h2>\r\n            </MCardTitle>\r\n            <MContainer>\r\n                <MRow>\r\n                    <MCol Cols=\"12\"\r\n                           Md=\"10\">\r\n                        Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit.\r\n                    </MCol>\r\n                    <MCol Class=\"hidden-sm-and-down text-right\"\r\n                           Md=\"2\">\r\n                        <MIcon Size=\"42\">\r\n                            mdi-calendar-text\r\n                        </MIcon>\r\n                    </MCol>\r\n                </MRow>\r\n            </MContainer>\r\n        </MCard>\r\n    </MTimelineItem>\r\n\r\n    <MTimelineItem Color=\"amber lighten-1\"\r\n                     FillDot\r\n                     Left\r\n                     Small>\r\n        <MCard>\r\n            <MCardTitle Class=\"amber lighten-1 justify-end\">\r\n                <h2 class=\"text-h4 mr-4 white--text font-weight-light\">\r\n                    Title 2\r\n                </h2>\r\n                <MIcon Dark\r\n                        Size=\"42\">\r\n                    mdi-home-outline\r\n                </MIcon>\r\n            </MCardTitle>\r\n            <MContainer>\r\n                <MRow>\r\n                    <MCol Cols=\"12\"\r\n                           Md=\"8\">\r\n                        Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit.\r\n                    </MCol>\r\n                    <MCol Cols=\"12\"\r\n                           Md=\"4\">\r\n                        Lorem ipsum dolor sit amet, no nam oblique veritus.\r\n                    </MCol>\r\n                </MRow>\r\n            </MContainer>\r\n        </MCard>\r\n    </MTimelineItem>\r\n\r\n    <MTimelineItem Color=\"cyan lighten-1\"\r\n                     FillDot\r\n                     Right>\r\n        <MCard>\r\n            <MCardTitle Class=\"cyan lighten-1\">\r\n                <MIcon Class=\"mr-4\"\r\n                        Dark\r\n                        Size=\"42\">\r\n                    mdi-email-outline\r\n                </MIcon>\r\n                <h2 class=\"text-h4 white--text font-weight-light\">\r\n                    Title 3\r\n                </h2>\r\n            </MCardTitle>\r\n            <MContainer>\r\n                <MRow>\r\n                    @for (int i = 0; i < 3; i++)\r\n                    {\r\n                        <MCol Cols=\"12\"\r\n                              Md=\"4\">\r\n                            Lorem ipsum dolor sit amet, no nam oblique veritus no nam oblique.\r\n                        </MCol>\r\n                    }\r\n                </MRow>\r\n            </MContainer>\r\n        </MCard>\r\n    </MTimelineItem>\r\n\r\n    <MTimelineItem Color=\"red lighten-1\"\r\n                     FillDot\r\n                     Left\r\n                     Small>\r\n        <MCard>\r\n            <MCardTitle Class=\"red lighten-1 justify-end\">\r\n                <h2 class=\"text-h4 mr-4 white--text font-weight-light\">\r\n                    Title 4\r\n                </h2>\r\n                <MIcon Dark\r\n                        Size=\"42\">\r\n                    mdi-account-multiple-outline\r\n                </MIcon>\r\n            </MCardTitle>\r\n            <MContainer>\r\n                <MRow>\r\n                    <MCol Class=\"hidden-sm-and-down\"\r\n                           Md=\"2\">\r\n                        <MIcon Size=\"42\">\r\n                            mdi-server-network\r\n                        </MIcon>\r\n                    </MCol>\r\n                    <MCol Cols=\"12\"\r\n                           Md=\"10\">\r\n                        Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus.\r\n                    </MCol>\r\n                </MRow>\r\n            </MContainer>\r\n        </MCard>\r\n    </MTimelineItem>\r\n\r\n    <MTimelineItem Color=\"green lighten-1\"\r\n                     FillDot\r\n                     Right>\r\n        <MCard>\r\n            <MCardTitle Class=\"green lighten-1\">\r\n                <MIcon Class=\"mr-4\"\r\n                        Dark\r\n                        Size=\"42\">\r\n                    mdi-phone-in-talk\r\n                </MIcon>\r\n                <h2 class=\"text-h4 white--text font-weight-light\">\r\n                    Title 5\r\n                </h2>\r\n            </MCardTitle>\r\n            <MContainer>\r\n                <MRow>\r\n                    <MCol>\r\n                        Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.\r\n                    </MCol>\r\n                </MRow>\r\n            </MContainer>\r\n        </MCard>\r\n    </MTimelineItem>\r\n</MTimeline>",
        "Type": "Demos.Components.Timeline.props.Small",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "iconContent",
        "Title": "IconContent",
        "Description": "<p>使用 <strong>IconContent</strong>  和 <code>MAvatar</code> 将头像插入到圆点中。</p>\n",
        "Code": "<MTimeline>\r\n    @for (var i= 0; i < 4; i++)\r\n    {\r\n        <MTimelineItem Large>\r\n            <IconContent>\r\n                <MAvatar>\r\n                    <MImage Src=\"https://i.pravatar.cc/64\"></MImage>\r\n                </MAvatar>\r\n            </IconContent>\r\n            <OppositeContent>\r\n                <span>Tus eu perfecto</span>\r\n            </OppositeContent>\r\n            <ChildContent>\r\n                <MCard Class=\"elevation-2\">\r\n                    <MCardTitle Class=\"text-5\">\r\n                        Lorem ipsum\r\n                    </MCardTitle>\r\n                    <MCardText>\r\n                        Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.\r\n                    </MCardText>\r\n                </MCard>\r\n            </ChildContent>\r\n        </MTimelineItem>\r\n    }\r\n</MTimeline>",
        "Type": "Demos.Components.Timeline.contents.IconContent",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 3,
        "Name": "oppositeContent",
        "Title": "OppositeContent",
        "Description": "<p><strong>OppositeContent</strong> 插槽在您的时间线内提供额外的自定义层。</p>\n",
        "Code": "<MTimeline>\r\n    @foreach (var year in _years)\r\n    {\r\n        <MTimelineItem Color=\"@year.Color\" Small>\r\n            <OppositeContent>\r\n                <span class=\"@($\"headline font-weight-bold {year.Color}--text\")\">\r\n                    @year.Year\r\n                </span>\r\n            </OppositeContent>\r\n            <ChildContent>\r\n                <div class=\"py-4\">\r\n                    <h2 class=\"@($\"headline font-weight-light mb-4 {year.Color}--text\")\">\r\n                        Lorem ipsum\r\n                    </h2>\r\n                    <div>\r\n                        Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.\r\n                    </div>\r\n                </div>\r\n            </ChildContent>\r\n        </MTimelineItem>\r\n    }\r\n</MTimeline>\r\n\r\n@code\r\n{\r\n    private class YearDemo\r\n    {\r\n        public string Color { get; set; }\r\n        public string Year { get; set; }\r\n    }\r\n\r\n    private List<YearDemo> _years = new List<YearDemo>\r\n    {\r\n        new YearDemo { Color = \"cyan\", Year = \"1960\" },\r\n        new YearDemo { Color = \"green\", Year = \"1970\" },\r\n        new YearDemo { Color = \"pink\", Year = \"1980\" },\r\n        new YearDemo { Color = \"amber\", Year = \"1990\" },\r\n        new YearDemo { Color = \"orange\", Year = \"2000\" }\r\n    };\r\n}",
        "Type": "Demos.Components.Timeline.contents.OppositeContent",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 4,
        "Name": "timelineItemDefault",
        "Title": "默认",
        "Description": "<p>如果您将 <code>MCard</code> 放在 <code>MTimelineItem</code> 内，则卡的侧面会出现一个插入符号。</p>\n",
        "Code": "<MTimeline>\r\n    @for (var i= 0; i < 4; i++)\r\n    {\r\n        <MTimelineItem Color=\"red lighten-2\" Large>\r\n            <OppositeContent>\r\n                <span>Tus eu perfecto</span>\r\n            </OppositeContent>\r\n            <ChildContent>\r\n                <MCard Class=\"elevation-2\">\r\n                    <MCardTitle Class=\"text-h5\">\r\n                        Lorem ipsum\r\n                    </MCardTitle>\r\n                    <MCardText>\r\n                        Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.\r\n                    </MCardText>\r\n                </MCard>\r\n            </ChildContent>\r\n        </MTimelineItem>\r\n    }\r\n</MTimeline>",
        "Type": "Demos.Components.Timeline.contents.TimelineItemDefault",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 5,
        "Name": "advanced",
        "Title": "高级用法",
        "Description": "<p>模块化组件允许您创建高度定制的解决方案。</p>\n",
        "Code": "@using Microsoft.AspNetCore.Components.Web\r\n\r\n<MContainer Style=\"max-width: 600px;\">\r\n    <MTimeline Dense Clipped>\r\n        <MTimelineItem FillDot Class=\"white--text mb-12\" Color=\"orange\" Large>\r\n            <IconContent>\r\n                <span>JL</span>\r\n            </IconContent>\r\n            <ChildContent>\r\n                <MTextField @bind-Value=\"_input\" HideDetails=\"true\" Flat Label=\"Leave a comment...\" Solo OnKeyDown=\"HandleOnKeyDown\">\r\n                    <AppendContent>\r\n                        <MButton Class=\"mx-0\" Depressed OnClick=\"Comment\">\r\n                            Post\r\n                        </MButton>\r\n                    </AppendContent>\r\n                </MTextField>\r\n            </ChildContent>\r\n        </MTimelineItem>\r\n\r\n        @foreach (var item in _events)\r\n        {\r\n            <MTimelineItem Class=\"mb-4\" Color=\"pink\" Small>\r\n                <MRow Justify=\"JustifyTypes.Center\">\r\n                    <MCol Cols=\"7\">@item.Text</MCol>\r\n                    <MCol Class=\"text-right\" Cols=\"5\">@item.Time</MCol>\r\n                </MRow>\r\n            </MTimelineItem>\r\n        }\r\n\r\n        <MTimelineItem Class=\"mb-6\" HideDot>\r\n            <span>Today</span>\r\n        </MTimelineItem>\r\n\r\n        <MTimelineItem Class=\"mb-4\" Color=\"grey\" IconColor=\"grey lighten-2\" Small>\r\n            <MRow Justify=\"JustifyTypes.SpaceBetween\">\r\n                <MCol Cols=\"7\">\r\n                    This order was archived.\r\n                </MCol>\r\n                <MCol Class=\"text-right\" Cols=\"5\">\r\n                    15:26 EDT\r\n                </MCol>\r\n            </MRow>\r\n        </MTimelineItem>\r\n\r\n        <MTimelineItem Class=\"mb-4\" Small>\r\n            <MRow Justify=\"JustifyTypes.SpaceBetween\">\r\n                <MCol Cols=\"7\">\r\n                    <MChip Class=\"white--text ml-0\" Color=\"purple\" Label Small>\r\n                        App\r\n                    </MChip>\r\n                    Digital Downloads fulfilled 1 item.\r\n                </MCol>\r\n                <MCol Class=\"text-right\" Cols=\"5\">\r\n                    15:25 EDT\r\n                </MCol>\r\n            </MRow>\r\n        </MTimelineItem>\r\n\r\n        <MTimelineItem Class=\"mb-4\" Color=\"grey\" Small>\r\n            <MRow Justify=\"JustifyTypes.SpaceBetween\">\r\n                <MCol Cols=\"7\">\r\n                    Order confirmation email was sent to doddgu (gushoudao@masastack.com).\r\n                </MCol>\r\n                <MCol Class=\"text-right\" Cols=\"5\">\r\n                    15:25 EDT\r\n                </MCol>\r\n            </MRow>\r\n        </MTimelineItem>\r\n\r\n        <MTimelineItem Class=\"mb-4\" HideDot>\r\n            <MButton Class=\"mx-0\">Resend Email</MButton>\r\n        </MTimelineItem>\r\n\r\n        <MTimelineItem Class=\"mb-4\" Color=\"grey\" Small>\r\n            <MRow Justify=\"JustifyTypes.SpaceBetween\">\r\n                <MCol Cols=\"7\">\r\n                    A $15.00 USD payment was processed on PayPal Express Checkout\r\n                </MCol>\r\n                <MCol Class=\"text-right\" Cols=\"5\">\r\n                    15:25 EDT\r\n                </MCol>\r\n            </MRow>\r\n        </MTimelineItem>\r\n\r\n        <MTimelineItem Color=\"grey\" Small>\r\n            <MRow Justify=\"JustifyTypes.SpaceBetween\">\r\n                <MCol Cols=\"7\">\r\n                    MASA placed this order on Online Store (checkout #1937432132572).\r\n                </MCol>\r\n                <MCol Class=\"text-right\" Cols=\"5\">\r\n                    15:25 EDT\r\n                </MCol>\r\n            </MRow>\r\n        </MTimelineItem>\r\n    </MTimeline>\r\n</MContainer>\r\n\r\n@code\r\n{\r\n    private class EventDemo\r\n    {\r\n        public int Id { get; set; }\r\n        public string Text { get; set; }\r\n        public string Time { get; set; }\r\n    }\r\n    private List<EventDemo> _events = new List<EventDemo>();\r\n    private string _input = string.Empty;\r\n    private int _nonce = 0;\r\n\r\n    private void HandleOnKeyDown(KeyboardEventArgs args)\r\n    {\r\n        if (args.Key == \"Enter\")\r\n        {\r\n            Comment();\r\n        }\r\n    }\r\n\r\n    private void Comment()\r\n    {\r\n        _events.Insert(0,\r\n            new EventDemo\r\n                {\r\n                    Id = _nonce++,\r\n                    Text = _input,\r\n                    Time = DateTime.Now.ToString(\"HH:mm:ss\")\r\n                });\r\n\r\n        _input = string.Empty;\r\n    }\r\n}",
        "Type": "Demos.Components.Timeline.misc.Advanced",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/cards",
      "/components/icons",
      "/components/grid-system"
    ],
    "Subtitle": "时间轴",
    "Title": "Timelines",
    "Type": "时间轴"
  },
  {
    "Desc": "<p>该组件用于通过使用上下文类型，图标和颜色向用户传达重要信息。这些默认类型有4种变体：<strong>Success</strong>、<strong>Info</strong>、<strong>Warning</strong> 和 <strong>Error</strong>。默认图标有助于表示每种类型所描述的不同动作，也可以自定义提示框的许多部分。</p>\n",
    "Order": 0,
    "OtherDocs": {},
    "LastWriteTime": "2022-10-20T23:42:05.7771843+08:00",
    "DemoList": [
      {
        "Order": 1,
        "Name": "index",
        "Title": "使用",
        "Description": "<p><code>PToast</code> 组件可以通过PopupService来使用，具体请查看 <a href=\"/components/popup-service\">PopupService</a> 的文档。</p>\n",
        "Code": "<PToast @ref=\"_toast\">\r\n</PToast>\r\n\r\n<MButton OnClick=\"AddToast\"> Add Toast </MButton>\r\n\r\n@code {\r\n    PToast _toast;\r\n\r\n    Random random = new Random();\r\n\r\n    private Task AddToast()\r\n    {\r\n        var now = DateTime.Now.ToString(\"HH:mm:ss.fff\");\r\n        var alertType = random.NextInt64(0, 5);\r\n        var dark = random.NextInt64(0, 2);\r\n        var config = new ToastConfig()\r\n        {\r\n            Title = $\"Add Toast by Click\",\r\n            Content = $\"create time: {now}\",\r\n            Dark = dark == 0,\r\n            Type = (AlertTypes)alertType\r\n        };\r\n\r\n        _toast.AddToast(config);\r\n\r\n        return Task.CompletedTask;\r\n    }\r\n}",
        "Type": "Demos.Components.Toast.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 0,
        "Name": "duration",
        "Title": "自动关闭时间（默认4000ms）",
        "Description": "",
        "Code": "<PToast @ref=\"_toast\" Duration=\"duration\">\r\n</PToast>\r\n\r\n<MTextField Type=\"number\" @bind-Value=\"duration\" NumberProps=\"props=> { props.Min=0; props.Step=1000; }\"></MTextField>\r\n\r\n<MButton OnClick=\"AddToast\"> Add Toast </MButton>\r\n\r\n@code {\r\n    PToast _toast;\r\n\r\n    int? duration;\r\n\r\n    Random random = new Random();\r\n\r\n    private async Task AddToast()\r\n    {\r\n        var now = DateTime.Now.ToString(\"HH:mm:ss.fff\");\r\n        var alertType = random.NextInt64(0, 5);\r\n        var dark = random.NextInt64(0, 2);\r\n        var config = new ToastConfig()\r\n        {\r\n            Title = duration == 0? \"Not auto close\" : (duration == null? $\"Auto close after 4000ms\" : $\"Auto close after {duration} ms\"),\r\n            Content = $\"create time: {now}\",\r\n            Dark = dark == 0,\r\n            Type = (AlertTypes)alertType,\r\n            Duration = duration\r\n        };\r\n\r\n        await _toast.AddToast(config);\r\n    }\r\n}",
        "Type": "Demos.Components.Toast.props.Duration",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "maxCount",
        "Title": "显示最大条数",
        "Description": "",
        "Code": "<PToast @ref=\"_toast\" MaxCount=\"maxCount\">\r\n</PToast>\r\n\r\n<MButton OnClick=\"AddToast\"> Add Toast </MButton>\r\n\r\n@code {\r\n    PToast _toast;\r\n\r\n    int maxCount = 5;\r\n\r\n    Random random = new Random();\r\n\r\n    private async Task AddToast()\r\n    {\r\n        var now = DateTime.Now.ToString(\"HH:mm:ss.fff\");\r\n        var alertType = random.NextInt64(0, 5);\r\n        var dark = random.NextInt64(0, 2);\r\n        var config = new ToastConfig()\r\n        {\r\n            Title = $\"Only Show {maxCount} Toast\",\r\n            Content = $\"create time: {now}\",\r\n            Dark = dark == 0,\r\n            Type = (AlertTypes)alertType,\r\n        };\r\n\r\n        await _toast.AddToast(config);\r\n    }\r\n}",
        "Type": "Demos.Components.Toast.props.MaxCount",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "position",
        "Title": "显示位置",
        "Description": "",
        "Code": "<PToast @ref=\"_toast\" Position=\"position\">\r\n</PToast>\r\n\r\n<MRadioGroup Value=\"position\" TValue=\"ToastPosition\" Row ValueChanged=\"OnChangePosition\">\r\n    <MRadio Value=\"ToastPosition.TopLeft\" Label=\"Top Left\"></MRadio>\r\n    <MRadio Value=\"ToastPosition.TopRight\" Label=\"Top Right\"></MRadio>\r\n    <MRadio Value=\"ToastPosition.BottomLeft\" Label=\"Bottom Left\"></MRadio>\r\n    <MRadio Value=\"ToastPosition.BottomRight\" Label=\"Bottom Right\"></MRadio>\r\n</MRadioGroup>\r\n\r\n<MButton OnClick=\"AddToast\"> Add Toast </MButton>\r\n\r\n@code {\r\n    PToast _toast;\r\n\r\n    int maxCount = 5;\r\n\r\n    ToastPosition position = ToastPosition.BottomRight;\r\n\r\n    Random random = new Random();\r\n\r\n    private async Task AddToast()\r\n    {\r\n        var now = DateTime.Now.ToString(\"HH:mm:ss.fff\");\r\n        var alertType = random.NextInt64(0, 5);\r\n        var dark = random.NextInt64(0, 2);\r\n        var config = new ToastConfig()\r\n        {\r\n            Title = $\"Show on {position.ToString()}\",\r\n            Content = $\"create time: {now}\",\r\n            Dark = dark == 0,\r\n            Type = (AlertTypes)alertType,\r\n        };\r\n\r\n        await _toast.AddToast(config);\r\n    }\r\n\r\n    private Task OnChangePosition(ToastPosition position)\r\n    {\r\n        this.position = position;\r\n        return Task.CompletedTask;\r\n    }\r\n}",
        "Type": "Demos.Components.Toast.props.Position",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "customToast",
        "Title": "自定义 Toast 内容",
        "Description": "",
        "Code": "@inject IPopupService PopupService\r\n\r\n<PToast @ref=\"_toast\" Position=\"position\" Duration=\"defaultDuration\">\r\n</PToast>\r\n\r\n<MButton OnClick=\"AddToast\"> Add Toast </MButton>\r\n\r\n@code {\r\n    PToast _toast;\r\n\r\n    private int defaultDuration = 5000;\r\n\r\n    ToastPosition position = ToastPosition.BottomRight;\r\n\r\n    Random random = new Random();\r\n\r\n    private Task HandleOnView()\r\n    {\r\n        return PopupService.ToastInfoAsync(\"View button click\");\r\n    }\r\n\r\n    private async Task AddToast()\r\n    {\r\n        var now = DateTime.Now.ToString(\"HH:mm:ss.fff\");\r\n        var alertType = random.NextInt64(0, 5);\r\n        var dark = random.NextInt64(0, 2);\r\n        var duration = random.NextInt64(1000, 5000);\r\n        var useParentDuration = random.NextInt64(0, 2);\r\n\r\n        RenderFragment customViewAction = (builder) =>\r\n        {\r\n            builder.AddContent(0, @<MButton OnClick=\"HandleOnView\" Text> View </MButton>);\r\n        };\r\n\r\n        var config = new ToastConfig()\r\n        {\r\n            Title = $\"Auto close after {duration}ms\",\r\n            Content = $\"create time: {now}\",\r\n            Dark = dark == 0,\r\n            Type = (AlertTypes)alertType,\r\n            Duration = useParentDuration == 0? null : (int)duration,\r\n            ActionContent = customViewAction,\r\n            OnClose = OnClose\r\n        };\r\n\r\n        await _toast.AddToast(config);\r\n    }\r\n\r\n    private Task OnClose(string key)\r\n    {\r\n        Console.WriteLine($\"Close toast key: {key}\");\r\n        return Task.CompletedTask;\r\n    }\r\n}",
        "Type": "Demos.Components.Toast.events.CustomToast",
        "Style": "",
        "Debug": false,
        "Group": 1
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/buttons",
      "/components/icons",
      "/components/snackbars"
    ],
    "Subtitle": "吐司",
    "Title": "Toast",
    "Type": "吐司",
    "Tag": "preset"
  },
  {
    "Desc": "<p>当用户悬停在元素上时， <code>MTooltip</code> 组件可用于传递信息。 您还可以通过 <strong>@bind-Value</strong> 来控制提示的显示。 当激活时，提示将显示用于标识元素的文本，例如其功能的描述。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MTooltip\">MTooltip</a></li>\n</ul>\n",
      "注意": "\n<!--alert:info-->\n<p>为了正确定位 <code>MTooltip</code>，需要一个位置支撑(<code>Top</code> | <code>Bottom</code> | <code>Left</code> | <code>Right</code>)。</p>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7791838+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>提示组件可以包装任何元素。</p>\n",
        "Code": "<div class=\"text-center d-flex align-center justify-space-around\">\r\n    <MTooltip Bottom>\r\n        <ActivatorContent>\r\n            <MButton Dark Color=\"primary\" @attributes=\"@context.Attrs\">Bottom</MButton>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <span>Tooltip</span>\r\n        </ChildContent>\r\n    </MTooltip>\r\n\r\n    <MTooltip Bottom>\r\n        <ActivatorContent>\r\n            <MIcon Dark Color=\"primary\" @attributes=\"@context.Attrs\">mdi-home</MIcon>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <span>Tooltip</span>\r\n        </ChildContent>\r\n    </MTooltip>\r\n\r\n    <MTooltip Bottom>\r\n        <ActivatorContent>\r\n            <span @attributes=\"@context.Attrs\">This text has a tooltip</span>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <span>Tooltip</span>\r\n        </ChildContent>\r\n    </MTooltip>\r\n</div>",
        "Type": "Demos.Components.Tooltip.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "alignment",
        "Title": "对齐",
        "Description": "<p>提示可以对齐到激活器元素的四个侧面。</p>\n",
        "Code": "<div class=\"text-center d-flex align-center justify-space-around\">\r\n    <MTooltip Left>\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Dark @attributes=\"@context.Attrs\">Left</MButton>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <span>Left tooltip</span>\r\n        </ChildContent>\r\n    </MTooltip>\r\n\r\n    <MTooltip Top>\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Dark @attributes=\"@context.Attrs\">Top</MButton>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <span>Top tooltip</span>\r\n        </ChildContent>\r\n    </MTooltip>\r\n\r\n    <MTooltip Bottom>\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Dark @attributes=\"@context.Attrs\">Bottom</MButton>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <span>Bottom tooltip</span>\r\n        </ChildContent>\r\n    </MTooltip>\r\n\r\n    <MTooltip Right>\r\n        <ActivatorContent>\r\n            <MButton Color=\"primary\" Dark @attributes=\"@context.Attrs\">Right</MButton>\r\n        </ActivatorContent>\r\n        <ChildContent>\r\n            <span>Right tooltip</span>\r\n        </ChildContent>\r\n    </MTooltip>\r\n</div>",
        "Type": "Demos.Components.Tooltip.props.Alignment",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 2,
        "Name": "visibility",
        "Title": "可见性",
        "Description": "<p>可使用 <strong>@bind-Value</strong> 编程性修改提示可见性。</p>\n",
        "Code": "<MContainer Fluid\r\n            Class=\"text-center\">\r\n    <MRow Class=\"flex\"\r\n          Justify=\"JustifyTypes.SpaceBetween\">\r\n        <MCol Cols=\"12\">\r\n            <MButton OnClick=\"() => show = !show\">\r\n                toggle\r\n            </MButton>\r\n        </MCol>\r\n\r\n        <MCol Cols=\"12\" Class=\"mt-12\">\r\n            <MTooltip @bind-Value=\"show\" Top>\r\n                <ActivatorContent>\r\n                    <MButton Icon @attributes=\"@context.Attrs\">\r\n                        <MIcon Color=\"grey lighten-1\">mdi-cart</MIcon>\r\n                    </MButton>\r\n                </ActivatorContent>\r\n                <ChildContent>\r\n                    <span>Programmatic tooltip</span>\r\n                </ChildContent>\r\n            </MTooltip>\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code\r\n{\r\n    private bool show;\r\n}",
        "Type": "Demos.Components.Tooltip.props.Visibility",
        "Style": "",
        "Debug": false,
        "Group": 0
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/badges",
      "/components/icons",
      "/components/menus"
    ],
    "Subtitle": "工具提示",
    "Title": "Tooltips",
    "Type": "工具提示"
  },
  {
    "Desc": "<p>MTreeview 组件适用于显示大量嵌套数据。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MTreeview\">MTreeview</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7861844+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "index",
        "Title": "使用",
        "Description": "<p>一个基本示例</p>\n",
        "Code": "<MTreeview Items=\"_data\" ItemText=\"r=>r.Name\" ItemChildren=\"r=>r.Children\" ItemKey=\"r=>r.Id\">\r\n</MTreeview>\r\n\r\n@code {\r\n    public class Data\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public List<Data> Children { get; set; }\r\n    }\r\n\r\n    private List<Data> _data = new List<Data>\r\n    {\r\n        new Data\r\n        {\r\n            Id=1,\r\n            Name=\"Applications :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=2,\r\n                        Name=\"Calendar : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=3,\r\n                        Name=\"Chrome : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=4,\r\n                        Name=\"Webstorm : app\"\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=5,\r\n            Name=\"Documents :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=6,\r\n                        Name=\"MASA Blazor :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=7,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=8,\r\n                                        Name=\"index : ts\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=9,\r\n                                        Name=\"bootstrap : ts\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=10,\r\n                        Name=\"material2 :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=11,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=12,\r\n                                        Name=\"MButton : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=13,\r\n                                        Name=\"MCard : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=14,\r\n                                        Name=\"MWindow : cs\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=15,\r\n            Name=\"Downloads :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=16,\r\n                    Name=\"October : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=17,\r\n                    Name=\"November : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=18,\r\n                    Name=\"Tutorial : html\"\r\n                }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=19,\r\n            Name=\"Videos :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=20,\r\n                    Name=\"Tutorials :\",\r\n                    Children=new List<Data>\r\n                    {\r\n                        new Data\r\n                        {\r\n                            Id=21,\r\n                            Name=\"Basic layouts : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=22,\r\n                            Name=\"Advanced techniques : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=23,\r\n                            Name=\"All about app : dir\"\r\n                        }\r\n                    }\r\n                },new Data\r\n                {\r\n                    Id=24,\r\n                    Name=\"Intro : mov\"\r\n                },new Data\r\n                {\r\n                    Id=25,\r\n                    Name=\"Conference introduction : avi\"\r\n                }\r\n            }\r\n        }\r\n    };\r\n}",
        "Type": "Demos.Components.Treeview.usage.Index",
        "Style": "",
        "Debug": false,
        "Group": 4
      },
      {
        "Order": 1,
        "Name": "activatable",
        "Title": "可激活",
        "Description": "<p>树形视图节点可以将其激活。</p>\n",
        "Code": "<MTreeview Activatable @bind-Active=\"_active\" Items=\"_data\" ItemText=\"r=>r.Name\" ItemChildren=\"r=>r.Children\" ItemKey=\"r=>r.Id\">\r\n</MTreeview>\r\n\r\n@code{\r\n    public class Data\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public List<Data> Children { get; set; }\r\n    }\r\n\r\n    private List<int> _active = new List<int>\r\n    {\r\n        2\r\n    };\r\n\r\n    private List<Data> _data = new List<Data>\r\n    {\r\n        new Data\r\n        {\r\n            Id=1,\r\n            Name=\"Applications :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=2,\r\n                        Name=\"Calendar : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=3,\r\n                        Name=\"Chrome : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=4,\r\n                        Name=\"Webstorm : app\"\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=5,\r\n            Name=\"Documents :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=6,\r\n                        Name=\"MASA Blazor :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=7,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=8,\r\n                                        Name=\"index : ts\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=9,\r\n                                        Name=\"bootstrap : ts\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=10,\r\n                        Name=\"material2 :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=11,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=12,\r\n                                        Name=\"MButton : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=13,\r\n                                        Name=\"MCard : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=14,\r\n                                        Name=\"MWindow : cs\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=15,\r\n            Name=\"Downloads :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=16,\r\n                    Name=\"October : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=17,\r\n                    Name=\"November : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=18,\r\n                    Name=\"Tutorial : html\"\r\n                }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=19,\r\n            Name=\"Videos :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=20,\r\n                    Name=\"Tutorials :\",\r\n                    Children=new List<Data>\r\n                    {\r\n                        new Data\r\n                        {\r\n                            Id=21,\r\n                            Name=\"Basic layouts : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=22,\r\n                            Name=\"Advanced techniques : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=23,\r\n                            Name=\"All about app : dir\"\r\n                        }\r\n                    }\r\n                },new Data\r\n                {\r\n                    Id=24,\r\n                    Name=\"Intro : mov\"\r\n                },new Data\r\n                {\r\n                    Id=25,\r\n                    Name=\"Conference introduction : avi\"\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n",
        "Type": "Demos.Components.Treeview.props.Activatable",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "color",
        "Title": "颜色",
        "Description": "<p>您可以控制活动的树形视图节点的文本和背景颜色。</p>\n",
        "Code": "<MTreeview Activatable \r\n           Color=\"warning\"\r\n           Items=\"_data\" ItemText=\"r=>r.Name\" ItemChildren=\"r=>r.Children\"  ItemKey=\"r=>r.Id\">\r\n</MTreeview>\r\n\r\n@code{\r\n    public class Data\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public List<Data> Children { get; set; }\r\n    }\r\n\r\n   private List<Data> _data = new List<Data>\r\n    {\r\n        new Data\r\n        {\r\n            Id=1,\r\n            Name=\"Applications :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=2,\r\n                        Name=\"Calendar : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=3,\r\n                        Name=\"Chrome : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=4,\r\n                        Name=\"Webstorm : app\"\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=5,\r\n            Name=\"Documents :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=6,\r\n                        Name=\"MASA Blazor :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=7,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=8,\r\n                                        Name=\"index : ts\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=9,\r\n                                        Name=\"bootstrap : ts\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=10,\r\n                        Name=\"material2 :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=11,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=12,\r\n                                        Name=\"MButton : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=13,\r\n                                        Name=\"MCard : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=14,\r\n                                        Name=\"MWindow : cs\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=15,\r\n            Name=\"Downloads :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=16,\r\n                    Name=\"October : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=17,\r\n                    Name=\"November : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=18,\r\n                    Name=\"Tutorial : html\"\r\n                }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=19,\r\n            Name=\"Videos :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=20,\r\n                    Name=\"Tutorials :\",\r\n                    Children=new List<Data>\r\n                    {\r\n                        new Data\r\n                        {\r\n                            Id=21,\r\n                            Name=\"Basic layouts : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=22,\r\n                            Name=\"Advanced techniques : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=23,\r\n                            Name=\"All about app : dir\"\r\n                        }\r\n                    }\r\n                },new Data\r\n                {\r\n                    Id=24,\r\n                    Name=\"Intro : mov\"\r\n                },new Data\r\n                {\r\n                    Id=25,\r\n                    Name=\"Conference introduction : avi\"\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n",
        "Type": "Demos.Components.Treeview.props.Color",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "dense",
        "Title": "密集",
        "Description": "<p><strong>Dense</strong> 属性激活密集模式，提供了更紧凑的布局，同时降低了项目的高度。</p>\n",
        "Code": "<MTreeview Dense\r\n           Items=\"_data\" ItemText=\"r=>r.Name\" ItemChildren=\"r=>r.Children\" ItemKey=\"r=>r.Id\">\r\n</MTreeview>\r\n\r\n@code{\r\n    public class Data\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public List<Data> Children { get; set; }\r\n    }\r\n\r\n    private List<Data> _data = new List<Data>\r\n    {\r\n        new Data\r\n        {\r\n            Id=1,\r\n            Name=\"Applications :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=2,\r\n                        Name=\"Calendar : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=3,\r\n                        Name=\"Chrome : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=4,\r\n                        Name=\"Webstorm : app\"\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=5,\r\n            Name=\"Documents :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=6,\r\n                        Name=\"MASA Blazor :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=7,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=8,\r\n                                        Name=\"index : ts\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=9,\r\n                                        Name=\"bootstrap : ts\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=10,\r\n                        Name=\"material2 :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=11,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=12,\r\n                                        Name=\"MButton : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=13,\r\n                                        Name=\"MCard : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=14,\r\n                                        Name=\"MWindow : cs\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=15,\r\n            Name=\"Downloads :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=16,\r\n                    Name=\"October : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=17,\r\n                    Name=\"November : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=18,\r\n                    Name=\"Tutorial : html\"\r\n                }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=19,\r\n            Name=\"Videos :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=20,\r\n                    Name=\"Tutorials :\",\r\n                    Children=new List<Data>\r\n                    {\r\n                        new Data\r\n                        {\r\n                            Id=21,\r\n                            Name=\"Basic layouts : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=22,\r\n                            Name=\"Advanced techniques : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=23,\r\n                            Name=\"All about app : dir\"\r\n                        }\r\n                    }\r\n                },new Data\r\n                {\r\n                    Id=24,\r\n                    Name=\"Intro : mov\"\r\n                },new Data\r\n                {\r\n                    Id=25,\r\n                    Name=\"Conference introduction : avi\"\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n",
        "Type": "Demos.Components.Treeview.props.Dense",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "hoverable",
        "Title": "可悬停的",
        "Description": "<p><strong>Hoverable</strong> 属性令树形视图节点可以具有悬停效果。</p>\n",
        "Code": "<MTreeview Hoverable\r\n           Items=\"_data\" ItemText=\"r=>r.Name\" ItemChildren=\"r=>r.Children\" ItemKey=\"r=>r.Id\">\r\n</MTreeview>\r\n\r\n@code{\r\n    public class Data\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public List<Data> Children { get; set; }\r\n    }\r\n\r\n    private List<Data> _data = new List<Data>\r\n    {\r\n        new Data\r\n        {\r\n            Id=1,\r\n            Name=\"Applications :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=2,\r\n                        Name=\"Calendar : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=3,\r\n                        Name=\"Chrome : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=4,\r\n                        Name=\"Webstorm : app\"\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=5,\r\n            Name=\"Documents :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=6,\r\n                        Name=\"MASA Blazor :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=7,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=8,\r\n                                        Name=\"index : ts\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=9,\r\n                                        Name=\"bootstrap : ts\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=10,\r\n                        Name=\"material2 :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=11,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=12,\r\n                                        Name=\"MButton : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=13,\r\n                                        Name=\"MCard : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=14,\r\n                                        Name=\"MWindow : cs\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=15,\r\n            Name=\"Downloads :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=16,\r\n                    Name=\"October : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=17,\r\n                    Name=\"November : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=18,\r\n                    Name=\"Tutorial : html\"\r\n                }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=19,\r\n            Name=\"Videos :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=20,\r\n                    Name=\"Tutorials :\",\r\n                    Children=new List<Data>\r\n                    {\r\n                        new Data\r\n                        {\r\n                            Id=21,\r\n                            Name=\"Basic layouts : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=22,\r\n                            Name=\"Advanced techniques : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=23,\r\n                            Name=\"All about app : dir\"\r\n                        }\r\n                    }\r\n                },new Data\r\n                {\r\n                    Id=24,\r\n                    Name=\"Intro : mov\"\r\n                },new Data\r\n                {\r\n                    Id=25,\r\n                    Name=\"Conference introduction : avi\"\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n",
        "Type": "Demos.Components.Treeview.props.Hoverable",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "itemDisabled",
        "Title": "禁用项目",
        "Description": "<p>设置 <strong>ItemDisabled</strong> 属性，控制节点在设置为 <code>true</code> 时禁用节点。</p>\n",
        "Code": "<MTreeview Selectable\r\n       ItemDisabled=\"_locked\"\r\n       Items=\"_data\" ItemText=\"r=>r.Name\" ItemChildren=\"r=>r.Children\" ItemKey=\"r=>r.Id\"></MTreeview>\r\n\r\n@code{\r\n    public class Data\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public bool Locked { get; set; }\r\n\r\n        public List<Data> Children { get; set; }\r\n    }\r\n\r\n    private Func<Data, bool> _locked = r => r.Locked;\r\n\r\n    private List<Data> _data = new List<Data>\r\n    {\r\n        new Data\r\n        {\r\n            Id=1,\r\n            Name=\"Applications :\",\r\n            Locked=true,\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=2,\r\n                        Name=\"Calendar : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=3,\r\n                        Name=\"Chrome : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=4,\r\n                        Name=\"Webstorm : app\"\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=5,\r\n            Name=\"Documents :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=6,\r\n                        Name=\"MASA Blazor :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=7,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=8,\r\n                                        Name=\"index : ts\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=9,\r\n                                        Name=\"bootstrap : ts\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=10,\r\n                        Name=\"material2 :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=11,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=12,\r\n                                        Name=\"MButton : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=13,\r\n                                        Name=\"MCard : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=14,\r\n                                        Name=\"MWindow : cs\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=15,\r\n            Name=\"Downloads :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=16,\r\n                    Name=\"October : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=17,\r\n                    Name=\"November : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=18,\r\n                    Name=\"Tutorial : html\"\r\n                }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=19,\r\n            Name=\"Videos :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=20,\r\n                    Name=\"Tutorials :\",\r\n                    Children=new List<Data>\r\n                    {\r\n                        new Data\r\n                        {\r\n                            Id=21,\r\n                            Name=\"Basic layouts : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=22,\r\n                            Name=\"Advanced techniques : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=23,\r\n                            Name=\"All about app : dir\"\r\n                        }\r\n                    }\r\n                },new Data\r\n                {\r\n                    Id=24,\r\n                    Name=\"Intro : mov\"\r\n                },new Data\r\n                {\r\n                    Id=25,\r\n                    Name=\"Conference introduction : avi\"\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n",
        "Type": "Demos.Components.Treeview.props.ItemDisabled",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "loadChildren",
        "Title": "加载子项",
        "Description": "<p>您可以通过提供回调到 <strong>LoadChildren</strong> 属性，来动态加载子数据。 此回调将在用户首次试图扩展一个包含一个空数组的子属性的项目时执行。</p>\n",
        "Code": "<MCard>\r\n    <MCardTitle class=\"indigo white--text text-h5\">\r\n        User Directory\r\n    </MCardTitle>\r\n    <MRow Class=\"pa-4\"\r\n          Justify=\"JustifyTypes.SpaceBetween\">\r\n        <MCol Cols=\"5\">\r\n            <MTreeview @bind-Active=\"_active\"\r\n                       Items=\"_items\"\r\n                       LoadChildren=\"FetchUsers\"\r\n                       Color=\"warning\"\r\n                       Activatable\r\n                       OpenOnClick\r\n                       ItemText=\"r=>r.Name\"\r\n                       ItemKey=\"r=>r.Id\"\r\n                       ItemChildren=\"r=>r.Children\">\r\n                <PrependContent>\r\n                    @if (context.Item.Children == null)\r\n                    {\r\n                        <MIcon>\r\n                            mdi-account\r\n                        </MIcon>\r\n                    }\r\n                </PrependContent>\r\n            </MTreeview>\r\n        </MCol>\r\n\r\n        <MDivider Vertical></MDivider>\r\n\r\n        <MCol class=\"d-flex text-center\">\r\n            <ScrollYTransition>\r\n                @if (Selected == null)\r\n                {\r\n                    <div class=\"text-h6 grey--text text--lighten-1 font-weight-light\"\r\n                     style=\"align-self: center;\">\r\n                        Select a User\r\n                    </div>\r\n                }\r\n                else\r\n                {\r\n                    <MCard @key=\"Selected.Id\"\r\n                       Class=\"pt-6 mx-auto\"\r\n                       Flat\r\n                       MaxWidth=\"400\">\r\n                        <MCardText>\r\n                            @if (_avatar != null)\r\n                            {\r\n                                <MAvatar Size=\"88\">\r\n                                    <MImage Src=\"@($\"https://avataaars.io/{_avatar}\")\"\r\n                                    class=\"mb-6\"></MImage>\r\n                                </MAvatar>\r\n                            }\r\n                            <h3 class=\"text-h5 mb-2\">\r\n                                @Selected.Name\r\n                            </h3>\r\n                            <div class=\"blue--text mb-2\">\r\n                                @Selected.Email\r\n                            </div>\r\n                            <div class=\"blue--text subheading font-weight-bold\">\r\n                                @Selected.UserName\r\n                            </div>\r\n                        </MCardText>\r\n                        <MDivider></MDivider>\r\n                        <MCardText Class=\"row text-left\">\r\n                            <MCol Class=\"text-right mr-4 mb-2\"\r\n                              Tag=\"strong\"\r\n                              Cols=\"5\">\r\n                                Company:\r\n                            </MCol>\r\n                            <MCol>@Selected.Company.Name</MCol>\r\n                            <MCol class=\"text-right mr-4 mb-2\"\r\n                              Tag=\"strong\"\r\n                              Cols=\"5\">\r\n                                Website:\r\n                            </MCol>\r\n                            <MCol>\r\n                                <a href=\"@($\"//{Selected.Website}\")\"\r\n                               target=\"_blank\">@Selected.Website</a>\r\n                            </MCol>\r\n                            <MCol class=\"text-right mr-4 mb-2\"\r\n                              Tag=\"strong\"\r\n                              Cols=\"5\">\r\n                                Phone:\r\n                            </MCol>\r\n                            <MCol>@Selected.Phone</MCol>\r\n                        </MCardText>\r\n                    </MCard>\r\n                }\r\n            </ScrollYTransition>\r\n        </MCol>\r\n    </MRow>\r\n</MCard>\r\n\r\n@code {\r\n    public class User\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public string UserName { get; set; }\r\n\r\n        public string Email { get; set; }\r\n\r\n        public Address Address { get; set; }\r\n\r\n        public string Phone { get; set; }\r\n\r\n        public string Website { get; set; }\r\n\r\n        public Company Company { get; set; }\r\n\r\n        public List<User> Children { get; set; }\r\n    }\r\n\r\n    public class Address\r\n    {\r\n        public string Street { get; set; }\r\n\r\n        public string Suite { get; set; }\r\n\r\n        public string City { get; set; }\r\n\r\n        public string Zipcode { get; set; }\r\n\r\n        public Geo Geo { get; set; }\r\n    }\r\n\r\n    public class Geo\r\n    {\r\n        public string Lat { get; set; }\r\n\r\n        public string Lng { get; set; }\r\n    }\r\n\r\n    public class Company\r\n    {\r\n        public string Name { get; set; }\r\n\r\n        public string CatchPhrase { get; set; }\r\n\r\n        public string Bs { get; set; }\r\n    }\r\n\r\n    private List<string> _avatars = new List<string>()\r\n        {\r\n            \"?accessoriesType=Blank&avatarStyle=Circle&clotheColor=PastelGreen&clotheType=ShirtScoopNeck&eyeType=Wink&eyebrowType=UnibrowNatural&facialHairColor=Black&facialHairType=MoustacheMagnum&hairColor=Platinum&mouthType=Concerned&skinColor=Tanned&topType=Turban\",\r\n            \"?accessoriesType=Sunglasses&avatarStyle=Circle&clotheColor=Gray02&clotheType=ShirtScoopNeck&eyeType=EyeRoll&eyebrowType=RaisedExcited&facialHairColor=Red&facialHairType=BeardMagestic&hairColor=Red&hatColor=White&mouthType=Twinkle&skinColor=DarkBrown&topType=LongHairBun\",\r\n            \"?accessoriesType=Prescription02&avatarStyle=Circle&clotheColor=Black&clotheType=ShirtVNeck&eyeType=Surprised&eyebrowType=Angry&facialHairColor=Blonde&facialHairType=Blank&hairColor=Blonde&hatColor=PastelOrange&mouthType=Smile&skinColor=Black&topType=LongHairNotTooLong\",\r\n            \"?accessoriesType=Round&avatarStyle=Circle&clotheColor=PastelOrange&clotheType=Overall&eyeType=Close&eyebrowType=AngryNatural&facialHairColor=Blonde&facialHairType=Blank&graphicType=Pizza&hairColor=Black&hatColor=PastelBlue&mouthType=Serious&skinColor=Light&topType=LongHairBigHair\",\r\n            \"?accessoriesType=Kurt&avatarStyle=Circle&clotheColor=Gray01&clotheType=BlazerShirt&eyeType=Surprised&eyebrowType=Default&facialHairColor=Red&facialHairType=Blank&graphicType=Selena&hairColor=Red&hatColor=Blue02&mouthType=Twinkle&skinColor=Pale&topType=LongHairCurly\"\r\n        };\r\n    private List<User> _users = new();\r\n    private string _avatar;\r\n    private List<int> _active;\r\n    private User _selected;\r\n\r\n    [Inject]\r\n    public HttpClient HttpClient { get; set; }\r\n\r\n    protected User Selected\r\n    {\r\n        get\r\n        {\r\n            if (_active == null || _active.Count == 0)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var id = _active[0];\r\n\r\n            var user = _users.Find(user => user.Id == id);\r\n            if (user != _selected)\r\n            {\r\n                _selected = user;\r\n                RandomAvatar();\r\n            }\r\n\r\n            return user;\r\n        }\r\n    }\r\n\r\n    private List<User> _items = new List<User>\r\n    {\r\n        new User\r\n        {\r\n            Name=\"Users\",\r\n            Children=new()\r\n        }\r\n    };\r\n\r\n    public async Task FetchUsers(User item)\r\n    {\r\n        await Task.Delay(1500);\r\n        _users = await HttpClient.GetFromJsonAsync<List<User>>(\"https://jsonplaceholder.typicode.com/users\");\r\n        item.Children = _users;\r\n    }\r\n\r\n    public void RandomAvatar()\r\n    {\r\n        _avatar = _avatars[new Random().Next(_avatars.Count)];\r\n    }\r\n}",
        "Type": "Demos.Components.Treeview.props.LoadChildren",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "openAll",
        "Title": "打开全部",
        "Description": "<p>树形视图节点可以在页面加载时预先打开。</p>\n",
        "Code": "<MTreeview OpenAll\r\n           Items=\"_data\"\r\n           ItemText=\"r => r.Name\"\r\n           ItemChildren=\"r => r.Children\"\r\n           ItemKey=\"r => r.Id\">\r\n</MTreeview>\r\n\r\n@code{\r\n\r\n    public class Data\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public List<Data> Children { get; set; }\r\n    }\r\n\r\n    private List<Data> _data = new List<Data>\r\n    {\r\n        new Data\r\n        {\r\n            Id = 1,\r\n            Name = \"Applications :\",\r\n            Children = new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id = 2,\r\n                    Name = \"Calendar : app\"\r\n                },\r\n                new Data\r\n                {\r\n                    Id = 3,\r\n                    Name = \"Chrome : app\"\r\n                },\r\n                new Data\r\n                {\r\n                    Id = 4,\r\n                    Name = \"Webstorm : app\"\r\n                }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id = 5,\r\n            Name = \"Documents :\",\r\n            Children = new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id = 6,\r\n                    Name = \"MASA Blazor :\",\r\n                    Children = new List<Data>\r\n                    {\r\n                        new Data\r\n                        {\r\n                            Id = 7,\r\n                            Name = \"src :\",\r\n                            Children = new List<Data>\r\n                            {\r\n                                new Data\r\n                                {\r\n                                    Id = 8,\r\n                                    Name = \"index : ts\"\r\n                                },\r\n                                new Data\r\n                                {\r\n                                    Id = 9,\r\n                                    Name = \"bootstrap : ts\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                new Data\r\n                {\r\n                    Id = 10,\r\n                    Name = \"material2 :\",\r\n                    Children = new List<Data>\r\n                    {\r\n                        new Data\r\n                        {\r\n                            Id = 11,\r\n                            Name = \"src :\",\r\n                            Children = new List<Data>\r\n                            {\r\n                                new Data\r\n                                {\r\n                                    Id = 12,\r\n                                    Name = \"MButton : cs\"\r\n                                },\r\n                                new Data\r\n                                {\r\n                                    Id = 13,\r\n                                    Name = \"MCard : cs\"\r\n                                },\r\n                                new Data\r\n                                {\r\n                                    Id = 14,\r\n                                    Name = \"MWindow : cs\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id = 15,\r\n            Name = \"Downloads :\",\r\n            Children = new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id = 16,\r\n                    Name = \"October : pdf\"\r\n                },\r\n                new Data\r\n                {\r\n                    Id = 17,\r\n                    Name = \"November : pdf\"\r\n                },\r\n                new Data\r\n                {\r\n                    Id = 18,\r\n                    Name = \"Tutorial : html\"\r\n                }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id = 19,\r\n            Name = \"Videos :\",\r\n            Children = new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id = 20,\r\n                    Name = \"Tutorials :\",\r\n                    Children = new List<Data>\r\n                    {\r\n                        new Data\r\n                        {\r\n                            Id = 21,\r\n                            Name = \"Basic layouts : mp4\"\r\n                        },\r\n                        new Data\r\n                        {\r\n                            Id = 22,\r\n                            Name = \"Advanced techniques : mp4\"\r\n                        },\r\n                        new Data\r\n                        {\r\n                            Id = 23,\r\n                            Name = \"All about app : dir\"\r\n                        }\r\n                    }\r\n                },\r\n                new Data\r\n                {\r\n                    Id = 24,\r\n                    Name = \"Intro : mov\"\r\n                },\r\n                new Data\r\n                {\r\n                    Id = 25,\r\n                    Name = \"Conference introduction : avi\"\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n}\r\n",
        "Type": "Demos.Components.Treeview.props.OpenAll",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "rounded",
        "Title": "圆角",
        "Description": "<p>您可以使树视图节点变成圆角。</p>\n",
        "Code": "<MTreeview Rounded\r\n           Hoverable\r\n           Activatable\r\n           Items=\"_data\" ItemText=\"r=>r.Name\" ItemChildren=\"r=>r.Children\" ItemKey=\"r=>r.Id\">\r\n</MTreeview>\r\n\r\n@code{\r\n    public class Data\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public List<Data> Children { get; set; }\r\n    }\r\n\r\n    private List<Data> _data = new List<Data>\r\n    {\r\n        new Data\r\n        {\r\n            Id=1,\r\n            Name=\"Applications :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=2,\r\n                        Name=\"Calendar : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=3,\r\n                        Name=\"Chrome : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=4,\r\n                        Name=\"Webstorm : app\"\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=5,\r\n            Name=\"Documents :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=6,\r\n                        Name=\"MASA Blazor :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=7,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=8,\r\n                                        Name=\"index : ts\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=9,\r\n                                        Name=\"bootstrap : ts\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=10,\r\n                        Name=\"material2 :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=11,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=12,\r\n                                        Name=\"MButton : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=13,\r\n                                        Name=\"MCard : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=14,\r\n                                        Name=\"MWindow : cs\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=15,\r\n            Name=\"Downloads :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=16,\r\n                    Name=\"October : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=17,\r\n                    Name=\"November : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=18,\r\n                    Name=\"Tutorial : html\"\r\n                }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=19,\r\n            Name=\"Videos :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=20,\r\n                    Name=\"Tutorials :\",\r\n                    Children=new List<Data>\r\n                    {\r\n                        new Data\r\n                        {\r\n                            Id=21,\r\n                            Name=\"Basic layouts : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=22,\r\n                            Name=\"Advanced techniques : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=23,\r\n                            Name=\"All about app : dir\"\r\n                        }\r\n                    }\r\n                },new Data\r\n                {\r\n                    Id=24,\r\n                    Name=\"Intro : mov\"\r\n                },new Data\r\n                {\r\n                    Id=25,\r\n                    Name=\"Conference introduction : avi\"\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n",
        "Type": "Demos.Components.Treeview.props.Rounded",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "selectable",
        "Title": "可选择",
        "Description": "<p>您可以轻松选择树形视图节点和子节点。</p>\n",
        "Code": "<MTreeview TItem=\"Data\" TKey=\"int\" Selectable @bind-Value=\"_value\" Items=\"_data\" ItemText=\"r=>r.Name\" ItemChildren=\"r=>r.Children\" ItemKey=\"r=>r.Id\">\r\n</MTreeview>\r\n\r\n@code {\r\n    public class Data\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public List<Data> Children { get; set; }\r\n    }\r\n\r\n    private List<int> _value = new List<int>\r\n    {\r\n        2\r\n    };\r\n\r\n    private List<Data> _data = new List<Data>\r\n    {\r\n        new Data\r\n        {\r\n            Id=1,\r\n            Name=\"Applications :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=2,\r\n                        Name=\"Calendar : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=3,\r\n                        Name=\"Chrome : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=4,\r\n                        Name=\"Webstorm : app\"\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=5,\r\n            Name=\"Documents :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=6,\r\n                        Name=\"MASA Blazor :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=7,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=8,\r\n                                        Name=\"index : ts\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=9,\r\n                                        Name=\"bootstrap : ts\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=10,\r\n                        Name=\"material2 :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=11,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=12,\r\n                                        Name=\"MButton : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=13,\r\n                                        Name=\"MCard : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=14,\r\n                                        Name=\"MWindow : cs\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=15,\r\n            Name=\"Downloads :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=16,\r\n                    Name=\"October : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=17,\r\n                    Name=\"November : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=18,\r\n                    Name=\"Tutorial : html\"\r\n                }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=19,\r\n            Name=\"Videos :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=20,\r\n                    Name=\"Tutorials :\",\r\n                    Children=new List<Data>\r\n                    {\r\n                        new Data\r\n                        {\r\n                            Id=21,\r\n                            Name=\"Basic layouts : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=22,\r\n                            Name=\"Advanced techniques : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=23,\r\n                            Name=\"All about app : dir\"\r\n                        }\r\n                    }\r\n                },new Data\r\n                {\r\n                    Id=24,\r\n                    Name=\"Intro : mov\"\r\n                },new Data\r\n                {\r\n                    Id=25,\r\n                    Name=\"Conference introduction : avi\"\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n",
        "Type": "Demos.Components.Treeview.props.Selectable",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "selectColor",
        "Title": "选择颜色",
        "Description": "<p>您可以控制所选节点复选框的颜色。</p>\n",
        "Code": "<MTreeview Selectable\r\n           SelectedColor=\"red\"\r\n           Items=\"_data\" ItemText=\"r=>r.Name\" ItemChildren=\"r=>r.Children\" ItemKey=\"r=>r.Id\">\r\n</MTreeview>\r\n\r\n@code{\r\n    public class Data\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public List<Data> Children { get; set; }\r\n    }\r\n\r\n    private List<Data> _data = new List<Data>\r\n    {\r\n        new Data\r\n        {\r\n            Id=1,\r\n            Name=\"Applications :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=2,\r\n                        Name=\"Calendar : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=3,\r\n                        Name=\"Chrome : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=4,\r\n                        Name=\"Webstorm : app\"\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=5,\r\n            Name=\"Documents :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=6,\r\n                        Name=\"MASA Blazor :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=7,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=8,\r\n                                        Name=\"index : ts\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=9,\r\n                                        Name=\"bootstrap : ts\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=10,\r\n                        Name=\"material2 :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=11,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=12,\r\n                                        Name=\"MButton : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=13,\r\n                                        Name=\"MCard : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=14,\r\n                                        Name=\"MWindow : cs\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=15,\r\n            Name=\"Downloads :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=16,\r\n                    Name=\"October : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=17,\r\n                    Name=\"November : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=18,\r\n                    Name=\"Tutorial : html\"\r\n                }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=19,\r\n            Name=\"Videos :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=20,\r\n                    Name=\"Tutorials :\",\r\n                    Children=new List<Data>\r\n                    {\r\n                        new Data\r\n                        {\r\n                            Id=21,\r\n                            Name=\"Basic layouts : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=22,\r\n                            Name=\"Advanced techniques : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=23,\r\n                            Name=\"All about app : dir\"\r\n                        }\r\n                    }\r\n                },new Data\r\n                {\r\n                    Id=24,\r\n                    Name=\"Intro : mov\"\r\n                },new Data\r\n                {\r\n                    Id=25,\r\n                    Name=\"Conference introduction : avi\"\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n",
        "Type": "Demos.Components.Treeview.props.SelectColor",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "selectType",
        "Title": "选择类型",
        "Description": "<p>属性视图支持两种不同的选择类型。 默认类型是 <strong>Leaf</strong>，它在 <strong>@bind-Value</strong> 数组中只包含选中的叶节点。 但会渲染父节点状态为全选或半选(这一点需要考量)。 另一种模式是 <strong>Independent</strong>\n，允许选择父节点，但每个节点都独立于其父节点。</p>\n",
        "Code": "<MContainer>\r\n    <MSelect @bind-Value=\"_type\"\r\n             Items=\"_types\" ItemText=\"r=>r.ToString()\" ItemValue=\"r=>r\"></MSelect>\r\n    <MRow>\r\n        <MCol>\r\n            <MTreeview TItem=\"Data\" TKey=\"int\" OnInput=\"val=>_selection = val\" Selectable SelectionType=\"_type\" Items=\"_data\"\r\n                       ItemText=\"r=>r.Name\" ItemChildren=\"r=>r.Children\" ItemKey=\"r=>r.Id\">\r\n            </MTreeview>\r\n        </MCol>\r\n        <MDivider Vertical></MDivider>\r\n        <MCol Class=\"pa-6\"\r\n              Cols=\"6\">\r\n            @if (_selection == null)\r\n            {\r\n                @(\"No nodes selected\")\r\n            }\r\n            else\r\n            {\r\n                foreach (var node in _selection)\r\n                {\r\n                    <div @key=\"node.Id\">\r\n                        @node.Name\r\n                    </div>\r\n                }\r\n            }\r\n        </MCol>\r\n    </MRow>\r\n</MContainer>\r\n\r\n@code {\r\n    private SelectionType _type;\r\n    private List<Data> _selection;\r\n\r\n    private List<SelectionType> _types = new List<SelectionType>\r\n{\r\n        SelectionType.Leaf,\r\n        SelectionType.Independent\r\n    };\r\n\r\n    public class Data\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public List<Data> Children { get; set; }\r\n    }\r\n\r\n    private List<Data> _data = new List<Data>\r\n    {\r\n        new Data\r\n        {\r\n            Id=1,\r\n            Name=\"Applications :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=2,\r\n                        Name=\"Calendar : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=3,\r\n                        Name=\"Chrome : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=4,\r\n                        Name=\"Webstorm : app\"\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=5,\r\n            Name=\"Documents :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=6,\r\n                        Name=\"MASA Blazor :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=7,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=8,\r\n                                        Name=\"index : ts\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=9,\r\n                                        Name=\"bootstrap : ts\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=10,\r\n                        Name=\"material2 :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=11,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=12,\r\n                                        Name=\"MButton : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=13,\r\n                                        Name=\"MCard : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=14,\r\n                                        Name=\"MWindow : cs\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=15,\r\n            Name=\"Downloads :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=16,\r\n                    Name=\"October : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=17,\r\n                    Name=\"November : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=18,\r\n                    Name=\"Tutorial : html\"\r\n                }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=19,\r\n            Name=\"Videos :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=20,\r\n                    Name=\"Tutorials :\",\r\n                    Children=new List<Data>\r\n                    {\r\n                        new Data\r\n                        {\r\n                            Id=21,\r\n                            Name=\"Basic layouts : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=22,\r\n                            Name=\"Advanced techniques : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=23,\r\n                            Name=\"All about app : dir\"\r\n                        }\r\n                    }\r\n                },new Data\r\n                {\r\n                    Id=24,\r\n                    Name=\"Intro : mov\"\r\n                },new Data\r\n                {\r\n                    Id=25,\r\n                    Name=\"Conference introduction : avi\"\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n",
        "Type": "Demos.Components.Treeview.props.SelectType",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "shaped",
        "Title": "形状",
        "Description": "<p>形状的树形视图在节点的一侧具有圆形边界。</p>\n",
        "Code": "<MTreeview Shaped\r\n           Hoverable\r\n           Activatable\r\n           Items=\"_data\" ItemText=\"r=>r.Name\" ItemChildren=\"r=>r.Children\" ItemKey=\"r=>r.Id\">\r\n</MTreeview>\r\n\r\n@code{\r\n    public class Data\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public List<Data> Children { get; set; }\r\n    }\r\n\r\n    private List<Data> _data = new List<Data>\r\n    {\r\n        new Data\r\n        {\r\n            Id=1,\r\n            Name=\"Applications :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=2,\r\n                        Name=\"Calendar : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=3,\r\n                        Name=\"Chrome : app\"\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=4,\r\n                        Name=\"Webstorm : app\"\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=5,\r\n            Name=\"Documents :\",\r\n            Children=new List<Data>\r\n            {\r\n                    new Data\r\n                    {\r\n                        Id=6,\r\n                        Name=\"MASA Blazor :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=7,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=8,\r\n                                        Name=\"index : ts\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=9,\r\n                                        Name=\"bootstrap : ts\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    new Data\r\n                    {\r\n                        Id=10,\r\n                        Name=\"material2 :\",\r\n                        Children=new List<Data>\r\n                        {\r\n                            new Data\r\n                            {\r\n                                Id=11,\r\n                                Name=\"src :\",\r\n                                Children=new List<Data>\r\n                                {\r\n                                    new Data\r\n                                    {\r\n                                        Id=12,\r\n                                        Name=\"MButton : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=13,\r\n                                        Name=\"MCard : cs\"\r\n                                    },new Data\r\n                                    {\r\n                                        Id=14,\r\n                                        Name=\"MWindow : cs\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=15,\r\n            Name=\"Downloads :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=16,\r\n                    Name=\"October : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=17,\r\n                    Name=\"November : pdf\"\r\n                },new Data\r\n                {\r\n                    Id=18,\r\n                    Name=\"Tutorial : html\"\r\n                }\r\n            }\r\n        },\r\n        new Data\r\n        {\r\n            Id=19,\r\n            Name=\"Videos :\",\r\n            Children=new List<Data>\r\n            {\r\n                new Data\r\n                {\r\n                    Id=20,\r\n                    Name=\"Tutorials :\",\r\n                    Children=new List<Data>\r\n                    {\r\n                        new Data\r\n                        {\r\n                            Id=21,\r\n                            Name=\"Basic layouts : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=22,\r\n                            Name=\"Advanced techniques : mp4\"\r\n                        },new Data\r\n                        {\r\n                            Id=23,\r\n                            Name=\"All about app : dir\"\r\n                        }\r\n                    }\r\n                },new Data\r\n                {\r\n                    Id=24,\r\n                    Name=\"Intro : mov\"\r\n                },new Data\r\n                {\r\n                    Id=25,\r\n                    Name=\"Conference introduction : avi\"\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n",
        "Type": "Demos.Components.Treeview.props.Shaped",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 0,
        "Name": "appendAndLabel",
        "Title": "附加和标签",
        "Description": "<p>使用 <strong>LabelContent</strong> 和 <strong>AppendContent</strong> 插槽，我们能够创建一个直观的文件浏览器。</p>\n",
        "Code": "<MTreeview\r\n    @bind-Open=\"@initiallyOpen\"\r\n    Items=\"items\"\r\n    Activatable\r\n    ItemKey=\"u => u.Name\"\r\n    ItemChildren=\"u => u.Children\"\r\n    ItemText=\"u => u.Name\"\r\n    OpenOnClick>\r\n    <PrependContent>\r\n        @if (context.Item.File == null)\r\n        {\r\n            <MIcon>\r\n                @(context.Open ? \"mdi-folder-open\" : \"mdi-folder\")\r\n            </MIcon>\r\n        }\r\n        else\r\n        {\r\n            <MIcon>\r\n                @files[context.Item.File]\r\n            </MIcon>\r\n        }\r\n    </PrependContent>\r\n</MTreeview>\r\n\r\n@code {\r\n\r\n    static Dictionary<string, string> files = new()\r\n    {\r\n        {\"html\", \"mdi-language-html5\"},\r\n        {\"js\", \"mdi-nodejs\"},\r\n        {\"json\", \"mdi-code-json\"},\r\n        {\"md\", \"mdi-language-markdown\"},\r\n        {\"pdf\", \"mdi-file-pdf\"},\r\n        {\"png\", \"mdi-file-image\"},\r\n        {\"txt\", \"mdi-file-document-outline\"},\r\n        {\"xls\", \"mdi-file-excel\"}\r\n    };\r\n\r\n    static List<Project> items = new()\r\n    {\r\n        new Project(\".git\"),\r\n        new Project(\"node_modules\"),\r\n        new Project(\"public\", new List<Project>()\r\n        {\r\n            new Project(\"static\", new List<Project>()\r\n            {\r\n                new Project(\"log.png\", \"png\")\r\n            }),\r\n            new Project(\"favicon.ico\", \"png\"),\r\n            new Project(\"index.html\", \"html\")\r\n        }),\r\n        new Project(\".gitignore\", \"txt\"),\r\n        new Project(\"babel.config.js\", \"js\"),\r\n        new Project(\"package.json\", \"json\"),\r\n        new Project(\"README.md\", \"md\"),\r\n        new Project(\"vue.config.js\", \"js\"),\r\n        new Project(\"yarn.lock\", \"txt\")\r\n    };\r\n\r\n    List<string> initiallyOpen = new() {\"public\"};\r\n\r\n    public class Project\r\n    {\r\n        public string File { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public List<Project> Children { get; set; }\r\n\r\n        public Project(string name)\r\n        {\r\n            Name = name;\r\n        }\r\n\r\n        public Project(string name, string file)\r\n        {\r\n            Name = name;\r\n            File = file;\r\n        }\r\n\r\n        public Project(string name, List<Project> children)\r\n        {\r\n            Name = name;\r\n            Children = children;\r\n        }\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.Treeview.contents.AppendAndLabel",
        "Style": "",
        "Debug": false,
        "Group": 2
      },
      {
        "Order": 0,
        "Name": "searchAndFilter",
        "Title": "搜索&过滤",
        "Description": "<p>使用 <strong>Search</strong> 属性，轻松过滤您的树形视图。 如果您需要区分大小写或模糊过滤，通过设置 <strong>Filter</strong> 树形，您可以轻松地应用您的自定义过滤功能。 这类似于 <code>MAutocomplete</code>。</p>\n",
        "Code": "<MCard Class=\"mx-auto\"\r\n       MaxWidth=\"500\">\r\n    <MSheet Class=\"pa-4 primary lighten-2\">\r\n        <MTextField @bind-Value=\"_search\"\r\n                    Label=\"Search Company Directory\"\r\n                    Dark\r\n                    Flat\r\n                    SoloInverted\r\n                    HideDetails=\"true\"\r\n                    Clearable\r\n                    ClearIcon=\"mdi-close-circle-outline\"></MTextField>\r\n        <MCheckbox @bind-Value=\"_caseSensitive\"\r\n                   Dark\r\n                   HideDetails=\"true\"\r\n                   Label=\"Case sensitive search\"></MCheckbox>\r\n    </MSheet>\r\n    <MCardText>\r\n        <MTreeview Items=\"_items\"\r\n                   Search=\"@_search\"\r\n                   Filter=\"Filter\"\r\n                   ItemKey=\"r=>r.Id\"\r\n                   ItemText=\"r=>r.Name\"\r\n                   ItemChildren=\"r=>r.Children\"\r\n                   @bind-Open=\"_open\">\r\n            <PrependContent>\r\n                @if (context.Item.Children != null && context.Item.Children.Count > 0)\r\n                {\r\n                    <MIcon>\r\n                        @($\"mdi-{(context.Item.Id == 1 ? \"home-variant\" : \"folder-network\")}\")\r\n                    </MIcon>\r\n                }\r\n            </PrependContent>\r\n        </MTreeview>\r\n    </MCardText>\r\n</MCard>\r\n\r\n@code {\r\n    public class Data\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public List<Data> Children { get; set; }\r\n    }\r\n\r\n    private List<Data> _items = new List<Data>()\r\n        {\r\n           new Data()\r\n           {\r\n              Id= 1,\r\n              Name= \"MASA Blazor Human Resources\",\r\n              Children= new List<Data>()\r\n              {\r\n                new Data()\r\n                {\r\n                  Id= 2,\r\n                  Name= \"Core team\",\r\n                  Children= new List<Data>()\r\n                    {\r\n                       new Data() {\r\n                          Id= 201,\r\n                          Name= \"John\",\r\n                        },\r\n                        new Data(){\r\n                          Id= 202,\r\n                          Name= \"Kael\",\r\n                        },\r\n                        new Data(){\r\n                          Id= 203,\r\n                          Name= \"Nekosaur\",\r\n                        },\r\n                        new Data(){\r\n                          Id= 204,\r\n                          Name= \"Jacek\",\r\n                        },\r\n                        new Data(){\r\n                          Id= 205,\r\n                          Name= \"Andrew\",\r\n                        }\r\n                    }\r\n                },\r\n                new Data()\r\n                {\r\n                  Id= 3,\r\n                  Name= \"Administrators\",\r\n                  Children= new List<Data>()\r\n                    {\r\n                        new Data()\r\n                        {\r\n                          Id= 301,\r\n                          Name= \"Mike\",\r\n                        },\r\n                        new Data()\r\n                        {\r\n                          Id= 302,\r\n                          Name= \"Hunt\",\r\n                        }\r\n                    }\r\n                },\r\n                new Data()\r\n                {\r\n                  Id= 4,\r\n                  Name= \"Contributors\",\r\n                  Children= new List<Data>()\r\n                    {\r\n                        new Data()\r\n                        {\r\n                          Id= 401,\r\n                          Name= \"Phlow\"\r\n                        },\r\n                        new Data()\r\n                        {\r\n                          Id= 402,\r\n                          Name= \"Brandon\"\r\n                        },\r\n                        new Data()\r\n                        {\r\n                          Id= 403,\r\n                          Name= \"Sean\"\r\n                        }\r\n                    }\r\n                }\r\n              }\r\n            }\r\n        };\r\n    private List<int> _open = new List<int>\r\n        {\r\n            1,\r\n            2\r\n        };\r\n    private string _search;\r\n    private bool _caseSensitive;\r\n\r\n    public Func<Data, string, Func<Data, string>, bool> Filter\r\n    {\r\n        get\r\n        {\r\n            if (_caseSensitive)\r\n            {\r\n                return (item, search, textKey) => textKey(item).IndexOf(search) > -1;\r\n            }\r\n\r\n            return null;\r\n        }\r\n    }\r\n}",
        "Type": "Demos.Components.Treeview.misc.SearchAndFilter",
        "Style": "",
        "Debug": false,
        "Group": 3
      },
      {
        "Order": 0,
        "Name": "selectableIcons",
        "Title": "可选择的图标",
        "Description": "<p>为你的可选择树形视图自定义 <strong>选中(on)</strong>, <strong>未选中(off)</strong> 以及 <strong>半选(indeterminate)</strong> 图标。与诸如API加载项目等其他高级功能合并。</p>\n",
        "Code": "@using System.Text.Json\r\n@using System.Text.Json.Nodes\r\n@inject HttpClient HttpClient\r\n\r\n<MCard>\r\n    <MToolbar\r\n        Color=\"primary\"\r\n        Dark\r\n        Flat>\r\n        <MIcon>mdi-silverware</MIcon>\r\n        <MToolbarTitle>Local hotspots</MToolbarTitle>\r\n    </MToolbar>\r\n\r\n    <MRow>\r\n        <MCol>\r\n            <MCardText>\r\n                <MTreeview\r\n                    @bind-Value=\"tree\"\r\n                    LoadChildren=\"Fetch\"\r\n                    Items=\"items\"\r\n                    ItemKey=\"item => item.Id\"\r\n                    ItemText=\"item => item.Name\"\r\n                    ItemChildren=\"item => item.Children\"\r\n                    SelectedColor=\"indigo\"\r\n                    OpenOnClick\r\n                    Selectable\r\n                    ReturnObject\r\n                    ExpandIcon=\"mdi-chevron-down\"\r\n                    OnIcon=\"mdi-bookmark\"\r\n                    OffIcon=\"mdi-bookmark-outline\"\r\n                    IndeterminateIcon=\"mdi-bookmark-minus\">\r\n                </MTreeview>\r\n            </MCardText>\r\n        </MCol>\r\n\r\n        <MDivider Vertical></MDivider>\r\n\r\n        <MCol\r\n            Cols=\"12\"\r\n            Md=\"6\">\r\n            <MCardText>\r\n                @if (tree.Count == 0)\r\n                {\r\n                    <div\r\n                        key=\"title\"\r\n                        class=\"text-h6 font-weight-light grey--text pa-4 text-center\">\r\n                        Select your favorite breweries\r\n                    </div>\r\n                }\r\n\r\n                <ScrollXTransition>\r\n                    @foreach (var (selection, i) in tree.Select((item, i) => (item,i)))\r\n                    {\r\n                        <MChip\r\n                            @key=\"i\"\r\n                            Color=\"grey\"\r\n                            Dark\r\n                            Small\r\n                            Class=\"ma-1\">\r\n                            <MIcon\r\n                                Left\r\n                                Small>\r\n                                mdi-beer\r\n                            </MIcon>\r\n                            @selection\r\n                        </MChip>\r\n                    }\r\n                </ScrollXTransition>\r\n            </MCardText>\r\n        </MCol>\r\n    </MRow>\r\n\r\n    <MDivider></MDivider>\r\n\r\n    <MCardActions>\r\n        <MButton\r\n            Text\r\n            OnClick=\"() => tree.Clear()\">\r\n            Reset\r\n        </MButton>\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton\r\n            Class=\"white--text\"\r\n            Color=\"green darken-1\"\r\n            Depressed>\r\n            Save\r\n            <MIcon Right>\r\n                mdi-content-save\r\n            </MIcon>\r\n        </MButton>\r\n    </MCardActions>\r\n</MCard>\r\n\r\n@code {\r\n\r\n    List<JsonNode> breweries = new();\r\n    List<string> tree = new();\r\n    List<string> types = new();\r\n\r\n    List<Item> _items;\r\n    bool _itemsChanged = true;\r\n\r\n    List<Item> items\r\n    {\r\n        get\r\n        {\r\n            if (!_itemsChanged)\r\n            {\r\n                return _items;\r\n            }\r\n\r\n            var top = new Item(\"1\", \"All Breweries\", new List<Item>());\r\n\r\n            if (types.Any())\r\n            {\r\n                top.Children = types.Select(type => new Item(type, getName(type), GetChildren(type))).ToList();\r\n            }\r\n\r\n            _items = new List<Item> {top};\r\n\r\n            _itemsChanged = false;\r\n\r\n            return _items;\r\n        }\r\n    }\r\n\r\n    async Task Fetch(Item item)\r\n    {\r\n        var response = await HttpClient.GetAsync(\"https://api.openbrewerydb.org/breweries\");\r\n        if (response.IsSuccessStatusCode)\r\n        {\r\n            var json = await response.Content.ReadAsStringAsync();\r\n            breweries = JsonSerializer.Deserialize<List<JsonNode>>(json);\r\n\r\n            foreach (var brewery in breweries)\r\n            {\r\n                var type = (string)brewery[\"brewery_type\"];\r\n                if (!types.Contains(type))\r\n                {\r\n                    types.Add(type);\r\n                }\r\n            }\r\n\r\n            types.Sort();\r\n\r\n            _itemsChanged = true;\r\n\r\n            StateHasChanged();\r\n        }\r\n    }\r\n\r\n    List<Item> GetChildren(string type)\r\n    {\r\n        List<Item> result = new();\r\n        foreach (var brewery in breweries)\r\n        {\r\n            if ((string)brewery[\"brewery_type\"] != type) continue;\r\n\r\n            brewery[\"name\"] = getName((string)brewery[\"name\"]);\r\n\r\n            var item = new Item((string)brewery[\"id\"], (string)brewery[\"name\"], null);\r\n            result.Add(item);\r\n        }\r\n\r\n        result.Sort((x, y) => string.Compare(x.Name, y.Name, StringComparison.Ordinal));\r\n\r\n        return result;\r\n    }\r\n\r\n    string getName(string name)\r\n    {\r\n        return $\"{name[0].ToString().ToUpper()}{name[1..]}\";\r\n    }\r\n\r\n    public class Item\r\n    {\r\n        public string Id { get; set; }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public List<Item> Children { get; set; }\r\n\r\n        public Item()\r\n        {\r\n        }\r\n\r\n        public Item(string id, string name)\r\n        {\r\n            Id = id;\r\n            Name = name;\r\n        }\r\n\r\n        public Item(string id, string name, List<Item> children)\r\n        {\r\n            Id = id;\r\n            Name = name;\r\n            Children = children;\r\n        }\r\n    }\r\n\r\n}",
        "Type": "Demos.Components.Treeview.misc.SelectableIcons",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/lists",
      "/components/list-item-groups",
      "/components/timelines"
    ],
    "Subtitle": "树形视图",
    "Title": "Treeview",
    "Type": "树形视图"
  },
  {
    "Desc": "<p>MVirtualScroll 组件显示一个虚拟，无限 的列表。 它支持动态高度和垂直滚动。</p>\n",
    "Order": 0,
    "OtherDocs": {
      "API": "\n<ul>\n<li><a href=\"/api/MVirtualScroll\">MVirtualScroll</a></li>\n</ul>\n"
    },
    "LastWriteTime": "2022-10-20T23:42:05.7871844+08:00",
    "DemoList": [
      {
        "Order": 0,
        "Name": "Bench",
        "Title": "替补",
        "Description": "<p>默认情况下， MvirtualScroll 不会预渲染出现在视图可见范围外的其它项。 使用 OverscanCount 属性会使滚动条渲染额外的项目作为 替补。 为了获得尽可能好的性能，建议尽量减小这个数字</p>\n",
        "Code": "<div>\r\n    <MResponsive MaxWidth=\"400\" Class=\"mx-auto mb-4\">\r\n        <MTextField @bind-Value=\"_overscanCount\"  Type=\"number\" TValue=\"int\" Label=\"Total OverscanCount\">\r\n        </MTextField>\r\n    </MResponsive>\r\n\r\n    <MCard Elevation=6 MaxWidth=400 Class=\"mx-auto\">\r\n        <MVirtualScroll Height=300 OverscanCount=@_overscanCount ItemHeight=64 Items=\"Items\">\r\n            <ItemContent>\r\n                <MListItem>\r\n\r\n                    <MListItemAction>\r\n                        <MButton Fab Small Depressed Color=\"primary\">\r\n                            @context\r\n                        </MButton>\r\n                    </MListItemAction>\r\n\r\n                    <MListItemContent>\r\n                        <MListItemTitle>\r\n                            User Database Record <strong>ID @context</strong>\r\n                        </MListItemTitle>\r\n                    </MListItemContent>\r\n\r\n                    <MListItemAction>\r\n                        <MIcon Small>\r\n                            mdi-open-in-new\r\n                        </MIcon>\r\n                    </MListItemAction>\r\n\r\n                </MListItem>\r\n\r\n                <MDivider></MDivider>\r\n\r\n            </ItemContent>\r\n        </MVirtualScroll>\r\n    </MCard>\r\n</div>\r\n\r\n@code\r\n{\r\n    int _overscanCount = 0;\r\n\r\n    int _length = 7000;\r\n\r\n    int[] Items\r\n    {\r\n        get\r\n        {\r\n            int[] array = new int[_length];\r\n            for (var i = 0; i < _length; i++)\r\n            {\r\n                array[i] = i + 1;\r\n            }\r\n            return array;\r\n        }\r\n    }\r\n}",
        "Type": "Demos.Components.VirtualScroll.props.Bench",
        "Style": "",
        "Debug": false,
        "Group": 0
      },
      {
        "Order": 1,
        "Name": "UserDirectory",
        "Title": "用户目录",
        "Description": "<p>MvirtualScroll 组件通过仅渲染填充滚动条所需要的内容来实现无限数量项目的渲染,ItemSize属性可以设置每个项的像素高度</p>\n",
        "Code": "<MCard Class=\"mx-auto\" MaxWidth=400>\r\n\r\n    <MCardTitle Class=\"white--text orange darken-4\">\r\n\r\n        User Directory\r\n\r\n        <MSpacer></MSpacer>\r\n\r\n        <MButton Color=\"white\" Class=\"text--primary\" Fab Small>\r\n            <MIcon>mdi-plus</MIcon>\r\n        </MButton>\r\n\r\n    </MCardTitle>\r\n\r\n    <MCardText Class=\"pt-4\">\r\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quasi nobis a at voluptates culpa optio amet! Inventore deserunt voluptatem maxime a veniam placeat, eos impedit nulla quos? Officiis, aperiam ducimus.\r\n    </MCardText>\r\n\r\n    <MDivider></MDivider>\r\n\r\n    <MVirtualScroll Items=\"Items\" ItemSize=50 Height=300>\r\n        <ItemContent>\r\n\r\n            <MListItem>\r\n\r\n                <MListItemAvatar>\r\n                    <MAvatar Color=\"@context.Color\" Size=56 Class=\"white--text\">\r\n                        @context.Initials\r\n                    </MAvatar>\r\n                </MListItemAvatar>\r\n\r\n                <MListItemContent>\r\n                    <MListItemTitle>\r\n                        @context.FullName\r\n                    </MListItemTitle>\r\n                </MListItemContent>\r\n\r\n                <MListItemAction>\r\n                    <MButton Depressed Small>\r\n\r\n                        View User\r\n\r\n                        <MIcon Color=\"orange darken-4\" Right>\r\n                            mdi-open-in-new\r\n                        </MIcon>\r\n                    </MButton>\r\n                </MListItemAction>\r\n\r\n            </MListItem>\r\n\r\n        </ItemContent>\r\n    </MVirtualScroll>\r\n\r\n</MCard>\r\n\r\n@code\r\n{\r\n    string[] _colors = new[] { \"#2196F3\", \"#90CAF9\", \"#64B5F6\", \"#42A5F5\", \"#1E88E5\", \"#1976D2\", \"#1565C0\", \"#0D47A1\", \"#82B1FF\", \"#448AFF\", \"#2979FF\", \"#2962FF\" };\r\n\r\n    string[] _names = new[] { \"Oliver\", \"Jake\", \"Noah\", \"James\", \"Jack\", \"Connor\", \"Liam\", \"John\", \"Harry\", \"Callum\", \"Mason\", \"Robert\", \"Jacob\", \"Jacob\", \"Jacob\", \"Michael\", \"Charlie\", \"Kyle\", \"William\", \"William\", \"Thomas\", \"Joe\", \"Ethan\", \"David\", \"George\", \"Reece\", \"Michael\", \"Richard\", \"Oscar\", \"Rhys\", \"Alexander\", \"Joseph\", \"James\", \"Charlie\", \"James\", \"Charles\", \"William\", \"Damian\", \"Daniel\", \"Thomas\", \"Amelia\", \"Margaret\", \"Emma\", \"Mary\", \"Olivia\", \"Samantha\", \"Olivia\", \"Patricia\", \"Isla\", \"Bethany\" };\r\n\r\n    string[] _surnames = new[] { \"Smith\", \"Anderson\", \"Clark\", \"Wright\", \"Mitchell\", \"Johnson\", \"Thomas\", \"Rodriguez\", \"Lopez\", \"Perez\", \"Williams\", \"Jackson\", \"Lewis\", \"Hill\", \"Roberts\", \"Jones\", \"White\", \"Lee\", \"Scott\", \"Turner\", \"Brown\", \"Harris\", \"Walker\", \"Green\", \"Phillips\", \"Davis\", \"Martin\", \"Hall\", \"Adams\", \"Campbell\", \"Miller\", \"Thompson\", \"Allen\", \"Baker\", \"Parker\", \"Wilson\", \"Garcia\", \"Young\", \"Gonzalez\", \"Evans\", \"Moore\", \"Martinez\", \"Hernandez\", \"Nelson\", \"Edwards\", \"Taylor\", \"Robinson\", \"King\", \"Carter\", \"Collins\" };\r\n\r\n    Item[] Items\r\n    {\r\n        get\r\n        {\r\n            int namesLength = _names.Length;\r\n            int surnamesLength = _surnames.Length;\r\n            int colorsLength = _colors.Length;\r\n\r\n            Item[] items = new Item[10000];\r\n            for (var i = 0; i < 10000; i++)\r\n            {\r\n                string name = _names[GenRandomIndex(namesLength)];\r\n                string surname = _surnames[GenRandomIndex(surnamesLength)];\r\n\r\n                items[i] = new Item\r\n                {\r\n                    Color = _colors[GenRandomIndex(colorsLength)],\r\n                    FullName = $\"{name} {surname}\",\r\n                    Initials = $\"{name[0]} {surname[0]}\"\r\n                };\r\n            }\r\n\r\n            return items;\r\n        }\r\n    }\r\n\r\n    public int GenRandomIndex(int length)\r\n    {\r\n        Random r = new Random();\r\n\r\n        return (int)Math.Ceiling(r.NextDouble() * (length - 1));\r\n    }\r\n\r\n    class Item\r\n    {\r\n        public string Color { get; set; }\r\n        public string FullName { get; set; }\r\n        public string Initials { get; set; }\r\n    }\r\n}",
        "Type": "Demos.Components.VirtualScroll.misc.UserDirectory",
        "Style": "",
        "Debug": false,
        "Group": 3
      }
    ],
    "Children": [],
    "Category": "Components",
    "Cols": 1,
    "Related": [
      "/components/lists",
      "/components/data-tables",
      "/components/data-iterators"
    ],
    "Subtitle": "虚拟滚动条",
    "Title": "Virtual scroller",
    "Type": "虚拟滚动条"
  }
]