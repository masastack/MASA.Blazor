@using BlazorComponent.I18n
@using Masa.Blazor.Doc.Models
@using Masa.Blazor.Doc.Services
@using Masa.Blazor.Doc.Utils
@using System.Globalization;
@inherits OwningComponentBase<DemoService>

<MList Nav Linkage Class="mt-4">
    @foreach (var item in MenuItems)
    {
        if (item.Children != null && item.Children.Any())
        {
            var group = GenGroup(item.Children);

            <MListGroup AppendIcon="M8.33398 10.3335L12.5007 14.5002L16.6673 10.3335H8.33398Z"
                        Class="m-list-group--default"
                        Group="@group"
                        Color="#5C2D91"
                        NoAction
                        PrependIcon="@item.Icon">
                <ActivatorContent>
                    <MListItemContent>
                        <MListItemTitle>@item.Title</MListItemTitle>
                    </MListItemContent>
                </ActivatorContent>
                <ChildContent>
                    @foreach (var componentItem in item.Children)
                    {
                        if (componentItem.Children != null && componentItem.Children.Any())
                        {
                            var group2 = GenGroup(componentItem.Children);

                            <MListGroup Class="m-list-group--default"
                                        Group="@group2"
                                        NoAction
                                        Color="#5C2D91"
                                        SubGroup>
                                <ActivatorContent>
                                    <NavItemContent Title="@componentItem.Title" SubTitle="@componentItem.SubTitle" />
                                </ActivatorContent>
                                <ChildContent>
                                    @foreach (var subComponentItem in componentItem.Children)
                                    {
                                        <NavItem Item="@subComponentItem" />
                                    }
                                </ChildContent>
                            </MListGroup>
                        }
                        else
                        {
                            <NavItem Item="@componentItem" />
                        }
                    }
                </ChildContent>
            </MListGroup>
        }
        else
        {
            <MListItem Class="m-list-item--default" Link Href="@item.Url">
                <MListItemIcon>
                    <MIcon>@item.Icon</MIcon>
                </MListItemIcon>
                <MListItemContent>
                    <MListItemTitle>@item.Title</MListItemTitle>
                </MListItemContent>
            </MListItem>
        }
    }
</MList>

@code {

    [Inject]
    private I18n I18n { get; set; }

    /// <summary>
    /// Not being used, just notifying the component that it needs to be re-rendered
    /// </summary>
    [CascadingParameter(Name = "Culture")]
    public CultureInfo Culture { get; set; }

    [Parameter]
    public DemoMenuItemModel[] MenuItems { get; set; } = { };

    protected override async Task OnParametersSetAsync()
    {
        Service.ChangeLanguage(Culture);
        MenuItems = await Service.GetMenuAsync();
    }

    List<string> GenGroup(DemoMenuItemModel[] items)
    {
        if (items == null || !items.Any()) return new List<string>();

        var groups = new List<string>();

        foreach (var item in items)
        {
            groups.AddRange(GenGroup(item.Children));

            if (item.Url == null || groups.Contains(item.Url, StringComparer.OrdinalIgnoreCase)) continue;

            groups.Add(item.Url);
        }

        return groups;
    }

}
