<MErrorHandler ShowAlert=_isShow OnErrorHandleAsync=HandleErrorAsync>
    <MSwitch @bind-Value="_isShow" Label="@($"Show: {_isShow}")"></MSwitch>
    <MTextField Label="Input a num" Value="num" />
    <MButton OnClick="BtnClick">Normal error</MButton>
    <MButton OnClick="BtnClickLifeCycle">Life cycle error</MButton>
</MErrorHandler>
@code
{
    [Inject]
    public IPopupService PopupService { get; set; }

    private bool _isShow = true;
    private int num = 1;

    private void BtnClick()
    {
        throw new Exception("BtnClickThrow Error!");
    }

    private void BtnClickLifeCycle()
    {
        num = 0;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        num /= num;
    }

    private async Task<bool> HandleErrorAsync(Exception exception)
    {
        if (_isShow)
        {
            await PopupService.AlertAsync(exception.Message, AlertTypes.Error);
        }
        return _isShow;
    }
}