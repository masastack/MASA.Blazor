{"version":3,"file":"markdown-it.js","sources":["../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/common/entities.js","../../Masa.Blazor.JS/node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/P/regex.js","../../Masa.Blazor.JS/node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/encode.js","../../Masa.Blazor.JS/node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/decode.js","../../Masa.Blazor.JS/node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/parse.js","../../Masa.Blazor.JS/node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/index.js","../../Masa.Blazor.JS/node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/format.js","../../Masa.Blazor.JS/node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/properties/Any/regex.js","../../Masa.Blazor.JS/node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Cc/regex.js","../../Masa.Blazor.JS/node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Z/regex.js","../../Masa.Blazor.JS/node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/index.js","../../Masa.Blazor.JS/node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Cf/regex.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/common/utils.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/helpers/parse_link_destination.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/helpers/parse_link_title.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/helpers/index.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/helpers/parse_link_label.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/renderer.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/ruler.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_core/normalize.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_core/linkify.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_core/replacements.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_core/smartquotes.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/token.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_core/state_core.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/parser_core.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_core/block.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_core/inline.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_core/text_join.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_block/table.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_block/blockquote.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_block/hr.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_block/list.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_block/reference.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/common/html_re.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_block/html_block.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/common/html_blocks.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_block/heading.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_block/state_block.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/parser_block.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_block/code.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_block/fence.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_block/lheading.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_block/paragraph.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_inline/text.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_inline/escape.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_inline/linkify.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_inline/newline.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_inline/strikethrough.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_inline/emphasis.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_inline/link.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_inline/image.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_inline/autolink.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_inline/html_inline.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_inline/entity.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_inline/balance_pairs.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_inline/state_inline.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/parser_inline.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_inline/backticks.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/rules_inline/fragments_join.js","../../Masa.Blazor.JS/node_modules/.pnpm/linkify-it@4.0.1/node_modules/linkify-it/lib/re.js","../../Masa.Blazor.JS/node_modules/.pnpm/linkify-it@4.0.1/node_modules/linkify-it/index.js","../../Masa.Blazor.JS/node_modules/.pnpm/punycode@2.3.1/node_modules/punycode/punycode.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/index.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/presets/default.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/presets/zero.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/lib/presets/commonmark.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it@13.0.2/node_modules/markdown-it/index.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it-anchor@8.6.7_@types+markdown-it@14.1.2_markdown-it@13.0.2/node_modules/markdown-it-anchor/dist/markdownItAnchor.mjs","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it-attrs@4.2.0_markdown-it@13.0.2/node_modules/markdown-it-attrs/utils.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it-attrs@4.2.0_markdown-it@13.0.2/node_modules/markdown-it-attrs/patterns.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it-attrs@4.2.0_markdown-it@13.0.2/node_modules/markdown-it-attrs/index.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it-container@3.0.0/node_modules/markdown-it-container/index.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it-front-matter@0.2.4/node_modules/markdown-it-front-matter/index.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it-header-sections@1.0.0/node_modules/markdown-it-header-sections/index.js","../../Masa.Blazor.JS/node_modules/.pnpm/markdown-it-todo@1.0.5/node_modules/markdown-it-todo/index.js","../../Masa.Blazor.JS/src/proxies/markdown-it/highlighter.ts","../../Masa.Blazor.JS/src/proxies/markdown-it/index.ts"],"sourcesContent":["// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, start, max) {\n  var code, level,\n      pos = start,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, start, max) {\n  var code,\n      marker,\n      lines = 0,\n      pos = start,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  [ 'text_join',      require('./rules_core/text_join')      ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\n\nmodule.exports = function text_join(state) {\n  var j, l, tokens, curr, max, last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr]; }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  oldBMarks  = [];\n  oldBSCount = [];\n  oldSCount  = [];\n  oldTShift  = [];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      offset = initial;\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      nextLine = startLine,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[nextLine] + state.tShift[nextLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false;\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ nextLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ nextLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[nextLine];\n    oldSCount = state.sCount[nextLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine];\n    state.sCount[nextLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[nextLine] = oldTShift;\n    state.sCount[nextLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = state.line;\n    itemLines[1] = nextLine;\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i, prevLine,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    prevLine = state.line;\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\");\n        }\n        break;\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched');\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine, endLine) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch1, ch2, origStr, escapedStr, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false;\n  pos++;\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false;\n\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++;\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info   = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};\n","// Process links like https://example.org/\n\n'use strict';\n\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n\n  pos = state.pos;\n  max = state.posMax;\n\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false;\n\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n\n  proto = match[1];\n\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n\n  url = link.url;\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false;\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '');\n\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n\n    token         = state.push('link_open', 'a', 1);\n    token.attrs   = [ [ 'href', fullUrl ] ];\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n\n    token         = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n\n    token         = state.push('link_close', 'a', -1);\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = match[0];\n\n    if (isLinkOpen(token.content))  state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false;\n\n  if (pos + 1 >= max) return false;\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23 /* # */) {\n    match = state.src.slice(pos).match(DIGITAL_RE);\n    if (match) {\n      if (!silent) {\n        code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n\n        token         = state.push('text_special', '', 0);\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        token.markup  = match[0];\n        token.info    = 'entity';\n      }\n      state.pos += match[0].length;\n      return true;\n    }\n  } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token         = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup  = match[0];\n          token.info    = 'entity';\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'linkify',         require('./rules_inline/linkify') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  [ 'fragments_join',  require('./rules_inline/fragments_join') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\"); }\n        break;\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i, prevPos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    prevPos = state.pos;\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\"); }\n          break;\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function fragments_join(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n  opts = opts || {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + '|$)|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + '|$)|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test     = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) return null;\n\n  var m = this.re.schema_at_start.exec(text);\n  if (!m) return null;\n\n  var len = this.testSchemaAt(text, m[2], m[0].length);\n  if (!len) return null;\n\n  this.__schema__     = m[2];\n  this.__index__      = m.index + m[1].length;\n  this.__last_index__ = m.index + m[0].length + len;\n\n  return createMatch(this, 0);\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nmodule.exports = punycode;\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","var e=!1,n={false:\"push\",true:\"unshift\",after:\"push\",before:\"unshift\"},t={isPermalinkSymbol:!0};function r(r,a,i,l){var o;if(!e){var c=\"Using deprecated markdown-it-anchor permalink option, see https://github.com/valeriangalliat/markdown-it-anchor#permalinks\";\"object\"==typeof process&&process&&process.emitWarning?process.emitWarning(c):console.warn(c),e=!0}var s=[Object.assign(new i.Token(\"link_open\",\"a\",1),{attrs:[].concat(a.permalinkClass?[[\"class\",a.permalinkClass]]:[],[[\"href\",a.permalinkHref(r,i)]],Object.entries(a.permalinkAttrs(r,i)))}),Object.assign(new i.Token(\"html_block\",\"\",0),{content:a.permalinkSymbol,meta:t}),new i.Token(\"link_close\",\"a\",-1)];a.permalinkSpace&&i.tokens[l+1].children[n[a.permalinkBefore]](Object.assign(new i.Token(\"text\",\"\",0),{content:\" \"})),(o=i.tokens[l+1].children)[n[a.permalinkBefore]].apply(o,s)}function a(e){return\"#\"+e}function i(e){return{}}var l={class:\"header-anchor\",symbol:\"#\",renderHref:a,renderAttrs:i};function o(e){function n(t){return t=Object.assign({},n.defaults,t),function(n,r,a,i){return e(n,t,r,a,i)}}return n.defaults=Object.assign({},l),n.renderPermalinkImpl=e,n}var c=o(function(e,r,a,i,l){var o,c=[Object.assign(new i.Token(\"link_open\",\"a\",1),{attrs:[].concat(r.class?[[\"class\",r.class]]:[],[[\"href\",r.renderHref(e,i)]],r.ariaHidden?[[\"aria-hidden\",\"true\"]]:[],Object.entries(r.renderAttrs(e,i)))}),Object.assign(new i.Token(\"html_inline\",\"\",0),{content:r.symbol,meta:t}),new i.Token(\"link_close\",\"a\",-1)];if(r.space){var s=\"string\"==typeof r.space?r.space:\" \";i.tokens[l+1].children[n[r.placement]](Object.assign(new i.Token(\"string\"==typeof r.space?\"html_inline\":\"text\",\"\",0),{content:s}))}(o=i.tokens[l+1].children)[n[r.placement]].apply(o,c)});Object.assign(c.defaults,{space:!0,placement:\"after\",ariaHidden:!1});var s=o(c.renderPermalinkImpl);s.defaults=Object.assign({},c.defaults,{ariaHidden:!0});var u=o(function(e,n,t,r,a){var i=[Object.assign(new r.Token(\"link_open\",\"a\",1),{attrs:[].concat(n.class?[[\"class\",n.class]]:[],[[\"href\",n.renderHref(e,r)]],Object.entries(n.renderAttrs(e,r)))})].concat(n.safariReaderFix?[new r.Token(\"span_open\",\"span\",1)]:[],r.tokens[a+1].children,n.safariReaderFix?[new r.Token(\"span_close\",\"span\",-1)]:[],[new r.Token(\"link_close\",\"a\",-1)]);r.tokens[a+1]=Object.assign(new r.Token(\"inline\",\"\",0),{children:i})});Object.assign(u.defaults,{safariReaderFix:!1});var d=o(function(e,r,a,i,l){var o;if(![\"visually-hidden\",\"aria-label\",\"aria-describedby\",\"aria-labelledby\"].includes(r.style))throw new Error(\"`permalink.linkAfterHeader` called with unknown style option `\"+r.style+\"`\");if(![\"aria-describedby\",\"aria-labelledby\"].includes(r.style)&&!r.assistiveText)throw new Error(\"`permalink.linkAfterHeader` called without the `assistiveText` option in `\"+r.style+\"` style\");if(\"visually-hidden\"===r.style&&!r.visuallyHiddenClass)throw new Error(\"`permalink.linkAfterHeader` called without the `visuallyHiddenClass` option in `visually-hidden` style\");var c=i.tokens[l+1].children.filter(function(e){return\"text\"===e.type||\"code_inline\"===e.type}).reduce(function(e,n){return e+n.content},\"\"),s=[],u=[];if(r.class&&u.push([\"class\",r.class]),u.push([\"href\",r.renderHref(e,i)]),u.push.apply(u,Object.entries(r.renderAttrs(e,i))),\"visually-hidden\"===r.style){if(s.push(Object.assign(new i.Token(\"span_open\",\"span\",1),{attrs:[[\"class\",r.visuallyHiddenClass]]}),Object.assign(new i.Token(\"text\",\"\",0),{content:r.assistiveText(c)}),new i.Token(\"span_close\",\"span\",-1)),r.space){var d=\"string\"==typeof r.space?r.space:\" \";s[n[r.placement]](Object.assign(new i.Token(\"string\"==typeof r.space?\"html_inline\":\"text\",\"\",0),{content:d}))}s[n[r.placement]](Object.assign(new i.Token(\"span_open\",\"span\",1),{attrs:[[\"aria-hidden\",\"true\"]]}),Object.assign(new i.Token(\"html_inline\",\"\",0),{content:r.symbol,meta:t}),new i.Token(\"span_close\",\"span\",-1))}else s.push(Object.assign(new i.Token(\"html_inline\",\"\",0),{content:r.symbol,meta:t}));\"aria-label\"===r.style?u.push([\"aria-label\",r.assistiveText(c)]):[\"aria-describedby\",\"aria-labelledby\"].includes(r.style)&&u.push([r.style,e]);var f=[Object.assign(new i.Token(\"link_open\",\"a\",1),{attrs:u})].concat(s,[new i.Token(\"link_close\",\"a\",-1)]);(o=i.tokens).splice.apply(o,[l+3,0].concat(f)),r.wrapper&&(i.tokens.splice(l,0,Object.assign(new i.Token(\"html_block\",\"\",0),{content:r.wrapper[0]+\"\\n\"})),i.tokens.splice(l+3+f.length+1,0,Object.assign(new i.Token(\"html_block\",\"\",0),{content:r.wrapper[1]+\"\\n\"})))});function f(e,n,t,r){var a=e,i=r;if(t&&Object.prototype.hasOwnProperty.call(n,a))throw new Error(\"User defined `id` attribute `\"+e+\"` is not unique. Please fix it in your Markdown to continue.\");for(;Object.prototype.hasOwnProperty.call(n,a);)a=e+\"-\"+i,i+=1;return n[a]=!0,a}function p(e,n){n=Object.assign({},p.defaults,n),e.core.ruler.push(\"anchor\",function(e){for(var t,a={},i=e.tokens,l=Array.isArray(n.level)?(t=n.level,function(e){return t.includes(e)}):function(e){return function(n){return n>=e}}(n.level),o=0;o<i.length;o++){var c=i[o];if(\"heading_open\"===c.type&&l(Number(c.tag.substr(1)))){var s=n.getTokensText(i[o+1].children),u=c.attrGet(\"id\");u=null==u?f(n.slugify(s),a,!1,n.uniqueSlugStartIndex):f(u,a,!0,n.uniqueSlugStartIndex),c.attrSet(\"id\",u),!1!==n.tabIndex&&c.attrSet(\"tabindex\",\"\"+n.tabIndex),\"function\"==typeof n.permalink?n.permalink(u,n,e,o):(n.permalink||n.renderPermalink&&n.renderPermalink!==r)&&n.renderPermalink(u,n,e,o),o=i.indexOf(c),n.callback&&n.callback(c,{slug:u,title:s})}}})}Object.assign(d.defaults,{style:\"visually-hidden\",space:!0,placement:\"after\",wrapper:null}),p.permalink={__proto__:null,legacy:r,renderHref:a,renderAttrs:i,makePermalink:o,linkInsideHeader:c,ariaHidden:s,headerLink:u,linkAfterHeader:d},p.defaults={level:1,slugify:function(e){return encodeURIComponent(String(e).trim().toLowerCase().replace(/\\s+/g,\"-\"))},uniqueSlugStartIndex:1,tabIndex:\"-1\",getTokensText:function(e){return e.filter(function(e){return[\"text\",\"code_inline\"].includes(e.type)}).map(function(e){return e.content}).join(\"\")},permalink:!1,renderPermalink:r,permalinkClass:s.defaults.class,permalinkSpace:s.defaults.space,permalinkSymbol:\"¶\",permalinkBefore:\"before\"===s.defaults.placement,permalinkHref:s.defaults.renderHref,permalinkAttrs:s.defaults.renderAttrs},p.default=p;export{p as default};\n//# sourceMappingURL=markdownItAnchor.mjs.map\n","/**\n * parse {.class #id key=val} strings\n * @param {string} str: string to parse\n * @param {int} start: where to start parsing (including {)\n * @returns {2d array}: [['key', 'val'], ['class', 'red']]\n */\nexports.getAttrs = function (str, start, options) {\n  // not tab, line feed, form feed, space, solidus, greater than sign, quotation mark, apostrophe and equals sign\n  const allowedKeyChars = /[^\\t\\n\\f />\"'=]/;\n  const pairSeparator = ' ';\n  const keySeparator = '=';\n  const classChar = '.';\n  const idChar = '#';\n\n  const attrs = [];\n  let key = '';\n  let value = '';\n  let parsingKey = true;\n  let valueInsideQuotes = false;\n\n  // read inside {}\n  // start + left delimiter length to avoid beginning {\n  // breaks when } is found or end of string\n  for (let i = start + options.leftDelimiter.length; i < str.length; i++) {\n    if (str.slice(i, i + options.rightDelimiter.length) === options.rightDelimiter) {\n      if (key !== '') { attrs.push([key, value]); }\n      break;\n    }\n    const char_ = str.charAt(i);\n\n    // switch to reading value if equal sign\n    if (char_ === keySeparator && parsingKey) {\n      parsingKey = false;\n      continue;\n    }\n\n    // {.class} {..css-module}\n    if (char_ === classChar && key === '') {\n      if (str.charAt(i + 1) === classChar) {\n        key = 'css-module';\n        i += 1;\n      } else {\n        key = 'class';\n      }\n      parsingKey = false;\n      continue;\n    }\n\n    // {#id}\n    if (char_ === idChar && key === '') {\n      key = 'id';\n      parsingKey = false;\n      continue;\n    }\n\n    // {value=\"inside quotes\"}\n    if (char_ === '\"' && value === '' && !valueInsideQuotes) {\n      valueInsideQuotes = true;\n      continue;\n    }\n    if (char_ === '\"' && valueInsideQuotes) {\n      valueInsideQuotes = false;\n      continue;\n    }\n\n    // read next key/value pair\n    if ((char_ === pairSeparator && !valueInsideQuotes)) {\n      if (key === '') {\n        // beginning or ending space: { .red } vs {.red}\n        continue;\n      }\n      attrs.push([key, value]);\n      key = '';\n      value = '';\n      parsingKey = true;\n      continue;\n    }\n\n    // continue if character not allowed\n    if (parsingKey && char_.search(allowedKeyChars) === -1) {\n      continue;\n    }\n\n    // no other conditions met; append to key/value\n    if (parsingKey) {\n      key += char_;\n      continue;\n    }\n    value += char_;\n  }\n\n  if (options.allowedAttributes && options.allowedAttributes.length) {\n    const allowedAttributes = options.allowedAttributes;\n\n    return attrs.filter(function (attrPair) {\n      const attr = attrPair[0];\n\n      function isAllowedAttribute (allowedAttribute) {\n        return (attr === allowedAttribute\n          || (allowedAttribute instanceof RegExp && allowedAttribute.test(attr))\n        );\n      }\n\n      return allowedAttributes.some(isAllowedAttribute);\n    });\n\n  }\n  return attrs;\n\n};\n\n/**\n * add attributes from [['key', 'val']] list\n * @param {array} attrs: [['key', 'val']]\n * @param {token} token: which token to add attributes\n * @returns token\n */\nexports.addAttrs = function (attrs, token) {\n  for (let j = 0, l = attrs.length; j < l; ++j) {\n    const key = attrs[j][0];\n    if (key === 'class') {\n      token.attrJoin('class', attrs[j][1]);\n    } else if (key === 'css-module') {\n      token.attrJoin('css-module', attrs[j][1]);\n    } else {\n      token.attrPush(attrs[j]);\n    }\n  }\n  return token;\n};\n\n/**\n * Does string have properly formatted curly?\n *\n * start: '{.a} asdf'\n * end: 'asdf {.a}'\n * only: '{.a}'\n *\n * @param {string} where to expect {} curly. start, end or only.\n * @return {function(string)} Function which testes if string has curly.\n */\nexports.hasDelimiters = function (where, options) {\n\n  if (!where) {\n    throw new Error('Parameter `where` not passed. Should be \"start\", \"end\" or \"only\".');\n  }\n\n  /**\n   * @param {string} str\n   * @return {boolean}\n   */\n  return function (str) {\n    // we need minimum three chars, for example {b}\n    const minCurlyLength = options.leftDelimiter.length + 1 + options.rightDelimiter.length;\n    if (!str || typeof str !== 'string' || str.length < minCurlyLength) {\n      return false;\n    }\n\n    function validCurlyLength (curly) {\n      const isClass = curly.charAt(options.leftDelimiter.length) === '.';\n      const isId = curly.charAt(options.leftDelimiter.length) === '#';\n      return (isClass || isId)\n        ? curly.length >= (minCurlyLength + 1)\n        : curly.length >= minCurlyLength;\n    }\n\n    let start, end, slice, nextChar;\n    const rightDelimiterMinimumShift = minCurlyLength - options.rightDelimiter.length;\n    switch (where) {\n    case 'start':\n      // first char should be {, } found in char 2 or more\n      slice = str.slice(0, options.leftDelimiter.length);\n      start = slice === options.leftDelimiter ? 0 : -1;\n      end = start === -1 ? -1 : str.indexOf(options.rightDelimiter, rightDelimiterMinimumShift);\n      // check if next character is not one of the delimiters\n      nextChar = str.charAt(end + options.rightDelimiter.length);\n      if (nextChar && options.rightDelimiter.indexOf(nextChar) !== -1) {\n        end = -1;\n      }\n      break;\n\n    case 'end':\n      // last char should be }\n      start = str.lastIndexOf(options.leftDelimiter);\n      end = start === -1 ? -1 : str.indexOf(options.rightDelimiter, start + rightDelimiterMinimumShift);\n      end = end === str.length - options.rightDelimiter.length ? end : -1;\n      break;\n\n    case 'only':\n      // '{.a}'\n      slice = str.slice(0, options.leftDelimiter.length);\n      start = slice === options.leftDelimiter ? 0 : -1;\n      slice = str.slice(str.length - options.rightDelimiter.length);\n      end = slice === options.rightDelimiter ? str.length - options.rightDelimiter.length : -1;\n      break;\n\n    default:\n      throw new Error(`Unexpected case ${where}, expected 'start', 'end' or 'only'`);\n    }\n\n    return start !== -1 && end !== -1 && validCurlyLength(str.substring(start, end + options.rightDelimiter.length));\n  };\n};\n\n/**\n * Removes last curly from string.\n */\nexports.removeDelimiter = function (str, options) {\n  const start = escapeRegExp(options.leftDelimiter);\n  const end = escapeRegExp(options.rightDelimiter);\n\n  const curly = new RegExp(\n    '[ \\\\n]?' + start + '[^' + start + end + ']+' + end + '$'\n  );\n  const pos = str.search(curly);\n\n  return pos !== -1 ? str.slice(0, pos) : str;\n};\n\n/**\n * Escapes special characters in string s such that the string\n * can be used in `new RegExp`. For example \"[\" becomes \"\\\\[\".\n *\n * @param {string} s Regex string.\n * @return {string} Escaped string.\n */\nfunction escapeRegExp (s) {\n  return s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\nexports.escapeRegExp = escapeRegExp;\n\n/**\n * find corresponding opening block\n */\nexports.getMatchingOpeningToken = function (tokens, i) {\n  if (tokens[i].type === 'softbreak') {\n    return false;\n  }\n  // non closing blocks, example img\n  if (tokens[i].nesting === 0) {\n    return tokens[i];\n  }\n\n  const level = tokens[i].level;\n  const type = tokens[i].type.replace('_close', '_open');\n\n  for (; i >= 0; --i) {\n    if (tokens[i].type === type && tokens[i].level === level) {\n      return tokens[i];\n    }\n  }\n\n  return false;\n};\n\n\n/**\n * from https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js\n */\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nexports.escapeHtml = function (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n};\n","'use strict';\n/**\n * If a pattern matches the token stream,\n * then run transform.\n */\n\nconst utils = require('./utils.js');\n\nmodule.exports = options => {\n  const __hr = new RegExp('^ {0,3}[-*_]{3,} ?'\n                          + utils.escapeRegExp(options.leftDelimiter)\n                          + '[^' + utils.escapeRegExp(options.rightDelimiter) + ']');\n\n  return ([\n    {\n      /**\n       * ```python {.cls}\n       * for i in range(10):\n       *     print(i)\n       * ```\n       */\n      name: 'fenced code blocks',\n      tests: [\n        {\n          shift: 0,\n          block: true,\n          info: utils.hasDelimiters('end', options)\n        }\n      ],\n      transform: (tokens, i) => {\n        const token = tokens[i];\n        const start = token.info.lastIndexOf(options.leftDelimiter);\n        const attrs = utils.getAttrs(token.info, start, options);\n        utils.addAttrs(attrs, token);\n        token.info = utils.removeDelimiter(token.info, options);\n      }\n    }, {\n      /**\n       * bla `click()`{.c} ![](img.png){.d}\n       *\n       * differs from 'inline attributes' as it does\n       * not have a closing tag (nesting: -1)\n       */\n      name: 'inline nesting 0',\n      tests: [\n        {\n          shift: 0,\n          type: 'inline',\n          children: [\n            {\n              shift: -1,\n              type: (str) => str === 'image' || str === 'code_inline'\n            }, {\n              shift: 0,\n              type: 'text',\n              content: utils.hasDelimiters('start', options)\n            }\n          ]\n        }\n      ],\n      transform: (tokens, i, j) => {\n        const token = tokens[i].children[j];\n        const endChar = token.content.indexOf(options.rightDelimiter);\n        const attrToken = tokens[i].children[j - 1];\n        const attrs = utils.getAttrs(token.content, 0, options);\n        utils.addAttrs(attrs, attrToken);\n        if (token.content.length === (endChar + options.rightDelimiter.length)) {\n          tokens[i].children.splice(j, 1);\n        } else {\n          token.content = token.content.slice(endChar + options.rightDelimiter.length);\n        }\n      }\n    }, {\n      /**\n       * | h1 |\n       * | -- |\n       * | c1 |\n       *\n       * {.c}\n       */\n      name: 'tables',\n      tests: [\n        {\n          // let this token be i, such that for-loop continues at\n          // next token after tokens.splice\n          shift: 0,\n          type: 'table_close'\n        }, {\n          shift: 1,\n          type: 'paragraph_open'\n        }, {\n          shift: 2,\n          type: 'inline',\n          content: utils.hasDelimiters('only', options)\n        }\n      ],\n      transform: (tokens, i) => {\n        const token = tokens[i + 2];\n        const tableOpen = utils.getMatchingOpeningToken(tokens, i);\n        const attrs = utils.getAttrs(token.content, 0, options);\n        // add attributes\n        utils.addAttrs(attrs, tableOpen);\n        // remove <p>{.c}</p>\n        tokens.splice(i + 1, 3);\n      }\n    }, {\n      /**\n       * *emphasis*{.with attrs=1}\n       */\n      name: 'inline attributes',\n      tests: [\n        {\n          shift: 0,\n          type: 'inline',\n          children: [\n            {\n              shift: -1,\n              nesting: -1  // closing inline tag, </em>{.a}\n            }, {\n              shift: 0,\n              type: 'text',\n              content: utils.hasDelimiters('start', options)\n            }\n          ]\n        }\n      ],\n      transform: (tokens, i, j) => {\n        const token = tokens[i].children[j];\n        const content = token.content;\n        const attrs = utils.getAttrs(content, 0, options);\n        const openingToken = utils.getMatchingOpeningToken(tokens[i].children, j - 1);\n        utils.addAttrs(attrs, openingToken);\n        token.content = content.slice(content.indexOf(options.rightDelimiter) + options.rightDelimiter.length);\n      }\n    }, {\n      /**\n       * - item\n       * {.a}\n       */\n      name: 'list softbreak',\n      tests: [\n        {\n          shift: -2,\n          type: 'list_item_open'\n        }, {\n          shift: 0,\n          type: 'inline',\n          children: [\n            {\n              position: -2,\n              type: 'softbreak'\n            }, {\n              position: -1,\n              type: 'text',\n              content: utils.hasDelimiters('only', options)\n            }\n          ]\n        }\n      ],\n      transform: (tokens, i, j) => {\n        const token = tokens[i].children[j];\n        const content = token.content;\n        const attrs = utils.getAttrs(content, 0, options);\n        let ii = i - 2;\n        while (tokens[ii - 1] &&\n          tokens[ii - 1].type !== 'ordered_list_open' &&\n          tokens[ii - 1].type !== 'bullet_list_open') { ii--; }\n        utils.addAttrs(attrs, tokens[ii - 1]);\n        tokens[i].children = tokens[i].children.slice(0, -2);\n      }\n    }, {\n      /**\n       * - nested list\n       *   - with double \\n\n       *   {.a} <-- apply to nested ul\n       *\n       * {.b} <-- apply to root <ul>\n       */\n      name: 'list double softbreak',\n      tests: [\n        {\n          // let this token be i = 0 so that we can erase\n          // the <p>{.a}</p> tokens below\n          shift: 0,\n          type: (str) =>\n            str === 'bullet_list_close' ||\n            str === 'ordered_list_close'\n        }, {\n          shift: 1,\n          type: 'paragraph_open'\n        }, {\n          shift: 2,\n          type: 'inline',\n          content: utils.hasDelimiters('only', options),\n          children: (arr) => arr.length === 1\n        }, {\n          shift: 3,\n          type: 'paragraph_close'\n        }\n      ],\n      transform: (tokens, i) => {\n        const token = tokens[i + 2];\n        const content = token.content;\n        const attrs = utils.getAttrs(content, 0, options);\n        const openingToken = utils.getMatchingOpeningToken(tokens, i);\n        utils.addAttrs(attrs, openingToken);\n        tokens.splice(i + 1, 3);\n      }\n    }, {\n      /**\n       * - end of {.list-item}\n       */\n      name: 'list item end',\n      tests: [\n        {\n          shift: -2,\n          type: 'list_item_open'\n        }, {\n          shift: 0,\n          type: 'inline',\n          children: [\n            {\n              position: -1,\n              type: 'text',\n              content: utils.hasDelimiters('end', options)\n            }\n          ]\n        }\n      ],\n      transform: (tokens, i, j) => {\n        const token = tokens[i].children[j];\n        const content = token.content;\n        const attrs = utils.getAttrs(content, content.lastIndexOf(options.leftDelimiter), options);\n        utils.addAttrs(attrs, tokens[i - 2]);\n        const trimmed = content.slice(0, content.lastIndexOf(options.leftDelimiter));\n        token.content = last(trimmed) !== ' ' ?\n          trimmed : trimmed.slice(0, -1);\n      }\n    }, {\n      /**\n       * something with softbreak\n       * {.cls}\n       */\n      name: '\\n{.a} softbreak then curly in start',\n      tests: [\n        {\n          shift: 0,\n          type: 'inline',\n          children: [\n            {\n              position: -2,\n              type: 'softbreak'\n            }, {\n              position: -1,\n              type: 'text',\n              content: utils.hasDelimiters('only', options)\n            }\n          ]\n        }\n      ],\n      transform: (tokens, i, j) => {\n        const token = tokens[i].children[j];\n        const attrs = utils.getAttrs(token.content, 0, options);\n        // find last closing tag\n        let ii = i + 1;\n        while (tokens[ii + 1] && tokens[ii + 1].nesting === -1) { ii++; }\n        const openingToken = utils.getMatchingOpeningToken(tokens, ii);\n        utils.addAttrs(attrs, openingToken);\n        tokens[i].children = tokens[i].children.slice(0, -2);\n      }\n    }, {\n      /**\n       * horizontal rule --- {#id}\n       */\n      name: 'horizontal rule',\n      tests: [\n        {\n          shift: 0,\n          type: 'paragraph_open'\n        },\n        {\n          shift: 1,\n          type: 'inline',\n          children: (arr) => arr.length === 1,\n          content: (str) => str.match(__hr) !== null,\n        },\n        {\n          shift: 2,\n          type: 'paragraph_close'\n        }\n      ],\n      transform: (tokens, i) => {\n        const token = tokens[i];\n        token.type = 'hr';\n        token.tag = 'hr';\n        token.nesting = 0;\n        const content = tokens[i + 1].content;\n        const start = content.lastIndexOf(options.leftDelimiter);\n        const attrs = utils.getAttrs(content, start, options);\n        utils.addAttrs(attrs, token);\n        token.markup = content;\n        tokens.splice(i + 1, 2);\n      }\n    }, {\n      /**\n       * end of {.block}\n       */\n      name: 'end of block',\n      tests: [\n        {\n          shift: 0,\n          type: 'inline',\n          children: [\n            {\n              position: -1,\n              content: utils.hasDelimiters('end', options),\n              type: (t) => t !== 'code_inline' && t !== 'math_inline'\n            }\n          ]\n        }\n      ],\n      transform: (tokens, i, j) => {\n        const token = tokens[i].children[j];\n        const content = token.content;\n        const attrs = utils.getAttrs(content, content.lastIndexOf(options.leftDelimiter), options);\n        let ii = i + 1;\n        do if (tokens[ii] && tokens[ii].nesting === -1) { break; } while (ii++ < tokens.length);\n        const openingToken = utils.getMatchingOpeningToken(tokens, ii);\n        utils.addAttrs(attrs, openingToken);\n        const trimmed = content.slice(0, content.lastIndexOf(options.leftDelimiter));\n        token.content = last(trimmed) !== ' ' ?\n          trimmed : trimmed.slice(0, -1);\n      }\n    }\n  ]);\n};\n\n// get last element of array or string\nfunction last(arr) {\n  return arr.slice(-1)[0];\n}\n","'use strict';\n\nconst patternsConfig = require('./patterns.js');\n\nconst defaultOptions = {\n  leftDelimiter: '{',\n  rightDelimiter: '}',\n  allowedAttributes: []\n};\n\nmodule.exports = function attributes(md, options_) {\n  let options = Object.assign({}, defaultOptions);\n  options = Object.assign(options, options_);\n\n  const patterns = patternsConfig(options);\n\n  function curlyAttrs(state) {\n    const tokens = state.tokens;\n\n    for (let i = 0; i < tokens.length; i++) {\n      for (let p = 0; p < patterns.length; p++) {\n        const pattern = patterns[p];\n        let j = null; // position of child with offset 0\n        const match = pattern.tests.every(t => {\n          const res = test(tokens, i, t);\n          if (res.j !== null) { j = res.j; }\n          return res.match;\n        });\n        if (match) {\n          pattern.transform(tokens, i, j);\n          if (pattern.name === 'inline attributes' || pattern.name === 'inline nesting 0') {\n            // retry, may be several inline attributes\n            p--;\n          }\n        }\n      }\n    }\n  }\n\n  md.core.ruler.before('linkify', 'curly_attributes', curlyAttrs);\n};\n\n/**\n * Test if t matches token stream.\n *\n * @param {array} tokens\n * @param {number} i\n * @param {object} t Test to match.\n * @return {object} { match: true|false, j: null|number }\n */\nfunction test(tokens, i, t) {\n  const res = {\n    match: false,\n    j: null  // position of child\n  };\n\n  const ii = t.shift !== undefined\n    ? i + t.shift\n    : t.position;\n\n  if (t.shift !== undefined && ii < 0) {\n    // we should never shift to negative indexes (rolling around to back of array)\n    return res;\n  }\n\n  const token = get(tokens, ii);  // supports negative ii\n\n\n  if (token === undefined) { return res; }\n\n  for (const key of Object.keys(t)) {\n    if (key === 'shift' || key === 'position') { continue; }\n\n    if (token[key] === undefined) { return res; }\n\n    if (key === 'children' && isArrayOfObjects(t.children)) {\n      if (token.children.length === 0) {\n        return res;\n      }\n      let match;\n      const childTests = t.children;\n      const children = token.children;\n      if (childTests.every(tt => tt.position !== undefined)) {\n        // positions instead of shifts, do not loop all children\n        match = childTests.every(tt => test(children, tt.position, tt).match);\n        if (match) {\n          // we may need position of child in transform\n          const j = last(childTests).position;\n          res.j = j >= 0 ? j : children.length + j;\n        }\n      } else {\n        for (let j = 0; j < children.length; j++) {\n          match = childTests.every(tt => test(children, j, tt).match);\n          if (match) {\n            res.j = j;\n            // all tests true, continue with next key of pattern t\n            break;\n          }\n        }\n      }\n\n      if (match === false) { return res; }\n\n      continue;\n    }\n\n    switch (typeof t[key]) {\n    case 'boolean':\n    case 'number':\n    case 'string':\n      if (token[key] !== t[key]) { return res; }\n      break;\n    case 'function':\n      if (!t[key](token[key])) { return res; }\n      break;\n    case 'object':\n      if (isArrayOfFunctions(t[key])) {\n        const r = t[key].every(tt => tt(token[key]));\n        if (r === false) { return res; }\n        break;\n      }\n    // fall through for objects !== arrays of functions\n    default:\n      throw new Error(`Unknown type of pattern test (key: ${key}). Test should be of type boolean, number, string, function or array of functions.`);\n    }\n  }\n\n  // no tests returned false -> all tests returns true\n  res.match = true;\n  return res;\n}\n\nfunction isArrayOfObjects(arr) {\n  return Array.isArray(arr) && arr.length && arr.every(i => typeof i === 'object');\n}\n\nfunction isArrayOfFunctions(arr) {\n  return Array.isArray(arr) && arr.length && arr.every(i => typeof i === 'function');\n}\n\n/**\n * Get n item of array. Supports negative n, where -1 is last\n * element in array.\n * @param {array} arr\n * @param {number} n\n */\nfunction get(arr, n) {\n  return n >= 0 ? arr[n] : arr[arr.length + n];\n}\n\n// get last element of array, safe - returns {} if not found\nfunction last(arr) {\n  return arr.slice(-1)[0] || {};\n}\n","// Process block-level custom containers\n//\n'use strict';\n\n\nmodule.exports = function container_plugin(md, name, options) {\n\n  // Second param may be useful if you decide\n  // to increase minimal allowed marker length\n  function validateDefault(params/*, markup*/) {\n    return params.trim().split(' ', 2)[0] === name;\n  }\n\n  function renderDefault(tokens, idx, _options, env, slf) {\n\n    // add a class to the opening tag\n    if (tokens[idx].nesting === 1) {\n      tokens[idx].attrJoin('class', name);\n    }\n\n    return slf.renderToken(tokens, idx, _options, env, slf);\n  }\n\n  options = options || {};\n\n  var min_markers = 3,\n      marker_str  = options.marker || ':',\n      marker_char = marker_str.charCodeAt(0),\n      marker_len  = marker_str.length,\n      validate    = options.validate || validateDefault,\n      render      = options.render || renderDefault;\n\n  function container(state, startLine, endLine, silent) {\n    var pos, nextLine, marker_count, markup, params, token,\n        old_parent, old_line_max,\n        auto_closed = false,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // Check out the first character quickly,\n    // this should filter out most of non-containers\n    //\n    if (marker_char !== state.src.charCodeAt(start)) { return false; }\n\n    // Check out the rest of the marker string\n    //\n    for (pos = start + 1; pos <= max; pos++) {\n      if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n        break;\n      }\n    }\n\n    marker_count = Math.floor((pos - start) / marker_len);\n    if (marker_count < min_markers) { return false; }\n    pos -= (pos - start) % marker_len;\n\n    markup = state.src.slice(start, pos);\n    params = state.src.slice(pos, max);\n    if (!validate(params, markup)) { return false; }\n\n    // Since start is found, we can report success here in validation mode\n    //\n    if (silent) { return true; }\n\n    // Search for the end of the block\n    //\n    nextLine = startLine;\n\n    for (;;) {\n      nextLine++;\n      if (nextLine >= endLine) {\n        // unclosed block should be autoclosed by end of document.\n        // also block seems to be autoclosed by end of parent\n        break;\n      }\n\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (start < max && state.sCount[nextLine] < state.blkIndent) {\n        // non-empty line with negative indent should stop the list:\n        // - ```\n        //  test\n        break;\n      }\n\n      if (marker_char !== state.src.charCodeAt(start)) { continue; }\n\n      if (state.sCount[nextLine] - state.blkIndent >= 4) {\n        // closing fence should be indented less than 4 spaces\n        continue;\n      }\n\n      for (pos = start + 1; pos <= max; pos++) {\n        if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n          break;\n        }\n      }\n\n      // closing code fence must be at least as long as the opening one\n      if (Math.floor((pos - start) / marker_len) < marker_count) { continue; }\n\n      // make sure tail has spaces only\n      pos -= (pos - start) % marker_len;\n      pos = state.skipSpaces(pos);\n\n      if (pos < max) { continue; }\n\n      // found!\n      auto_closed = true;\n      break;\n    }\n\n    old_parent = state.parentType;\n    old_line_max = state.lineMax;\n    state.parentType = 'container';\n\n    // this will prevent lazy continuations from ever going past our end marker\n    state.lineMax = nextLine;\n\n    token        = state.push('container_' + name + '_open', 'div', 1);\n    token.markup = markup;\n    token.block  = true;\n    token.info   = params;\n    token.map    = [ startLine, nextLine ];\n\n    state.md.block.tokenize(state, startLine + 1, nextLine);\n\n    token        = state.push('container_' + name + '_close', 'div', -1);\n    token.markup = state.src.slice(start, pos);\n    token.block  = true;\n\n    state.parentType = old_parent;\n    state.lineMax = old_line_max;\n    state.line = nextLine + (auto_closed ? 1 : 0);\n\n    return true;\n  }\n\n  md.block.ruler.before('fence', 'container_' + name, container, {\n    alt: [ 'paragraph', 'reference', 'blockquote', 'list' ]\n  });\n  md.renderer.rules['container_' + name + '_open'] = render;\n  md.renderer.rules['container_' + name + '_close'] = render;\n};\n","// Process front matter and pass to cb\n'use strict';\n\nmodule.exports = function front_matter_plugin(md, cb) {\n  var min_markers = 3,\n      marker_str  = '-',\n      marker_char = marker_str.charCodeAt(0),\n      marker_len  = marker_str.length;\n\n  function frontMatter(state, startLine, endLine, silent) {\n    var pos,\n        nextLine,\n        marker_count,\n        token,\n        old_parent,\n        old_line_max,\n        start_content,\n        auto_closed = false,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // Check out the first character of the first line quickly,\n    // this should filter out non-front matter\n    if (startLine !== 0 || marker_char !== state.src.charCodeAt(0)) {\n      return false;\n    }\n\n    // Check out the rest of the marker string\n    // while pos <= 3\n    for (pos = start + 1; pos <= max; pos++) {\n      if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n        start_content = pos + 1;\n        break;\n      }\n    }\n\n    marker_count = Math.floor((pos - start) / marker_len);\n\n    if (marker_count < min_markers) {\n      return false;\n    }\n    pos -= (pos - start) % marker_len;\n\n    // Since start is found, we can report success here in validation mode\n    if (silent) {\n      return true;\n    }\n\n    // Search for the end of the block\n    nextLine = startLine;\n\n    for (;;) {\n      nextLine++;\n      if (nextLine >= endLine) {\n        // unclosed block should be autoclosed by end of document.\n        // also block seems to be autoclosed by end of parent\n        break;\n      }\n\n      if (state.src.slice(start, max) === '...') {\n        break;\n      }\n\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (start < max && state.sCount[nextLine] < state.blkIndent) {\n        // non-empty line with negative indent should stop the list:\n        // - ```\n        //  test\n        break;\n      }\n\n      if (marker_char !== state.src.charCodeAt(start)) {\n        continue;\n      }\n\n      if (state.sCount[nextLine] - state.blkIndent >= 4) {\n        // closing fence should be indented less than 4 spaces\n        continue;\n      }\n\n      for (pos = start + 1; pos <= max; pos++) {\n        if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n          break;\n        }\n      }\n\n      // closing code fence must be at least as long as the opening one\n      if (Math.floor((pos - start) / marker_len) < marker_count) {\n        continue;\n      }\n\n      // make sure tail has spaces only\n      pos -= (pos - start) % marker_len;\n      pos = state.skipSpaces(pos);\n\n      if (pos < max) {\n        continue;\n      }\n\n      // found!\n      auto_closed = true;\n      break;\n    }\n\n    old_parent = state.parentType;\n    old_line_max = state.lineMax;\n    state.parentType = 'container';\n\n    // this will prevent lazy continuations from ever going past our end marker\n    state.lineMax = nextLine;\n\n    token        = state.push('front_matter', null, 0);\n    token.hidden = true;\n    token.markup = state.src.slice(startLine, pos);\n    token.block  = true;\n    token.map    = [ startLine, nextLine + (auto_closed ? 1 : 0) ];\n    token.meta   = state.src.slice(start_content, start - 1);\n\n    state.parentType = old_parent;\n    state.lineMax = old_line_max;\n    state.line = nextLine + (auto_closed ? 1 : 0);\n\n    cb(token.meta);\n\n    return true;\n  }\n\n  md.block.ruler.before(\n    'table',\n    'front_matter',\n    frontMatter,\n    {\n      alt: [\n        'paragraph',\n        'reference',\n        'blockquote',\n        'list' \n      ]\n    }\n  );\n};\n","\nmodule.exports = function headerSections(md) {\n\n  function addSections(state) {\n    var tokens = [];  // output\n    var Token = state.Token;\n    var sections = [];\n    var nestedLevel = 0;\n\n    function openSection(attrs) {\n      var t = new Token('section_open', 'section', 1);\n      t.block = true;\n      t.attrs = attrs && attrs.map(function (attr) { return [attr[0], attr[1]] });  // copy\n      return t;\n    }\n\n    function closeSection() {\n      var t = new Token('section_close', 'section', -1);\n      t.block = true;\n      return t;\n    }\n\n    function closeSections(section) {\n      while (last(sections) && section.header <= last(sections).header) {\n        sections.pop();\n        tokens.push(closeSection());\n      }\n    }\n\n    function closeSectionsToCurrentNesting(nesting) {\n      while (last(sections) && nesting < last(sections).nesting) {\n        sections.pop();\n        tokens.push(closeSection());\n      }\n    }\n\n    function closeAllSections() {\n      while (sections.pop()) {\n        tokens.push(closeSection());\n      }\n    }\n\n    for (var i = 0, l = state.tokens.length; i < l; i++) {\n      var token = state.tokens[i];\n\n      // record level of nesting\n      if (token.type.search('heading') !== 0) {\n        nestedLevel += token.nesting;\n      }\n      if (last(sections) && nestedLevel < last(sections).nesting) {\n        closeSectionsToCurrentNesting(nestedLevel);\n      }\n\n      // add sections before headers\n      if (token.type == 'heading_open') {\n        var section = {\n          header: headingLevel(token.tag),\n          nesting: nestedLevel\n        };\n        if (last(sections) && section.header <= last(sections).header) {\n          closeSections(section);\n        }\n        tokens.push(openSection(token.attrs));\n        if (token.attrIndex('id') !== -1) {\n          // remove ID from token\n          token.attrs.splice(token.attrIndex('id'), 1);\n        }\n        sections.push(section);\n      }\n\n      tokens.push(token);\n    }  // end for every token\n    closeAllSections();\n\n    state.tokens = tokens;\n  }\n\n  md.core.ruler.push('header_sections', addSections);\n\n};\n\nfunction headingLevel(header) {\n  return parseInt(header.charAt(1));\n}\n\nfunction last(arr) {\n  return arr.slice(-1)[0];\n}\n","'use strict'\n\nconst isInline = token => token && token.type === 'inline'\nconst isParagraph = token => token && token.type === 'paragraph_open'\nconst isListItem = token => token && token.type === 'list_item_open'\nconst startsWithTodoMarkdown = token => token && /^\\[([ Xx])]/.test(token.content)\n\nfunction isTodoItem(tokens, index) {\n  return isInline(tokens[index]) &&\n    isParagraph(tokens[index - 1]) &&\n    isListItem(tokens[index - 2]) &&\n    startsWithTodoMarkdown(tokens[index])\n}\n\nfunction setAttr(token, name, value) {\n  const index = token.attrIndex(name)\n  const attr = [name, value]\n\n  if (index < 0) {\n    token.attrPush(attr)\n  } else {\n    token.attrs[index] = attr\n  }\n}\n\nfunction parentToken(tokens, index) {\n  const targetLevel = tokens[index].level - 1\n  for (let i = index - 1; i >= 0; i--) {\n    if (tokens[i].level === targetLevel) {\n      return i\n    }\n  }\n\n  return -1\n}\n\nfunction todoify(token, TokenConstructor) {\n  token.children.unshift(createTodoItem(token, TokenConstructor))\n\n  const sliceIndex = '[ ]'.length\n  token.content = token.content.slice(sliceIndex)\n  token.children[1].content = token.children[1].content.slice(sliceIndex)\n}\n\nfunction createTodoItem(token, TokenConstructor) {\n  const todo = new TokenConstructor('html_inline', '', 0)\n  if (/^\\[ ]/.test(token.content)) {\n    todo.content = '<input disabled=\"true\" type=\"checkbox\" class=\"markdown-todo\"></input>'\n  } else if (/^\\[(x|X)]/.test(token.content)) {\n    todo.content = '<input disabled=\"true\" type=\"checkbox\" checked=\"true\" class=\"markdown-todo\"></input>'\n  }\n\n  return todo\n}\n\nmodule.exports = md => {\n  md.core.ruler.after('inline', 'evernote-todo', state => {\n    const tokens = state.tokens\n    for (let i = 0; i < tokens.length; i++) {\n      if (isTodoItem(tokens, i)) {\n        todoify(tokens[i], state.Token)\n        setAttr(tokens[i - 2], 'class', 'task-list-item')\n        setAttr(tokens[parentToken(tokens, i - 2)], 'class', 'task-list')\n      }\n    }\n  })\n}\n","declare const Prism: Prism;\r\ndeclare const hljs: hljs;\r\n\r\nfunction getHighlighter() {\r\n  try {\r\n    if (Prism) {\r\n      return {\r\n        getLanguage(lang: string) {\r\n          return Prism.languages[lang];\r\n        },\r\n        highlight(code: string, lang: string) {\r\n          return Prism.highlight(code, Prism.languages[lang], lang);\r\n        },\r\n      };\r\n    }\r\n  } catch (error) {}\r\n\r\n  try {\r\n    if (hljs) {\r\n      return {\r\n        getLanguage(lang: string) {\r\n          return hljs.getLanguage(lang);\r\n        },\r\n        highlight(code: string, lang: string) {\r\n          return hljs.highlight(code, { language: lang }).value;\r\n        },\r\n      };\r\n    }\r\n  } catch (error) {}\r\n\r\n  return undefined;\r\n}\r\n\r\nexport function highlight(code: string, lang: string) {\r\n  const highlighter = getHighlighter();\r\n\r\n  if (highlighter) {\r\n    if (lang && lang.trim()) {\r\n      lang = getLangCodeFromExtension(lang.toLowerCase());\r\n\r\n      if (highlighter.getLanguage(lang)) {\r\n        try {\r\n          return highlighter.highlight(code, lang);\r\n        } catch (error) {\r\n        console.error(\r\n          `Syntax highlight for language ${lang} failed.`\r\n        );\r\n        }\r\n      } else {\r\n        console.warn(\r\n          `[markdown-it-proxy] Syntax highlight for language \"${lang}\" is not supported.`\r\n        );\r\n      }\r\n    }\r\n  } else {\r\n    console.warn(\r\n      `Highlighter(Prismjs or Highlight.js) is required!`\r\n    );\r\n  }\r\n\r\n  return encodeHTML(code);\r\n}\r\n\r\nexport function highlightToStream(str: string, lang: string): ArrayBuffer {\r\n  var htmlCode = highlight(str, lang);\r\n  return new TextEncoder().encode(htmlCode);\r\n}\r\n\r\nfunction getLangCodeFromExtension(extension) {\r\n  const extensionMap = {\r\n    cs: \"csharp\",\r\n    md: \"markdown\",\r\n    ts: \"typescript\",\r\n    py: \"python\",\r\n    razor: \"cshtml\",\r\n    sh: \"bash\",\r\n    yml: \"yaml\",\r\n  };\r\n\r\n  return extensionMap[extension] || extension;\r\n}\r\n\r\nfunction encodeHTML(rawStr: string) {\r\n  return rawStr.replace(/[\\u00A0-\\u9999<>\\&]/g, function(i) {\r\n    return '&#'+i.charCodeAt(0)+';';\r\n  });\r\n}\r\n","import MarkdownIt from \"markdown-it\";\r\nimport markdownItAnchor from \"markdown-it-anchor\";\r\nimport markdownItAttrs from \"markdown-it-attrs\";\r\nimport markdownItContainer from \"markdown-it-container\";\r\nimport markdownItFrontMatter from \"markdown-it-front-matter\";\r\nimport markdownItHeaderSections from \"markdown-it-header-sections\";\r\nimport markdownItTodo from \"markdown-it-todo\";\r\n\r\nimport { highlight, highlightToStream } from \"./highlighter\";\r\n\r\nexport type MarkdownParser = {\r\n  md: MarkdownIt;\r\n  scope?: string;\r\n  useContainer: (name: string) => void;\r\n  defaultSlugify: (s: string) => string;\r\n  afterRenderCallbacks: (() => void)[];\r\n  frontMatter: {\r\n    meta?: string;\r\n    cb: (s: string) => void;\r\n  };\r\n  toc: {\r\n    contents: any;\r\n    cb: (tocMarkdown, tocArray, tocHtml) => void;\r\n  };\r\n};\r\n\r\nfunction create(\r\n  options: MarkdownIt.Options = {},\r\n  enableHeaderSections: boolean = false,\r\n  anchorOptions = null,\r\n  scope: string = null\r\n) {\r\n  options = { ...options, highlight };\r\n\r\n  const parser = {\r\n    scope,\r\n    defaultSlugify: hashString,\r\n    afterRenderCallbacks: [],\r\n    frontMatter: {},\r\n    toc: {},\r\n  } as MarkdownParser;\r\n\r\n  parser.frontMatter.meta = undefined;\r\n  parser.frontMatter.cb = (s) => {\r\n    parser.frontMatter.meta = s;\r\n  };\r\n\r\n  parser.toc.contents = [];\r\n  parser.toc.cb = (_, array) => {\r\n    parser.toc.contents = array;\r\n  };\r\n\r\n  const md: MarkdownIt = new MarkdownIt(options)\r\n    .use(markdownItAttrs)\r\n    .use(markdownItTodo)\r\n    .use(markdownItFrontMatter, parser.frontMatter.cb);\r\n\r\n  parser.md = md;\r\n  parser.useContainer = (name) => md.use(markdownItContainer, name);\r\n\r\n  // anchor and toc\r\n  {\r\n    let slugify = parser.defaultSlugify;\r\n\r\n    md.use(markdownItAnchor, {\r\n      level: anchorOptions?.level ?? 1,\r\n      permalink: anchorOptions?.permalink,\r\n      permalinkSymbol: anchorOptions?.permalinkSymbol,\r\n      permalinkClass: anchorOptions?.permalinkClass,\r\n      slugify,\r\n      callback: (_token, info) => {\r\n        parser.toc.contents.push({\r\n          content: info.title,\r\n          anchor: info.slug,\r\n          level: _token.markup.length,\r\n          attrs: Object.fromEntries(_token.attrs)\r\n        });\r\n      },\r\n    });\r\n  }\r\n\r\n  if (enableHeaderSections) {\r\n    md.use(markdownItHeaderSections);\r\n  }\r\n\r\n  if (window.MasaBlazor && window.MasaBlazor.extendMarkdownIt) {\r\n    window.MasaBlazor.extendMarkdownIt(parser);\r\n  }\r\n\r\n  return parser;\r\n}\r\n\r\nfunction parse(parser: MarkdownParser, src: string) {\r\n  const { markup } = parseAll(parser, src);\r\n  return markup;\r\n}\r\n\r\nfunction parseAll(parser: MarkdownParser, src: string) {\r\n  if (parser) {\r\n    parser.frontMatter.meta = undefined;\r\n    parser.toc.contents = [];\r\n\r\n    try {\r\n      const markup = parser.md.render(src);\r\n\r\n      return {\r\n        frontMatter: parser.frontMatter.meta,\r\n        markup: markup,\r\n        toc: parser.toc.contents,\r\n      };\r\n    } catch (error) {\r\n      console.log(\"markdown-it-proxy error:\", error);\r\n    }\r\n  }\r\n\r\n  return {};\r\n}\r\n\r\nfunction afterRender(parser: MarkdownParser) {\r\n  if (parser.afterRenderCallbacks) {\r\n    while (parser.afterRenderCallbacks.length > 0) {\r\n      const cb = parser.afterRenderCallbacks.shift();\r\n      cb && cb();\r\n    }\r\n  }\r\n}\r\n\r\nfunction hashString(str: string) {\r\n  let slug = String(str)\r\n    .trim()\r\n    .toLowerCase()\r\n    .replace(/[\\s,.[\\]{}()/]+/g, \"-\")\r\n    .replace(/[^a-z0-9 -]/g, (c) => c.charCodeAt(0).toString(16))\r\n    .replace(/-{2,}/g, \"-\")\r\n    .replace(/^-*|-*$/g, \"\");\r\n\r\n  if (slug.charAt(0).match(/[^a-z]/g)) {\r\n    slug = \"section-\" + slug;\r\n  }\r\n\r\n  return encodeURIComponent(slug);\r\n}\r\n\r\nexport { create, parse, parseAll, afterRender, highlight, highlightToStream };\r\n"],"names":["exports","require$$0","regex","encodeCache","encode","string","exclude","keepEscaped","i","l","code","nextCode","cache","result","defaultChars","ch","String","fromCharCode","test","push","toString","toUpperCase","slice","length","charCodeAt","getEncodeCache","encodeURIComponent","componentChars","encode_1","decodeCache","decode","getDecodeCache","replace","seq","b1","b2","b3","b4","chr","parseInt","decode_1","Url","this","protocol","slashes","auth","port","hostname","hash","search","pathname","protocolPattern","portPattern","simplePathPattern","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","javascript","slashedProtocol","http","https","ftp","gopher","file","prototype","parse","url","slashesDenoteHost","lowerProto","hec","rest","trim","split","simplePath","exec","proto","toLowerCase","substr","match","atSign","hostEnd","indexOf","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","validParts","notHost","bit","unshift","join","qm","u","mdurl","require$$1","format","require$$3","uc_micro","Any","Cc","Cf","P","Z","require$$4","_hasOwnProperty","Object","hasOwnProperty","has","object","key","call","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","RegExp","source","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","require$$2","ucmicro","assign","obj","Array","arguments","forEach","TypeError","keys","isString","_class","unescapeMd","str","unescapeAll","escaped","entity","name","replaceEntityPattern","escapeHtml","arrayReplaceAt","src","pos","newElements","isSpace","isWhiteSpace","isMdAsciiPunct","isPunctChar","escapeRE","normalizeReference","helpers","parseLinkLabel","state","start","disableNested","level","found","marker","prevPos","labelEnd","max","posMax","oldPos","md","inline","skipToken","parseLinkDestination","ok","lines","parseLinkTitle","default_rules","Renderer","rules","code_inline","tokens","idx","options","env","slf","token","renderAttrs","content","code_block","fence","highlighted","arr","tmpAttrs","tmpToken","info","langName","langAttrs","highlight","attrIndex","attrs","langPrefix","image","renderInlineAsText","children","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","nextToken","needLf","hidden","block","nesting","tag","type","renderInline","len","render","renderer","Ruler","__rules__","__cache__","__find__","__compile__","self","chains","rule","enabled","alt","altName","chain","fn","at","index","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","isArray","enableOnly","disable","getRules","chainName","ruler","NEWLINES_RE","NULL_RE","isLinkClose","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","t","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","lastIndex","single","quotes","Token","map","markup","meta","attrPush","attrData","attrSet","value","attrGet","attrJoin","StateCore","inlineMode","state_core","_rules","tok","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","linkify","pretest","normalizeLink","validateLink","schema","normalizeLinkText","blkIdx","typographer","curr","last","Core","process","State","require$$8","parser_core","getLine","line","bMarks","tShift","eMarks","escapedSplit","isEscaped","current","substring","skipBulletListMarker","startLine","skipOrderedListMarker","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","html_re","block_names","HTML_SEQUENCES","StateBlock","s","indent","offset","indent_found","sCount","bsCount","blkIndent","lineMax","tight","ddIndent","listIndent","parentType","isEmpty","skipEmptyLines","from","skipSpaces","skipSpacesBack","min","skipChars","skipCharsBack","getLines","begin","end","keepLastLF","lineIndent","first","queue","lineStart","state_block","endLine","silent","lineText","nextLine","columns","columnCount","aligns","tableLines","tbodyLines","oldParentType","terminate","terminatorRules","firstCh","secondCh","shift","pop","params","mem","haveEndMarker","adjustTab","initial","lastLineEmpty","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","tokenize","cnt","contentStart","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","Number","Math","markTightParagraphs","_endLine","destEndPos","destEndLineNo","href","label","res","title","references","html","tmp","ParserBlock","prevLine","hasEmptyLines","maxNesting","outTokens","require$$12","parser_block","isTerminatorChar","SCHEME_RE","ESCAPED","postProcess","delimiters","startDelim","endDelim","loneMarkers","strikethrough","scanned","scanDelims","open","can_open","close","can_close","tokens_meta","isStrong","emphasis","EMAIL_RE","AUTOLINK_RE","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","StateInline","pending","pendingLevel","_prev_delimiters","backticks","backticksScanned","linkLevel","pushPending","token_meta","canSplitWord","count","left_flanking","right_flanking","state_inline","link","matchAtStart","pmax","ws","ch1","ch2","origStr","escapedStr","matchStart","matchEnd","openerLength","closerLength","require$$6","require$$7","labelStart","ref","parseReference","lc","isLetter","_rules2","ParserInline","ruler2","require$$15","parser_inline","re","opts","src_Any","src_Cc","src_Z","src_P","src_ZPCc","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","tail","no_http","mailto","tlds_default","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","isRegExp","createValidator","normalize","alias","slist","filter","schema_test","schema_search","schema_at_start","__index__","__text_cache__","resetScanCache","Match","__last_index__","__schema__","raw","createMatch","LinkifyIt","schemas","reduce","acc","add","definition","set","m","ml","me","next","tld_pos","testSchemaAt","keepOld","sort","el","reverse","linkifyIt","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","floor","stringFromCharCode","error","RangeError","mapDomain","domain","callback","parts","encoded","array","ucs2decode","output","counter","extra","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","input","inputLength","n","bias","basic","oldi","w","codePoint","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","utils","ParserCore","require$$5","punycode","version","ucs2","codePoints","toASCII","toUnicode","config","default","components","core","zero","rules2","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","er","MarkdownIt","presetName","configure","presets","missed","use","plugin","args","apply","parseInline","e","false","true","isPermalinkSymbol","a","o","emitWarning","console","warn","permalinkClass","permalinkHref","entries","permalinkAttrs","permalinkSymbol","permalinkSpace","permalinkBefore","class","symbol","renderHref","defaults","renderPermalinkImpl","ariaHidden","space","placement","safariReaderFix","d","includes","style","assistiveText","visuallyHiddenClass","f","wrapper","p","getTokensText","slugify","uniqueSlugStartIndex","tabIndex","permalink","renderPermalink","slug","__proto__","legacy","makePermalink","linkInsideHeader","headerLink","linkAfterHeader","escapeRegExp","getAttrs","allowedKeyChars","parsingKey","valueInsideQuotes","leftDelimiter","rightDelimiter","char_","charAt","allowedAttributes","attrPair","attr","some","allowedAttribute","addAttrs","hasDelimiters","where","minCurlyLength","rightDelimiterMinimumShift","curly","isClass","isId","validCurlyLength","removeDelimiter","getMatchingOpeningToken","patternsConfig","__hr","tests","transform","endChar","attrToken","tableOpen","openingToken","position","ii","trimmed","markdownItAttrs","options_","patterns","pattern","every","undefined","get","childTests","tt","isArrayOfFunctions","markdownItContainer","marker_str","marker_char","marker_len","_options","marker_count","old_parent","old_line_max","auto_closed","markdownItFrontMatter","cb","start_content","markdownItHeaderSections","header","sections","nestedLevel","openSection","closeSection","closeSections","section","closeSectionsToCurrentNesting","closeAllSections","isTodoItem","isInline","isParagraph","isListItem","startsWithTodoMarkdown","setAttr","parentToken","targetLevel","todoify","TokenConstructor","todo","createTodoItem","markdownItTodo","lang","highlighter","Prism","getLanguage","languages","hljs","language","getHighlighter","extension","cs","ts","py","razor","sh","yml","highlightToStream","htmlCode","TextEncoder","create","enableHeaderSections","anchorOptions","scope","parser","defaultSlugify","hashString","afterRenderCallbacks","frontMatter","toc","contents","_","useContainer","markdownItAnchor","_a","_token","anchor","fromEntries","window","MasaBlazor","extendMarkdownIt","parseAll","log","afterRender"],"mappings":"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"}