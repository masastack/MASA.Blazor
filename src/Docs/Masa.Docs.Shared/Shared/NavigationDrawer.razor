@using System.Text;
@inject AppService AppService
@inject DocService DocService
@inject MasaBlazor MasaBlazor

<MNavigationDrawer Value="Value"
                   ValueChanged="ValueChanged"
                   Id="nav-drawer"
                   Right="RTL"
                   App
                   Floating
                   Width="300">
    <PrependContent>
        @if (MasaBlazor.Breakpoint.LgAndUp)
        {
            <DefaultDrawerPrepend />
        }
    </PrependContent>
    <ChildContent>
        <DefaultList Linkage Items="Navs" />
        <div class=pt-12></div>
    </ChildContent>
</MNavigationDrawer>


@code {

    [Parameter]
    public bool RTL { get; set; }

    [CascadingParameter]
    public CultureInfo Culture { get; set; } = null!;

    [CascadingParameter(Name = "project")]
    public string? Project { get; set; }

    [Parameter]
    public bool Value { get; set; }

    [Parameter]
    public EventCallback<bool> ValueChanged { get; set; }

    private string? _lastProject;
    private List<NavItem> Navs { get; set; } = new();

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        if (_lastProject != Project)
        {
            _lastProject = Project;
            if (Project is null)
            {
                Navs = new();
                return;
            }

            Navs = await DocService.ReadNavsAsync(Project);
            SetHref(Navs, rootSegment: Project);
        }
    }

    private void SetHref(List<NavItem> navItems, string? segment = null, string? rootSegment = null)
    {
        foreach (var navItem in navItems)
        {
            if (((IDefaultItem<NavItem>)navItem).HasChildren())
            {
                SetHref(navItem.Children!, navItem.Segment, rootSegment);
            }
            else
            {
                navItem.Href = $"{rootSegment}/{segment}/{navItem.Segment}";
            }
        }
    }

}
