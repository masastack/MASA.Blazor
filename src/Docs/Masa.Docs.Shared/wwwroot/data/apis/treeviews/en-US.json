{
  "props": {
    "activatable": "Allows user to mark a node as active by clicking on it",
    "active": "Syncable prop that allows one to control which nodes are active. The array consists of the `ItemKey` of each active item.",
    "dense": "Decreases the height of the items",
    "expandIcon": "Icon used to indicate that a node can be expanded",
    "filter": "Custom item filtering function. By default it will use case-insensitive search in item's label.",
    "hoverable": "Applies a hover class when mousing over nodes",
    "indeterminateIcon": "Icon used when node is in an indeterminate state. Only visible when `Selectable` is true.",
    "itemChildren": "Property on supplied `Items` that contains its children",
    "itemDisabled": "Property on supplied `Items` that contains the disabled state of the item",
    "itemKey": "Property on supplied `Items` used to keep track of node state. The value of this property has to be unique among all items.",
    "items": "An array of items used to build the treeview",
    "itemText": "Property on supplied `Items` that contains its label text",
    "loadChildren": "A function used when dynamically loading children. If this prop is set, then the supplied function will be run if expanding an item that has a `itemChildren` property that is an empty array. Supports returning a Promise.",
    "loadingIcon": "Icon used when node is in a loading state",
    "mandatoryActive": "",
    "multipleActive": "When true, allows user to have multiple active nodes at the same time",
    "offIcon": "Icon used when node is not selected. Only visible when `Selectable` is true.",
    "onIcon": "Icon used when leaf node is selected or when a branch node is fully selected. Only visible when `Selectable` is true.",
    "open": "Syncable prop that allows one to control which nodes are open. The array consists of the `ItemKey` of each open item.",
    "openAll": "When true will cause all branch nodes to be opened when component is mounted",
    "openOnClick": "When true will cause nodes to be opened by clicking anywhere on it, instead of only opening by clicking on expand icon. When using this prop with `Activatable` you will be unable to mark nodes with children as active.",
    "rounded": "Provides an alternative active style for `MTreeview` node. Only visible when `Activatable` is true and should not be used in conjunction with the `Shaped` prop.",
    "search": "The search model for filtering results",
    "selectable": "Will render a checkbox next to each node allowing them to be selected",
    "selectedColor": "The color of the selection checkbox",
    "selectionType": "Controls how the treeview selects nodes. There are two modes available: 'leaf' and 'independent'",
    "shaped": "Provides an alternative active style for `MTreeview` node. Only visible when `Activatable` is true and should not be used in conjunction with the `Rounded` prop.",
    "transition": "Applies a transition when nodes are opened and closed",
    "value": "Allows one to control which nodes are selected. The array consists of the `ItemKey` of each selected item. Is used with @input event to allow for @bind-value binding."
  },
  "events": {
    "activeChanged": "",
    "onActiveUpdate": "Emits the array of active items when this value changes",
    "onInput": "Emits the array of selected items when this value changes",
    "onOpenUpdate": "Emits the array of open items when this value changes",
    "openChanged": ""
  },
  "contents": {
    "labelContent": "Label content",
    "prependContent": "Prepends content before label"
  }
}