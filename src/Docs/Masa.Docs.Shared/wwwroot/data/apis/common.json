{
  "en-US": {
    "props": {
      "id": "Html document id.",
      "class": "Html document class.",
      "color": "Applies specified color to the control - it can be the name of material color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). You can find a list of built-in classes on the [colors page](/styles-and-animations/colors).",
      "dark": "Applies the dark theme variant to the component. You can find more information on the Material Design documentation for [dark themes](https://material.io/design/color/dark-theme.html).",
      "elevation": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles-and-animations/elevation).",
      "height": "Sets the height for the component.",
      "light": "Applies the light theme variant to the component.",
      "maxHeight": "Sets the maximum height for the component.",
      "maxWidth": "Sets the maximum width for the component.",
      "minHeight": "Sets the minimum height for the component.",
      "minWidth": "Sets the minimum width for the component.",
      "rounded": "Designates the `border-radius` applied to the component. You can find more information on the [Border Radius](/styles-and-animations/border-radius) page.",
      "style": "Html document style",
      "width": "Sets the width for the component.",
      "size": "Sets the height and width of the component.",
      "bottom": "Aligns the component towards the bottom.",
      "tile": "Removes the component’s `border-radius`.",
      "left": "Aligns components to the left.",
      "right": "Aligns components to the right.",
      "icon": "Designates a specific icon.",
      "iconColor": "Designates a specific icon color.",
      "outlined": "Removes elevation (box-shadow) and adds a thin border.",
      "tag": "Specify a custom tag used on the root element.",
      "app": "Designates the component as part of the application layout. Used for dynamically adjusting content sizing. Components using this prop should reside **outside** of [MMain](/components/mains) component to function properly. You can find more information about layouts on the [MApplication](/components/applications). Note: this prop automatically applies **position: fixed** to the layout element. You can overwrite this functionality by using the absolute prop",
      "absolute": "Applies position: absolute to the component.",
      "dense": "Reduces the height of the toolbar content to 48px (96px when using the `Prominent` prop).",
      "elevateOnScroll": "Elevates the [MAppbar](/components/appbars) when scrolling.",
      "fadeImgOnScroll": "When using the `Src` prop or img slot, will fade the `ImgContent` when scrolling.",
      "fixed": "Applies **position: fixed** to the component.",
      "flat": "Removes the toolbar’s box-shadow.",
      "floating": "Applies **display: inline-flex** to the component.",
      "hideOnScroll": "Hides the app-bar when scrolling. Will still show the `extension` slot.",
      "invertedScroll": "Hides the app-bar when scrolling down and displays it when scrolling up.",
      "marginTop": "Applies **margin-top:** to the component.",
      "scrollTarget": "The amount of scroll distance down before `HideOnScroll` activates.",
      "scroll-threshold": "The amount of scroll distance down before `hideOnScroll` activates.",
      "src": "Image source. See [MImage](/components/images) for details.",
      "required": "Required",
      "extended": "Use this prop to increase the height of the toolbar without using the `Extension` slot for adding content. May be used in conjunction with the `ExtensionHeight` prop, and any of the other props that affect the height of the toolbar, e.g. `Prominent`, `Dense`, etc., WITH THE EXCEPTION of `Height`.",
      "collapse": "Puts the toolbar into a collapsed state reducing its maximum width.",
      "extensionHeight": "Specify an explicit height for the `ExtensionContent` slot.",
      "disabled": "Disables the ability to open the component.",
      "fullscreen": "Changes layout for fullscreen display.",
      "hideOverlay": "Hides the display of the overlay.",
      "link": "Designates that the component is a link. This is automatic when using the href or to prop.",
      "target": "Designates the target attribute. This should only be applied when using the **href** prop.",
      "backgroundColor": "Change the background color of the component.",
      "exact": "Exactly match the link. Without this, ‘/’ will match every route. You can find more information about the [exact prop](https://router.vuejs.org/api/) on the vue-router documentation.",
      "activeClass": "Configure the active CSS class applied when the link is active. You can find more information about the [active-class prop](https://router.vuejs.org/api/) on the vue-router documentation.",
      "href": "Designates the component as anchor and applies the `Href` attribute.",
      "isActive": "Activate now.",
      "key": "Key",
      "large": "Makes the component large.",
      "loading": "Adds a loading icon animation.",
      "ripple": "Ripples the component.",
      "small": "Makes the component small.",
      "stopPropagation": "Prevent bubbling events for the target element.",
      "top": "Aligns the content towards the top.",
      "xLarge": "Makes the component extra large.",
      "xSmall": "Makes the component extra small."
    },
    "contents": {
      "childContent": "Default content",
      "iconContent": "The slot used for the icon’s content.",
      "actionsContent": "The slot used for the action’s content."
    },
    "events": {
      "onClick": "Click event",
      "onIconClick": "Icon Click event",
      "valueChanged": "Value change event"
    },
    "functions": {
    }
  },
  "zh-CN": {
    "props": {
      "id": "Html document id.",
      "class": "Html document class.",
      "color": "将指定的颜色应用于控件 - 它可以是材料颜色的名称（例如 `success` 或 `purple`）或 css 颜色（`#033` 或 `rgba(255, 0, 0, 0.5)`）。您可以在 [颜色页面](/styles-and-animations/colors) 上找到内置类的列表。",
      "dark": "将暗色主题变量应用到组件。你可以在 [暗色主题](https://material.io/design/color/dark-theme.html) 的 Material Design 文档中找到更多有关信息。",
      "elevation": "组件的海拔可接受 0 到 24 之间的值。你可以在 [海拔页面](styles-and-animations/elevation) 浏览更多信息。",
      "height": "设定组件的高度",
      "light": "为组件设置浅色主题。",
      "maxHeight": "设定组件的最大高度。",
      "maxWidth": "设定组件的最大宽度。",
      "minHeight": "设定组件的最小高度。",
      "minWidth": "设定组件的最小宽度。",
      "rounded": "对指定的组件应用 `border-radius` 样式。您可以在 [边框半径页面](/styles-and-animations/elevation) 获取更多有关信息。",
      "style": "Html document style",
      "width": "设定组件的宽度。",
      "size": "设置组件的高度和宽度。",
      "bottom": "将组件向底部对齐。",
      "tile": "删除组件的 `border-radius` 样式。",
      "left": "将组件向左边对齐。",
      "right": "将组件向右边对齐。",
      "icon": "指定特定的图标。",
      "iconColor": "指定特定的图标颜色。",
      "outlined": "去除卡片的实心颜色并添加细边框。",
      "tag": "指定在根元素上使用的自定义标签。",
      "app": "指定该组件作为应用程序布局的一部分。用于动态调整内容的大小。使用此属性的组件只有位于 [MMain](/components/mains) 组件的**外部**才能正常运行。您可以在[MApplication](/components/applications)获取更多有关布局的信息。注意： 使用此属性会自动应用 **position: fixed** 到布局元素上。您可以使用 `Absolute` 属性来覆盖这个功能。",
      "absolute": "应用 `position: absolute` 样式到组件.",
      "dense": "将工具栏内容的高度降低到 48px（使用 `prominent` 属性时为 96px）。",
      "elevateOnScroll": "滚动时应用栏显示海拔。",
      "fadeImgOnScroll": "当使用 `Src` 属性或 `ImgContent` 插槽时，滚动时会淡化图像。",
      "fixed": "给组件应用 **position: fixed**。",
      "flat": "删除工具栏的框阴影。",
      "floating": "将 **display: inline-flex** 应用于组件。",
      "hideOnScroll": "滚动时隐藏应用程序栏。 仍会显示 `extension` 插槽。",
      "invertedScroll": "向下滚动时隐藏应用程序栏，向上滚动时显示它。",
      "marginTop": "将 margin-top: 应用于组件。",
      "scrollTarget": "在 `HideOnScroll` 激活之前的滚动距离。",
      "scroll-threshold": "在 `HideOnScroll` 激活之前的滚动距离。",
      "src": "图像源。详情请参阅 [MImage](/components/images)",
      "required": "必须的",
      "extended": "使用此道具可以增加工具栏的高度，而 不需要 使用 `ExtensionContent` 插槽来添加内容。可以与 `ExtensionHeight` 属性，以及其他会影响工具栏高度的其他属性，例如 `Prominent`, `Dense` 等配合使用，`Height` 除外。",
      "collapse": "将工具栏置于折叠状态，以减小其最大宽度。",
      "extensionHeight": "为 `ExtensionContent` 插槽指定一个明确的高度。",
      "disabled": "禁用打开组件的能力。",
      "fullscreen": "改变全屏显示的布局。",
      "hideOverlay": "隐藏遮罩层的显示.",
      "link": "指定组件为链接。当使用 **href** 或 **to** 属性时，这是自动的设置的。",
      "target": "指定 target 属性。只在使用 **href** 属性时应用。",
      "backgroundColor": "更改组件的背景颜色。",
      "exact": "完全匹配链接。如果没有这个链接，'/' 将匹配每个路由。你能够在 vue-router 文档浏览更多 [exact prop](https://router.vuejs.org/api/)。",
      "activeClass": "配置在链接激活时应用的 CSS 类。你能够在 vue-router 文档浏览更多 [active-class prop](https://router.vuejs.org/api/)。",
      "href": "指定组件为锚点并应用 `Href` 属性。",
      "isActive": "受否激活。",
      "key": "Key",
      "large": "使组件尺寸变的巨大。",
      "loading": "添加一个加载动画。",
      "ripple": "使组件带波纹效果。",
      "small": "使组件尺寸变小。",
      "stopPropagation": "阻止目标元素的冒泡事件。",
      "top": "将组件向顶部对齐。",
      "xLarge": "使组件尺寸变的无比巨大。",
      "xSmall": "使组件尺寸变的更小。"
    },
    "contents": {
      "childContent": "默认插槽",
      "iconContent": "用于图标内容的插槽。",
      "actionsContent": "动作内容使用的插槽"
    },
    "events": {
      "onClick": "点击事件",
      "onIconClick": "图标点击事件",
      "valueChanged": "值改变事件"
    },
    "functions": {
    }
  }
}