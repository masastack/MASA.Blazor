{"version":3,"file":"scrollStrategies.js","sources":["../../../Masa.Blazor.JS/src/utils/getScrollParent.ts","../../../Masa.Blazor.JS/src/utils/helper.ts","../../../Masa.Blazor.JS/src/components/overlay/scrollStrategies.ts"],"sourcesContent":["export function getScrollParent (el?: HTMLElement) {\r\n  while (el) {\r\n    if (hasScrollbar(el)) return el\r\n    el = el.parentElement!\r\n  }\r\n\r\n  return document.scrollingElement as HTMLElement\r\n}\r\n\r\nexport function getScrollParents (el?: Element | null, stopAt?: Element | null) {\r\n  const elements: HTMLElement[] = []\r\n\r\n  if (stopAt && el && !stopAt.contains(el)) return elements\r\n\r\n  while (el) {\r\n    if (hasScrollbar(el)) elements.push(el as HTMLElement)\r\n    if (el === stopAt) break\r\n    el = el.parentElement!\r\n  }\r\n\r\n  return elements\r\n}\r\n\r\nexport function hasScrollbar (el?: Element | null) {\r\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return false\r\n\r\n  const style = window.getComputedStyle(el)\r\n  return style.overflowY === 'scroll' || (style.overflowY === 'auto' && el.scrollHeight > el.clientHeight)\r\n}\r\n","export const IN_BROWSER = typeof window !== 'undefined'\r\n\r\nexport function addOnceEventListener (\r\n  el: EventTarget,\r\n  eventName: string,\r\n  cb: (event: Event) => void,\r\n  options: boolean | AddEventListenerOptions = false\r\n): void {\r\n  const once = (event: Event) => {\r\n    cb(event)\r\n    el.removeEventListener(eventName, once, options)\r\n  }\r\n\r\n  el.addEventListener(eventName, once, options)\r\n}\r\n\r\nlet passiveSupported = false\r\ntry {\r\n  if (IN_BROWSER) {\r\n    const testListenerOpts = Object.defineProperty({}, 'passive', {\r\n      get: () => {\r\n        passiveSupported = true\r\n      },\r\n    })\r\n\r\n    window.addEventListener('testListener' as any, testListenerOpts as any, testListenerOpts)\r\n    window.removeEventListener('testListener' as any, testListenerOpts as any, testListenerOpts)\r\n  }\r\n} catch (e) { console.warn(e) } /* eslint-disable-line no-console */\r\nexport { passiveSupported }\r\n\r\nexport function addPassiveEventListener (\r\n  el: EventTarget,\r\n  event: string,\r\n  cb: ((e: any) => void),\r\n  options: {}\r\n): void {\r\n  el.addEventListener(event, cb, passiveSupported ? options : false)\r\n}\r\n\r\nexport function getZIndex (el?: Element | null): number {\r\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return 0\r\n\r\n  const index = +window.getComputedStyle(el).getPropertyValue('z-index')\r\n\r\n  if (!index) return getZIndex(el.parentNode as Element)\r\n  return index\r\n}\r\n\r\n// KeyboardEvent.keyCode aliases\r\nexport const keyCodes = Object.freeze({\r\n  enter: 13,\r\n  tab: 9,\r\n  delete: 46,\r\n  esc: 27,\r\n  space: 32,\r\n  up: 38,\r\n  down: 40,\r\n  left: 37,\r\n  right: 39,\r\n  end: 35,\r\n  home: 36,\r\n  del: 46,\r\n  backspace: 8,\r\n  insert: 45,\r\n  pageup: 33,\r\n  pagedown: 34,\r\n  shift: 16,\r\n})\r\n\r\n/**  Polyfill for Event.prototype.composedPath */\r\nexport function composedPath (e: Event): EventTarget[] {\r\n  if (e.composedPath) return e.composedPath()\r\n\r\n  const path = []\r\n  let el = e.target as Element\r\n\r\n  while (el) {\r\n    path.push(el)\r\n\r\n    if (el.tagName === 'HTML') {\r\n      path.push(document)\r\n      path.push(window)\r\n\r\n      return path\r\n    }\r\n\r\n    el = el.parentElement!\r\n  }\r\n  return path\r\n}\r\n\r\nexport function getBlazorId(el) {\r\n  if (!el) {\r\n    return null;\r\n  }\r\n  let _bl_ = el.getAttributeNames().find(a => a.startsWith('_bl_'))\r\n  if (_bl_) {\r\n    _bl_ = _bl_.substring(4);\r\n  }\r\n\r\n  return _bl_;\r\n}\r\n\r\nexport function getElementSelector(el) {\r\n  if (!(el instanceof Element))\r\n    return;\r\n  var path = [];\r\n  while (el.nodeType === Node.ELEMENT_NODE) {\r\n    var selector = el.nodeName.toLowerCase();\r\n    if (el.id) {\r\n      selector = '#' + el.id;\r\n      path.unshift(selector);\r\n      break;\r\n    } else {\r\n      var sib = el, nth = 1;\r\n      while (sib = sib.previousElementSibling) {\r\n        if (sib.nodeName.toLowerCase() == selector)\r\n          nth++;\r\n      }\r\n      if (nth != 1)\r\n        selector += \":nth-of-type(\" + nth + \")\";\r\n    }\r\n    path.unshift(selector);\r\n    el = el.parentNode;\r\n  }\r\n  return path.join(\" > \");\r\n}\r\n\r\nexport function getEventTarget(target: HTMLElement | EventTarget) {\r\n  const el = target as HTMLElement;\r\n  const eventTarget: MbEventTarget = {};\r\n  const elementReferenceId = el\r\n    .getAttributeNames()\r\n    .find((a) => a.startsWith(\"_bl_\"));\r\n  if (elementReferenceId) {\r\n    eventTarget.elementReferenceId = elementReferenceId;\r\n    eventTarget.selector = `[${elementReferenceId}]`;\r\n  } else {\r\n    eventTarget.selector = getElementSelector(el);\r\n  }\r\n\r\n  eventTarget.class = el.getAttribute(\"class\");\r\n\r\n  return eventTarget;\r\n}\r\n\r\nexport function getDom(elOrString: Element | string | undefined) {\r\n  let element: HTMLElement;\r\n\r\n  try {\r\n    if (!elOrString) {\r\n      element = document.body;\r\n    } else if (typeof elOrString === \"string\") {\r\n      if (elOrString === \"document\") {\r\n        element = document.documentElement;\r\n      } else if (elOrString.indexOf(\"__.__\") > 0) {\r\n        // for example: el__.__parentElement\r\n        let array = elOrString.split(\"__.__\");\r\n        let i = 0;\r\n        let el = document.querySelector(array[i++]);\r\n\r\n        if (el) {\r\n          while (array[i]) {\r\n            el = el[array[i]];\r\n            i++;\r\n          }\r\n        }\r\n\r\n        if (el instanceof HTMLElement) {\r\n          element = el;\r\n        }\r\n      } else {\r\n        element = document.querySelector(elOrString);\r\n      }\r\n    } else {\r\n      element = elOrString as HTMLElement;\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\nexport const canUseDom = !!(\r\n  IN_BROWSER &&\r\n  typeof document !== 'undefined' &&\r\n  window.document &&\r\n  window.document.createElement\r\n)\r\n\r\nexport function convertToUnit (str: number, unit?: string): string\r\nexport function convertToUnit (str: string | number | null | undefined, unit?: string): string | undefined\r\nexport function convertToUnit (str: string | number | null | undefined, unit = 'px'): string | undefined {\r\n  if (str == null || str === '') {\r\n    return undefined\r\n  } else if (isNaN(+str!)) {\r\n    return String(str)\r\n  } else if (!isFinite(+str!)) {\r\n    return undefined\r\n  } else {\r\n    return `${Number(str)}${unit}`\r\n  }\r\n}","import { getScrollParents, hasScrollbar } from \"utils/getScrollParent\";\nimport { convertToUnit } from \"utils/helper\";\n\ntype StrategyProps = {\n  strategy: \"block\" | \"close\";\n  contained: boolean | undefined;\n};\n\ntype ScrollStrategyData = {\n  root: HTMLElement | undefined;\n  contentEl: HTMLElement | undefined;\n  targetEl: HTMLElement | undefined;\n  invoker?: DotNet.DotNetObject;\n};\n\ntype ScrollStrategyResult = {\n  bind?: () => void;\n  unbind: () => void;\n};\n\nexport function useScrollStrategies(\n  props: StrategyProps,\n  root: HTMLElement | undefined,\n  contentEl: HTMLElement | undefined,\n  targetEl: HTMLElement | undefined,\n  dotNet?: DotNet.DotNetObject\n): ScrollStrategyResult {\n  if (props.strategy === \"block\") {\n    return useBlockScrollStrategy(\n      {\n        root,\n        contentEl,\n        targetEl,\n      },\n      props\n    );\n  } else {\n    return useInvokerScrollStrategy(\n      {\n        root,\n        contentEl,\n        targetEl,\n        invoker: dotNet,\n      },\n      props\n    );\n  }\n}\n\nfunction useBlockScrollStrategy(\n  data: ScrollStrategyData,\n  options: StrategyProps\n): ScrollStrategyResult {\n  const offsetParent = data.root.offsetParent;\n  const scrollElements = [\n    ...new Set([\n      ...getScrollParents(\n        data.contentEl,\n        options.contained ? offsetParent : undefined\n      ),\n    ]),\n  ];\n\n  const scrollableParent = ((el) => hasScrollbar(el) && el)(\n    offsetParent || document.documentElement\n  );\n\n  const bind = () => {\n    if (scrollableParent) {\n      data.root.classList.add(\"m-overlay--scroll-blocked\");\n    }\n\n    const scrollbarWidth =\n      window.innerWidth - document.documentElement.offsetWidth;\n\n    scrollElements\n      .filter((el) => !el.classList.contains(\"m-overlay-scroll-blocked\"))\n      .forEach((el, i) => {\n        el.style.setProperty(\n          \"--m-body-scroll-x\",\n          convertToUnit(-el.scrollLeft)\n        );\n        el.style.setProperty(\"--m-body-scroll-y\", convertToUnit(-el.scrollTop));\n\n        if (el !== document.documentElement) {\n          el.style.setProperty(\n            \"--m-scrollbar-offset\",\n            convertToUnit(scrollbarWidth)\n          );\n        }\n\n        el.classList.add(\"m-overlay-scroll-blocked\");\n      });\n  };\n\n  bind();\n\n  return {\n    bind,\n    unbind: () => {\n      scrollElements\n        .filter((el) => el.classList.contains(\"m-overlay-scroll-blocked\"))\n        .forEach((el, i) => {\n          const x = parseFloat(el.style.getPropertyValue(\"--m-body-scroll-x\"));\n          const y = parseFloat(el.style.getPropertyValue(\"--m-body-scroll-y\"));\n\n          const scrollBehavior = el.style.scrollBehavior;\n\n          el.style.scrollBehavior = \"auto\";\n          el.style.removeProperty(\"--m-body-scroll-x\");\n          el.style.removeProperty(\"--m-body-scroll-y\");\n          el.style.removeProperty(\"--m-scrollbar-offset\");\n          el.classList.remove(\"m-overlay-scroll-blocked\");\n\n          el.scrollLeft = -x;\n          el.scrollTop = -y;\n\n          el.style.scrollBehavior = scrollBehavior;\n        });\n\n      if (scrollableParent) {\n        data.root.classList.remove(\"m-overlay--scroll-blocked\");\n      }\n    },\n  };\n}\n\nfunction useInvokerScrollStrategy(\n  data: ScrollStrategyData,\n  options: StrategyProps\n) {\n  const el = data.targetEl ?? data.contentEl;\n\n  const onScroll = () => {\n    data.invoker?.invokeMethodAsync(\n      \"ScrollStrategy_OnScroll\",\n      options.strategy\n    );\n  };\n\n  const scrollElements = [document, ...getScrollParents(el)];\n  scrollElements.forEach((el) =>\n    el.addEventListener(\"scroll\", onScroll, { passive: true })\n  );\n\n  return {\n    unbind: () => {\n      data.invoker?.dispose();\n      scrollElements.forEach((el) =>\n        el.removeEventListener(\"scroll\", onScroll)\n      );\n    },\n  };\n}\n"],"names":["getScrollParents","el","stopAt","elements","contains","hasScrollbar","push","parentElement","nodeType","Node","ELEMENT_NODE","style","window","getComputedStyle","overflowY","scrollHeight","clientHeight","IN_BROWSER","passiveSupported","testListenerOpts","Object","defineProperty","get","addEventListener","removeEventListener","e","console","warn","convertToUnit","str","unit","isNaN","String","isFinite","Number","useScrollStrategies","props","root","contentEl","targetEl","dotNet","strategy","data","options","offsetParent","scrollElements","Set","contained","undefined","scrollableParent","document","documentElement","bind","classList","add","scrollbarWidth","innerWidth","offsetWidth","filter","forEach","i","setProperty","scrollLeft","scrollTop","unbind","x","parseFloat","getPropertyValue","y","scrollBehavior","removeProperty","remove","useBlockScrollStrategy","_a","onScroll","invoker","invokeMethodAsync","passive","dispose","useInvokerScrollStrategy","freeze","enter","tab","delete","esc","space","up","down","left","right","end","home","del","backspace","insert","pageup","pagedown","shift"],"mappings":"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"}