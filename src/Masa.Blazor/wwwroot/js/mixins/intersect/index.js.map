{"version":3,"file":"index.js","sources":["../../../../../Masa.Blazor.JS/src/mixins/intersect.ts"],"sourcesContent":["import { getEventTarget } from \"utils/helper\";\r\n\r\nexport interface IntersectionObserverOptions {\r\n  rootSelector?: string;\r\n  rootMarginLeft?: string;\r\n  rootMarginRight?: string;\r\n  rootMarginTop?: string;\r\n  rootMarginBottom?: string;\r\n  autoRootMargin: \"None\" | \"Top\" | \"Right\" | \"Bottom\" | \"Left\";\r\n  threshold: number[];\r\n  once: boolean;\r\n}\r\n\r\nfunction observe(\r\n  el: HTMLElement,\r\n  handle: DotNet.DotNetObject,\r\n  options?: IntersectionObserverOptions\r\n) {\r\n  if (!handle) {\r\n    throw new Error(\"the handle cannot be null\");\r\n  }\r\n\r\n  if (!el) {\r\n    handle.dispose();\r\n    return;\r\n  }\r\n\r\n  if (el[\"_intersect\"]) {\r\n    return;\r\n  }\r\n\r\n  const once = options?.once ?? false;\r\n\r\n  const standardOptions = formatToStandardOptions(options);\r\n\r\n  const observer = new IntersectionObserver(\r\n    async (\r\n      entries: IntersectionObserverEntry[] = [],\r\n      observer: IntersectionObserver\r\n    ) => {\r\n\r\n      const computedEntries = entries.map((entry) => ({\r\n        isIntersecting: entry.isIntersecting,\r\n        target: getEventTarget(entry.target),\r\n      }));\r\n\r\n      const isIntersecting = computedEntries.some((e) => e.isIntersecting);\r\n\r\n      if (!once || isIntersecting) {\r\n        await handle.invokeMethodAsync(\"Invoke\", {\r\n          isIntersecting,\r\n          entries: computedEntries,\r\n        });\r\n      }\r\n\r\n      if (isIntersecting && once) {\r\n        unobserve(el);\r\n      }\r\n    },\r\n    standardOptions\r\n  );\r\n\r\n  el[\"_intersect\"] = Object(el[\"_intersect\"]);\r\n  el[\"_intersect\"] = { handle, observer };\r\n\r\n  observer.observe(el);\r\n}\r\n\r\nfunction unobserve(el: HTMLElement) {\r\n  if (!el) return;\r\n\r\n  const observe = el[\"_intersect\"];\r\n  if (!observe) return;\r\n\r\n  observe.observer.unobserve(el);\r\n  observe.handle.dispose();\r\n  delete el[\"_intersect\"];\r\n}\r\n\r\nfunction observeSelector(\r\n  selector: string,\r\n  handle: DotNet.DotNetObject,\r\n  options?: IntersectionObserverOptions\r\n) {\r\n\r\n  if (selector) {\r\n    const el = document.querySelector(selector) as HTMLElement;\r\n    el && observe(el, handle, options);\r\n  }\r\n}\r\n\r\nfunction unobserveSelector(selector: string) {\r\n  if (selector) {\r\n    const el = document.querySelector(selector) as HTMLElement;\r\n    el && unobserve(el);\r\n  }\r\n}\r\n\r\nexport function formatToStandardOptions(\r\n  options?: IntersectionObserverOptions\r\n): IntersectionObserverInit | null {\r\n  if (!options) {\r\n    return null;\r\n  }\r\n\r\n  const root: HTMLLIElement = options.rootSelector\r\n    ? document.querySelector(options.rootSelector)\r\n    : null;\r\n\r\n  if (options.autoRootMargin !== \"None\") {\r\n    if (\r\n      options.autoRootMargin === \"Top\" &&\r\n      options.rootMarginBottom !== \"0px\"\r\n    ) {\r\n      options.rootMarginTop =\r\n        calcAuto(root, options.rootMarginBottom, false) + \"px\";\r\n    } else if (\r\n      options.autoRootMargin === \"Right\" &&\r\n      options.rootMarginLeft !== \"0px\"\r\n    ) {\r\n      options.rootMarginRight =\r\n        calcAuto(root, options.rootMarginLeft, false) + \"px\";\r\n    } else if (\r\n      options.autoRootMargin === \"Bottom\" &&\r\n      options.rootMarginTop !== \"0px\"\r\n    ) {\r\n      options.rootMarginBottom =\r\n        calcAuto(root, options.rootMarginTop, false) + \"px\";\r\n    } else if (\r\n      options.autoRootMargin === \"Left\" &&\r\n      options.rootMarginRight !== \"0px\"\r\n    ) {\r\n      options.rootMarginLeft =\r\n        calcAuto(root, options.rootMarginRight, false) + \"px\";\r\n    }\r\n  }\r\n\r\n  return {\r\n    rootMargin: `${options.rootMarginTop} ${options.rootMarginRight} ${options.rootMarginBottom} ${options.rootMarginLeft}`,\r\n    root,\r\n    threshold: options.threshold,\r\n  };\r\n}\r\n\r\nfunction calcAuto(container: HTMLElement, margin: string, x: boolean) {\r\n  container = container || document.documentElement;\r\n  const marginValue = parseInt(margin);\r\n  if (isNaN(marginValue)) {\r\n    return 0;\r\n  }\r\n\r\n  var clientValue = x ? container.clientWidth : container.clientHeight;\r\n\r\n  return Math.abs(marginValue) - clientValue;\r\n}\r\n\r\nexport { observe, unobserve, observeSelector, unobserveSelector };\r\n"],"names":["observe","el","handle","options","Error","dispose","once","_a","standardOptions","formatToStandardOptions","observer","IntersectionObserver","entries","__awaiter","this","computedEntries","map","entry","isIntersecting","target","getEventTarget","some","e","invokeMethodAsync","unobserve","Object","observeSelector","selector","document","querySelector","unobserveSelector","root","rootSelector","autoRootMargin","rootMarginBottom","rootMarginTop","calcAuto","rootMarginLeft","rootMarginRight","rootMargin","threshold","container","margin","x","documentElement","marginValue","parseInt","isNaN","clientValue","clientWidth","clientHeight","Math","abs"],"mappings":"yFAaA,SAASA,EACPC,EACAC,EACAC,SAEA,IAAKD,EACH,MAAM,IAAIE,MAAM,6BAGlB,IAAKH,EAEH,YADAC,EAAOG,UAIT,GAAIJ,EAAe,WACjB,OAGF,MAAMK,EAAwB,QAAjBC,EAAAJ,aAAA,EAAAA,EAASG,YAAQ,IAAAC,GAAAA,EAExBC,EAAkBC,EAAwBN,GAE1CO,EAAW,IAAIC,sBACnB,CACEC,EAAuC,GACvCF,IACEG,EAAAC,UAAA,OAAA,GAAA,YAEF,MAAMC,EAAkBH,EAAQI,KAAKC,IAAW,CAC9CC,eAAgBD,EAAMC,eACtBC,OAAQC,EAAeH,EAAME,YAGzBD,EAAiBH,EAAgBM,MAAMC,GAAMA,EAAEJ,iBAEhDZ,IAAQY,UACLhB,EAAOqB,kBAAkB,SAAU,CACvCL,iBACAN,QAASG,KAITG,GAAkBZ,GACpBkB,EAAUvB,EAEd,KACAO,GAGFP,EAAe,WAAIwB,OAAOxB,EAAe,YACzCA,EAAe,WAAI,CAAEC,SAAQQ,YAE7BA,EAASV,QAAQC,EACnB,CAEA,SAASuB,EAAUvB,GACjB,IAAKA,EAAI,OAET,MAAMD,EAAUC,EAAe,WAC1BD,IAELA,EAAQU,SAASc,UAAUvB,GAC3BD,EAAQE,OAAOG,iBACRJ,EAAe,WACxB,CAEA,SAASyB,EACPC,EACAzB,EACAC,GAGA,GAAIwB,EAAU,CACZ,MAAM1B,EAAK2B,SAASC,cAAcF,GAClC1B,GAAMD,EAAQC,EAAIC,EAAQC,EAC3B,CACH,CAEA,SAAS2B,EAAkBH,GACzB,GAAIA,EAAU,CACZ,MAAM1B,EAAK2B,SAASC,cAAcF,GAClC1B,GAAMuB,EAAUvB,EACjB,CACH,CAEM,SAAUQ,EACdN,GAEA,IAAKA,EACH,OAAO,KAGT,MAAM4B,EAAsB5B,EAAQ6B,aAChCJ,SAASC,cAAc1B,EAAQ6B,cAC/B,KA8BJ,MA5B+B,SAA3B7B,EAAQ8B,iBAEmB,QAA3B9B,EAAQ8B,gBACqB,QAA7B9B,EAAQ+B,iBAER/B,EAAQgC,cACNC,EAASL,EAAM5B,EAAQ+B,kBAAkB,GAAS,KAEzB,UAA3B/B,EAAQ8B,gBACmB,QAA3B9B,EAAQkC,eAERlC,EAAQmC,gBACNF,EAASL,EAAM5B,EAAQkC,gBAAgB,GAAS,KAEvB,WAA3BlC,EAAQ8B,gBACkB,QAA1B9B,EAAQgC,cAERhC,EAAQ+B,iBACNE,EAASL,EAAM5B,EAAQgC,eAAe,GAAS,KAEtB,SAA3BhC,EAAQ8B,gBACoB,QAA5B9B,EAAQmC,kBAERnC,EAAQkC,eACND,EAASL,EAAM5B,EAAQmC,iBAAiB,GAAS,OAIhD,CACLC,WAAY,GAAGpC,EAAQgC,iBAAiBhC,EAAQmC,mBAAmBnC,EAAQ+B,oBAAoB/B,EAAQkC,iBACvGN,OACAS,UAAWrC,EAAQqC,UAEvB,CAEA,SAASJ,EAASK,EAAwBC,EAAgBC,GACxDF,EAAYA,GAAab,SAASgB,gBAClC,MAAMC,EAAcC,SAASJ,GAC7B,GAAIK,MAAMF,GACR,OAAO,EAGT,IAAIG,EAAcL,EAAIF,EAAUQ,YAAcR,EAAUS,aAExD,OAAOC,KAAKC,IAAIP,GAAeG,CACjC"}