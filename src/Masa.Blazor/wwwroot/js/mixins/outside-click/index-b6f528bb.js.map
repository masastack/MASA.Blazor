{"version":3,"file":"index-b6f528bb.js","sources":["../../../../../Masa.Blazor.JS/src/mixins/outside-click.ts"],"sourcesContent":["import { get$ParentElement } from \"utils/helper\";\r\n\r\nclass OutsideClick {\r\n  dotNetHelper: DotNet.DotNetObject;\r\n  listener: (e: MouseEvent & KeyboardEvent & FocusEvent) => void;\r\n  mousedownListener: (e: MouseEvent) => void;\r\n  excludedSelectors: string[];\r\n  lastMousedownWasOutside: boolean = true;\r\n  lastMousedownTarget: EventTarget | null = null;\r\n\r\n  constructor(dotNetHelper: DotNet.DotNetObject, excludedSelectors: string[]) {\r\n    this.dotNetHelper = dotNetHelper;\r\n    this.excludedSelectors = excludedSelectors;\r\n  }\r\n\r\n  genListeners() {\r\n    this.listener = e => {\r\n      if (this.checkEvent(e)) return;\r\n\r\n      const isSameTarget = this.lastMousedownTarget === e.target;\r\n      // 如果点击目标和 mousedown 目标不同，可能是长按后的遮罩点击\r\n      if (!isSameTarget) {\r\n        return;\r\n      }\r\n\r\n      if (this.lastMousedownWasOutside) {\r\n        this.dotNetHelper.invokeMethodAsync(\"OnOutsideClick\");\r\n      }\r\n    };\r\n\r\n    this.mousedownListener = e => {\r\n      this.lastMousedownWasOutside = !this.checkEvent(e);\r\n      this.lastMousedownTarget = e.target;\r\n    };\r\n  }\r\n\r\n  addListeners() {\r\n    this.genListeners();\r\n    document.addEventListener(\"click\", this.listener, true);\r\n    document.addEventListener(\"mousedown\", this.mousedownListener, true);\r\n  }\r\n\r\n  removeListeners() {\r\n    document.removeEventListener(\"click\", this.listener, true);\r\n    document.removeEventListener(\"mousedown\", this.mousedownListener, true);\r\n  }\r\n\r\n  resetListener() {\r\n    this.removeListeners();\r\n    this.addListeners();\r\n  }\r\n\r\n  updateExcludeSelectors(selectors: string[]) {\r\n    this.excludedSelectors = selectors;\r\n  }\r\n\r\n  checkEvent(e: MouseEvent) {\r\n    return this.excludedSelectors.some(selector => {\r\n      const parentElement = get$ParentElement(selector);\r\n      if (parentElement) {\r\n        return parentElement.contains(e.target as HTMLElement);\r\n      }\r\n\r\n      const elements = Array.from(document.querySelectorAll(selector));\r\n      return elements.some(el => el.contains(e.target as HTMLElement));\r\n    });\r\n  }\r\n\r\n  unbind() {\r\n    this.removeListeners();\r\n  }\r\n}\r\n\r\nfunction init(dotNetHelper: DotNet.DotNetObject, excludeSelectors: string[]) {\r\n  var instance = new OutsideClick(dotNetHelper, excludeSelectors);\r\n\r\n  instance.addListeners();\r\n\r\n  return instance;\r\n}\r\n\r\nexport { init };\r\n"],"names":["OutsideClick","constructor","dotNetHelper","excludedSelectors","this","lastMousedownWasOutside","lastMousedownTarget","genListeners","listener","e","checkEvent","target","invokeMethodAsync","mousedownListener","addListeners","document","addEventListener","removeListeners","removeEventListener","resetListener","updateExcludeSelectors","selectors","some","selector","parentElement","get$ParentElement","contains","Array","from","querySelectorAll","el","unbind","init","excludeSelectors","instance"],"mappings":"+CAEA,MAAMA,EAQJ,WAAAC,CAAYC,EAAmCC,GAH/CC,KAAuBC,yBAAY,EACnCD,KAAmBE,oBAAuB,KAGxCF,KAAKF,aAAeA,EACpBE,KAAKD,kBAAoBA,CAC1B,CAED,YAAAI,GACEH,KAAKI,SAAWC,IACd,GAAIL,KAAKM,WAAWD,GAAI,OAEHL,KAAKE,sBAAwBG,EAAEE,QAMhDP,KAAKC,yBACPD,KAAKF,aAAaU,kBAAkB,mBAIxCR,KAAKS,kBAAoBJ,IACvBL,KAAKC,yBAA2BD,KAAKM,WAAWD,GAChDL,KAAKE,oBAAsBG,EAAEE,OAEhC,CAED,YAAAG,GACEV,KAAKG,eACLQ,SAASC,iBAAiB,QAASZ,KAAKI,UAAU,GAClDO,SAASC,iBAAiB,YAAaZ,KAAKS,mBAAmB,EAChE,CAED,eAAAI,GACEF,SAASG,oBAAoB,QAASd,KAAKI,UAAU,GACrDO,SAASG,oBAAoB,YAAad,KAAKS,mBAAmB,EACnE,CAED,aAAAM,GACEf,KAAKa,kBACLb,KAAKU,cACN,CAED,sBAAAM,CAAuBC,GACrBjB,KAAKD,kBAAoBkB,CAC1B,CAED,UAAAX,CAAWD,GACT,OAAOL,KAAKD,kBAAkBmB,KAAKC,IACjC,MAAMC,EAAgBC,EAAkBF,GACxC,GAAIC,EACF,OAAOA,EAAcE,SAASjB,EAAEE,QAIlC,OADiBgB,MAAMC,KAAKb,SAASc,iBAAiBN,IACtCD,KAAKQ,GAAMA,EAAGJ,SAASjB,EAAEE,UAE5C,CAED,MAAAoB,GACE3B,KAAKa,iBACN,EAGH,SAASe,EAAK9B,EAAmC+B,GAC/C,IAAIC,EAAW,IAAIlC,EAAaE,EAAc+B,GAI9C,OAFAC,EAASpB,eAEFoB,CACT"}