{"version":3,"file":"index.js","sources":["../../../../../Masa.Blazor.JS/src/mixins/delayable.ts","../../../../../Masa.Blazor.JS/src/mixins/activatable.ts"],"sourcesContent":["export default class Delayable {\r\n  openDelay: number;\r\n  closeDelay: number;\r\n  dotNetHelper: DotNet.DotNetObject;\r\n\r\n  openTimeout;\r\n  closeTimeout;\r\n  isActive: boolean;\r\n\r\n  constructor(\r\n    openDelay: number,\r\n    closeDelay: number,\r\n    dotNetHelper: DotNet.DotNetObject\r\n  ) {\r\n    this.openDelay = openDelay;\r\n    this.closeDelay = closeDelay;\r\n    this.dotNetHelper = dotNetHelper;\r\n  }\r\n\r\n  clearDelay() {\r\n    clearTimeout(this.openTimeout);\r\n    clearTimeout(this.closeTimeout);\r\n  }\r\n\r\n  runDelay(type: \"open\" | \"close\", cb?: () => void) {\r\n    this.clearDelay();\r\n\r\n    const delay = parseInt((this as any)[`${type}Delay`], 10);\r\n\r\n    (this as any)[`${type}Timeout`] = setTimeout(\r\n      cb ||\r\n        (() => {\r\n          const isActive = { open: true, close: false }[type];\r\n          this.setActive(isActive);\r\n        }),\r\n      delay\r\n    );\r\n  }\r\n\r\n  setActive(active: boolean) {\r\n    if (this.isActive == active) {\r\n      return;\r\n    }\r\n\r\n    this.isActive = active;\r\n    this.dotNetHelper.invokeMethodAsync(\"SetActive\", this.isActive);\r\n  }\r\n\r\n  resetDelay(openDelay: number, closeDelay: number) {\r\n    this.openDelay = openDelay;\r\n    this.closeDelay = closeDelay;\r\n  }\r\n}\r\n","import { getActivator } from \"utils/helper\";\r\n\r\nimport { parseMouseEvent } from \"../events/EventType\";\r\nimport Delayable from \"./delayable\";\r\n\r\ntype Listeners = Record<\r\n  string,\r\n  (e: MouseEvent & KeyboardEvent & FocusEvent) => void\r\n>;\r\n\r\nclass Activatable extends Delayable {\r\n  activator?: HTMLElement;\r\n  popupElement?: HTMLElement;\r\n  disabled: boolean;\r\n  openOnClick: boolean;\r\n  openOnHover: boolean;\r\n  openOnFocus: boolean;\r\n\r\n  closeOnOutsideClick: boolean;\r\n  closeOnContentClick: boolean;\r\n\r\n  activatorListeners: Listeners = {};\r\n  popupListeners: Listeners = {};\r\n\r\n  constructor(\r\n    isActive: boolean,\r\n    activatorSelector: string,\r\n    disabled: boolean,\r\n    openOnClick: boolean,\r\n    openOnHover: boolean,\r\n    openOnFocus: boolean,\r\n    openDelay: number,\r\n    closeDelay: number,\r\n    dotNetHelper: DotNet.DotNetObject\r\n  ) {\r\n    super(openDelay, closeDelay, dotNetHelper);\r\n\r\n    this.isActive = isActive;\r\n\r\n    this.activator = getActivator(activatorSelector);\r\n\r\n    this.disabled = disabled;\r\n    this.openOnClick = openOnClick;\r\n    this.openOnHover = openOnHover;\r\n    this.openOnFocus = openOnFocus;\r\n    this.dotNetHelper = dotNetHelper;\r\n  }\r\n\r\n  //#region activators\r\n\r\n  resetActivator(selector: string) {\r\n    const activator = document.querySelector(selector);\r\n    if (activator) {\r\n      this.activator = activator as HTMLElement;\r\n    }\r\n\r\n    this.resetActivatorEvents(\r\n      this.disabled,\r\n      this.openOnHover,\r\n      this.openOnFocus\r\n    );\r\n  }\r\n\r\n  addActivatorEvents() {\r\n    if (!this.activator || this.disabled) return;\r\n\r\n    this.activatorListeners = this.genActivatorListeners();\r\n    const keys = Object.keys(this.activatorListeners);\r\n\r\n    for (const key of keys) {\r\n      this.activator.addEventListener(key, this.activatorListeners[key] as any);\r\n    }\r\n  }\r\n\r\n  genActivatorListeners() {\r\n    if (this.disabled) return {};\r\n\r\n    const listeners: Listeners = {};\r\n\r\n    if (this.openOnHover) {\r\n      listeners.mouseenter = (e: MouseEvent) => {\r\n        this.runDelay(\"open\");\r\n      };\r\n      listeners.mouseleave = (e: MouseEvent) => {\r\n        this.runDelay(\"close\");\r\n      };\r\n    } else if (this.openOnClick) {\r\n      listeners.click = (e: MouseEvent) => {\r\n        if (this.activator) this.activator.focus();\r\n\r\n        e.stopPropagation();\r\n\r\n        this.dotNetHelper.invokeMethodAsync(\"OnClick\", parseMouseEvent(e));\r\n\r\n        this.setActive(!this.isActive);\r\n      };\r\n    }\r\n\r\n    if (this.openOnFocus) {\r\n      listeners.focus = (e: FocusEvent) => {\r\n        e.stopPropagation();\r\n\r\n        this.runDelay(\"open\");\r\n      };\r\n\r\n      listeners.blur = (e: FocusEvent) => {\r\n        this.runDelay(\"close\");\r\n      };\r\n    }\r\n\r\n    return listeners;\r\n  }\r\n\r\n  removeActivatorEvents() {\r\n    if (!this.activator) return;\r\n\r\n    const keys = Object.keys(this.activatorListeners);\r\n\r\n    for (const key of keys) {\r\n      this.activator.removeEventListener(key, this.activatorListeners[key]);\r\n    }\r\n\r\n    this.activatorListeners = {};\r\n  }\r\n\r\n  resetActivatorEvents(\r\n    disabled: boolean,\r\n    openOnHover: boolean,\r\n    openOnFocus: boolean\r\n  ) {\r\n    this.disabled = disabled;\r\n    this.openOnHover = openOnHover;\r\n    this.openOnFocus = openOnFocus;\r\n\r\n    this.removeActivatorEvents();\r\n    this.addActivatorEvents();\r\n  }\r\n\r\n  runDelaying(val: boolean) {\r\n    this.runDelay(val ? \"open\" : \"close\");\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region popups\r\n\r\n  registerPopup(popupSelector: string, closeOnContentClick: boolean) {\r\n    const popup = document.querySelector(popupSelector);\r\n    if (!popup) {\r\n      console.error(\"popup not exists\");\r\n      return;\r\n    }\r\n\r\n    this.popupElement = popup as HTMLElement;\r\n    this.closeOnContentClick = closeOnContentClick;\r\n\r\n    this.addPopupEvents();\r\n  }\r\n\r\n  addPopupEvents() {\r\n    if (!this.popupElement || this.disabled) return;\r\n\r\n    this.popupListeners = this.genPopupListeners();\r\n    const keys = Object.keys(this.popupListeners);\r\n\r\n    for (const key of keys) {\r\n      this.popupElement.addEventListener(key, this.popupListeners[key] as any);\r\n    }\r\n  }\r\n\r\n  removePopupEvents() {\r\n    if (!this.popupElement) return;\r\n\r\n    const keys = Object.keys(this.popupListeners);\r\n\r\n    for (const key of keys) {\r\n      this.popupElement.removeEventListener(key, this.popupListeners[key]);\r\n    }\r\n\r\n    this.popupListeners = {};\r\n  }\r\n\r\n  genPopupListeners() {\r\n    if (this.disabled) return;\r\n\r\n    const listeners: Listeners = {};\r\n\r\n    if (!this.disabled && this.openOnHover) {\r\n      listeners.mouseenter = (e) => {\r\n        this.runDelay(\"open\");\r\n      };\r\n\r\n      listeners.mouseleave = (e) => {\r\n        this.runDelay(\"close\");\r\n      };\r\n    }\r\n\r\n    if (this.closeOnContentClick) {\r\n      listeners.click = (e) => {\r\n        this.setActive(false);\r\n      };\r\n    }\r\n\r\n    return listeners;\r\n  }\r\n\r\n  resetPopupEvents(closeOnContentClick: boolean) {\r\n    this.closeOnContentClick = closeOnContentClick;\r\n\r\n    this.removePopupEvents();\r\n    this.addPopupEvents();\r\n  }\r\n\r\n  //#endregion\r\n}\r\n\r\nfunction init(\r\n  isActive: boolean,\r\n  activatorSelector: string,\r\n  disabled: boolean,\r\n  openOnClick: boolean,\r\n  openOnHover: boolean,\r\n  openOnFocus: boolean,\r\n  openDelay: number,\r\n  closeDelay: number,\r\n  dotNetHelper: DotNet.DotNetObject\r\n) {\r\n  var instance = new Activatable(\r\n    isActive,\r\n    activatorSelector,\r\n    disabled,\r\n    openOnClick,\r\n    openOnHover,\r\n    openOnFocus,\r\n    openDelay,\r\n    closeDelay,\r\n    dotNetHelper\r\n  );\r\n\r\n  instance.addActivatorEvents();\r\n\r\n  return instance;\r\n}\r\n\r\nexport { init };\r\n"],"names":["Delayable","constructor","openDelay","closeDelay","dotNetHelper","this","clearDelay","clearTimeout","openTimeout","closeTimeout","runDelay","type","cb","delay","parseInt","setTimeout","isActive","open","close","setActive","active","invokeMethodAsync","resetDelay","Activatable","activatorSelector","disabled","openOnClick","openOnHover","openOnFocus","super","activatorListeners","popupListeners","activator","getActivator","resetActivator","selector","document","querySelector","resetActivatorEvents","addActivatorEvents","genActivatorListeners","keys","Object","key","addEventListener","listeners","mouseenter","e","mouseleave","click","focus","stopPropagation","parseMouseEvent","blur","removeActivatorEvents","removeEventListener","runDelaying","val","registerPopup","popupSelector","closeOnContentClick","popup","popupElement","addPopupEvents","console","error","genPopupListeners","removePopupEvents","resetPopupEvents","init","instance"],"mappings":"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"}