{"version":3,"file":"ssr-state-restore.js","sources":["../../../BlazorComponent/src/Component/BlazorComponent.Web/src/ssr/index.ts","../../../BlazorComponent/src/Component/BlazorComponent.Web/src/ssr/ssr-state-restore.ts","../../../BlazorComponent/src/Component/BlazorComponent.Web/src/ssr/page-script.ts"],"sourcesContent":["export type MasaBlazorApplication = {\r\n  bar?: number;\r\n  top: number;\r\n  right: number;\r\n  bottom: number;\r\n  left: number;\r\n  footer?: number;\r\n  insetFooter?: number;\r\n};\r\n\r\nexport type MasaBlazorSsrPassiveState = {\r\n  application: MasaBlazorApplication;\r\n};\r\n\r\nexport type MasaBlazorSsrState = {\r\n  culture?: string;\r\n  rtl?: boolean;\r\n  dark?: boolean;\r\n  passive?: MasaBlazorSsrPassiveState;\r\n};\r\n\r\nexport const MASA_BLAZOR_SSR_STATE = \"masablazor@ssr-state\";\r\n\r\nexport function setTheme(dark: boolean) {\r\n  const selector = `.${getThemeCss(!dark)}:not(.theme--independent)`;\r\n  const elements = document.querySelectorAll(selector);\r\n  for (let i = 0; i < elements.length; i++) {\r\n    elements[i].classList.remove(getThemeCss(!dark));\r\n    elements[i].classList.add(getThemeCss(dark));\r\n  }\r\n\r\n  updateStorage({ dark });\r\n}\r\n\r\nexport function toggleTheme() {\r\n  const state = getState();\r\n  if (state) {\r\n    setTheme(!state.dark);\r\n  }\r\n}\r\n\r\nexport function setCulture(culture: string) {\r\n  const app = getApp();\r\n  if (!app) return;\r\n\r\n  updateStorage({ culture });\r\n}\r\n\r\nexport function setRtl(rtl: boolean, updateCache: boolean = true) {\r\n  const app = getApp();\r\n  if (!app) return;\r\n\r\n  const rtlCss = \"m-application--is-rtl\";\r\n  if (!rtl) {\r\n    app.classList.remove(rtlCss);\r\n  } else if (!app.classList.contains(rtlCss)) {\r\n    app.classList.add(rtlCss);\r\n  }\r\n\r\n  if (updateCache) {\r\n    updateStorage({ rtl });\r\n  }\r\n}\r\n\r\nexport function updateMain(application: MasaBlazorApplication) {\r\n  const main: HTMLElement = document.querySelector(\".m-main\");\r\n\r\n  const newApplication: MasaBlazorApplication = {\r\n    top: application.top ?? getPadding(\"Top\"),\r\n    right: application.right ?? getPadding(\"Right\"),\r\n    bottom: application.bottom ?? getPadding(\"Bottom\"),\r\n    left: application.left ?? getPadding(\"Left\"),\r\n  };\r\n\r\n  restoreMain(newApplication);\r\n\r\n  function getPadding(prop: \"Top\" | \"Right\" | \"Bottom\" | \"Left\") {\r\n    return Number(main.style[`padding${prop}`].match(/\\d+/)[0]);\r\n  }\r\n}\r\n\r\nexport function updatePassiveState(passive: MasaBlazorSsrPassiveState) {\r\n  const oldState = getState() ?? {};\r\n  const state: MasaBlazorSsrState = {\r\n    ...oldState,\r\n    passive,\r\n  };\r\n  localStorage.setItem(MASA_BLAZOR_SSR_STATE, JSON.stringify(state));\r\n}\r\n\r\nexport function getThemeCss(dark: boolean) {\r\n  return dark ? \"theme--dark\" : \"theme--light\";\r\n}\r\n\r\nexport function getApp() {\r\n  return document.querySelector(\".m-application\");\r\n}\r\n\r\nfunction updateStorage(obj: Partial<MasaBlazorSsrState>) {\r\n  const stateStr = localStorage.getItem(MASA_BLAZOR_SSR_STATE);\r\n  if (stateStr) {\r\n    const state = JSON.parse(stateStr);\r\n    localStorage.setItem(\r\n      MASA_BLAZOR_SSR_STATE,\r\n      JSON.stringify({\r\n        ...state,\r\n        ...obj,\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport function restoreMain(application: MasaBlazorApplication) {\r\n  const main = document.querySelector(\".m-main\") as HTMLElement;\r\n  if (main && application) {\r\n    main.style.paddingTop = application.top + application.bar + \"px\";\r\n    main.style.paddingRight = application.right + \"px\";\r\n    main.style.paddingBottom =\r\n      application.bottom + application.insetFooter + application.bottom + \"px\";\r\n    main.style.paddingLeft = application.left + \"px\";\r\n  }\r\n}\r\n\r\nexport function getState(): MasaBlazorSsrState {\r\n  const stateStr = localStorage.getItem(MASA_BLAZOR_SSR_STATE);\r\n  if (stateStr) {\r\n    return JSON.parse(stateStr);\r\n  }\r\n  return null;\r\n}\r\n","import { getApp, MASA_BLAZOR_SSR_STATE, MasaBlazorSsrState } from \"./\";\r\nimport { restoreRtl, restoreTheme } from \"./page-script\";\r\n\r\nconst stateStr = localStorage.getItem(MASA_BLAZOR_SSR_STATE);\r\nif (stateStr) {\r\n  const state = JSON.parse(stateStr);\r\n\r\n  restoreTheme(state);\r\n  restoreRtl(state);\r\n} else {\r\n  var application = getApp();\r\n  const isAppDark = application.classList.contains(\"theme--dark\");\r\n  const isAppRtl = application.classList.contains(\"m-application--is-rtl\");\r\n  const stateStr: MasaBlazorSsrState = {\r\n    dark: isAppDark,\r\n    rtl: isAppRtl,\r\n  };\r\n\r\n  localStorage.setItem(MASA_BLAZOR_SSR_STATE, JSON.stringify(stateStr));\r\n}\r\n","import { getThemeCss, MASA_BLAZOR_SSR_STATE, MasaBlazorSsrState, restoreMain, setRtl } from \"./\";\r\n\r\n// Called when the script first gets loaded on the page.\r\nexport function onLoad() {}\r\n\r\n// Called when an enhanced page update occurs, plus once immediately after\r\n// the initial load.\r\nexport function onUpdate() {\r\n  const stateStr = localStorage.getItem(MASA_BLAZOR_SSR_STATE);\r\n  if (!stateStr) return;\r\n\r\n  const state: MasaBlazorSsrState = JSON.parse(stateStr);\r\n  if (!state) return;\r\n\r\n  // restoreMain(state.passive.application);\r\n  restoreTheme(state);\r\n  restoreRtl(state);\r\n}\r\n\r\n// Called when an enhanced page update removes the script from the page.\r\nexport function onDispose() {}\r\n\r\nexport function restoreTheme(state: MasaBlazorSsrState) {\r\n  console.log('restoreTheme', state.dark)\r\n  if (typeof state.dark === \"boolean\") {\r\n    const selector = `.${getThemeCss(!state.dark)}:not(.theme--independent)`;\r\n    const elements = document.querySelectorAll(selector);\r\n    for (let i = 0; i < elements.length; i++) {\r\n      elements[i].classList.remove(getThemeCss(!state.dark));\r\n      elements[i].classList.add(getThemeCss(state.dark));\r\n    }\r\n  }\r\n}\r\n\r\nexport function restoreRtl(state: MasaBlazorSsrState) {\r\n  if (typeof state.rtl === \"boolean\") {\r\n    setRtl(state.rtl, false);\r\n  }\r\n}\r\n"],"names":["MASA_BLAZOR_SSR_STATE","setRtl","rtl","updateCache","app","getApp","rtlCss","classList","contains","add","remove","obj","stateStr","localStorage","getItem","state","JSON","parse","setItem","stringify","Object","assign","updateStorage","getThemeCss","dark","document","querySelector","console","log","selector","elements","querySelectorAll","i","length","restoreTheme","restoreRtl","application"],"mappings":"yBAqBO,MAAMA,EAAwB,gCA2BrBC,EAAOC,EAAcC,GAAuB,GAC1D,MAAMC,EAAMC,IACZ,IAAKD,EAAK,OAEV,MAAME,EAAS,wBACVJ,EAEOE,EAAIG,UAAUC,SAASF,IACjCF,EAAIG,UAAUE,IAAIH,GAFlBF,EAAIG,UAAUG,OAAOJ,GAKnBH,GAuCN,SAAuBQ,GACrB,MAAMC,EAAWC,aAAaC,QAAQd,GACtC,GAAIY,EAAU,CACZ,MAAMG,EAAQC,KAAKC,MAAML,GACzBC,aAAaK,QACXlB,EACAgB,KAAKG,UAASC,OAAAC,OAAAD,OAAAC,OAAA,CAAA,EACTN,GACAJ,IAGR,CACH,CAlDIW,CAAc,CAAEpB,OAEpB,CA4BM,SAAUqB,EAAYC,GAC1B,OAAOA,EAAO,cAAgB,cAChC,UAEgBnB,IACd,OAAOoB,SAASC,cAAc,iBAChC,CC7FA,MAAMd,EAAWC,aAAaC,QAAQd,GACtC,GAAIY,EAAU,CACZ,MAAMG,EAAQC,KAAKC,MAAML,ICiBrB,SAAuBG,GAE3B,GADAY,QAAQC,IAAI,eAAgBb,EAAMS,MACR,kBAAfT,EAAMS,KAAoB,CACnC,MAAMK,EAAW,IAAIN,GAAaR,EAAMS,iCAClCM,EAAWL,SAASM,iBAAiBF,GAC3C,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAASG,OAAQD,IACnCF,EAASE,GAAGzB,UAAUG,OAAOa,GAAaR,EAAMS,OAChDM,EAASE,GAAGzB,UAAUE,IAAIc,EAAYR,EAAMS,MAE/C,CACH,CDzBEU,CAAanB,GC2BT,SAAqBA,GACA,kBAAdA,EAAMb,KACfD,EAAOc,EAAMb,KAAK,EAEtB,CD9BEiC,CAAWpB,EACZ,KAAM,CACL,IAAIqB,EAAc/B,IAClB,MAEMO,EAA+B,CACnCY,KAHgBY,EAAY7B,UAAUC,SAAS,eAI/CN,IAHekC,EAAY7B,UAAUC,SAAS,0BAMhDK,aAAaK,QAAQlB,EAAuBgB,KAAKG,UAAUP,GAC5D"}