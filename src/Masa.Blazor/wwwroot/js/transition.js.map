{"version":3,"file":"transition.js","sources":["../../../BlazorComponent.Web/src/utils/helper.ts","../../../BlazorComponent.Web/src/transition/index.ts"],"sourcesContent":["export function addOnceEventListener (\r\n  el: EventTarget,\r\n  eventName: string,\r\n  cb: (event: Event) => void,\r\n  options: boolean | AddEventListenerOptions = false\r\n): void {\r\n  const once = (event: Event) => {\r\n    cb(event)\r\n    el.removeEventListener(eventName, once, options)\r\n  }\r\n\r\n  el.addEventListener(eventName, once, options)\r\n}\r\n\r\nlet passiveSupported = false\r\ntry {\r\n  if (typeof window !== 'undefined') {\r\n    const testListenerOpts = Object.defineProperty({}, 'passive', {\r\n      get: () => {\r\n        passiveSupported = true\r\n      },\r\n    })\r\n\r\n    window.addEventListener('testListener' as any, testListenerOpts as any, testListenerOpts)\r\n    window.removeEventListener('testListener' as any, testListenerOpts as any, testListenerOpts)\r\n  }\r\n} catch (e) { console.warn(e) } /* eslint-disable-line no-console */\r\nexport { passiveSupported }\r\n\r\nexport function addPassiveEventListener (\r\n  el: EventTarget,\r\n  event: string,\r\n  cb: ((e: any) => void),\r\n  options: {}\r\n): void {\r\n  el.addEventListener(event, cb, passiveSupported ? options : false)\r\n}\r\n\r\nexport function getZIndex (el?: Element | null): number {\r\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return 0\r\n\r\n  const index = +window.getComputedStyle(el).getPropertyValue('z-index')\r\n\r\n  if (!index) return getZIndex(el.parentNode as Element)\r\n  return index\r\n}\r\n\r\n// KeyboardEvent.keyCode aliases\r\nexport const keyCodes = Object.freeze({\r\n  enter: 13,\r\n  tab: 9,\r\n  delete: 46,\r\n  esc: 27,\r\n  space: 32,\r\n  up: 38,\r\n  down: 40,\r\n  left: 37,\r\n  right: 39,\r\n  end: 35,\r\n  home: 36,\r\n  del: 46,\r\n  backspace: 8,\r\n  insert: 45,\r\n  pageup: 33,\r\n  pagedown: 34,\r\n  shift: 16,\r\n})\r\n\r\n/**  Polyfill for Event.prototype.composedPath */\r\nexport function composedPath (e: Event): EventTarget[] {\r\n  if (e.composedPath) return e.composedPath()\r\n\r\n  const path = []\r\n  let el = e.target as Element\r\n\r\n  while (el) {\r\n    path.push(el)\r\n\r\n    if (el.tagName === 'HTML') {\r\n      path.push(document)\r\n      path.push(window)\r\n\r\n      return path\r\n    }\r\n\r\n    el = el.parentElement!\r\n  }\r\n  return path\r\n}\r\n\r\nexport function getBlazorId(el) {\r\n  if (!el) {\r\n    return null;\r\n  }\r\n  let _bl_ = el.getAttributeNames().find(a => a.startsWith('_bl_'))\r\n  if (_bl_) {\r\n    _bl_ = _bl_.substring(4);\r\n  }\r\n\r\n  return _bl_;\r\n}\r\n\r\nexport function getElementSelector(el) {\r\n  if (!(el instanceof Element))\r\n    return;\r\n  var path = [];\r\n  while (el.nodeType === Node.ELEMENT_NODE) {\r\n    var selector = el.nodeName.toLowerCase();\r\n    if (el.id) {\r\n      selector = '#' + el.id;\r\n      path.unshift(selector);\r\n      break;\r\n    } else {\r\n      var sib = el, nth = 1;\r\n      while (sib = sib.previousElementSibling) {\r\n        if (sib.nodeName.toLowerCase() == selector)\r\n          nth++;\r\n      }\r\n      if (nth != 1)\r\n        selector += \":nth-of-type(\" + nth + \")\";\r\n    }\r\n    path.unshift(selector);\r\n    el = el.parentNode;\r\n  }\r\n  return path.join(\" > \");\r\n}\r\n\r\nexport function getEventTarget(target: HTMLElement | EventTarget) {\r\n  const el = target as HTMLElement;\r\n  const eventTarget: MbEventTarget = {};\r\n  const elementReferenceId = el\r\n    .getAttributeNames()\r\n    .find((a) => a.startsWith(\"_bl_\"));\r\n  if (elementReferenceId) {\r\n    eventTarget.elementReferenceId = elementReferenceId;\r\n    eventTarget.selector = `[${elementReferenceId}]`;\r\n  } else {\r\n    eventTarget.selector = getElementSelector(el);\r\n  }\r\n\r\n  eventTarget.class = el.getAttribute(\"class\");\r\n\r\n  return eventTarget;\r\n}\r\n\r\nexport function getDom(elOrString: Element | string | undefined) {\r\n  let element: HTMLElement;\r\n\r\n  try {\r\n    if (!elOrString) {\r\n      element = document.body;\r\n    } else if (typeof elOrString === \"string\") {\r\n      if (elOrString === \"document\") {\r\n        element = document.documentElement;\r\n      } else if (elOrString.indexOf(\"__.__\") > 0) {\r\n        // for example: el__.__parentElement\r\n        let array = elOrString.split(\"__.__\");\r\n        let i = 0;\r\n        let el = document.querySelector(array[i++]);\r\n\r\n        if (el) {\r\n          while (array[i]) {\r\n            el = el[array[i]];\r\n            i++;\r\n          }\r\n        }\r\n\r\n        if (el instanceof HTMLElement) {\r\n          element = el;\r\n        }\r\n      } else {\r\n        element = document.querySelector(elOrString);\r\n      }\r\n    } else {\r\n      element = elOrString as HTMLElement;\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\nexport const canUseDom = !!(\r\n  typeof window !== 'undefined' &&\r\n  typeof document !== 'undefined' &&\r\n  window.document &&\r\n  window.document.createElement\r\n)\r\n\r\nexport function convertToUnit (str: number, unit?: string): string\r\nexport function convertToUnit (str: string | number | null | undefined, unit?: string): string | undefined\r\nexport function convertToUnit (str: string | number | null | undefined, unit = 'px'): string | undefined {\r\n  if (str == null || str === '') {\r\n    return undefined\r\n  } else if (isNaN(+str!)) {\r\n    return String(str)\r\n  } else if (!isFinite(+str!)) {\r\n    return undefined\r\n  } else {\r\n    return `${Number(str)}${unit}`\r\n  }\r\n}","import { getBlazorId } from \"utils/helper\";\r\n\r\nclass Transition {\r\n  el: HTMLElement;\r\n  handle: DotNet.DotNetObject;\r\n\r\n  constructor(elOrSelector: HTMLElement, handle: DotNet.DotNetObject) {\r\n    this.handle = handle;\r\n    this.el = elOrSelector;\r\n    this.el.addEventListener(\"transitionend\", this._onTransitionEnd);\r\n    this.el.addEventListener(\"transitioncancel\", this._onTransitionCancel);\r\n  }\r\n\r\n  _onTransitionEnd = (e: TransitionEvent) => {\r\n    const leaveEnter = this._getTransitionLeaveEnter(e);\r\n    if (!leaveEnter) return;\r\n\r\n    this.handle.invokeMethodAsync(\r\n      \"OnTransitionEnd\",\r\n      getBlazorId(e.target),\r\n      leaveEnter == \"leave\" ? 0 : 1\r\n    );\r\n  };\r\n\r\n  _onTransitionCancel = (e: TransitionEvent) => {\r\n    const leaveEnter = this._getTransitionLeaveEnter(e);\r\n    if (!leaveEnter) return;\r\n\r\n    this.handle.invokeMethodAsync(\r\n      \"OnTransitionCancel\",\r\n      getBlazorId(e.target),\r\n      leaveEnter == \"leave\" ? 0 : 1\r\n    );\r\n  };\r\n\r\n  _getTransitionLeaveEnter(e: TransitionEvent): \"leave\" | \"enter\" | undefined {\r\n    const classNames = e.target.className.split(\" \");\r\n    if (classNames.some((n) => n.includes(\"transition-leave\"))) {\r\n      return \"leave\";\r\n    } else if (classNames.some((n) => n.includes(\"transition-enter\"))) {\r\n      return \"enter\";\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  reset(el: HTMLElement) {\r\n    this.el.removeEventListener(\"transitionend\", this._onTransitionEnd);\r\n    this.el.removeEventListener(\"transitioncancel\", this._onTransitionCancel);\r\n    this.el = el;\r\n    this.el.addEventListener(\"transitionend\", this._onTransitionEnd);\r\n    this.el.addEventListener(\"transitioncancel\", this._onTransitionCancel);\r\n  }\r\n\r\n  dispose() {\r\n    this.el.removeEventListener(\"transitionend\", this._onTransitionEnd);\r\n    this.el.removeEventListener(\"transitioncancel\", this._onTransitionCancel);\r\n    this.handle.dispose();\r\n  }\r\n}\r\n\r\nfunction init(elOrSelector: HTMLElement | string, handle: DotNet.DotNetObject) {\r\n  let el: HTMLElement\r\n  if (typeof elOrSelector === \"string\") {\r\n    el = document.querySelector(elOrSelector);\r\n  } else {\r\n    el = elOrSelector;\r\n  }\r\n\r\n  if (!el) {\r\n    return null;\r\n  }\r\n\r\n  const transitionEl = new Transition(el, handle);\r\n  return transitionEl;\r\n}\r\n\r\nexport { init };\r\n"],"names":["passiveSupported","window","testListenerOpts","Object","defineProperty","get","addEventListener","removeEventListener","e","console","warn","getBlazorId","el","_bl_","getAttributeNames","find","a","startsWith","substring","freeze","enter","tab","delete","esc","space","up","down","left","right","end","home","del","backspace","insert","pageup","pagedown","shift","Transition","constructor","elOrSelector","handle","this","_onTransitionEnd","leaveEnter","_getTransitionLeaveEnter","invokeMethodAsync","target","_onTransitionCancel","classNames","className","split","some","n","includes","reset","dispose","init","document","querySelector"],"mappings":"AAcA,IAAIA,GAAmB,EACvB,IACE,GAAsB,oBAAXC,OAAwB,CACjC,MAAMC,EAAmBC,OAAOC,eAAe,CAAA,EAAI,UAAW,CAC5DC,IAAK,KACHL,GAAmB,CAAI,IAI3BC,OAAOK,iBAAiB,eAAuBJ,EAAyBA,GACxED,OAAOM,oBAAoB,eAAuBL,EAAyBA,EAC5E,CACF,CAAC,MAAOM,GAAKC,QAAQC,KAAKF,EAAI,CAgEzB,SAAUG,EAAYC,GAC1B,IAAKA,EACH,OAAO,KAET,IAAIC,EAAOD,EAAGE,oBAAoBC,MAAKC,GAAKA,EAAEC,WAAW,UAKzD,OAJIJ,IACFA,EAAOA,EAAKK,UAAU,IAGjBL,CACT,CApDwBV,OAAOgB,OAAO,CACpCC,MAAO,GACPC,IAAK,EACLC,OAAQ,GACRC,IAAK,GACLC,MAAO,GACPC,GAAI,GACJC,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,IAAK,GACLC,KAAM,GACNC,IAAK,GACLC,UAAW,EACXC,OAAQ,GACRC,OAAQ,GACRC,SAAU,GACVC,MAAO,KC/DT,MAAMC,EAIJC,YAAYC,EAA2BC,GAOvCC,KAAAC,iBAAoBlC,IAClB,MAAMmC,EAAaF,KAAKG,yBAAyBpC,GAC5CmC,GAELF,KAAKD,OAAOK,kBACV,kBACAlC,EAAYH,EAAEsC,QACA,SAAdH,EAAwB,EAAI,EAC7B,EAGHF,KAAAM,oBAAuBvC,IACrB,MAAMmC,EAAaF,KAAKG,yBAAyBpC,GAC5CmC,GAELF,KAAKD,OAAOK,kBACV,qBACAlC,EAAYH,EAAEsC,QACA,SAAdH,EAAwB,EAAI,EAC7B,EAzBDF,KAAKD,OAASA,EACdC,KAAK7B,GAAK2B,EACVE,KAAK7B,GAAGN,iBAAiB,gBAAiBmC,KAAKC,kBAC/CD,KAAK7B,GAAGN,iBAAiB,mBAAoBmC,KAAKM,oBACnD,CAwBDH,yBAAyBpC,GACvB,MAAMwC,EAAaxC,EAAEsC,OAAOG,UAAUC,MAAM,KAC5C,OAAIF,EAAWG,MAAMC,GAAMA,EAAEC,SAAS,sBAC7B,QACEL,EAAWG,MAAMC,GAAMA,EAAEC,SAAS,sBACpC,aAEP,CAEH,CAEDC,MAAM1C,GACJ6B,KAAK7B,GAAGL,oBAAoB,gBAAiBkC,KAAKC,kBAClDD,KAAK7B,GAAGL,oBAAoB,mBAAoBkC,KAAKM,qBACrDN,KAAK7B,GAAKA,EACV6B,KAAK7B,GAAGN,iBAAiB,gBAAiBmC,KAAKC,kBAC/CD,KAAK7B,GAAGN,iBAAiB,mBAAoBmC,KAAKM,oBACnD,CAEDQ,UACEd,KAAK7B,GAAGL,oBAAoB,gBAAiBkC,KAAKC,kBAClDD,KAAK7B,GAAGL,oBAAoB,mBAAoBkC,KAAKM,qBACrDN,KAAKD,OAAOe,SACb,EAGH,SAASC,EAAKjB,EAAoCC,GAChD,IAAI5B,EAOJ,GALEA,EAD0B,iBAAjB2B,EACJkB,SAASC,cAAcnB,GAEvBA,GAGF3B,EACH,OAAO,KAIT,OADqB,IAAIyB,EAAWzB,EAAI4B,EAE1C"}