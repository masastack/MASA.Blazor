{"version":3,"file":"touch.js","sources":["../../../../Masa.Blazor.JS/src/mixins/touch.ts"],"sourcesContent":["// The code is derived from Vuetify\r\n// License: MIT\r\n// Location: https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/touch.ts\r\n\r\nclass CircularBuffer<T = never> {\r\n  readonly #arr: Array<T> = []\r\n  #pointer = 0\r\n\r\n  constructor (public readonly size: number) {}\r\n\r\n  push (val: T) {\r\n    this.#arr[this.#pointer] = val\r\n    this.#pointer = (this.#pointer + 1) % this.size\r\n  }\r\n\r\n  values (): T[] {\r\n    return this.#arr.slice(this.#pointer).concat(this.#arr.slice(0, this.#pointer))\r\n  }\r\n}\r\n\r\nconst HORIZON = 100 // ms\r\nconst HISTORY = 20 // number of samples to keep\r\n\r\nexport interface Sample {\r\n  t: number\r\n  d: number\r\n}\r\n\r\n/** @see https://android.googlesource.com/platform/frameworks/native/+/master/libs/input/VelocityTracker.cpp */\r\nfunction kineticEnergyToVelocity (work: number) {\r\n  const sqrt2 = 1.41421356237\r\n  return (work < 0 ? -1.0 : 1.0) * Math.sqrt(Math.abs(work)) * sqrt2\r\n}\r\n\r\n/**\r\n * Returns pointer velocity in px/s\r\n */\r\nexport function calculateImpulseVelocity (samples: Sample[]) {\r\n  // The input should be in reversed time order (most recent sample at index i=0)\r\n  if (samples.length < 2) {\r\n    // if 0 or 1 points, velocity is zero\r\n    return 0\r\n  }\r\n  // if (samples[1].t > samples[0].t) {\r\n  //   // Algorithm will still work, but not perfectly\r\n  //   consoleWarn('Samples provided to calculateImpulseVelocity in the wrong order')\r\n  // }\r\n  if (samples.length === 2) {\r\n    // if 2 points, basic linear calculation\r\n    if (samples[1].t === samples[0].t) {\r\n      // consoleWarn(`Events have identical time stamps t=${samples[0].t}, setting velocity = 0`)\r\n      return 0\r\n    }\r\n    return (samples[1].d - samples[0].d) / (samples[1].t - samples[0].t)\r\n  }\r\n  // Guaranteed to have at least 3 points here\r\n  // start with the oldest sample and go forward in time\r\n  let work = 0\r\n  for (let i = samples.length - 1; i > 0; i--) {\r\n    if (samples[i].t === samples[i - 1].t) {\r\n      // consoleWarn(`Events have identical time stamps t=${samples[i].t}, skipping sample`)\r\n      continue\r\n    }\r\n    const vprev = kineticEnergyToVelocity(work) // v[i-1]\r\n    const vcurr = (samples[i].d - samples[i - 1].d) / (samples[i].t - samples[i - 1].t) // v[i]\r\n    work += (vcurr - vprev) * Math.abs(vcurr)\r\n    if (i === samples.length - 1) {\r\n      work *= 0.5\r\n    }\r\n  }\r\n  return kineticEnergyToVelocity(work) * 1000\r\n}\r\n\r\nexport function useVelocity () {\r\n  const touches: Record<number, CircularBuffer<[number, Touch]> | undefined> = {}\r\n\r\n  function addMovement (e: TouchEvent) {\r\n    Array.from(e.changedTouches).forEach(touch => {\r\n      const samples = touches[touch.identifier] ?? (touches[touch.identifier] = new CircularBuffer(HISTORY))\r\n      samples.push([e.timeStamp, touch])\r\n    })\r\n  }\r\n\r\n  function endTouch (e: TouchEvent) {\r\n    Array.from(e.changedTouches).forEach(touch => {\r\n      delete touches[touch.identifier]\r\n    })\r\n  }\r\n\r\n  function getVelocity (id: number) {\r\n    const samples = touches[id]?.values().reverse()\r\n\r\n    if (!samples) {\r\n      throw new Error(`No samples for touch id ${id}`)\r\n    }\r\n\r\n    const newest = samples[0]\r\n    const x: Sample[] = []\r\n    const y: Sample[] = []\r\n    for (const val of samples) {\r\n      if (newest[0] - val[0] > HORIZON) break\r\n\r\n      x.push({ t: val[0], d: val[1].clientX })\r\n      y.push({ t: val[0], d: val[1].clientY })\r\n    }\r\n\r\n    return {\r\n      x: calculateImpulseVelocity(x),\r\n      y: calculateImpulseVelocity(y),\r\n      get direction () {\r\n        const { x, y } = this\r\n        const [absX, absY] = [Math.abs(x), Math.abs(y)]\r\n\r\n        return absX > absY && x >= 0 ? 'right'\r\n          : absX > absY && x <= 0 ? 'left'\r\n          : absY > absX && y >= 0 ? 'down'\r\n          : absY > absX && y <= 0 ? 'up'\r\n          : oops()\r\n      },\r\n    }\r\n  }\r\n\r\n  return { addMovement, endTouch, getVelocity }\r\n}\r\n\r\nfunction oops (): never {\r\n  throw new Error()\r\n}\r\n"],"names":["CircularBuffer","constructor","size","this","_CircularBuffer_arr","set","_CircularBuffer_pointer","push","val","__classPrivateFieldGet","__classPrivateFieldSet","values","slice","concat","kineticEnergyToVelocity","work","Math","sqrt","abs","calculateImpulseVelocity","samples","length","t","d","i","vprev","vcurr","useVelocity","touches","addMovement","e","Array","from","changedTouches","forEach","touch","_a","identifier","timeStamp","endTouch","getVelocity","id","reverse","Error","newest","x","y","clientX","clientY","direction","absX","absY","oops"],"mappings":"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"}