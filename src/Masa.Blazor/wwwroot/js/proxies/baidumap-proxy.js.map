{"version":3,"file":"baidumap-proxy.js","sources":["../../../../BlazorComponent/src/Component/BlazorComponent.Web/src/proxies/maps/baidumap/index.js"],"sourcesContent":["async function init(containerId, initArgs, dotNetObjRef) {\r\n    var map = new BMapGL.Map(containerId);\r\n\r\n    if (initArgs.enableScrollWheelZoom)\r\n        map.enableScrollWheelZoom();\r\n\r\n    map.centerAndZoom(initArgs.center, initArgs.zoom);\r\n\r\n    if (initArgs.dark)\r\n        map.setMapStyleV2({\r\n            styleId: initArgs.darkThemeId\r\n        });\r\n\r\n    map.addEventListener('zoomend', async function (e) {\r\n        await dotNetObjRef.invokeMethodAsync(\"OnJsZoomEnd\", map.getZoom());\r\n    });\r\n\r\n    map.addEventListener('moveend', async function (e) {\r\n        await dotNetObjRef.invokeMethodAsync(\"OnJsMoveEnd\", map.getCenter());\r\n    });\r\n\r\n    return map;\r\n}\r\n\r\nasync function initAndAddCircle(circle, map) {\r\n    var c = new BMapGL.Circle(circle.center, circle.radius, {\r\n        strokeColor: circle.strokeColor,\r\n        strokeWeight: circle.strokeWeight,\r\n        strokeOpacity: circle.strokeOpacity,\r\n        strokeStyle: circle.strokeStyle == 0 ? \"solid\" : \"dashed\",\r\n        fillColor: circle.fillColor,\r\n        fillOpacity: circle.fillOpacity\r\n    });\r\n\r\n    map.addOverlay(c);\r\n\r\n    return c;\r\n}\r\n\r\nasync function initAndAddMarker(marker, map) {\r\n    var m = new BMapGL.Marker(marker.point, {\r\n        offset: marker.offset,\r\n        rotation: marker.rotation,\r\n        title: marker.title\r\n    });\r\n\r\n    map.addOverlay(m);\r\n\r\n    return m;\r\n}\r\n\r\nasync function initAndAddLabel(label, map) {\r\n    var l = new BMapGL.Label(label.content, {\r\n        offset: label.offset,\r\n        position: label.position\r\n    });\r\n\r\n    map.addOverlay(l);\r\n\r\n    return l;\r\n}\r\n\r\nasync function initAndAddPolyline(polyline, map) {\r\n    if (polyline.points == null)\r\n        return null;\r\n    \r\n    var pl = new BMapGL.Polyline(polyline.points, {\r\n        strokeColor: polyline.strokeColor,\r\n        strokeWeight: polyline.strokeWeight,\r\n        strokeOpacity: polyline.strokeOpacity,\r\n        strokeStyle: polyline.strokeStyle == 0 ? \"solid\" : \"dashed\",\r\n        geodesic: polyline.geodesic,\r\n        clip: polyline.clip\r\n    });\r\n\r\n    map.addOverlay(pl);\r\n\r\n    return pl;\r\n}\r\n\r\nconst toBMapGLPoint = (point) => new BMapGL.Point(point.lng, point.lat);\r\n\r\nasync function initAndAddPolygon(polygon, map) {\r\n    if (polygon.points == null)\r\n        return null;\r\n\r\n    var bmapPoints = [];\r\n    polygon.points.forEach(element => {\r\n        bmapPoints.push(toBMapGLPoint(element));\r\n    });\r\n\r\n    var pg = new BMapGL.Polygon(bmapPoints, {\r\n        strokeColor: polygon.strokeColor,\r\n        strokeWeight: polygon.strokeWeight,\r\n        strokeOpacity: polygon.strokeOpacity,\r\n        strokeStyle: polygon.strokeStyle == 0 ? \"solid\" : \"dashed\",\r\n        fillColor: polygon.fillColor,\r\n        fillOpacity: polygon.fillOpacity\r\n    });\r\n\r\n    map.addOverlay(pg);\r\n\r\n    return pg;\r\n}\r\n\r\nexport { init, initAndAddCircle, initAndAddMarker, initAndAddLabel, initAndAddPolyline, initAndAddPolygon }"],"names":["async","init","containerId","initArgs","dotNetObjRef","map","BMapGL","Map","enableScrollWheelZoom","centerAndZoom","center","zoom","dark","setMapStyleV2","styleId","darkThemeId","addEventListener","e","invokeMethodAsync","getZoom","getCenter","initAndAddCircle","circle","c","Circle","radius","strokeColor","strokeWeight","strokeOpacity","strokeStyle","fillColor","fillOpacity","addOverlay","initAndAddMarker","marker","m","Marker","point","offset","rotation","title","initAndAddLabel","label","l","Label","content","position","initAndAddPolyline","polyline","points","pl","Polyline","geodesic","clip","initAndAddPolygon","polygon","bmapPoints","forEach","element","push","Point","lng","lat","pg","Polygon"],"mappings":"AAAAA,eAAeC,EAAKC,EAAaC,EAAUC,GACvC,IAAIC,EAAM,IAAIC,OAAOC,IAAIL,GAoBzB,OAlBIC,EAASK,uBACTH,EAAIG,wBAERH,EAAII,cAAcN,EAASO,OAAQP,EAASQ,MAExCR,EAASS,MACTP,EAAIQ,cAAc,CACdC,QAASX,EAASY,cAG1BV,EAAIW,iBAAiB,WAAWhB,eAAgBiB,SACtCb,EAAac,kBAAkB,cAAeb,EAAIc,UAChE,IAEId,EAAIW,iBAAiB,WAAWhB,eAAgBiB,SACtCb,EAAac,kBAAkB,cAAeb,EAAIe,YAChE,IAEWf,CACX,CAEAL,eAAeqB,EAAiBC,EAAQjB,GACpC,IAAIkB,EAAI,IAAIjB,OAAOkB,OAAOF,EAAOZ,OAAQY,EAAOG,OAAQ,CACpDC,YAAaJ,EAAOI,YACpBC,aAAcL,EAAOK,aACrBC,cAAeN,EAAOM,cACtBC,YAAmC,GAAtBP,EAAOO,YAAmB,QAAU,SACjDC,UAAWR,EAAOQ,UAClBC,YAAaT,EAAOS,cAKxB,OAFA1B,EAAI2B,WAAWT,GAERA,CACX,CAEAvB,eAAeiC,EAAiBC,EAAQ7B,GACpC,IAAI8B,EAAI,IAAI7B,OAAO8B,OAAOF,EAAOG,MAAO,CACpCC,OAAQJ,EAAOI,OACfC,SAAUL,EAAOK,SACjBC,MAAON,EAAOM,QAKlB,OAFAnC,EAAI2B,WAAWG,GAERA,CACX,CAEAnC,eAAeyC,EAAgBC,EAAOrC,GAClC,IAAIsC,EAAI,IAAIrC,OAAOsC,MAAMF,EAAMG,QAAS,CACpCP,OAAQI,EAAMJ,OACdQ,SAAUJ,EAAMI,WAKpB,OAFAzC,EAAI2B,WAAWW,GAERA,CACX,CAEA3C,eAAe+C,EAAmBC,EAAU3C,GACxC,GAAuB,MAAnB2C,EAASC,OACT,OAAO,KAEX,IAAIC,EAAK,IAAI5C,OAAO6C,SAASH,EAASC,OAAQ,CAC1CvB,YAAasB,EAAStB,YACtBC,aAAcqB,EAASrB,aACvBC,cAAeoB,EAASpB,cACxBC,YAAqC,GAAxBmB,EAASnB,YAAmB,QAAU,SACnDuB,SAAUJ,EAASI,SACnBC,KAAML,EAASK,OAKnB,OAFAhD,EAAI2B,WAAWkB,GAERA,CACX,CAIAlD,eAAesD,EAAkBC,EAASlD,GACtC,GAAsB,MAAlBkD,EAAQN,OACR,OAAO,KAEX,IAAIO,EAAa,GACjBD,EAAQN,OAAOQ,SAAQC,IAPL,IAACrB,EAQfmB,EAAWG,MARItB,EAQeqB,EARL,IAAIpD,OAAOsD,MAAMvB,EAAMwB,IAAKxB,EAAMyB,MAQpB,IAG3C,IAAIC,EAAK,IAAIzD,OAAO0D,QAAQR,EAAY,CACpC9B,YAAa6B,EAAQ7B,YACrBC,aAAc4B,EAAQ5B,aACtBC,cAAe2B,EAAQ3B,cACvBC,YAAoC,GAAvB0B,EAAQ1B,YAAmB,QAAU,SAClDC,UAAWyB,EAAQzB,UACnBC,YAAawB,EAAQxB,cAKzB,OAFA1B,EAAI2B,WAAW+B,GAERA,CACX"}