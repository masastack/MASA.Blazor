{"version":3,"file":"monaco-editor-proxy.js","sources":["../../../../BlazorComponent/src/Component/BlazorComponent.Web/src/proxies/monaco-editor/index.ts"],"sourcesContent":["import { editor as MonacoEditor ,Selection} from \"monaco-editor\";\r\n\r\ninterface Monaco {\r\n  editor: typeof MonacoEditor;\r\n}\r\n\r\ndeclare const monaco: Monaco;\r\n\r\nfunction init(id: string, options: MonacoEditor.IStandaloneEditorConstructionOptions) {\r\n  return monaco.editor.create(document.getElementById(id), options);\r\n}\r\n\r\nfunction defineTheme(name,value:MonacoEditor.IStandaloneThemeData){\r\n    monaco.editor.defineTheme(name,value)\r\n}\r\n\r\nfunction getValue(instance: MonacoEditor.IStandaloneCodeEditor) {\r\n  return instance.getValue();\r\n}\r\n\r\nfunction setValue(instance: MonacoEditor.IStandaloneCodeEditor, value) {\r\n  instance.setValue(value);\r\n}\r\n\r\nfunction setTheme(theme: string) {\r\n  monaco.editor.setTheme(theme);\r\n}\r\n\r\nfunction colorizeElement(id:string,options:any){\r\n    monaco.editor.colorizeElement(document.getElementById(id),options);\r\n}\r\n\r\nfunction updateOptions(instance: MonacoEditor.IStandaloneCodeEditor,options:any){\r\n    instance.updateOptions(options);\r\n}\r\n\r\nfunction getModels() {\r\n  return monaco.editor.getModels();\r\n}\r\n\r\nfunction getModel(instance: MonacoEditor.IStandaloneCodeEditor) {\r\n  return instance.getModel();\r\n}\r\n\r\nfunction setModelLanguage(instance: MonacoEditor.IStandaloneCodeEditor, languageId: string) {\r\n  monaco.editor.setModelLanguage(instance.getModel(), languageId);\r\n}\r\nfunction remeasureFonts() {\r\n  monaco.editor.remeasureFonts();\r\n}\r\n\r\nfunction addKeybindingRules(rules: MonacoEditor.IKeybindingRule[]) {\r\n  monaco.editor.addKeybindingRules(rules);\r\n}\r\n\r\nfunction addKeybindingRule(rule: MonacoEditor.IKeybindingRule) {\r\n  monaco.editor.addKeybindingRule(rule);\r\n}\r\n\r\nexport {\r\n  init,\r\n  getValue,\r\n  setValue,\r\n  setTheme,\r\n  getModels,\r\n  getModel,\r\n  setModelLanguage,\r\n  remeasureFonts,\r\n  addKeybindingRules,\r\n  colorizeElement,\r\n  defineTheme,\r\n  updateOptions,\r\n  addKeybindingRule\r\n}"],"names":["init","id","options","monaco","editor","create","document","getElementById","defineTheme","name","value","getValue","instance","setValue","setTheme","theme","colorizeElement","updateOptions","getModels","getModel","setModelLanguage","languageId","remeasureFonts","addKeybindingRules","rules","addKeybindingRule","rule"],"mappings":"AAQA,SAASA,EAAKC,EAAYC,GACxB,OAAOC,OAAOC,OAAOC,OAAOC,SAASC,eAAeN,GAAKC,EAC3D,CAEA,SAASM,EAAYC,EAAKC,GACtBP,OAAOC,OAAOI,YAAYC,EAAKC,EACnC,CAEA,SAASC,EAASC,GAChB,OAAOA,EAASD,UAClB,CAEA,SAASE,EAASD,EAA8CF,GAC9DE,EAASC,SAASH,EACpB,CAEA,SAASI,EAASC,GAChBZ,OAAOC,OAAOU,SAASC,EACzB,CAEA,SAASC,EAAgBf,EAAUC,GAC/BC,OAAOC,OAAOY,gBAAgBV,SAASC,eAAeN,GAAIC,EAC9D,CAEA,SAASe,EAAcL,EAA6CV,GAChEU,EAASK,cAAcf,EAC3B,CAEA,SAASgB,IACP,OAAOf,OAAOC,OAAOc,WACvB,CAEA,SAASC,EAASP,GAChB,OAAOA,EAASO,UAClB,CAEA,SAASC,EAAiBR,EAA8CS,GACtElB,OAAOC,OAAOgB,iBAAiBR,EAASO,WAAYE,EACtD,CACA,SAASC,IACPnB,OAAOC,OAAOkB,gBAChB,CAEA,SAASC,EAAmBC,GAC1BrB,OAAOC,OAAOmB,mBAAmBC,EACnC,CAEA,SAASC,EAAkBC,GACzBvB,OAAOC,OAAOqB,kBAAkBC,EAClC"}