{"version":3,"file":"echarts-proxy.js","sources":["../../../../BlazorComponent/src/Component/BlazorComponent.Web/src/proxies/echarts/index.ts"],"sourcesContent":["function init(elOrString, theme, initOptions) {\r\n  const chart = echarts.init(elOrString, theme, initOptions);\r\n\r\n  window.addEventListener(\"resize\", () => {\r\n    chart.resize();\r\n  });\r\n\r\n  const observer = new IntersectionObserver((entries) => {\r\n    if (entries.some((e) => e.isIntersecting)) {\r\n      chart.resize();\r\n    }\r\n  });\r\n\r\n  observer.observe(chart.getDom());\r\n\r\n  if (!!chart[\"origin_dispose\"]) {\r\n    chart[\"origin_dispose\"] = chart.dispose;\r\n    chart.dispose = () => {\r\n      if (chart.isDisposed()) return;\r\n\r\n      observer.disconnect();\r\n\r\n      if (chart[\"origin_dispose\"]) {\r\n        chart[\"origin_dispose\"]();\r\n      }\r\n    };\r\n  }\r\n\r\n  return chart;\r\n}\r\n\r\nfunction setOption(\r\n  instance: echarts.ECharts,\r\n  option,\r\n  notMerge: boolean = false,\r\n  lazyUpdate: boolean = false\r\n) {\r\n  if (instance) {\r\n    instance.setOption(option, notMerge, lazyUpdate);\r\n  }\r\n}\r\n\r\nexport { init, setOption };\r\n"],"names":["init","elOrString","theme","initOptions","chart","echarts","window","addEventListener","resize","observer","IntersectionObserver","entries","some","e","isIntersecting","observe","getDom","dispose","isDisposed","disconnect","setOption","instance","option","notMerge","lazyUpdate"],"mappings":"AAAA,SAASA,EAAKC,EAAYC,EAAOC,GAC/B,MAAMC,EAAQC,QAAQL,KAAKC,EAAYC,EAAOC,GAE9CG,OAAOC,iBAAiB,UAAU,KAChCH,EAAMI,QAAQ,IAGhB,MAAMC,EAAW,IAAIC,sBAAsBC,IACrCA,EAAQC,MAAMC,GAAMA,EAAEC,kBACxBV,EAAMI,QACP,IAkBH,OAfAC,EAASM,QAAQX,EAAMY,UAEjBZ,EAAsB,iBAC1BA,EAAsB,eAAIA,EAAMa,QAChCb,EAAMa,QAAU,KACVb,EAAMc,eAEVT,EAASU,aAELf,EAAsB,gBACxBA,EAAsB,iBACvB,GAIEA,CACT,CAEA,SAASgB,EACPC,EACAC,EACAC,GAAoB,EACpBC,GAAsB,GAElBH,GACFA,EAASD,UAAUE,EAAQC,EAAUC,EAEzC"}