{"version":3,"file":"markdown-it-proxy.js","sources":["../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/common/entities.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/uc.micro/categories/P/regex.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/mdurl/encode.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/mdurl/decode.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/mdurl/parse.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/mdurl/index.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/mdurl/format.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/uc.micro/properties/Any/regex.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/uc.micro/categories/Cc/regex.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/uc.micro/categories/Z/regex.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/uc.micro/index.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/uc.micro/categories/Cf/regex.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/common/utils.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/helpers/parse_link_destination.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/helpers/parse_link_title.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/helpers/index.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/helpers/parse_link_label.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/renderer.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/ruler.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_core/normalize.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_core/linkify.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_core/replacements.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_core/smartquotes.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/token.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_core/state_core.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/parser_core.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_core/block.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_core/inline.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_core/text_join.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/table.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/blockquote.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/hr.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/list.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/reference.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/common/html_re.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/html_block.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/common/html_blocks.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/heading.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/state_block.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/parser_block.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/code.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/fence.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/lheading.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_block/paragraph.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/text.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/escape.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/linkify.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/newline.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/strikethrough.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/emphasis.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/link.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/image.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/autolink.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/html_inline.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/entity.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/balance_pairs.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/state_inline.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/parser_inline.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/backticks.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/rules_inline/fragments_join.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/linkify-it/lib/re.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/linkify-it/index.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/punycode/punycode.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/index.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/presets/default.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/presets/zero.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/lib/presets/commonmark.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it/index.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it-anchor/dist/markdownItAnchor.mjs","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it-attrs/utils.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it-attrs/patterns.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it-attrs/index.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it-container/index.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it-front-matter/index.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/node_modules/markdown-it-header-sections/index.js","../../../../BlazorComponent/src/Component/BlazorComponent.Web/src/proxies/markdown-it/highlighter.ts","../../../../BlazorComponent/src/Component/BlazorComponent.Web/src/proxies/markdown-it/index.ts"],"sourcesContent":["// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  [ 'text_join',      require('./rules_core/text_join')      ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\n\nmodule.exports = function text_join(state) {\n  var j, l, tokens, curr, max, last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr]; }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch1, ch2, origStr, escapedStr, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false;\n  pos++;\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false;\n\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++;\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info   = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};\n","// Process links like https://example.org/\n\n'use strict';\n\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n\n  pos = state.pos;\n  max = state.posMax;\n\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false;\n\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n\n  proto = match[1];\n\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n\n  url = link.url;\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '');\n\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n\n    token         = state.push('link_open', 'a', 1);\n    token.attrs   = [ [ 'href', fullUrl ] ];\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n\n    token         = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n\n    token         = state.push('link_close', 'a', -1);\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n\n    if (isLinkOpen(token.content))  state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false;\n\n  if (pos + 1 >= max) return false;\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23 /* # */) {\n    match = state.src.slice(pos).match(DIGITAL_RE);\n    if (match) {\n      if (!silent) {\n        code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n\n        token         = state.push('text_special', '', 0);\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        token.markup  = match[0];\n        token.info    = 'entity';\n      }\n      state.pos += match[0].length;\n      return true;\n    }\n  } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token         = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup  = match[0];\n          token.info    = 'entity';\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'linkify',         require('./rules_inline/linkify') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  [ 'fragments_join',  require('./rules_inline/fragments_join') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function fragments_join(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n  opts = opts || {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + '|$)|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + '|$)|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test     = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) return null;\n\n  var m = this.re.schema_at_start.exec(text);\n  if (!m) return null;\n\n  var len = this.testSchemaAt(text, m[2], m[0].length);\n  if (!len) return null;\n\n  this.__schema__     = m[2];\n  this.__index__      = m.index + m[1].length;\n  this.__last_index__ = m.index + m[0].length + len;\n\n  return createMatch(this, 0);\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nmodule.exports = punycode;\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","var e=!1,n={false:\"push\",true:\"unshift\",after:\"push\",before:\"unshift\"},t={isPermalinkSymbol:!0};function r(r,a,i,l){var o;if(!e){var c=\"Using deprecated markdown-it-anchor permalink option, see https://github.com/valeriangalliat/markdown-it-anchor#todo-anchor-or-file\";\"object\"==typeof process&&process&&process.emitWarning?process.emitWarning(c):console.warn(c),e=!0}var s=[Object.assign(new i.Token(\"link_open\",\"a\",1),{attrs:[].concat(a.permalinkClass?[[\"class\",a.permalinkClass]]:[],[[\"href\",a.permalinkHref(r,i)]],Object.entries(a.permalinkAttrs(r,i)))}),Object.assign(new i.Token(\"html_block\",\"\",0),{content:a.permalinkSymbol,meta:t}),new i.Token(\"link_close\",\"a\",-1)];a.permalinkSpace&&i.tokens[l+1].children[n[a.permalinkBefore]](Object.assign(new i.Token(\"text\",\"\",0),{content:\" \"})),(o=i.tokens[l+1].children)[n[a.permalinkBefore]].apply(o,s)}function a(e){return\"#\"+e}function i(e){return{}}var l={class:\"header-anchor\",symbol:\"#\",renderHref:a,renderAttrs:i};function o(e){function n(t){return t=Object.assign({},n.defaults,t),function(n,r,a,i){return e(n,t,r,a,i)}}return n.defaults=Object.assign({},l),n.renderPermalinkImpl=e,n}var c=o(function(e,r,a,i,l){var o,c=[Object.assign(new i.Token(\"link_open\",\"a\",1),{attrs:[].concat(r.class?[[\"class\",r.class]]:[],[[\"href\",r.renderHref(e,i)]],r.ariaHidden?[[\"aria-hidden\",\"true\"]]:[],Object.entries(r.renderAttrs(e,i)))}),Object.assign(new i.Token(\"html_inline\",\"\",0),{content:r.symbol,meta:t}),new i.Token(\"link_close\",\"a\",-1)];if(r.space){var s=\"string\"==typeof r.space?r.space:\" \";i.tokens[l+1].children[n[r.placement]](Object.assign(new i.Token(\"string\"==typeof r.space?\"html_inline\":\"text\",\"\",0),{content:s}))}(o=i.tokens[l+1].children)[n[r.placement]].apply(o,c)});Object.assign(c.defaults,{space:!0,placement:\"after\",ariaHidden:!1});var s=o(c.renderPermalinkImpl);s.defaults=Object.assign({},c.defaults,{ariaHidden:!0});var u=o(function(e,n,t,r,a){var i=[Object.assign(new r.Token(\"link_open\",\"a\",1),{attrs:[].concat(n.class?[[\"class\",n.class]]:[],[[\"href\",n.renderHref(e,r)]],Object.entries(n.renderAttrs(e,r)))})].concat(n.safariReaderFix?[new r.Token(\"span_open\",\"span\",1)]:[],r.tokens[a+1].children,n.safariReaderFix?[new r.Token(\"span_close\",\"span\",-1)]:[],[new r.Token(\"link_close\",\"a\",-1)]);r.tokens[a+1]=Object.assign(new r.Token(\"inline\",\"\",0),{children:i})});Object.assign(u.defaults,{safariReaderFix:!1});var d=o(function(e,r,a,i,l){var o;if(![\"visually-hidden\",\"aria-label\",\"aria-describedby\",\"aria-labelledby\"].includes(r.style))throw new Error(\"`permalink.linkAfterHeader` called with unknown style option `\"+r.style+\"`\");if(![\"aria-describedby\",\"aria-labelledby\"].includes(r.style)&&!r.assistiveText)throw new Error(\"`permalink.linkAfterHeader` called without the `assistiveText` option in `\"+r.style+\"` style\");if(\"visually-hidden\"===r.style&&!r.visuallyHiddenClass)throw new Error(\"`permalink.linkAfterHeader` called without the `visuallyHiddenClass` option in `visually-hidden` style\");var c=i.tokens[l+1].children.filter(function(e){return\"text\"===e.type||\"code_inline\"===e.type}).reduce(function(e,n){return e+n.content},\"\"),s=[],u=[];if(r.class&&u.push([\"class\",r.class]),u.push([\"href\",r.renderHref(e,i)]),u.push.apply(u,Object.entries(r.renderAttrs(e,i))),\"visually-hidden\"===r.style){if(s.push(Object.assign(new i.Token(\"span_open\",\"span\",1),{attrs:[[\"class\",r.visuallyHiddenClass]]}),Object.assign(new i.Token(\"text\",\"\",0),{content:r.assistiveText(c)}),new i.Token(\"span_close\",\"span\",-1)),r.space){var d=\"string\"==typeof r.space?r.space:\" \";s[n[r.placement]](Object.assign(new i.Token(\"string\"==typeof r.space?\"html_inline\":\"text\",\"\",0),{content:d}))}s[n[r.placement]](Object.assign(new i.Token(\"span_open\",\"span\",1),{attrs:[[\"aria-hidden\",\"true\"]]}),Object.assign(new i.Token(\"html_inline\",\"\",0),{content:r.symbol,meta:t}),new i.Token(\"span_close\",\"span\",-1))}else s.push(Object.assign(new i.Token(\"html_inline\",\"\",0),{content:r.symbol,meta:t}));\"aria-label\"===r.style?u.push([\"aria-label\",r.assistiveText(c)]):[\"aria-describedby\",\"aria-labelledby\"].includes(r.style)&&u.push([r.style,e]);var f=[Object.assign(new i.Token(\"link_open\",\"a\",1),{attrs:u})].concat(s,[new i.Token(\"link_close\",\"a\",-1)]);(o=i.tokens).splice.apply(o,[l+3,0].concat(f)),r.wrapper&&(i.tokens.splice(l,0,Object.assign(new i.Token(\"html_block\",\"\",0),{content:r.wrapper[0]+\"\\n\"})),i.tokens.splice(l+3+f.length+1,0,Object.assign(new i.Token(\"html_block\",\"\",0),{content:r.wrapper[1]+\"\\n\"})))});function f(e,n,t,r){var a=e,i=r;if(t&&Object.prototype.hasOwnProperty.call(n,a))throw new Error(\"User defined `id` attribute `\"+e+\"` is not unique. Please fix it in your Markdown to continue.\");for(;Object.prototype.hasOwnProperty.call(n,a);)a=e+\"-\"+i,i+=1;return n[a]=!0,a}function b(e,n){n=Object.assign({},b.defaults,n),e.core.ruler.push(\"anchor\",function(e){for(var t,a={},i=e.tokens,l=Array.isArray(n.level)?(t=n.level,function(e){return t.includes(e)}):function(e){return function(n){return n>=e}}(n.level),o=0;o<i.length;o++){var c=i[o];if(\"heading_open\"===c.type&&l(Number(c.tag.substr(1)))){var s=n.getTokensText(i[o+1].children),u=c.attrGet(\"id\");u=null==u?f(n.slugify(s),a,!1,n.uniqueSlugStartIndex):f(u,a,!0,n.uniqueSlugStartIndex),c.attrSet(\"id\",u),!1!==n.tabIndex&&c.attrSet(\"tabindex\",\"\"+n.tabIndex),\"function\"==typeof n.permalink?n.permalink(u,n,e,o):(n.permalink||n.renderPermalink&&n.renderPermalink!==r)&&n.renderPermalink(u,n,e,o),o=i.indexOf(c),n.callback&&n.callback(c,{slug:u,title:s})}}})}Object.assign(d.defaults,{style:\"visually-hidden\",space:!0,placement:\"after\",wrapper:null}),b.permalink={__proto__:null,legacy:r,renderHref:a,renderAttrs:i,makePermalink:o,linkInsideHeader:c,ariaHidden:s,headerLink:u,linkAfterHeader:d},b.defaults={level:1,slugify:function(e){return encodeURIComponent(String(e).trim().toLowerCase().replace(/\\s+/g,\"-\"))},uniqueSlugStartIndex:1,tabIndex:\"-1\",getTokensText:function(e){return e.filter(function(e){return[\"text\",\"code_inline\"].includes(e.type)}).map(function(e){return e.content}).join(\"\")},permalink:!1,renderPermalink:r,permalinkClass:s.defaults.class,permalinkSpace:s.defaults.space,permalinkSymbol:\"¶\",permalinkBefore:\"before\"===s.defaults.placement,permalinkHref:s.defaults.renderHref,permalinkAttrs:s.defaults.renderAttrs},b.default=b;export default b;\n//# sourceMappingURL=markdownItAnchor.mjs.map\n","/**\n * parse {.class #id key=val} strings\n * @param {string} str: string to parse\n * @param {int} start: where to start parsing (including {)\n * @returns {2d array}: [['key', 'val'], ['class', 'red']]\n */\nexports.getAttrs = function (str, start, options) {\n  // not tab, line feed, form feed, space, solidus, greater than sign, quotation mark, apostrophe and equals sign\n  const allowedKeyChars = /[^\\t\\n\\f />\"'=]/;\n  const pairSeparator = ' ';\n  const keySeparator = '=';\n  const classChar = '.';\n  const idChar = '#';\n\n  const attrs = [];\n  let key = '';\n  let value = '';\n  let parsingKey = true;\n  let valueInsideQuotes = false;\n\n  // read inside {}\n  // start + left delimiter length to avoid beginning {\n  // breaks when } is found or end of string\n  for (let i = start + options.leftDelimiter.length; i < str.length; i++) {\n    if (str.slice(i, i + options.rightDelimiter.length) === options.rightDelimiter) {\n      if (key !== '') { attrs.push([key, value]); }\n      break;\n    }\n    const char_ = str.charAt(i);\n\n    // switch to reading value if equal sign\n    if (char_ === keySeparator && parsingKey) {\n      parsingKey = false;\n      continue;\n    }\n\n    // {.class} {..css-module}\n    if (char_ === classChar && key === '') {\n      if (str.charAt(i + 1) === classChar) {\n        key = 'css-module';\n        i += 1;\n      } else {\n        key = 'class';\n      }\n      parsingKey = false;\n      continue;\n    }\n\n    // {#id}\n    if (char_ === idChar && key === '') {\n      key = 'id';\n      parsingKey = false;\n      continue;\n    }\n\n    // {value=\"inside quotes\"}\n    if (char_ === '\"' && value === '') {\n      valueInsideQuotes = true;\n      continue;\n    }\n    if (char_ === '\"' && valueInsideQuotes) {\n      valueInsideQuotes = false;\n      continue;\n    }\n\n    // read next key/value pair\n    if ((char_ === pairSeparator && !valueInsideQuotes)) {\n      if (key === '') {\n        // beginning or ending space: { .red } vs {.red}\n        continue;\n      }\n      attrs.push([key, value]);\n      key = '';\n      value = '';\n      parsingKey = true;\n      continue;\n    }\n\n    // continue if character not allowed\n    if (parsingKey && char_.search(allowedKeyChars) === -1) {\n      continue;\n    }\n\n    // no other conditions met; append to key/value\n    if (parsingKey) {\n      key += char_;\n      continue;\n    }\n    value += char_;\n  }\n\n  if (options.allowedAttributes && options.allowedAttributes.length) {\n    const allowedAttributes = options.allowedAttributes;\n\n    return attrs.filter(function (attrPair) {\n      const attr = attrPair[0];\n\n      function isAllowedAttribute (allowedAttribute) {\n        return (attr === allowedAttribute\n          || (allowedAttribute instanceof RegExp && allowedAttribute.test(attr))\n        );\n      }\n\n      return allowedAttributes.some(isAllowedAttribute);\n    });\n\n  }\n  return attrs;\n\n};\n\n/**\n * add attributes from [['key', 'val']] list\n * @param {array} attrs: [['key', 'val']]\n * @param {token} token: which token to add attributes\n * @returns token\n */\nexports.addAttrs = function (attrs, token) {\n  for (let j = 0, l = attrs.length; j < l; ++j) {\n    const key = attrs[j][0];\n    if (key === 'class') {\n      token.attrJoin('class', attrs[j][1]);\n    } else if (key === 'css-module') {\n      token.attrJoin('css-module', attrs[j][1]);\n    } else {\n      token.attrPush(attrs[j]);\n    }\n  }\n  return token;\n};\n\n/**\n * Does string have properly formatted curly?\n *\n * start: '{.a} asdf'\n * end: 'asdf {.a}'\n * only: '{.a}'\n *\n * @param {string} where to expect {} curly. start, end or only.\n * @return {function(string)} Function which testes if string has curly.\n */\nexports.hasDelimiters = function (where, options) {\n\n  if (!where) {\n    throw new Error('Parameter `where` not passed. Should be \"start\", \"end\" or \"only\".');\n  }\n\n  /**\n   * @param {string} str\n   * @return {boolean}\n   */\n  return function (str) {\n    // we need minimum three chars, for example {b}\n    const minCurlyLength = options.leftDelimiter.length + 1 + options.rightDelimiter.length;\n    if (!str || typeof str !== 'string' || str.length < minCurlyLength) {\n      return false;\n    }\n\n    function validCurlyLength (curly) {\n      const isClass = curly.charAt(options.leftDelimiter.length) === '.';\n      const isId = curly.charAt(options.leftDelimiter.length) === '#';\n      return (isClass || isId)\n        ? curly.length >= (minCurlyLength + 1)\n        : curly.length >= minCurlyLength;\n    }\n\n    let start, end, slice, nextChar;\n    const rightDelimiterMinimumShift = minCurlyLength - options.rightDelimiter.length;\n    switch (where) {\n    case 'start':\n      // first char should be {, } found in char 2 or more\n      slice = str.slice(0, options.leftDelimiter.length);\n      start = slice === options.leftDelimiter ? 0 : -1;\n      end = start === -1 ? -1 : str.indexOf(options.rightDelimiter, rightDelimiterMinimumShift);\n      // check if next character is not one of the delimiters\n      nextChar = str.charAt(end + options.rightDelimiter.length);\n      if (nextChar && options.rightDelimiter.indexOf(nextChar) !== -1) {\n        end = -1;\n      }\n      break;\n\n    case 'end':\n      // last char should be }\n      start = str.lastIndexOf(options.leftDelimiter);\n      end = start === -1 ? -1 : str.indexOf(options.rightDelimiter, start + rightDelimiterMinimumShift);\n      end = end === str.length - options.rightDelimiter.length ? end : -1;\n      break;\n\n    case 'only':\n      // '{.a}'\n      slice = str.slice(0, options.leftDelimiter.length);\n      start = slice === options.leftDelimiter ? 0 : -1;\n      slice = str.slice(str.length - options.rightDelimiter.length);\n      end = slice === options.rightDelimiter ? str.length - options.rightDelimiter.length : -1;\n      break;\n\n    default:\n      throw new Error(`Unexpected case ${where}, expected 'start', 'end' or 'only'`);\n    }\n\n    return start !== -1 && end !== -1 && validCurlyLength(str.substring(start, end + options.rightDelimiter.length));\n  };\n};\n\n/**\n * Removes last curly from string.\n */\nexports.removeDelimiter = function (str, options) {\n  const start = escapeRegExp(options.leftDelimiter);\n  const end = escapeRegExp(options.rightDelimiter);\n\n  const curly = new RegExp(\n    '[ \\\\n]?' + start + '[^' + start + end + ']+' + end + '$'\n  );\n  const pos = str.search(curly);\n\n  return pos !== -1 ? str.slice(0, pos) : str;\n};\n\n/**\n * Escapes special characters in string s such that the string\n * can be used in `new RegExp`. For example \"[\" becomes \"\\\\[\".\n *\n * @param {string} s Regex string.\n * @return {string} Escaped string.\n */\nfunction escapeRegExp (s) {\n  return s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\nexports.escapeRegExp = escapeRegExp;\n\n/**\n * find corresponding opening block\n */\nexports.getMatchingOpeningToken = function (tokens, i) {\n  if (tokens[i].type === 'softbreak') {\n    return false;\n  }\n  // non closing blocks, example img\n  if (tokens[i].nesting === 0) {\n    return tokens[i];\n  }\n\n  const level = tokens[i].level;\n  const type = tokens[i].type.replace('_close', '_open');\n\n  for (; i >= 0; --i) {\n    if (tokens[i].type === type && tokens[i].level === level) {\n      return tokens[i];\n    }\n  }\n\n  return false;\n};\n\n\n/**\n * from https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js\n */\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nexports.escapeHtml = function (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n};\n","'use strict';\n/**\n * If a pattern matches the token stream,\n * then run transform.\n */\n\nconst utils = require('./utils.js');\n\nmodule.exports = options => {\n  const __hr = new RegExp('^ {0,3}[-*_]{3,} ?'\n                          + utils.escapeRegExp(options.leftDelimiter)\n                          + '[^' + utils.escapeRegExp(options.rightDelimiter) + ']');\n\n  return ([\n    {\n      /**\n       * ```python {.cls}\n       * for i in range(10):\n       *     print(i)\n       * ```\n       */\n      name: 'fenced code blocks',\n      tests: [\n        {\n          shift: 0,\n          block: true,\n          info: utils.hasDelimiters('end', options)\n        }\n      ],\n      transform: (tokens, i) => {\n        const token = tokens[i];\n        const start = token.info.lastIndexOf(options.leftDelimiter);\n        const attrs = utils.getAttrs(token.info, start, options);\n        utils.addAttrs(attrs, token);\n        token.info = utils.removeDelimiter(token.info, options);\n      }\n    }, {\n      /**\n       * bla `click()`{.c} ![](img.png){.d}\n       *\n       * differs from 'inline attributes' as it does\n       * not have a closing tag (nesting: -1)\n       */\n      name: 'inline nesting 0',\n      tests: [\n        {\n          shift: 0,\n          type: 'inline',\n          children: [\n            {\n              shift: -1,\n              type: (str) => str === 'image' || str === 'code_inline'\n            }, {\n              shift: 0,\n              type: 'text',\n              content: utils.hasDelimiters('start', options)\n            }\n          ]\n        }\n      ],\n      transform: (tokens, i, j) => {\n        const token = tokens[i].children[j];\n        const endChar = token.content.indexOf(options.rightDelimiter);\n        const attrToken = tokens[i].children[j - 1];\n        const attrs = utils.getAttrs(token.content, 0, options);\n        utils.addAttrs(attrs, attrToken);\n        if (token.content.length === (endChar + options.rightDelimiter.length)) {\n          tokens[i].children.splice(j, 1);\n        } else {\n          token.content = token.content.slice(endChar + options.rightDelimiter.length);\n        }\n      }\n    }, {\n      /**\n       * | h1 |\n       * | -- |\n       * | c1 |\n       *\n       * {.c}\n       */\n      name: 'tables',\n      tests: [\n        {\n          // let this token be i, such that for-loop continues at\n          // next token after tokens.splice\n          shift: 0,\n          type: 'table_close'\n        }, {\n          shift: 1,\n          type: 'paragraph_open'\n        }, {\n          shift: 2,\n          type: 'inline',\n          content: utils.hasDelimiters('only', options)\n        }\n      ],\n      transform: (tokens, i) => {\n        const token = tokens[i + 2];\n        const tableOpen = utils.getMatchingOpeningToken(tokens, i);\n        const attrs = utils.getAttrs(token.content, 0, options);\n        // add attributes\n        utils.addAttrs(attrs, tableOpen);\n        // remove <p>{.c}</p>\n        tokens.splice(i + 1, 3);\n      }\n    }, {\n      /**\n       * *emphasis*{.with attrs=1}\n       */\n      name: 'inline attributes',\n      tests: [\n        {\n          shift: 0,\n          type: 'inline',\n          children: [\n            {\n              shift: -1,\n              nesting: -1  // closing inline tag, </em>{.a}\n            }, {\n              shift: 0,\n              type: 'text',\n              content: utils.hasDelimiters('start', options)\n            }\n          ]\n        }\n      ],\n      transform: (tokens, i, j) => {\n        const token = tokens[i].children[j];\n        const content = token.content;\n        const attrs = utils.getAttrs(content, 0, options);\n        const openingToken = utils.getMatchingOpeningToken(tokens[i].children, j - 1);\n        utils.addAttrs(attrs, openingToken);\n        token.content = content.slice(content.indexOf(options.rightDelimiter) + options.rightDelimiter.length);\n      }\n    }, {\n      /**\n       * - item\n       * {.a}\n       */\n      name: 'list softbreak',\n      tests: [\n        {\n          shift: -2,\n          type: 'list_item_open'\n        }, {\n          shift: 0,\n          type: 'inline',\n          children: [\n            {\n              position: -2,\n              type: 'softbreak'\n            }, {\n              position: -1,\n              type: 'text',\n              content: utils.hasDelimiters('only', options)\n            }\n          ]\n        }\n      ],\n      transform: (tokens, i, j) => {\n        const token = tokens[i].children[j];\n        const content = token.content;\n        const attrs = utils.getAttrs(content, 0, options);\n        let ii = i - 2;\n        while (tokens[ii - 1] &&\n          tokens[ii - 1].type !== 'ordered_list_open' &&\n          tokens[ii - 1].type !== 'bullet_list_open') { ii--; }\n        utils.addAttrs(attrs, tokens[ii - 1]);\n        tokens[i].children = tokens[i].children.slice(0, -2);\n      }\n    }, {\n      /**\n       * - nested list\n       *   - with double \\n\n       *   {.a} <-- apply to nested ul\n       *\n       * {.b} <-- apply to root <ul>\n       */\n      name: 'list double softbreak',\n      tests: [\n        {\n          // let this token be i = 0 so that we can erase\n          // the <p>{.a}</p> tokens below\n          shift: 0,\n          type: (str) =>\n            str === 'bullet_list_close' ||\n            str === 'ordered_list_close'\n        }, {\n          shift: 1,\n          type: 'paragraph_open'\n        }, {\n          shift: 2,\n          type: 'inline',\n          content: utils.hasDelimiters('only', options),\n          children: (arr) => arr.length === 1\n        }, {\n          shift: 3,\n          type: 'paragraph_close'\n        }\n      ],\n      transform: (tokens, i) => {\n        const token = tokens[i + 2];\n        const content = token.content;\n        const attrs = utils.getAttrs(content, 0, options);\n        const openingToken = utils.getMatchingOpeningToken(tokens, i);\n        utils.addAttrs(attrs, openingToken);\n        tokens.splice(i + 1, 3);\n      }\n    }, {\n      /**\n       * - end of {.list-item}\n       */\n      name: 'list item end',\n      tests: [\n        {\n          shift: -2,\n          type: 'list_item_open'\n        }, {\n          shift: 0,\n          type: 'inline',\n          children: [\n            {\n              position: -1,\n              type: 'text',\n              content: utils.hasDelimiters('end', options)\n            }\n          ]\n        }\n      ],\n      transform: (tokens, i, j) => {\n        const token = tokens[i].children[j];\n        const content = token.content;\n        const attrs = utils.getAttrs(content, content.lastIndexOf(options.leftDelimiter), options);\n        utils.addAttrs(attrs, tokens[i - 2]);\n        const trimmed = content.slice(0, content.lastIndexOf(options.leftDelimiter));\n        token.content = last(trimmed) !== ' ' ?\n          trimmed : trimmed.slice(0, -1);\n      }\n    }, {\n      /**\n       * something with softbreak\n       * {.cls}\n       */\n      name: '\\n{.a} softbreak then curly in start',\n      tests: [\n        {\n          shift: 0,\n          type: 'inline',\n          children: [\n            {\n              position: -2,\n              type: 'softbreak'\n            }, {\n              position: -1,\n              type: 'text',\n              content: utils.hasDelimiters('only', options)\n            }\n          ]\n        }\n      ],\n      transform: (tokens, i, j) => {\n        const token = tokens[i].children[j];\n        const attrs = utils.getAttrs(token.content, 0, options);\n        // find last closing tag\n        let ii = i + 1;\n        while (tokens[ii + 1] && tokens[ii + 1].nesting === -1) { ii++; }\n        const openingToken = utils.getMatchingOpeningToken(tokens, ii);\n        utils.addAttrs(attrs, openingToken);\n        tokens[i].children = tokens[i].children.slice(0, -2);\n      }\n    }, {\n      /**\n       * horizontal rule --- {#id}\n       */\n      name: 'horizontal rule',\n      tests: [\n        {\n          shift: 0,\n          type: 'paragraph_open'\n        },\n        {\n          shift: 1,\n          type: 'inline',\n          children: (arr) => arr.length === 1,\n          content: (str) => str.match(__hr) !== null,\n        },\n        {\n          shift: 2,\n          type: 'paragraph_close'\n        }\n      ],\n      transform: (tokens, i) => {\n        const token = tokens[i];\n        token.type = 'hr';\n        token.tag = 'hr';\n        token.nesting = 0;\n        const content = tokens[i + 1].content;\n        const start = content.lastIndexOf(options.leftDelimiter);\n        const attrs = utils.getAttrs(content, start, options);\n        utils.addAttrs(attrs, token);\n        token.markup = content;\n        tokens.splice(i + 1, 2);\n      }\n    }, {\n      /**\n       * end of {.block}\n       */\n      name: 'end of block',\n      tests: [\n        {\n          shift: 0,\n          type: 'inline',\n          children: [\n            {\n              position: -1,\n              content: utils.hasDelimiters('end', options),\n              type: (t) => t !== 'code_inline' && t !== 'math_inline'\n            }\n          ]\n        }\n      ],\n      transform: (tokens, i, j) => {\n        const token = tokens[i].children[j];\n        const content = token.content;\n        const attrs = utils.getAttrs(content, content.lastIndexOf(options.leftDelimiter), options);\n        let ii = i + 1;\n        while (tokens[ii + 1] && tokens[ii + 1].nesting === -1) { ii++; }\n        const openingToken = utils.getMatchingOpeningToken(tokens, ii);\n        utils.addAttrs(attrs, openingToken);\n        const trimmed = content.slice(0, content.lastIndexOf(options.leftDelimiter));\n        token.content = last(trimmed) !== ' ' ?\n          trimmed : trimmed.slice(0, -1);\n      }\n    }\n  ]);\n};\n\n// get last element of array or string\nfunction last(arr) {\n  return arr.slice(-1)[0];\n}\n","'use strict';\n\nconst patternsConfig = require('./patterns.js');\n\nconst defaultOptions = {\n  leftDelimiter: '{',\n  rightDelimiter: '}',\n  allowedAttributes: []\n};\n\nmodule.exports = function attributes(md, options_) {\n  let options = Object.assign({}, defaultOptions);\n  options = Object.assign(options, options_);\n\n  const patterns = patternsConfig(options);\n\n  function curlyAttrs(state) {\n    const tokens = state.tokens;\n\n    for (let i = 0; i < tokens.length; i++) {\n      for (let p = 0; p < patterns.length; p++) {\n        const pattern = patterns[p];\n        let j = null; // position of child with offset 0\n        const match = pattern.tests.every(t => {\n          const res = test(tokens, i, t);\n          if (res.j !== null) { j = res.j; }\n          return res.match;\n        });\n        if (match) {\n          pattern.transform(tokens, i, j);\n          if (pattern.name === 'inline attributes' || pattern.name === 'inline nesting 0') {\n            // retry, may be several inline attributes\n            p--;\n          }\n        }\n      }\n    }\n  }\n\n  md.core.ruler.before('linkify', 'curly_attributes', curlyAttrs);\n};\n\n/**\n * Test if t matches token stream.\n *\n * @param {array} tokens\n * @param {number} i\n * @param {object} t Test to match.\n * @return {object} { match: true|false, j: null|number }\n */\nfunction test(tokens, i, t) {\n  const res = {\n    match: false,\n    j: null  // position of child\n  };\n\n  const ii = t.shift !== undefined\n    ? i + t.shift\n    : t.position;\n\n  if (t.shift !== undefined && ii < 0) {\n    // we should never shift to negative indexes (rolling around to back of array)\n    return res;\n  }\n\n  const token = get(tokens, ii);  // supports negative ii\n\n\n  if (token === undefined) { return res; }\n\n  for (const key of Object.keys(t)) {\n    if (key === 'shift' || key === 'position') { continue; }\n\n    if (token[key] === undefined) { return res; }\n\n    if (key === 'children' && isArrayOfObjects(t.children)) {\n      if (token.children.length === 0) {\n        return res;\n      }\n      let match;\n      const childTests = t.children;\n      const children = token.children;\n      if (childTests.every(tt => tt.position !== undefined)) {\n        // positions instead of shifts, do not loop all children\n        match = childTests.every(tt => test(children, tt.position, tt).match);\n        if (match) {\n          // we may need position of child in transform\n          const j = last(childTests).position;\n          res.j = j >= 0 ? j : children.length + j;\n        }\n      } else {\n        for (let j = 0; j < children.length; j++) {\n          match = childTests.every(tt => test(children, j, tt).match);\n          if (match) {\n            res.j = j;\n            // all tests true, continue with next key of pattern t\n            break;\n          }\n        }\n      }\n\n      if (match === false) { return res; }\n\n      continue;\n    }\n\n    switch (typeof t[key]) {\n    case 'boolean':\n    case 'number':\n    case 'string':\n      if (token[key] !== t[key]) { return res; }\n      break;\n    case 'function':\n      if (!t[key](token[key])) { return res; }\n      break;\n    case 'object':\n      if (isArrayOfFunctions(t[key])) {\n        const r = t[key].every(tt => tt(token[key]));\n        if (r === false) { return res; }\n        break;\n      }\n    // fall through for objects !== arrays of functions\n    default:\n      throw new Error(`Unknown type of pattern test (key: ${key}). Test should be of type boolean, number, string, function or array of functions.`);\n    }\n  }\n\n  // no tests returned false -> all tests returns true\n  res.match = true;\n  return res;\n}\n\nfunction isArrayOfObjects(arr) {\n  return Array.isArray(arr) && arr.length && arr.every(i => typeof i === 'object');\n}\n\nfunction isArrayOfFunctions(arr) {\n  return Array.isArray(arr) && arr.length && arr.every(i => typeof i === 'function');\n}\n\n/**\n * Get n item of array. Supports negative n, where -1 is last\n * element in array.\n * @param {array} arr\n * @param {number} n\n */\nfunction get(arr, n) {\n  return n >= 0 ? arr[n] : arr[arr.length + n];\n}\n\n// get last element of array, safe - returns {} if not found\nfunction last(arr) {\n  return arr.slice(-1)[0] || {};\n}\n","// Process block-level custom containers\n//\n'use strict';\n\n\nmodule.exports = function container_plugin(md, name, options) {\n\n  // Second param may be useful if you decide\n  // to increase minimal allowed marker length\n  function validateDefault(params/*, markup*/) {\n    return params.trim().split(' ', 2)[0] === name;\n  }\n\n  function renderDefault(tokens, idx, _options, env, slf) {\n\n    // add a class to the opening tag\n    if (tokens[idx].nesting === 1) {\n      tokens[idx].attrJoin('class', name);\n    }\n\n    return slf.renderToken(tokens, idx, _options, env, slf);\n  }\n\n  options = options || {};\n\n  var min_markers = 3,\n      marker_str  = options.marker || ':',\n      marker_char = marker_str.charCodeAt(0),\n      marker_len  = marker_str.length,\n      validate    = options.validate || validateDefault,\n      render      = options.render || renderDefault;\n\n  function container(state, startLine, endLine, silent) {\n    var pos, nextLine, marker_count, markup, params, token,\n        old_parent, old_line_max,\n        auto_closed = false,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // Check out the first character quickly,\n    // this should filter out most of non-containers\n    //\n    if (marker_char !== state.src.charCodeAt(start)) { return false; }\n\n    // Check out the rest of the marker string\n    //\n    for (pos = start + 1; pos <= max; pos++) {\n      if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n        break;\n      }\n    }\n\n    marker_count = Math.floor((pos - start) / marker_len);\n    if (marker_count < min_markers) { return false; }\n    pos -= (pos - start) % marker_len;\n\n    markup = state.src.slice(start, pos);\n    params = state.src.slice(pos, max);\n    if (!validate(params, markup)) { return false; }\n\n    // Since start is found, we can report success here in validation mode\n    //\n    if (silent) { return true; }\n\n    // Search for the end of the block\n    //\n    nextLine = startLine;\n\n    for (;;) {\n      nextLine++;\n      if (nextLine >= endLine) {\n        // unclosed block should be autoclosed by end of document.\n        // also block seems to be autoclosed by end of parent\n        break;\n      }\n\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (start < max && state.sCount[nextLine] < state.blkIndent) {\n        // non-empty line with negative indent should stop the list:\n        // - ```\n        //  test\n        break;\n      }\n\n      if (marker_char !== state.src.charCodeAt(start)) { continue; }\n\n      if (state.sCount[nextLine] - state.blkIndent >= 4) {\n        // closing fence should be indented less than 4 spaces\n        continue;\n      }\n\n      for (pos = start + 1; pos <= max; pos++) {\n        if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n          break;\n        }\n      }\n\n      // closing code fence must be at least as long as the opening one\n      if (Math.floor((pos - start) / marker_len) < marker_count) { continue; }\n\n      // make sure tail has spaces only\n      pos -= (pos - start) % marker_len;\n      pos = state.skipSpaces(pos);\n\n      if (pos < max) { continue; }\n\n      // found!\n      auto_closed = true;\n      break;\n    }\n\n    old_parent = state.parentType;\n    old_line_max = state.lineMax;\n    state.parentType = 'container';\n\n    // this will prevent lazy continuations from ever going past our end marker\n    state.lineMax = nextLine;\n\n    token        = state.push('container_' + name + '_open', 'div', 1);\n    token.markup = markup;\n    token.block  = true;\n    token.info   = params;\n    token.map    = [ startLine, nextLine ];\n\n    state.md.block.tokenize(state, startLine + 1, nextLine);\n\n    token        = state.push('container_' + name + '_close', 'div', -1);\n    token.markup = state.src.slice(start, pos);\n    token.block  = true;\n\n    state.parentType = old_parent;\n    state.lineMax = old_line_max;\n    state.line = nextLine + (auto_closed ? 1 : 0);\n\n    return true;\n  }\n\n  md.block.ruler.before('fence', 'container_' + name, container, {\n    alt: [ 'paragraph', 'reference', 'blockquote', 'list' ]\n  });\n  md.renderer.rules['container_' + name + '_open'] = render;\n  md.renderer.rules['container_' + name + '_close'] = render;\n};\n","// Process front matter and pass to cb\n'use strict';\n\nmodule.exports = function front_matter_plugin(md, cb) {\n  var min_markers = 3,\n      marker_str  = '-',\n      marker_char = marker_str.charCodeAt(0),\n      marker_len  = marker_str.length;\n\n  function frontMatter(state, startLine, endLine, silent) {\n    var pos,\n        nextLine,\n        marker_count,\n        token,\n        old_parent,\n        old_line_max,\n        start_content,\n        auto_closed = false,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // Check out the first character of the first line quickly,\n    // this should filter out non-front matter\n    if (startLine !== 0 || marker_char !== state.src.charCodeAt(0)) {\n      return false;\n    }\n\n    // Check out the rest of the marker string\n    // while pos <= 3\n    for (pos = start + 1; pos <= max; pos++) {\n      if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n        start_content = pos + 1;\n        break;\n      }\n    }\n\n    marker_count = Math.floor((pos - start) / marker_len);\n\n    if (marker_count < min_markers) {\n      return false;\n    }\n    pos -= (pos - start) % marker_len;\n\n    // Since start is found, we can report success here in validation mode\n    if (silent) {\n      return true;\n    }\n\n    // Search for the end of the block\n    nextLine = startLine;\n\n    for (;;) {\n      nextLine++;\n      if (nextLine >= endLine) {\n        // unclosed block should be autoclosed by end of document.\n        // also block seems to be autoclosed by end of parent\n        break;\n      }\n\n      if (state.src.slice(start, max) === '...') {\n        break;\n      }\n\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (start < max && state.sCount[nextLine] < state.blkIndent) {\n        // non-empty line with negative indent should stop the list:\n        // - ```\n        //  test\n        break;\n      }\n\n      if (marker_char !== state.src.charCodeAt(start)) {\n        continue;\n      }\n\n      if (state.sCount[nextLine] - state.blkIndent >= 4) {\n        // closing fence should be indented less than 4 spaces\n        continue;\n      }\n\n      for (pos = start + 1; pos <= max; pos++) {\n        if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n          break;\n        }\n      }\n\n      // closing code fence must be at least as long as the opening one\n      if (Math.floor((pos - start) / marker_len) < marker_count) {\n        continue;\n      }\n\n      // make sure tail has spaces only\n      pos -= (pos - start) % marker_len;\n      pos = state.skipSpaces(pos);\n\n      if (pos < max) {\n        continue;\n      }\n\n      // found!\n      auto_closed = true;\n      break;\n    }\n\n    old_parent = state.parentType;\n    old_line_max = state.lineMax;\n    state.parentType = 'container';\n\n    // this will prevent lazy continuations from ever going past our end marker\n    state.lineMax = nextLine;\n\n    token        = state.push('front_matter', null, 0);\n    token.hidden = true;\n    token.markup = state.src.slice(startLine, pos);\n    token.block  = true;\n    token.map    = [ startLine, pos ];\n    token.meta   = state.src.slice(start_content, start - 1);\n\n    state.parentType = old_parent;\n    state.lineMax = old_line_max;\n    state.line = nextLine + (auto_closed ? 1 : 0);\n\n    cb(token.meta);\n\n    return true;\n  }\n\n  md.block.ruler.before(\n    'table',\n    'front_matter',\n    frontMatter,\n    {\n      alt: [\n        'paragraph',\n        'reference',\n        'blockquote',\n        'list' \n      ]\n    }\n  );\n};\n","\nmodule.exports = function headerSections(md) {\n\n  function addSections(state) {\n    var tokens = [];  // output\n    var Token = state.Token;\n    var sections = [];\n    var nestedLevel = 0;\n\n    function openSection(attrs) {\n      var t = new Token('section_open', 'section', 1);\n      t.block = true;\n      t.attrs = attrs && attrs.map(function (attr) { return [attr[0], attr[1]] });  // copy\n      return t;\n    }\n\n    function closeSection() {\n      var t = new Token('section_close', 'section', -1);\n      t.block = true;\n      return t;\n    }\n\n    function closeSections(section) {\n      while (last(sections) && section.header <= last(sections).header) {\n        sections.pop();\n        tokens.push(closeSection());\n      }\n    }\n\n    function closeSectionsToCurrentNesting(nesting) {\n      while (last(sections) && nesting < last(sections).nesting) {\n        sections.pop();\n        tokens.push(closeSection());\n      }\n    }\n\n    function closeAllSections() {\n      while (sections.pop()) {\n        tokens.push(closeSection());\n      }\n    }\n\n    for (var i = 0, l = state.tokens.length; i < l; i++) {\n      var token = state.tokens[i];\n\n      // record level of nesting\n      if (token.type.search('heading') !== 0) {\n        nestedLevel += token.nesting;\n      }\n      if (last(sections) && nestedLevel < last(sections).nesting) {\n        closeSectionsToCurrentNesting(nestedLevel);\n      }\n\n      // add sections before headers\n      if (token.type == 'heading_open') {\n        var section = {\n          header: headingLevel(token.tag),\n          nesting: nestedLevel\n        };\n        if (last(sections) && section.header <= last(sections).header) {\n          closeSections(section);\n        }\n        tokens.push(openSection(token.attrs));\n        if (token.attrIndex('id') !== -1) {\n          // remove ID from token\n          token.attrs.splice(token.attrIndex('id'), 1);\n        }\n        sections.push(section);\n      }\n\n      tokens.push(token);\n    }  // end for every token\n    closeAllSections();\n\n    state.tokens = tokens;\n  }\n\n  md.core.ruler.push('header_sections', addSections);\n\n};\n\nfunction headingLevel(header) {\n  return parseInt(header.charAt(1));\n}\n\nfunction last(arr) {\n  return arr.slice(-1)[0];\n}\n","declare const Prism: Prism;\r\ndeclare const hljs: hljs;\r\n\r\nfunction getHighlighter() {\r\n  try {\r\n    if (Prism) {\r\n      return {\r\n        getLanguage(lang: string) {\r\n          return Prism.languages[lang];\r\n        },\r\n        highlight(code: string, lang: string) {\r\n          return Prism.highlight(code, Prism.languages[lang], lang);\r\n        },\r\n      };\r\n    }\r\n  } catch (error) {}\r\n\r\n  try {\r\n    if (hljs) {\r\n      return {\r\n        getLanguage(lang: string) {\r\n          return hljs.getLanguage(lang);\r\n        },\r\n        highlight(code: string, lang: string) {\r\n          return hljs.highlight(code, { language: lang }).value;\r\n        },\r\n      };\r\n    }\r\n  } catch (error) {}\r\n\r\n  return undefined;\r\n}\r\n\r\nexport function highlight(code: string, lang: string) {\r\n  const highlighter = getHighlighter();\r\n\r\n  if (!highlighter) {\r\n    console.warn(\r\n      `Highlighter(Prismjs or Highlight.js) is required!`\r\n    );\r\n    return code;\r\n  }\r\n\r\n  if (!lang) {\r\n    return code;\r\n  }\r\n\r\n  lang = getLangCodeFromExtension(lang.toLowerCase());\r\n\r\n  if (highlighter.getLanguage(lang)) {\r\n    try {\r\n      return highlighter.highlight(code, lang);\r\n    } catch (error) {\r\n      console.error(\r\n        `Syntax highlight for language ${lang} failed.`\r\n      );\r\n      return code;\r\n    }\r\n  } else {\r\n    console.warn(\r\n      `[markdown-it-proxy] Syntax highlight for language \"${lang}\" is not supported.`\r\n    );\r\n    return code;\r\n  }\r\n}\r\n\r\nexport function highlightToStream(str: string, lang: string): ArrayBuffer {\r\n  var htmlCode = highlight(str, lang);\r\n  return new TextEncoder().encode(htmlCode);\r\n}\r\n\r\nfunction getLangCodeFromExtension(extension) {\r\n  const extensionMap = {\r\n    cs: \"csharp\",\r\n    md: \"markdown\",\r\n    ts: \"typescript\",\r\n    py: \"python\",\r\n    razor: \"cshtml\",\r\n    sh: \"bash\",\r\n    yml: \"yaml\",\r\n  };\r\n\r\n  return extensionMap[extension] || extension;\r\n}\r\n","import MarkdownIt from \"markdown-it\";\r\nimport markdownItAnchor from \"markdown-it-anchor\";\r\nimport markdownItAttrs from \"markdown-it-attrs\";\r\nimport markdownItContainer from \"markdown-it-container\";\r\nimport markdownItFrontMatter from \"markdown-it-front-matter\";\r\nimport markdownItHeaderSections from \"markdown-it-header-sections\";\r\n\r\nimport { highlight, highlightToStream } from \"./highlighter\";\r\n\r\ntype MarkdownParser = {\r\n  md: MarkdownIt;\r\n  scope?: string;\r\n  useContainer: (name: string) => void;\r\n  defaultSlugify: (s: string) => string;\r\n  afterRenderCallbacks: (() => void)[];\r\n  frontMatter: {\r\n    meta?: string;\r\n    cb: (s: string) => void;\r\n  };\r\n  toc: {\r\n    contents: any;\r\n    cb: (tocMarkdown, tocArray, tocHtml) => void;\r\n  };\r\n};\r\n\r\nfunction create(\r\n  options: MarkdownIt.Options = {},\r\n  enableHeaderSections: boolean = false,\r\n  anchorOptions = null,\r\n  scope: string = null\r\n) {\r\n  options = { ...options, highlight };\r\n\r\n  const parser = {\r\n    scope,\r\n    defaultSlugify: hashString,\r\n    afterRenderCallbacks: [],\r\n    frontMatter: {},\r\n    toc: {},\r\n  } as MarkdownParser;\r\n\r\n  parser.frontMatter.meta = undefined;\r\n  parser.frontMatter.cb = (s) => {\r\n    parser.frontMatter.meta = s;\r\n  };\r\n\r\n  parser.toc.contents = [];\r\n  parser.toc.cb = (_, array) => {\r\n    parser.toc.contents = array;\r\n  };\r\n\r\n  const md: MarkdownIt = new MarkdownIt(options)\r\n    .use(markdownItAttrs)\r\n    .use(markdownItFrontMatter, parser.frontMatter.cb);\r\n\r\n  parser.md = md;\r\n  parser.useContainer = (name) => md.use(markdownItContainer, name);\r\n\r\n  if (anchorOptions) {\r\n    let slugify = parser.defaultSlugify;\r\n    if (window.MasaBlazor.markdownItAnchorSlugify) {\r\n      slugify = (s) => window.MasaBlazor.markdownItAnchorSlugify(scope, s);\r\n    }\r\n\r\n    md.use(markdownItAnchor, {\r\n      level: anchorOptions.level,\r\n      permalink: anchorOptions.permalink,\r\n      permalinkSymbol: anchorOptions.permalinkSymbol,\r\n      permalinkClass: anchorOptions.permalinkClass,\r\n      slugify,\r\n      callback: (_token, info) => {\r\n        parser.toc.contents.push({\r\n          content: info.title,\r\n          anchor: info.slug,\r\n          level: _token.markup.length,\r\n        });\r\n      },\r\n    });\r\n  }\r\n\r\n  if (enableHeaderSections) {\r\n    md.use(markdownItHeaderSections);\r\n  }\r\n\r\n  if (window.MasaBlazor && window.MasaBlazor.markdownItRules) {\r\n    window.MasaBlazor.markdownItRules(parser);\r\n  }\r\n\r\n  return parser;\r\n}\r\n\r\nfunction parse(parser: MarkdownParser, src: string) {\r\n  const { markup } = parseAll(parser, src);\r\n  return markup;\r\n}\r\n\r\nfunction parseAll(parser: MarkdownParser, src: string) {\r\n  if (parser) {\r\n    parser.frontMatter.meta = undefined;\r\n    parser.toc.contents = [];\r\n\r\n    try {\r\n      const markup = parser.md.render(src);\r\n\r\n      return {\r\n        frontMatter: parser.frontMatter.meta,\r\n        markup: markup,\r\n        toc: parser.toc.contents,\r\n      };\r\n    } catch (error) {\r\n      console.log(\"markdown-it-proxy error:\", error);\r\n    }\r\n  }\r\n\r\n  return {};\r\n}\r\n\r\nfunction afterRender(parser: MarkdownParser) {\r\n  if (parser.afterRenderCallbacks) {\r\n    while (parser.afterRenderCallbacks.length > 0) {\r\n      const cb = parser.afterRenderCallbacks.shift();\r\n      cb && cb();\r\n    }\r\n  }\r\n}\r\n\r\nfunction hashString(str: string) {\r\n  let slug = String(str)\r\n    .trim()\r\n    .toLowerCase()\r\n    .replace(/[\\s,.[\\]{}()/]+/g, \"-\")\r\n    .replace(/[^a-z0-9 -]/g, (c) => c.charCodeAt(0).toString(16))\r\n    .replace(/-{2,}/g, \"-\")\r\n    .replace(/^-*|-*$/g, \"\");\r\n\r\n  if (slug.charAt(0).match(/[^a-z]/g)) {\r\n    slug = \"section-\" + slug;\r\n  }\r\n\r\n  return encodeURIComponent(slug);\r\n}\r\n\r\nexport { create, parse, parseAll, afterRender, highlight, highlightToStream };\r\n"],"names":["exports","regex","encodeCache","encode","string","exclude","keepEscaped","i","l","code","nextCode","cache","result","defaultChars","ch","String","fromCharCode","test","push","toString","toUpperCase","slice","length","charCodeAt","getEncodeCache","encodeURIComponent","componentChars","encode_1","decodeCache","decode","getDecodeCache","replace","seq","b1","b2","b3","b4","chr","parseInt","decode_1","Url","this","protocol","slashes","auth","port","hostname","hash","search","pathname","protocolPattern","portPattern","simplePathPattern","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","javascript","slashedProtocol","http","https","ftp","gopher","file","prototype","parse","url","slashesDenoteHost","lowerProto","hec","rest","trim","split","simplePath","exec","proto","toLowerCase","substr","match","atSign","hostEnd","indexOf","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","validParts","notHost","bit","unshift","join","qm","u","mdurl","require$$0","require$$1","format","require$$3","uc_micro","Any","Cc","Cf","P","Z","require$$4","_hasOwnProperty","Object","hasOwnProperty","has","object","key","call","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","RegExp","source","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","require$$2","ucmicro","assign","obj","sources","Array","arguments","forEach","TypeError","keys","isString","_class","unescapeMd","str","unescapeAll","escaped","entity","name","replaceEntityPattern","escapeHtml","arrayReplaceAt","src","pos","newElements","isSpace","isWhiteSpace","isMdAsciiPunct","isPunctChar","escapeRE","normalizeReference","helpers","parseLinkLabel","state","start","disableNested","level","found","marker","prevPos","labelEnd","max","posMax","oldPos","md","inline","skipToken","parseLinkDestination","ok","lines","parseLinkTitle","default_rules","Renderer","rules","code_inline","tokens","idx","options","env","slf","token","renderAttrs","content","code_block","fence","highlighted","arr","tmpAttrs","tmpToken","info","langName","langAttrs","highlight","attrIndex","attrs","langPrefix","image","renderInlineAsText","children","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","nextToken","needLf","hidden","block","nesting","tag","type","renderInline","len","render","renderer","Ruler","__rules__","__cache__","__find__","__compile__","self","chains","rule","enabled","alt","altName","chain","fn","at","index","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","isArray","enableOnly","disable","getRules","chainName","ruler","NEWLINES_RE","NULL_RE","isLinkClose","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","t","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","lastIndex","single","quotes","Token","map","markup","meta","attrPush","attrData","attrSet","value","attrGet","attrJoin","StateCore","inlineMode","state_core","_rules","tok","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","linkify","pretest","normalizeLink","validateLink","schema","normalizeLinkText","blkIdx","typographer","curr","last","Core","process","State","require$$8","parser_core","getLine","line","bMarks","tShift","eMarks","escapedSplit","isEscaped","current","substring","skipBulletListMarker","startLine","skipOrderedListMarker","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","html_re","block_names","HTML_SEQUENCES","StateBlock","s","indent","offset","indent_found","sCount","bsCount","blkIndent","lineMax","tight","ddIndent","listIndent","parentType","isEmpty","skipEmptyLines","from","skipSpaces","skipSpacesBack","min","skipChars","skipCharsBack","getLines","begin","end","keepLastLF","lineIndent","first","queue","lineStart","state_block","endLine","silent","lineText","nextLine","columns","columnCount","aligns","tableLines","tbodyLines","oldParentType","terminate","terminatorRules","firstCh","secondCh","shift","pop","params","mem","haveEndMarker","adjustTab","initial","lastLineEmpty","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","tokenize","cnt","contentStart","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","Number","Math","markTightParagraphs","_endLine","destEndPos","destEndLineNo","href","label","res","title","references","html","tmp","ParserBlock","hasEmptyLines","maxNesting","outTokens","require$$12","parser_block","isTerminatorChar","SCHEME_RE","ESCAPED","postProcess","delimiters","startDelim","endDelim","loneMarkers","strikethrough","scanned","scanDelims","open","can_open","close","can_close","tokens_meta","isStrong","emphasis","EMAIL_RE","AUTOLINK_RE","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","StateInline","pending","pendingLevel","_prev_delimiters","backticks","backticksScanned","linkLevel","pushPending","token_meta","canSplitWord","count","left_flanking","right_flanking","state_inline","link","matchAtStart","pmax","ws","ch1","ch2","origStr","escapedStr","matchStart","matchEnd","openerLength","closerLength","require$$6","require$$7","labelStart","ref","parseReference","lc","isLetter","_rules2","ParserInline","ruler2","require$$15","parser_inline","re","opts","src_Any","src_Cc","src_Z","src_P","src_ZPCc","src_ZCc","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","tail","no_http","mailto","tlds_default","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","isRegExp","createValidator","normalize","alias","slist","filter","schema_test","schema_search","schema_at_start","__index__","__text_cache__","resetScanCache","Match","__last_index__","__schema__","raw","createMatch","LinkifyIt","schemas","reduce","acc","add","definition","set","m","ml","me","next","tld_pos","testSchemaAt","keepOld","sort","el","reverse","linkifyIt","maxInt","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","floor","stringFromCharCode","error","RangeError","mapDomain","parts","encoded","array","ucs2decode","output","counter","extra","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","base","input","inputLength","n","bias","basic","oldi","w","codePoint","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","utils","ParserCore","require$$5","punycode","version","ucs2","toASCII","toUnicode","config","default","components","core","zero","rules2","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","er","MarkdownIt","presetName","configure","presets","missed","use","plugin","args","apply","parseInline","e","false","true","isPermalinkSymbol","a","o","emitWarning","console","warn","permalinkClass","permalinkHref","entries","permalinkAttrs","permalinkSymbol","permalinkSpace","permalinkBefore","class","symbol","renderHref","defaults","renderPermalinkImpl","ariaHidden","space","placement","safariReaderFix","d","includes","style","assistiveText","visuallyHiddenClass","f","wrapper","b","getTokensText","slugify","uniqueSlugStartIndex","tabIndex","permalink","renderPermalink","callback","slug","__proto__","legacy","makePermalink","linkInsideHeader","headerLink","linkAfterHeader","escapeRegExp","getAttrs","allowedKeyChars","parsingKey","valueInsideQuotes","leftDelimiter","rightDelimiter","char_","charAt","allowedAttributes","attrPair","attr","some","allowedAttribute","addAttrs","hasDelimiters","where","minCurlyLength","rightDelimiterMinimumShift","curly","isClass","isId","validCurlyLength","removeDelimiter","getMatchingOpeningToken","patternsConfig","__hr","tests","transform","endChar","attrToken","tableOpen","openingToken","position","ii","trimmed","markdownItAttrs","options_","patterns","p","pattern","every","undefined","get","childTests","tt","isArrayOfFunctions","markdownItContainer","marker_str","marker_char","marker_len","_options","marker_count","old_parent","old_line_max","auto_closed","markdownItFrontMatter","cb","start_content","markdownItHeaderSections","header","sections","nestedLevel","openSection","closeSection","closeSections","section","closeSectionsToCurrentNesting","closeAllSections","lang","highlighter","Prism","getLanguage","languages","hljs","language","getHighlighter","extension","cs","ts","py","razor","sh","yml","highlightToStream","htmlCode","TextEncoder","create","enableHeaderSections","anchorOptions","scope","parser","defaultSlugify","hashString","afterRenderCallbacks","frontMatter","toc","contents","_","useContainer","window","MasaBlazor","markdownItAnchorSlugify","markdownItAnchor","_token","anchor","markdownItRules","parseAll","log","afterRender"],"mappings":"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"}