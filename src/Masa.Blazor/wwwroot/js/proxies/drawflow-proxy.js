class t{constructor(t,e,o){this.mousedown=new MouseEvent("mousedown",{view:window,bubbles:!0,cancelable:!1}),this.mouseup=new MouseEvent("mouseup",{view:window,bubbles:!0,cancelable:!1});var i=document.querySelector(t);this.editor=new Drawflow(i),this.editor.start(),this.editor.editor_mode=o,this.editor.on("nodeCreated",(function(t){e.invokeMethodAsync("OnNodeCreated",t.toString())})),this.editor.on("nodeRemoved",(function(t){e.invokeMethodAsync("OnNodeRemoved",t.toString())})),this.editor.on("nodeSelected",(function(t){e.invokeMethodAsync("OnNodeSelected",t.toString())})),this.editor.on("nodeUnselected",(function(t){e.invokeMethodAsync("OnNodeUnselected",t.toString())})),this.editor.on("nodeDataChanged",(function(t){e.invokeMethodAsync("OnNodeDataChanged",t.toString())})),this.editor.on("import",(function(t){e.invokeMethodAsync("OnImport")}))}setMode(t){this.editor.editor_mode=t}addNode(t,e,o,i,d,n,r,s,a={},h){if("fixed"==this.editor.editor_mode)return null;const c=i*(this.editor.precanvas.clientWidth/(this.editor.precanvas.clientWidth*this.editor.zoom))-this.editor.precanvas.getBoundingClientRect().x*(this.editor.precanvas.clientWidth/(this.editor.precanvas.clientWidth*this.editor.zoom))-n,l=d*(this.editor.precanvas.clientHeight/(this.editor.precanvas.clientHeight*this.editor.zoom))-this.editor.precanvas.getBoundingClientRect().y*(this.editor.precanvas.clientHeight/(this.editor.precanvas.clientHeight*this.editor.zoom))-r;return this.editor.addNode(t,e,o,c,l,s,a,h,!1).toString()}removeNodeId(t){this.editor.removeNodeId(t)}getNodeFromId(t){const e=this.editor.getNodeFromId(t);return e.id=e.id.toString(),e}updateNodeDataFromId(t,e){this.editor.updateNodeDataFromId(t,e),this.editor.dispatch("nodeDataChanged",t)}updateNodeHtml(t,e){this.editor.drawflow.drawflow.Home.data[t].html=e}addNodeInput(t){this.editor.addNodeInput(t)}addNodeOutput(t){this.editor.addNodeOutput(t)}removeNodeInput(t,e){this.editor.removeNodeInput(t,e)}removeNodeOutput(t,e){this.editor.removeNodeOutput(t,e)}clear(){this.editor.clear()}export(t=!1){const e=this.editor.export();return JSON.stringify(e,null,t?2:null)}import(t){const e=JSON.parse(t);this.editor.import(e)}focusNode(t){document.querySelector(`#node-${t} .drawflow_content_node`).dispatchEvent(this.mousedown),document.querySelector(`#node-${t} .drawflow_content_node`).dispatchEvent(this.mouseup)}centerNode(t,e){const o=document.getElementById(`node-${t}`),i=this.editor.drawflow.drawflow.Home.data[t].pos_x,d=this.editor.drawflow.drawflow.Home.data[t].pos_y,n=o.clientWidth,r=o.clientHeight,s=this.editor.precanvas.clientWidth/2-i-n/2,a=this.editor.precanvas.clientHeight/2-d-r/2,h=this.editor.zoom;if(this.setTranslate(s,a,h),e){const t=50,e=500;o.style.transition=`all ${e/1e3}s ease 0s`,window.setTimeout((()=>{o.style.transform="scale(1.1)"}),t),window.setTimeout((()=>{o.style.transform="scale(1.0)"}),t+e),window.setTimeout((()=>{o.style.transition="",o.style.transform=""}),t+2*e)}this.focusNode(t)}setTranslate(t,e,o){this.editor.canvas_x=t,this.editor.canvas_y=e;let i=o;this.editor.zoom=1,this.editor.precanvas.style.transform="translate("+this.editor.canvas_x+"px, "+this.editor.canvas_y+"px) scale("+this.editor.zoom+")",this.editor.zoom=i,this.editor.zoom_last_value=1,this.editor.zoom_refresh()}}function e(e,o,i="edit"){return new t(e,o,i)}export{e as init};
//# sourceMappingURL=drawflow-proxy.js.map
