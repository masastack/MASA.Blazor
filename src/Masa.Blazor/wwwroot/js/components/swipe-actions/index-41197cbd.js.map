{"version":3,"file":"index-41197cbd.js","sources":["../../../../../Masa.Blazor.JS/src/components/swipe-actions/index.ts"],"sourcesContent":["import { useVelocity } from '../../mixins/touch';\r\n\r\nexport interface SwipeActionsOptions {\r\n  /** 滑动阈值，超过此值才会打开/关闭 */\r\n  threshold?: number;\r\n  /** 动画持续时间 */\r\n  duration?: number;\r\n  /** 是否禁用滑动 */\r\n  disabled?: boolean;\r\n}\r\n\r\nexport interface SwipeActionsState {\r\n  /** 当前偏移量 */\r\n  offset: number;\r\n  /** 当前位置 */\r\n  position: 'left' | 'right' | 'center';\r\n  /** 是否正在拖拽 */\r\n  dragging: boolean;\r\n}\r\n\r\nexport function useTouch(wrapperElement: HTMLElement, options: SwipeActionsOptions = {}) {\r\n  const {\r\n    threshold = 0.5,\r\n    duration = 300,\r\n    disabled = false\r\n  } = options;\r\n\r\n  const velocity = useVelocity();\r\n\r\n  let state: SwipeActionsState = {\r\n    offset: 0,\r\n    position: 'center',\r\n    dragging: false\r\n  };\r\n\r\n  let startX = 0;\r\n  let startOffset = 0;\r\n  let touchId: number | null = null;\r\n  let isMouseDown = false;\r\n\r\n  // 获取左右元素的宽度\r\n  function getElementWidths() {\r\n    const leftElement = wrapperElement.querySelector('.m-swipe-actions__left') as HTMLElement;\r\n    const rightElement = wrapperElement.querySelector('.m-swipe-actions__right') as HTMLElement;\r\n\r\n    const leftWidth = leftElement ? leftElement.offsetWidth : 0;\r\n    const rightWidth = rightElement ? rightElement.offsetWidth : 0;\r\n\r\n    return { leftWidth, rightWidth };\r\n  }\r\n\r\n  // 设置wrapper的transform和transition\r\n  function setTransform(offset: number, withTransition = false) {\r\n    const style = wrapperElement.style;\r\n    style.transform = `translate3d(${offset}px, 0, 0)`;\r\n    style.transitionDuration = withTransition ? `${duration}ms` : '0ms';\r\n\r\n    state.offset = offset;\r\n  }\r\n\r\n  // 获取目标偏移量\r\n  function getTargetOffset(currentOffset: number, velocityX: number): number {\r\n    const { leftWidth, rightWidth } = getElementWidths();\r\n    const absOffset = Math.abs(currentOffset);\r\n    const direction = currentOffset > 0 ? 1 : -1;\r\n\r\n    // 根据速度判断意图\r\n    if (Math.abs(velocityX) > 500) {\r\n      if (velocityX > 0 && leftWidth > 0) {\r\n        return leftWidth;\r\n      }\r\n      if (velocityX < 0 && rightWidth > 0) {\r\n        return -rightWidth;\r\n      }\r\n      return 0;\r\n    }\r\n\r\n    // 根据阈值判断\r\n    if (direction > 0 && leftWidth > 0) {\r\n      return absOffset > leftWidth * threshold ? leftWidth : 0;\r\n    }\r\n\r\n    if (direction < 0 && rightWidth > 0) {\r\n      return absOffset > rightWidth * threshold ? -rightWidth : 0;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  // 更新位置状态\r\n  function updatePosition(offset: number) {\r\n    let newPosition: 'left' | 'right' | 'center' = 'center';\r\n\r\n    if (offset > 0) {\r\n      newPosition = 'left';\r\n    } else if (offset < 0) {\r\n      newPosition = 'right';\r\n    }\r\n\r\n    if (state.position !== newPosition) {\r\n      state.position = newPosition;\r\n    }\r\n  }\r\n\r\n  // 触摸开始\r\n  function onTouchStart(event: TouchEvent) {\r\n    if (disabled || event.touches.length !== 1) return;\r\n\r\n    const touch = event.touches[0];\r\n    touchId = touch.identifier;\r\n    startX = touch.clientX;\r\n    startOffset = state.offset;\r\n    state.dragging = true;\r\n\r\n    velocity.addMovement(event);\r\n\r\n    console.log('Touch start:', touch.clientX, touch.clientY);\r\n\r\n    // 阻止默认行为，防止页面滚动\r\n    event.preventDefault();\r\n  }\r\n\r\n  // 触摸移动\r\n  function onTouchMove(event: TouchEvent) {\r\n    if (disabled || !state.dragging || touchId === null) return;\r\n\r\n    velocity.addMovement(event);\r\n\r\n    const touch = Array.from(event.touches).find(t => t.identifier === touchId);\r\n    if (!touch) return;\r\n\r\n    const deltaX = touch.clientX - startX;\r\n    let newOffset = startOffset + deltaX;\r\n    const { leftWidth, rightWidth } = getElementWidths();\r\n\r\n    // 限制滑动范围\r\n    if (newOffset > 0) {\r\n      // 向右滑动，显示左侧区域\r\n      if (leftWidth <= 0) {\r\n        newOffset = 0;\r\n      } else {\r\n        newOffset = Math.min(newOffset, leftWidth);\r\n      }\r\n    } else {\r\n      // 向左滑动，显示右侧区域\r\n      if (rightWidth <= 0) {\r\n        newOffset = 0;\r\n      } else {\r\n        newOffset = Math.max(newOffset, -rightWidth);\r\n      }\r\n    }\r\n\r\n    setTransform(newOffset, false);\r\n    event.preventDefault();\r\n  }\r\n\r\n  // 触摸结束\r\n  function onTouchEnd(event: TouchEvent) {\r\n    if (disabled || !state.dragging || touchId === null) return;\r\n\r\n    state.dragging = false;\r\n\r\n    try {\r\n      const velocityData = velocity.getVelocity(touchId);\r\n      const targetOffset = getTargetOffset(state.offset, velocityData.x);\r\n\r\n      setTransform(targetOffset, true);\r\n      updatePosition(targetOffset);\r\n    } catch (error) {\r\n      // 如果获取速度失败，使用当前偏移量判断\r\n      const targetOffset = getTargetOffset(state.offset, 0);\r\n      setTransform(targetOffset, true);\r\n      updatePosition(targetOffset);\r\n    }\r\n\r\n    velocity.endTouch(event);\r\n    touchId = null;\r\n  }\r\n\r\n  // 触摸取消\r\n  function onTouchCancel(event: TouchEvent) {\r\n    if (disabled || !state.dragging) return;\r\n\r\n    state.dragging = false;\r\n    velocity.endTouch(event);\r\n    touchId = null;\r\n\r\n    // 恢复到最近的稳定位置\r\n    const targetOffset = getTargetOffset(state.offset, 0);\r\n    setTransform(targetOffset, true);\r\n    updatePosition(targetOffset);\r\n  }\r\n\r\n  // 鼠标按下\r\n  function onMouseDown(event: MouseEvent) {\r\n    if (disabled || event.button !== 0 || isMouseDown) return; // 只处理左键\r\n\r\n    isMouseDown = true;\r\n    startX = event.clientX;\r\n    startOffset = state.offset;\r\n    state.dragging = true;\r\n\r\n    // 为鼠标事件创建一个模拟的touch事件用于速度计算\r\n    const mockTouch = {\r\n      identifier: 0,\r\n      clientX: event.clientX,\r\n      clientY: event.clientY,\r\n      pageX: event.pageX,\r\n      pageY: event.pageY,\r\n      target: event.target,\r\n      radiusX: 0,\r\n      radiusY: 0,\r\n      rotationAngle: 0,\r\n      force: 1\r\n    };\r\n\r\n    const mockTouchEvent = {\r\n      timeStamp: Date.now(),\r\n      touches: [mockTouch],\r\n      changedTouches: [mockTouch],\r\n      targetTouches: [mockTouch],\r\n      preventDefault: () => {},\r\n      stopPropagation: () => {}\r\n    } as any;\r\n\r\n    velocity.addMovement(mockTouchEvent);\r\n\r\n    console.log('Mouse down:', event.clientX, event.clientY);\r\n\r\n    // 阻止默认行为，防止选中文本\r\n    event.preventDefault();\r\n  }\r\n\r\n  // 鼠标移动\r\n  function onMouseMove(event: MouseEvent) {\r\n    if (disabled || !state.dragging || !isMouseDown) return;\r\n\r\n    // 为鼠标事件创建一个模拟的touch事件用于速度计算\r\n    const mockTouch = {\r\n      identifier: 0,\r\n      clientX: event.clientX,\r\n      clientY: event.clientY,\r\n      pageX: event.pageX,\r\n      pageY: event.pageY,\r\n      target: event.target,\r\n      radiusX: 0,\r\n      radiusY: 0,\r\n      rotationAngle: 0,\r\n      force: 1\r\n    };\r\n\r\n    const mockTouchEvent = {\r\n      timeStamp: Date.now(),\r\n      touches: [mockTouch],\r\n      changedTouches: [mockTouch],\r\n      targetTouches: [mockTouch],\r\n      preventDefault: () => {},\r\n      stopPropagation: () => {}\r\n    } as any;\r\n\r\n    velocity.addMovement(mockTouchEvent);\r\n\r\n    const deltaX = event.clientX - startX;\r\n    let newOffset = startOffset + deltaX;\r\n    const { leftWidth, rightWidth } = getElementWidths();\r\n\r\n    // 限制滑动范围\r\n    if (newOffset > 0) {\r\n      // 向右滑动，显示左侧区域\r\n      if (leftWidth <= 0) {\r\n        newOffset = 0;\r\n      } else {\r\n        newOffset = Math.min(newOffset, leftWidth);\r\n      }\r\n    } else {\r\n      // 向左滑动，显示右侧区域\r\n      if (rightWidth <= 0) {\r\n        newOffset = 0;\r\n      } else {\r\n        newOffset = Math.max(newOffset, -rightWidth);\r\n      }\r\n    }\r\n\r\n    setTransform(newOffset, false);\r\n    event.preventDefault();\r\n  }\r\n\r\n  // 鼠标释放\r\n  function onMouseUp(event: MouseEvent) {\r\n    if (disabled || !state.dragging || !isMouseDown) return;\r\n\r\n    state.dragging = false;\r\n    isMouseDown = false;\r\n\r\n    try {\r\n      const velocityData = velocity.getVelocity(0); // 使用identifier 0\r\n      const targetOffset = getTargetOffset(state.offset, velocityData.x);\r\n\r\n      setTransform(targetOffset, true);\r\n      updatePosition(targetOffset);\r\n    } catch (error) {\r\n      // 如果获取速度失败，使用当前偏移量判断\r\n      const targetOffset = getTargetOffset(state.offset, 0);\r\n      setTransform(targetOffset, true);\r\n      updatePosition(targetOffset);\r\n    }\r\n\r\n    // 为鼠标事件创建一个模拟的touch事件用于结束速度计算\r\n    const mockTouch = {\r\n      identifier: 0,\r\n      clientX: event.clientX,\r\n      clientY: event.clientY,\r\n      pageX: event.pageX,\r\n      pageY: event.pageY,\r\n      target: event.target,\r\n      radiusX: 0,\r\n      radiusY: 0,\r\n      rotationAngle: 0,\r\n      force: 1\r\n    };\r\n\r\n    const mockTouchEvent = {\r\n      timeStamp: Date.now(),\r\n      touches: [],\r\n      changedTouches: [mockTouch],\r\n      targetTouches: [],\r\n      preventDefault: () => {},\r\n      stopPropagation: () => {}\r\n    } as any;\r\n\r\n    velocity.endTouch(mockTouchEvent);\r\n  }\r\n\r\n  // 鼠标离开\r\n  function onMouseLeave(event: MouseEvent) {\r\n    if (disabled || !state.dragging || !isMouseDown) return;\r\n\r\n    state.dragging = false;\r\n    isMouseDown = false;\r\n\r\n    // 为鼠标事件创建一个模拟的touch事件用于结束速度计算\r\n    const mockTouch = {\r\n      identifier: 0,\r\n      clientX: event.clientX,\r\n      clientY: event.clientY,\r\n      pageX: event.pageX,\r\n      pageY: event.pageY,\r\n      target: event.target,\r\n      radiusX: 0,\r\n      radiusY: 0,\r\n      rotationAngle: 0,\r\n      force: 1\r\n    };\r\n\r\n    const mockTouchEvent = {\r\n      timeStamp: Date.now(),\r\n      touches: [],\r\n      changedTouches: [mockTouch],\r\n      targetTouches: [],\r\n      preventDefault: () => {},\r\n      stopPropagation: () => {}\r\n    } as any;\r\n\r\n    velocity.endTouch(mockTouchEvent);\r\n\r\n    // 恢复到最近的稳定位置\r\n    const targetOffset = getTargetOffset(state.offset, 0);\r\n    setTransform(targetOffset, true);\r\n    updatePosition(targetOffset);\r\n  }\r\n\r\n  // 绑定事件\r\n  function bindEvents() {\r\n    console.log('Binding touch and mouse events');\r\n    // 触摸事件\r\n    wrapperElement.addEventListener('touchstart', onTouchStart, { passive: false });\r\n    wrapperElement.addEventListener('touchmove', onTouchMove, { passive: false });\r\n    wrapperElement.addEventListener('touchend', onTouchEnd);\r\n    wrapperElement.addEventListener('touchcancel', onTouchCancel);\r\n\r\n    // 鼠标事件\r\n    wrapperElement.addEventListener('mousedown', onMouseDown);\r\n    // 鼠标移动和释放事件需要绑定到document，以便在鼠标移出元素时仍能捕获\r\n    document.addEventListener('mousemove', onMouseMove);\r\n    document.addEventListener('mouseup', onMouseUp);\r\n    wrapperElement.addEventListener('mouseleave', onMouseLeave);\r\n  }\r\n\r\n  // 解绑事件\r\n  function unbindEvents() {\r\n    // 触摸事件\r\n    wrapperElement.removeEventListener('touchstart', onTouchStart);\r\n    wrapperElement.removeEventListener('touchmove', onTouchMove);\r\n    wrapperElement.removeEventListener('touchend', onTouchEnd);\r\n    wrapperElement.removeEventListener('touchcancel', onTouchCancel);\r\n\r\n    // 鼠标事件\r\n    wrapperElement.removeEventListener('mousedown', onMouseDown);\r\n    document.removeEventListener('mousemove', onMouseMove);\r\n    document.removeEventListener('mouseup', onMouseUp);\r\n    wrapperElement.removeEventListener('mouseleave', onMouseLeave);\r\n  }\r\n\r\n  // 程序化控制方法\r\n  function open(position: 'left' | 'right') {\r\n    if (disabled) return;\r\n\r\n    const { leftWidth, rightWidth } = getElementWidths();\r\n    let targetOffset = 0;\r\n    if (position === 'left' && leftWidth > 0) {\r\n      targetOffset = leftWidth;\r\n    } else if (position === 'right' && rightWidth > 0) {\r\n      targetOffset = -rightWidth;\r\n    }\r\n\r\n    setTransform(targetOffset, true);\r\n    updatePosition(targetOffset);\r\n  }\r\n\r\n  function close() {\r\n    if (disabled) return;\r\n\r\n    setTransform(0, true);\r\n    updatePosition(0);\r\n  }\r\n\r\n  // 获取当前状态\r\n  function getState(): SwipeActionsState {\r\n    return { ...state };\r\n  }\r\n\r\n  return {\r\n    bindEvents,\r\n    unbindEvents,\r\n    open,\r\n    close,\r\n    getState,\r\n    setTransform\r\n  };\r\n}\r\n"],"names":["useTouch","wrapperElement","options","threshold","duration","disabled","velocity","useVelocity","state","offset","position","dragging","startX","startOffset","touchId","isMouseDown","getElementWidths","leftElement","querySelector","rightElement","leftWidth","offsetWidth","rightWidth","setTransform","withTransition","style","transform","transitionDuration","getTargetOffset","currentOffset","velocityX","absOffset","Math","abs","direction","updatePosition","newPosition","onTouchStart","event","touches","length","touch","identifier","clientX","addMovement","console","log","clientY","preventDefault","onTouchMove","Array","from","find","t","deltaX","newOffset","min","max","onTouchEnd","velocityData","getVelocity","targetOffset","x","error","endTouch","onTouchCancel","onMouseDown","button","mockTouch","pageX","pageY","target","radiusX","radiusY","rotationAngle","force","mockTouchEvent","timeStamp","Date","now","changedTouches","targetTouches","stopPropagation","onMouseMove","onMouseUp","onMouseLeave","bindEvents","addEventListener","passive","document","unbindEvents","removeEventListener","open","close","getState","Object","assign"],"mappings":"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"}