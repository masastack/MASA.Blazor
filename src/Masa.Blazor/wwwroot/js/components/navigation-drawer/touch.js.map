{"version":3,"file":"touch.js","sources":["../../../../../Masa.Blazor.JS/src/components/navigation-drawer/touch.ts"],"sourcesContent":["import { useVelocity } from \"mixins/touch\";\r\nimport { getElement } from \"utils/helper\";\r\n\r\ntype State = {\r\n  isActive: boolean;\r\n  isTemporary: boolean;\r\n  width: number;\r\n  touchless: boolean;\r\n  position: \"left\" | \"right\" | \"top\" | \"bottom\";\r\n};\r\n\r\nexport function useTouch(\r\n  elOrString: HTMLElement | string,\r\n  dotNetObject: DotNet.DotNetObject,\r\n  state: State\r\n) {\r\n  const el = getElement(elOrString);\r\n  \r\n  if (!el) {\r\n    oops()\r\n  }\r\n\r\n  window.addEventListener(\"touchstart\", onTouchstart, { passive: true });\r\n  window.addEventListener(\"touchmove\", onTouchmove, { passive: false });\r\n  window.addEventListener(\"touchend\", onTouchend, { passive: true });\r\n\r\n  const isHorizontal = [\"left\", \"right\"].includes(state.position);\r\n\r\n  const { addMovement, endTouch, getVelocity } = useVelocity();\r\n\r\n  let maybeDragging = false;\r\n  let isDragging = false;\r\n  let dragProgress = 0;\r\n  let offset = 0;\r\n  let start: [number, number] | undefined;\r\n\r\n  let transformBeforeTouchMove = el.style.transform ?? null;\r\n  let transitionBeforeTouchMove = el.style.transition ?? null;\r\n\r\n  function getOffset(pos: number, active: boolean): number {\r\n    return (\r\n      (state.position === \"left\"\r\n        ? pos\r\n        : state.position === \"right\"\r\n        ? document.documentElement.clientWidth - pos\r\n        : state.position === \"top\"\r\n        ? pos\r\n        : state.position === \"bottom\"\r\n        ? document.documentElement.clientHeight - pos\r\n        : oops()) - (active ? state.width : 0)\r\n    );\r\n  }\r\n\r\n  function getProgress(pos: number, limit = true): number {\r\n    const progress =\r\n      state.position === \"left\"\r\n        ? (pos - offset) / state.width\r\n        : state.position === \"right\"\r\n        ? (document.documentElement.clientWidth - pos - offset) / state.width\r\n        : state.position === \"top\"\r\n        ? (pos - offset) / state.width\r\n        : state.position === \"bottom\"\r\n        ? (document.documentElement.clientHeight - pos - offset) / state.width\r\n        : oops();\r\n    return limit ? Math.max(0, Math.min(1, progress)) : progress;\r\n  }\r\n\r\n  function onTouchstart(e: TouchEvent) {\r\n    if (state.touchless) return;\r\n\r\n    transformBeforeTouchMove = el.style.transform ?? null;\r\n    transitionBeforeTouchMove = el.style.transition ?? null;\r\n\r\n    const touchX = e.changedTouches[0].clientX;\r\n    const touchY = e.changedTouches[0].clientY;\r\n\r\n    const touchZone = 25;\r\n    const inTouchZone: boolean =\r\n      state.position === \"left\"\r\n        ? touchX < touchZone\r\n        : state.position === \"right\"\r\n        ? touchX > document.documentElement.clientWidth - touchZone\r\n        : state.position === \"top\"\r\n        ? touchY < touchZone\r\n        : state.position === \"bottom\"\r\n        ? touchY > document.documentElement.clientHeight - touchZone\r\n        : oops();\r\n\r\n    const inElement: boolean =\r\n      state.isActive &&\r\n      (state.position === \"left\"\r\n        ? touchX < state.width\r\n        : state.position === \"right\"\r\n        ? touchX > document.documentElement.clientWidth - state.width\r\n        : state.position === \"top\"\r\n        ? touchY < state.width\r\n        : state.position === \"bottom\"\r\n        ? touchY > document.documentElement.clientHeight - state.width\r\n        : oops());\r\n\r\n    if (inTouchZone || inElement || (state.isActive && state.isTemporary)) {\r\n      start = [touchX, touchY];\r\n\r\n      offset = getOffset(isHorizontal ? touchX : touchY, state.isActive);\r\n      dragProgress = getProgress(isHorizontal ? touchX : touchY);\r\n\r\n      maybeDragging = offset > -20 && offset < 80;\r\n      endTouch(e);\r\n      addMovement(e);\r\n    }\r\n  }\r\n\r\n  function onTouchmove(e: TouchEvent) {\r\n    const touchX = e.changedTouches[0].clientX;\r\n    const touchY = e.changedTouches[0].clientY;\r\n\r\n    if (maybeDragging) {\r\n      if (!e.cancelable) {\r\n        maybeDragging = false;\r\n        return;\r\n      }\r\n\r\n      const dx = Math.abs(touchX - start![0]);\r\n      const dy = Math.abs(touchY - start![1]);\r\n\r\n      const thresholdMet = isHorizontal ? dx > dy && dx > 3 : dy > dx && dy > 3;\r\n\r\n      if (thresholdMet) {\r\n        isDragging = true;\r\n        maybeDragging = false;\r\n      } else if ((isHorizontal ? dy : dx) > 3) {\r\n        maybeDragging = false;\r\n      }\r\n    }\r\n\r\n    applyDragStyles();\r\n\r\n    if (!isDragging) return;\r\n\r\n    e.preventDefault();\r\n    addMovement(e);\r\n\r\n    const progress = getProgress(isHorizontal ? touchX : touchY, false);\r\n    dragProgress = Math.max(0, Math.min(1, progress));\r\n\r\n    if (progress > 1) {\r\n      offset = getOffset(isHorizontal ? touchX : touchY, true);\r\n    } else if (progress < 0) {\r\n      offset = getOffset(isHorizontal ? touchX : touchY, false);\r\n    }\r\n\r\n    dotNetObject.invokeMethodAsync(\"TouchMove\", isDragging, dragProgress);\r\n  }\r\n\r\n  function onTouchend(e: TouchEvent) {\r\n    maybeDragging = false;\r\n\r\n    if (!isDragging) return;\r\n\r\n    addMovement(e);\r\n\r\n    isDragging = false;\r\n\r\n    applyDragStyles();\r\n\r\n    const velocity = getVelocity(e.changedTouches[0].identifier);\r\n    const vx = Math.abs(velocity.x);\r\n    const vy = Math.abs(velocity.y);\r\n    const thresholdMet = isHorizontal ? vx > vy && vx > 400 : vy > vx && vy > 3;\r\n\r\n    if (thresholdMet) {\r\n      state.isActive =\r\n        velocity.direction ===\r\n        ({\r\n          left: \"right\",\r\n          right: \"left\",\r\n          top: \"down\",\r\n          bottom: \"up\",\r\n        }[state.position] || oops());\r\n    } else {\r\n      state.isActive = dragProgress > 0.5;\r\n    }\r\n\r\n    dotNetObject.invokeMethodAsync(\"TouchEnd\", state.isActive);\r\n  }\r\n\r\n  const getDragStyles = () => {\r\n    return isDragging\r\n      ? {\r\n          transform:\r\n            state.position === \"left\"\r\n              ? `translateX(calc(-100% + ${dragProgress * state.width}px))`\r\n              : state.position === \"right\"\r\n              ? `translateX(calc(100% - ${dragProgress * state.width}px))`\r\n              : state.position === \"top\"\r\n              ? `translateY(calc(-100% + ${dragProgress * state.width}px))`\r\n              : state.position === \"bottom\"\r\n              ? `translateY(calc(100% - ${dragProgress * state.width}px))`\r\n              : oops(),\r\n          transition: \"none\",\r\n        }\r\n      : undefined;\r\n  };\r\n\r\n  const applyDragStyles = () => {\r\n    const dragStyles = getDragStyles();\r\n\r\n    if (isDragging) {\r\n      el.style.setProperty(\"transform\", dragStyles?.transform || \"none\");\r\n      el.style.setProperty(\"transition\", dragStyles?.transition || null);\r\n    } else {\r\n      el.style.setProperty(\"transform\", transformBeforeTouchMove);\r\n      el.style.setProperty(\"transition\", transitionBeforeTouchMove);\r\n    }\r\n  };\r\n\r\n  return {\r\n    syncState: (newState: State) => {\r\n      state = newState;\r\n    },\r\n    dispose: () => {\r\n      dotNetObject.dispose();\r\n      window.removeEventListener(\"touchstart\", onTouchstart);\r\n      window.removeEventListener(\"touchmove\", onTouchmove);\r\n      window.removeEventListener(\"touchend\", onTouchend);\r\n    },\r\n  };\r\n}\r\n\r\nfunction oops(): never {\r\n  throw new Error();\r\n}\r\n"],"names":["useTouch","elOrString","dotNetObject","state","el","getElement","oops","window","addEventListener","onTouchstart","passive","onTouchmove","onTouchend","isHorizontal","includes","position","addMovement","endTouch","getVelocity","useVelocity","start","maybeDragging","isDragging","dragProgress","offset","transformBeforeTouchMove","_a","style","transform","transitionBeforeTouchMove","_b","transition","getOffset","pos","active","document","documentElement","clientWidth","clientHeight","width","getProgress","limit","progress","Math","max","min","e","touchless","touchX","changedTouches","clientX","touchY","clientY","inTouchZone","inElement","isActive","isTemporary","cancelable","dx","abs","dy","applyDragStyles","preventDefault","invokeMethodAsync","velocity","identifier","vx","x","vy","y","thresholdMet","direction","left","right","top","bottom","dragStyles","undefined","setProperty","syncState","newState","dispose","removeEventListener","Error"],"mappings":"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"}