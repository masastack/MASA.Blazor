{"version":3,"file":"touch.js","sources":["../../../../../Masa.Blazor.JS/src/components/window/touch.ts"],"sourcesContent":["export interface TouchData {\n  touchstartX: number;\n  touchstartY: number;\n  touchmoveX: number;\n  touchmoveY: number;\n  touchendX: number;\n  touchendY: number;\n  offsetX: number;\n  offsetY: number;\n}\n\nexport type TouchWrapper = TouchData & { dotnetHelper: DotNet.DotNetObject };\n\nexport interface TouchValue {\n  parent?: boolean;\n  options?: {\n    touchstart?: AddEventListenerOptions & { stopPropagation?: boolean };\n    touchmove?: AddEventListenerOptions & { stopPropagation?: boolean };\n    touchend?: AddEventListenerOptions & { stopPropagation?: boolean };\n  };\n}\n\nexport interface TouchStoredHandlers {\n  touchstart: (e: TouchEvent) => void;\n  touchend: (e: TouchEvent) => void;\n  touchmove: (e: TouchEvent) => void;\n}\n\nconst handleGesture = (wrapper: TouchWrapper) => {\n  const { touchstartX, touchendX, touchstartY, touchendY, dotnetHelper } =\n    wrapper;\n  const dirRatio = 0.5;\n  const minDistance = 16;\n  wrapper.offsetX = touchendX - touchstartX;\n  wrapper.offsetY = touchendY - touchstartY;\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    if (touchendX < touchstartX - minDistance) {\n      dotnetHelper.invokeMethodAsync(\"OnTouchend\", \"left\" /*, wrapper*/);\n    }\n    if (touchendX > touchstartX + minDistance) {\n      dotnetHelper.invokeMethodAsync(\"OnTouchend\", \"right\" /*, wrapper*/);\n    }\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    if (touchendY < touchstartY - minDistance) {\n      dotnetHelper.invokeMethodAsync(\"OnTouchend\", \"up\" /*, wrapper*/);\n    }\n    if (touchendY > touchstartY + minDistance) {\n      dotnetHelper.invokeMethodAsync(\"OnTouchend\", \"down\" /*, wrapper*/);\n    }\n  }\n};\n\nfunction touchstart(event: TouchEvent, wrapper: TouchWrapper) {\n  const { dotnetHelper } = wrapper;\n  const touch = event.changedTouches[0];\n  wrapper.touchstartX = touch.clientX;\n  wrapper.touchstartY = touch.clientY;\n\n  // dotnetHelper.invokeMethodAsync(\"OnTouch\", \"start\", {\n  //   originEvent: event,\n  //   ...wrapper,\n  // });\n}\n\nfunction touchend(event: TouchEvent, wrapper: TouchWrapper) {\n  const { dotnetHelper } = wrapper;\n  const touch = event.changedTouches[0];\n  wrapper.touchendX = touch.clientX;\n  wrapper.touchendY = touch.clientY;\n\n  // dotnetHelper.invokeMethodAsync(\"OnTouch\", \"end\", {\n  //   originEvent: event,\n  //   ...wrapper,\n  // });\n\n  handleGesture(wrapper);\n}\n\nfunction touchmove(event: TouchEvent, wrapper: TouchWrapper) {\n  const { dotnetHelper } = wrapper;\n  const touch = event.changedTouches[0];\n  wrapper.touchmoveX = touch.clientX;\n  wrapper.touchmoveY = touch.clientY;\n\n  // dotnetHelper.invokeMethodAsync(\"OnTouch\", \"move\", {\n  //   originEvent: event,\n  //   ...wrapper,\n  // });\n}\n\nfunction createHandlers(\n  options: TouchValue[\"options\"],\n  dotnetHelper: DotNet.DotNetObject\n): TouchStoredHandlers {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    dotnetHelper,\n  };\n\n  return {\n    touchstart: (e: TouchEvent) => {\n      options.touchstart?.stopPropagation && e.stopPropagation();\n      touchstart(e, wrapper);\n    },\n    touchend: (e: TouchEvent) => {\n      options.touchend?.stopPropagation && e.stopPropagation();\n      touchend(e, wrapper);\n    },\n    touchmove: (e: TouchEvent) => {\n      options.touchmove?.stopPropagation && e.stopPropagation();\n      touchmove(e, wrapper);\n    },\n  };\n}\n\nlet touchHandlersId = 0;\n\nexport function useTouch(\n  el: HTMLElement,\n  value?: TouchValue,\n  dotnetHelper?: any\n) {\n  const target = value?.parent ? el.parentElement : el;\n  const options = value?.options ?? {};\n\n  if (!target) return;\n\n  const handlers = createHandlers(options, dotnetHelper);\n\n  target._touchHandlers = target._touchHandlers ?? Object.create(null);\n  target._touchHandlers![touchHandlersId] = handlers;\n\n  Object.keys(handlers).forEach((eventName) => {\n    const { stopPropagation, ...eventOptions } =\n      options[eventName] ?? ({ passive: true } as AddEventListenerOptions);\n    target.addEventListener(eventName, handlers[eventName], eventOptions);\n  });\n\n  return touchHandlersId++;\n}\n\nexport function cleanupTouch(el: HTMLElement, id: number) {\n  if (!el) return;\n\n  const target = el._touchHandlers;\n\n  if (!target || !target[id]) return;\n\n  const handlers = target[id];\n\n  Object.keys(handlers).forEach((eventName) => {\n    el.removeEventListener(eventName, handlers[eventName]);\n  });\n\n  delete target[id];\n}\n"],"names":["touchend","event","wrapper","touch","changedTouches","touchendX","clientX","touchendY","clientY","touchstartX","touchstartY","dotnetHelper","offsetX","offsetY","Math","abs","invokeMethodAsync","handleGesture","touchHandlersId","useTouch","el","value","target","parent","parentElement","options","_a","handlers","touchmoveX","touchmoveY","touchstart","e","stopPropagation","touchmove","createHandlers","_touchHandlers","_b","Object","create","keys","forEach","eventName","passive","eventOptions","__rest","addEventListener","cleanupTouch","id","removeEventListener"],"mappings":"8CAmEA,SAASA,EAASC,EAAmBC,GAEnC,MAAMC,EAAQF,EAAMG,eAAe,GACnCF,EAAQG,UAAYF,EAAMG,QAC1BJ,EAAQK,UAAYJ,EAAMK,QA3CN,CAACN,IACrB,MAAMO,YAAEA,EAAWJ,UAAEA,EAASK,YAAEA,EAAWH,UAAEA,EAASI,aAAEA,GACtDT,EAGFA,EAAQU,QAAUP,EAAYI,EAC9BP,EAAQW,QAAUN,EAAYG,EAE1BI,KAAKC,IAAIb,EAAQW,SALJ,GAK0BC,KAAKC,IAAIb,EAAQU,WACtDP,EAAYI,EALE,IAMhBE,EAAaK,kBAAkB,aAAc,QAE3CX,EAAYI,EARE,IAShBE,EAAaK,kBAAkB,aAAc,UAI7CF,KAAKC,IAAIb,EAAQU,SAdJ,GAc0BE,KAAKC,IAAIb,EAAQW,WACtDN,EAAYG,EAdE,IAehBC,EAAaK,kBAAkB,aAAc,MAE3CT,EAAYG,EAjBE,IAkBhBC,EAAaK,kBAAkB,aAAc,QAEhD,EA0BDC,CAAcf,EAChB,CA8CA,IAAIgB,EAAkB,WAENC,EACdC,EACAC,EACAV,WAEA,MAAMW,GAASD,aAAK,EAALA,EAAOE,QAASH,EAAGI,cAAgBJ,EAC5CK,EAA4B,QAAlBC,EAAAL,aAAA,EAAAA,EAAOI,eAAW,IAAAC,EAAAA,EAAA,GAElC,IAAKJ,EAAQ,OAEb,MAAMK,EA5CR,SACEF,EACAd,GAEA,MAAMT,EAAU,CACdO,YAAa,EACbC,YAAa,EACbL,UAAW,EACXE,UAAW,EACXqB,WAAY,EACZC,WAAY,EACZjB,QAAS,EACTC,QAAS,EACTF,gBAGF,MAAO,CACLmB,WAAaC,WACO,QAAlBL,EAAAD,EAAQK,kBAAU,IAAAJ,OAAA,EAAAA,EAAEM,kBAAmBD,EAAEC,kBAxD/C,SAAoB/B,EAAmBC,GAErC,MAAMC,EAAQF,EAAMG,eAAe,GACnCF,EAAQO,YAAcN,EAAMG,QAC5BJ,EAAQQ,YAAcP,EAAMK,OAM9B,CA+CMsB,CAAWC,EAAG7B,EAAQ,EAExBF,SAAW+B,WACO,QAAhBL,EAAAD,EAAQzB,gBAAQ,IAAA0B,OAAA,EAAAA,EAAEM,kBAAmBD,EAAEC,kBACvChC,EAAS+B,EAAG7B,EAAQ,EAEtB+B,UAAYF,WACO,QAAjBL,EAAAD,EAAQQ,iBAAS,IAAAP,OAAA,EAAAA,EAAEM,kBAAmBD,EAAEC,kBAtC9C,SAAmB/B,EAAmBC,GAEpC,MAAMC,EAAQF,EAAMG,eAAe,GACnCF,EAAQ0B,WAAazB,EAAMG,QAC3BJ,EAAQ2B,WAAa1B,EAAMK,OAM7B,CA6BMyB,CAAUF,EAAG7B,EAAQ,EAG3B,CAcmBgC,CAAeT,EAASd,GAWzC,OATAW,EAAOa,eAA0C,QAAzBC,EAAAd,EAAOa,sBAAkB,IAAAC,EAAAA,EAAAC,OAAOC,OAAO,MAC/DhB,EAAOa,eAAgBjB,GAAmBS,EAE1CU,OAAOE,KAAKZ,GAAUa,SAASC,UACvB,MAAAL,EACc,UAAlBX,EAAQgB,UAAU,IAAAf,EAAAA,EAAK,CAAEgB,SAAS,GADRC,EAAYC,EAAAR,EAAlC,CAAoC,oBAE1Cd,EAAOuB,iBAAiBJ,EAAWd,EAASc,GAAYE,EAAa,IAGhEzB,GACT,CAEgB,SAAA4B,EAAa1B,EAAiB2B,GAC5C,IAAK3B,EAAI,OAET,MAAME,EAASF,EAAGe,eAElB,IAAKb,IAAWA,EAAOyB,GAAK,OAE5B,MAAMpB,EAAWL,EAAOyB,GAExBV,OAAOE,KAAKZ,GAAUa,SAASC,IAC7BrB,EAAG4B,oBAAoBP,EAAWd,EAASc,GAAW,WAGjDnB,EAAOyB,EAChB"}