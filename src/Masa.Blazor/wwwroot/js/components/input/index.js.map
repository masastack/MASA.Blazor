{"version":3,"file":"index.js","sources":["../../../../../Masa.Blazor.JS/src/events/extra.ts","../../../../../Masa.Blazor.JS/src/utils/blazor.ts","../../../../../Masa.Blazor.JS/src/components/input/index.ts"],"sourcesContent":["import { getEventTarget } from \"../utils/helper\";\r\nimport { parseDragEvent, parseMouseEvent, parseTouchEvent } from \"./EventType\";\r\n\r\nexport function registerExtraMouseEvent(eventType: string, eventName: string) {\r\n  if (Blazor) {\r\n    Blazor.registerCustomEventType(eventType, {\r\n      browserEventName: eventName,\r\n      createEventArgs: e => createSharedEventArgs(\"mouse\", e)\r\n    })\r\n  }\r\n}\r\n\r\nexport function registerExtraTouchEvent(eventType: string, eventName: string) {\r\n  if (Blazor) {\r\n    Blazor.registerCustomEventType(eventType, {\r\n      browserEventName: eventName,\r\n      createEventArgs: e => createSharedEventArgs(\"touch\", e)\r\n    })\r\n  }\r\n}\r\n\r\nexport function registerExtraDropEvent(eventType: string, eventName: string) {\r\n  if (Blazor) {\r\n    Blazor.registerCustomEventType(eventType, {\r\n      browserEventName: eventName,\r\n      createEventArgs: (e: DragEvent) => {\r\n        const eventArgs = parseDragEvent(e);\r\n        const value = e.dataTransfer.getData('data-value');\r\n        const offsetX = e.dataTransfer.getData('offsetX');\r\n        const offsetY = e.dataTransfer.getData('offsetY');\r\n\r\n        eventArgs.dataTransfer['data'] = {\r\n          value,\r\n          offsetX: Number(offsetX),\r\n          offsetY: Number(offsetY)\r\n        }\r\n\r\n        return eventArgs;\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport function createSharedEventArgs(type: \"mouse\" | \"touch\", e: Event,) {\r\n  let args = { target: {} }\r\n  if (type === 'mouse') {\r\n    args = {\r\n      ...args,\r\n      ...parseMouseEvent(e as MouseEvent)\r\n    }\r\n  } else if (type === 'touch') {\r\n    args = {\r\n      ...args,\r\n      ...parseTouchEvent(e as TouchEvent)\r\n    }\r\n  }\r\n\r\n  args.target = getEventTarget(e.target);\r\n\r\n  return args;\r\n}","// @event:stopPropagation only works in Blazor,\r\n// so need to capture it manually.\r\nexport function checkIfStopPropagationExistsInComposedPath(\r\n  event: Event,\r\n  eventName: string,\r\n  util: EventTarget\r\n) {\r\n  let stopPropagation = false;\r\n\r\n  for (const eventTarget of event.composedPath()) {\r\n    if (eventTarget === util) {\r\n      break;\r\n    }\r\n\r\n    if (checkIfStopPropagation(eventTarget, eventName)) {\r\n      stopPropagation = true;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return stopPropagation;\r\n}\r\n\r\nfunction checkIfStopPropagation(eventTarget: EventTarget, eventName: string) {\r\n  const nestProps = [\"_blazorEvents_1\", \"stopPropagationFlags\", eventName];\r\n\r\n  let isFlag = eventTarget;\r\n  let i = 0;\r\n  while (isFlag[nestProps[i]]) {\r\n    isFlag = isFlag[nestProps[i]];\r\n    i++;\r\n  }\r\n\r\n  return i == nestProps.length && typeof isFlag === \"boolean\" && isFlag;\r\n}","import { parseChangeEvent } from \"events/EventType\";\r\nimport { createSharedEventArgs } from \"events/extra\";\r\nimport { checkIfStopPropagationExistsInComposedPath } from \"utils/blazor\";\r\n\r\nclass Input {\r\n  input: HTMLInputElement | HTMLTextAreaElement;\r\n  inputSlot: Element;\r\n  dotnetHelper: DotNet.DotNetObject;\r\n  debounce: number;\r\n\r\n  constructor(\r\n    dotnetHelper: DotNet.DotNetObject,\r\n    input: HTMLInputElement | HTMLTextAreaElement,\r\n    inputSlot: Element,\r\n    debounce: number\r\n  ) {\r\n    this.input = input;\r\n    this.inputSlot = inputSlot;\r\n    this.dotnetHelper = dotnetHelper;\r\n    this.debounce = debounce;\r\n\r\n    this.#registerAllEvents();\r\n  }\r\n\r\n  setValue(value: any) {\r\n    this.input.value = value;\r\n  }\r\n\r\n  #registerAllEvents() {\r\n    if (!this.input || !this.inputSlot) return;\r\n\r\n    this.#registerClickEvent();\r\n\r\n    this.#registerMouseUpEvent();\r\n\r\n    if (\r\n      !(\r\n        this.input &&\r\n        (this.input instanceof HTMLInputElement ||\r\n          this.input instanceof HTMLTextAreaElement)\r\n      )\r\n    )\r\n      return;\r\n\r\n    this.#registerInputEvent();\r\n  }\r\n\r\n  #registerInputEvent() {\r\n    let compositionInputting = false;\r\n\r\n    let timeout;\r\n\r\n    this.input.addEventListener(\"compositionstart\", (_) => {\r\n      compositionInputting = true;\r\n    });\r\n\r\n    this.input.addEventListener(\"compositionend\", (event: CompositionEvent) => {\r\n      compositionInputting = false;\r\n\r\n      const changeEventArgs = parseChangeEvent(event);\r\n      changeEventArgs.value = this.input.value;\r\n\r\n      if (\r\n        this.input.maxLength !== -1 &&\r\n        changeEventArgs.value.length > this.input.maxLength\r\n      ) {\r\n        changeEventArgs.value = changeEventArgs.value.substring(\r\n          0,\r\n          this.input.maxLength\r\n        );\r\n      }\r\n\r\n      this.dotnetHelper.invokeMethodAsync(\"OnInput\", changeEventArgs);\r\n    });\r\n\r\n    this.input.addEventListener(\"input\", (event: ChangeEvent) => {\r\n      if (compositionInputting) return;\r\n\r\n      var changeEventArgs = parseChangeEvent(event);\r\n\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => {\r\n        this.dotnetHelper.invokeMethodAsync(\"OnInput\", changeEventArgs);\r\n      }, this.debounce);\r\n    });\r\n\r\n    this.input.addEventListener('change', (event: ChangeEvent) => {\r\n      var changeEventArgs = parseChangeEvent(event);\r\n      this.#formatNumberValue(event);\r\n\r\n      this.dotnetHelper.invokeMethodAsync(\"OnChange\", changeEventArgs);\r\n    })\r\n  }\r\n\r\n  #formatNumberValue(event: ChangeEvent) {\r\n    if (event.target.type === \"number\") {\r\n      const value = event.target.value;\r\n      const valueAsNumber = event.target.valueAsNumber;\r\n      if (!!value && value !== valueAsNumber.toString()) {\r\n        this.input.value = isNaN(valueAsNumber)\r\n        ? \"\"\r\n        : valueAsNumber.toString();\r\n      }\r\n    }\r\n  }\r\n\r\n  #registerClickEvent() {\r\n    this.inputSlot.addEventListener(\"click\", (e) => {\r\n      if (\r\n        checkIfStopPropagationExistsInComposedPath(e, \"click\", this.inputSlot)\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      var eventArgs = createSharedEventArgs(\"mouse\", e);\r\n      this.dotnetHelper.invokeMethodAsync(\"OnClick\", eventArgs);\r\n    });\r\n  }\r\n\r\n  #registerMouseUpEvent() {\r\n    this.inputSlot.addEventListener(\"mouseup\", (e) => {\r\n      if (\r\n        checkIfStopPropagationExistsInComposedPath(e, \"mouseup\", this.inputSlot)\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      var eventArgs = createSharedEventArgs(\"mouse\", e);\r\n      this.dotnetHelper.invokeMethodAsync(\"OnMouseUp\", eventArgs);\r\n    });\r\n  }\r\n}\r\n\r\nfunction init(\r\n  dotnetHelper: DotNet.DotNetObject,\r\n  input: HTMLInputElement | HTMLTextAreaElement,\r\n  inputSlot: Element,\r\n  debounce: number\r\n) {\r\n  return new Input(dotnetHelper, input, inputSlot, debounce);\r\n}\r\n\r\nexport { init };\r\n"],"names":["createSharedEventArgs","type","e","args","target","Object","assign","parseMouseEvent","parseTouchEvent","getEventTarget","checkIfStopPropagationExistsInComposedPath","event","eventName","util","stopPropagation","eventTarget","composedPath","checkIfStopPropagation","nestProps","isFlag","i","length","Input","constructor","dotnetHelper","input","inputSlot","debounce","this","__classPrivateFieldGet","_Input_instances","_Input_registerAllEvents","call","setValue","value","init","_Input_registerClickEvent","_Input_registerMouseUpEvent","HTMLInputElement","HTMLTextAreaElement","_Input_registerInputEvent","timeout","compositionInputting","addEventListener","_","changeEventArgs","parseChangeEvent","maxLength","substring","invokeMethodAsync","clearTimeout","setTimeout","_Input_formatNumberValue","valueAsNumber","toString","isNaN","eventArgs"],"mappings":"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"}