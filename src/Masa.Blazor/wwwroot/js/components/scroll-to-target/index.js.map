{"version":3,"file":"index.js","sources":["../../../../../Masa.Blazor.JS/src/components/scroll-to-target/index.ts"],"sourcesContent":["import { formatToStandardOptions, IntersectionObserverOptions } from \"../../mixins/intersect\";\r\n\r\nclass ScrollToTargetJSInterop {\r\n  activeStack: string[] = [];\r\n  handle: DotNet.DotNetObject;\r\n  options?: IntersectionObserverInit | null;\r\n\r\n  constructor(\r\n    handle: DotNet.DotNetObject,\r\n    options?: IntersectionObserverOptions\r\n  ) {\r\n    this.handle = handle;\r\n    this.options = formatToStandardOptions(options);\r\n  }\r\n\r\n  observe(id: string) {\r\n    const el = document.getElementById(id);\r\n    if (!el) {\r\n      console.warn(`[ScrollToTarget] Element with id '${id}' not found`);\r\n      return;\r\n    }\r\n\r\n    if (el[\"_intersectForScrollToTarget\"]) {\r\n      return;\r\n    }\r\n\r\n    const observer = new IntersectionObserver(\r\n      async (\r\n        entries: IntersectionObserverEntry[] = [],\r\n        observer: IntersectionObserver\r\n      ) => {\r\n        const isIntersecting = entries.some((e) => e.isIntersecting);\r\n        if (isIntersecting) {\r\n          this.activeStack.push(id);\r\n        } else if (this.activeStack.includes(id)) {\r\n          this.activeStack.splice(this.activeStack.indexOf(id), 1);\r\n        }\r\n\r\n        await this.handle.invokeMethodAsync(\r\n          \"UpdateActiveTarget\",\r\n          this.activeStack[this.activeStack.length - 1]\r\n        );\r\n      },\r\n      this.options\r\n    );\r\n\r\n    el[\"_intersectForScrollToTarget\"] = Object(el[\"_intersectForScrollToTarget\"]);\r\n    el[\"_intersectForScrollToTarget\"] = { handle: this.handle, observer };\r\n\r\n    observer.observe(el);\r\n  }\r\n\r\n  unobserve(id: string) {\r\n    const el = document.getElementById(id);\r\n    if (!el) return;\r\n\r\n    const observe = el[\"_intersectForScrollToTarget\"];\r\n    if (!observe) return;\r\n\r\n    observe.observer.unobserve(el);\r\n    delete el[\"_intersectForScrollToTarget\"];\r\n  }\r\n\r\n  dispose() {\r\n    if (this.handle) {\r\n      this.handle.dispose();\r\n      this.handle = null\r\n    }\r\n  }\r\n}\r\n\r\nfunction init(\r\n  handle: DotNet.DotNetObject,\r\n  options?: IntersectionObserverOptions\r\n) {\r\n  return new ScrollToTargetJSInterop(handle, options);\r\n}\r\n\r\nexport { init };\r\n"],"names":["ScrollToTargetJSInterop","constructor","handle","options","this","activeStack","formatToStandardOptions","observe","id","el","document","getElementById","console","warn","observer","IntersectionObserver","entries","__awaiter","some","e","isIntersecting","push","includes","splice","indexOf","invokeMethodAsync","length","Object","unobserve","dispose","init"],"mappings":"uJAEA,MAAMA,EAKJ,WAAAC,CACEC,EACAC,GANFC,KAAWC,YAAa,GAQtBD,KAAKF,OAASA,EACdE,KAAKD,QAAUG,EAAwBH,EACxC,CAED,OAAAI,CAAQC,GACN,MAAMC,EAAKC,SAASC,eAAeH,GACnC,IAAKC,EAEH,YADAG,QAAQC,KAAK,qCAAqCL,gBAIpD,GAAIC,EAAgC,4BAClC,OAGF,MAAMK,EAAW,IAAIC,sBACnB,CACEC,EAAuC,GACvCF,IACEG,EAAAb,UAAA,OAAA,GAAA,YACqBY,EAAQE,MAAMC,GAAMA,EAAEC,iBAE3ChB,KAAKC,YAAYgB,KAAKb,GACbJ,KAAKC,YAAYiB,SAASd,IACnCJ,KAAKC,YAAYkB,OAAOnB,KAAKC,YAAYmB,QAAQhB,GAAK,SAGlDJ,KAAKF,OAAOuB,kBAChB,qBACArB,KAAKC,YAAYD,KAAKC,YAAYqB,OAAS,GAE/C,KACAtB,KAAKD,SAGPM,EAAgC,4BAAIkB,OAAOlB,EAAgC,6BAC3EA,EAAgC,4BAAI,CAAEP,OAAQE,KAAKF,OAAQY,YAE3DA,EAASP,QAAQE,EAClB,CAED,SAAAmB,CAAUpB,GACR,MAAMC,EAAKC,SAASC,eAAeH,GACnC,IAAKC,EAAI,OAET,MAAMF,EAAUE,EAAgC,4BAC3CF,IAELA,EAAQO,SAASc,UAAUnB,UACpBA,EAAgC,4BACxC,CAED,OAAAoB,GACMzB,KAAKF,SACPE,KAAKF,OAAO2B,UACZzB,KAAKF,OAAS,KAEjB,EAGH,SAAS4B,EACP5B,EACAC,GAEA,OAAO,IAAIH,EAAwBE,EAAQC,EAC7C"}