import{b as e}from"../../tslib.es6-c8ddd84a.js";import{formatToStandardOptions as t}from"../../mixins/intersect/index.js";import"../../helper-a14278a5.js";class i{constructor(e,i){this.activeStack=[],this.handle=e,this.options=t(i)}observe(t){const i=document.getElementById(t);if(!i)return void console.warn(`[ScrollToTarget] Element with id '${t}' not found`);if(i._intersectForScrollToTarget)return;const o=new IntersectionObserver(((i=[],o)=>e(this,void 0,void 0,(function*(){i.some((e=>e.isIntersecting))?this.activeStack.push(t):this.activeStack.includes(t)&&this.activeStack.splice(this.activeStack.indexOf(t),1),yield this.handle.invokeMethodAsync("UpdateActiveTarget",this.activeStack[this.activeStack.length-1])}))),this.options);i._intersectForScrollToTarget=Object(i._intersectForScrollToTarget),i._intersectForScrollToTarget={handle:this.handle,observer:o},o.observe(i)}unobserve(e){const t=document.getElementById(e);if(!t)return;const i=t._intersectForScrollToTarget;i&&(i.observer.unobserve(t),delete t._intersectForScrollToTarget)}dispose(){this.handle&&(this.handle.dispose(),this.handle=null)}}function o(e,t){return new i(e,t)}export{o as init};
//# sourceMappingURL=index.js.map
