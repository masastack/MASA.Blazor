function e(e,n,i,t){return new(i||(i=Promise))((function(s,o){function r(e){try{p(t.next(e))}catch(e){o(e)}}function a(e){try{p(t.throw(e))}catch(e){o(e)}}function p(e){var n;e.done?s(e.value):(n=e.value,n instanceof i?n:new i((function(e){e(n)}))).then(r,a)}p((t=t.apply(e,n||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;class n{constructor(e,n,i){if(!i)throw new Error("the handle from .NET cannot be null");if(!e)return void i.dispose();e._swiper&&(e._swiper.instance.destroy(!0),delete e._swiper),null!=n||(n={}),n.pagination&&(n.pagination.type=n.pagination.type.toLowerCase());const t=new Swiper(e,n);this.swiper=t,this.handle=i,this.swiper.on("activeIndexChange",(e=>this.onRealIndexChange(e,this))),e._swiper={instance:this.swiper,handle:i}}slideTo(e,n,i){this.swiper.slideToLoop(e,n,i)}slideNext(e){this.swiper.slideNext(e)}slidePrev(e){this.swiper.slidePrev(e)}dispose(){this.swiper&&this.swiper.destroy(!0),this.handle.dispose()}invokeVoid(e,...n){this.swiper[e]&&"function"==typeof this.swiper[e]&&this.swiper[e](...n)}onRealIndexChange(n,i){return e(this,void 0,void 0,(function*(){i.handle&&(yield i.handle.invokeMethodAsync("OnIndexChanged",n.originalParams.loop?n.realIndex:n.activeIndex))}))}}function i(e,i,t){return new n(e,i,t)}export{i as init};
//# sourceMappingURL=swiper.js.map
