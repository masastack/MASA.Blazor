function e(e,i,n,t){return new(n||(n=Promise))(function(s,r){function o(e){try{a(t.next(e))}catch(e){r(e)}}function d(e){try{a(t.throw(e))}catch(e){r(e)}}function a(e){var i;e.done?s(e.value):(i=e.value,i instanceof n?i:new n(function(e){e(i)})).then(o,d)}a((t=t.apply(e,i||[])).next())})}"function"==typeof SuppressedError&&SuppressedError;class i{constructor(e,i,n){if(!n)throw new Error("the handle from .NET cannot be null");if(!e)return void n.dispose();e._swiper&&(e._swiper.instance.destroy(!0),delete e._swiper),null!=i||(i={}),i.pagination&&(i.pagination.type=i.pagination.type.toLowerCase());const t=new Swiper(e,i);this.swiper=t,this.handle=n,this.swiper.on("activeIndexChange",e=>this.onRealIndexChange(e,this)),this.swiper.on("slidesUpdated",e=>{this.updateAgainInSlidesUpdatedEvent&&(this.updateAgainInSlidesUpdatedEvent=!1,this.swiper.update())}),e._swiper={instance:this.swiper,handle:n}}slideTo(e,i,n){this.swiper.slideToLoop(e,i,n)}slideNext(e){this.swiper.slideNext(e)}slidePrev(e){this.swiper.slidePrev(e)}update(){this.updateAgainInSlidesUpdatedEvent=!0,this.swiper.update()}dispose(){this.swiper&&this.swiper.destroy(!0),this.handle.dispose()}invokeVoid(e,...i){this.swiper[e]&&"function"==typeof this.swiper[e]&&this.swiper[e](...i)}onRealIndexChange(i,n){return e(this,void 0,void 0,function*(){n.handle&&(yield n.handle.invokeMethodAsync("OnIndexChanged",i.originalParams.loop?i.realIndex:i.activeIndex))})}}function n(e,n,t){return new i(e,n,t)}export{n as init};
//# sourceMappingURL=swiper.js.map
