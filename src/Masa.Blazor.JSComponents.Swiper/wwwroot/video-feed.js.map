{"version":3,"file":"video-feed.js","sources":["../../Masa.Blazor.JS/src/proxies/swiper/video-feed.ts"],"sourcesContent":["class VideoFeed {\n  private videoSelector: string;\n  private videoEl: HTMLVideoElement & {\n    webkitRequestFullscreen?: () => void;\n    mozRequestFullScreen?: () => void;\n    msRequestFullscreen?: () => void;\n  };\n  private dotNetHelper: DotNet.DotNetObject;\n\n  constructor(videoSelector: string, dotNetHelper: DotNet.DotNetObject) {\n    this.videoSelector = videoSelector;\n    this.dotNetHelper = dotNetHelper;\n    this.videoEl = document.querySelector(videoSelector);\n  }\n\n  init() {\n    console.log(\"VideoFeed init\", this.videoEl);\n\n    let duration,\n      aspectRatio = 1;\n    if (this.videoEl.duration) {\n      duration = this.videoEl.duration;\n      aspectRatio = this.videoEl.videoWidth / this.videoEl.videoHeight;\n    } else {\n      console.log(\"VideoFeed not loaded yet\", this.videoEl);\n      // 如果视频还没有加载完成，使用事件监听获取\n      this.videoEl.addEventListener(\"loadedmetadata\", () => {\n        duration = this.videoEl.duration;\n        aspectRatio = this.videoEl.videoWidth / this.videoEl.videoHeight;\n\n        console.log(\"VideoFeed loadedmetadata\", duration, aspectRatio);\n\n        this.dotNetHelper.invokeMethodAsync(\"OnLoadedMetadata\", {\n          duration,\n          aspectRatio,\n        });\n      });\n    }\n\n    this.videoEl.addEventListener(\"timeupdate\", (e) => {\n      this.dotNetHelper.invokeMethodAsync(\n        \"OnTimeUpdate\",\n        this.videoEl.currentTime\n      );\n    });\n\n    this.videoEl.play();\n\n    return { duration: duration ?? 0, aspectRatio };\n  }\n\n  update(currentTime: number) {\n    this.videoEl.currentTime = currentTime;\n  }\n\n  requestFullscreen() {\n    if (this.videoEl.requestFullscreen) {\n      this.videoEl.requestFullscreen();\n    } else if (this.videoEl.webkitRequestFullscreen) {\n      this.videoEl.webkitRequestFullscreen();\n    } else if (this.videoEl.mozRequestFullScreen) {\n      this.videoEl.mozRequestFullScreen();\n    } else if (this.videoEl.msRequestFullscreen) {\n      this.videoEl.msRequestFullscreen();\n    }\n  }\n\n  toggleMute(force?: boolean) {\n    if (force !== undefined) {\n      this.videoEl.muted = force;\n    } else {\n      this.videoEl.muted = !this.videoEl.muted;\n    }\n  }\n\n  pause() {\n    this.videoEl.pause();\n  }\n\n  play() {\n    this.videoEl.play();\n  }\n}\n\nexport function create(\n  id: string,\n  dotNetHelper: DotNet.DotNetObject\n): VideoFeed {\n  return new VideoFeed(\"#\" + id, dotNetHelper);\n}\n"],"names":["VideoFeed","constructor","videoSelector","dotNetHelper","this","videoEl","document","querySelector","init","console","log","duration","aspectRatio","videoWidth","videoHeight","addEventListener","invokeMethodAsync","e","currentTime","play","update","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","toggleMute","force","muted","undefined","pause","create","id"],"mappings":"AAAA,MAAMA,EASJ,WAAAC,CAAYC,EAAuBC,GACjCC,KAAKF,cAAgBA,EACrBE,KAAKD,aAAeA,EACpBC,KAAKC,QAAUC,SAASC,cAAcL,EACvC,CAED,IAAAM,GACEC,QAAQC,IAAI,iBAAkBN,KAAKC,SAEnC,IAAIM,EACFC,EAAc,EA6BhB,OA5BIR,KAAKC,QAAQM,UACfA,EAAWP,KAAKC,QAAQM,SACxBC,EAAcR,KAAKC,QAAQQ,WAAaT,KAAKC,QAAQS,cAErDL,QAAQC,IAAI,2BAA4BN,KAAKC,SAE7CD,KAAKC,QAAQU,iBAAiB,kBAAkB,KAC9CJ,EAAWP,KAAKC,QAAQM,SACxBC,EAAcR,KAAKC,QAAQQ,WAAaT,KAAKC,QAAQS,YAErDL,QAAQC,IAAI,2BAA4BC,EAAUC,GAElDR,KAAKD,aAAaa,kBAAkB,mBAAoB,CACtDL,WACAC,eACA,KAINR,KAAKC,QAAQU,iBAAiB,cAAeE,IAC3Cb,KAAKD,aAAaa,kBAChB,eACAZ,KAAKC,QAAQa,YACd,IAGHd,KAAKC,QAAQc,OAEN,CAAER,SAAUA,QAAAA,EAAY,EAAGC,cACnC,CAED,MAAAQ,CAAOF,GACLd,KAAKC,QAAQa,YAAcA,CAC5B,CAED,iBAAAG,GACMjB,KAAKC,QAAQgB,kBACfjB,KAAKC,QAAQgB,oBACJjB,KAAKC,QAAQiB,wBACtBlB,KAAKC,QAAQiB,0BACJlB,KAAKC,QAAQkB,qBACtBnB,KAAKC,QAAQkB,uBACJnB,KAAKC,QAAQmB,qBACtBpB,KAAKC,QAAQmB,qBAEhB,CAED,UAAAC,CAAWC,GAEPtB,KAAKC,QAAQsB,WADDC,IAAVF,EACmBA,GAECtB,KAAKC,QAAQsB,KAEtC,CAED,KAAAE,GACEzB,KAAKC,QAAQwB,OACd,CAED,IAAAV,GACEf,KAAKC,QAAQc,MACd,EAGa,SAAAW,EACdC,EACA5B,GAEA,OAAO,IAAIH,EAAU,IAAM+B,EAAI5B,EACjC"}