@using System.Globalization
@inject IPopupService PopupService

<div class="masa-table__toolbar">
    <MRow Class="mb-1" Dense>
        <MCol Cols="12" Sm="4">
            <MSelect Value="ActiveView"
                     ValueChanged="ActiveViewChanged"
                     Items="@Views"
                     ItemText="v => v.Value.Name"
                     ItemValue="v => v.Value.Id"
                     Outlined
                     Dense
                     HideDetails="true"
                     TItem="ViewInfo"
                     TItemValue="Guid"
                     TValue="Guid"
                     OnSelect="@(tuple => OnActiveViewChanged(tuple.Item))">
            </MSelect>
        </MCol>

        <MCol Cols="12" OffsetSm="2" Sm="6" Class="text-right">
            @if (!IsDefaultView)
            {
                <MMenu @bind-Value="_renameMenu"
                       ContentClass="pa-2">
                    <ActivatorContent>
                        <MButton Class="mr-1"
                                 OnClick="@RenameView"
                                 @attributes="@context.Attrs">
                            重命名
                        </MButton>
                    </ActivatorContent>
                    <ChildContent>
                        <MTextField @bind-Value="@_newViewName"
                                    OnBlur="@UpdateViewName"
                                    OnEnter="@UpdateViewName"
                                    Autofocus
                                    Dense
                                    HideDetails="true"
                                    Required>
                        </MTextField>
                    </ChildContent>
                </MMenu>
                <MButton Class="mr-1" Color="error" OnClick="@HandleOnDelete">删除</MButton>
            }
            <MButton Color="primary" OnClick="@OnSave">保存</MButton>
        </MCol>
    </MRow>
    <MRow Class="masa-table__toolbar-actions"
          NoGutters>
        <MCol Cols="12" Md="6" Class="mb-2">
            <MButton LeftIconName="mdi-cog-outline" Text OnClick="@(() => _configDialog = true)">
                <MBadge Value="@HasCustom" Dot Color="red">
                    表格配置
                </MBadge>
            </MButton>
            <MButton LeftIconName="mdi-filter-variant" Text OnClick="@OnFilterClick">
                <MBadge Value="@HasFilter" Dot Color="red">
                    筛选
                </MBadge>
            </MButton>
            <MButton LeftIconName="mdi-sort" Text OnClick="@OnSortClick">
                <MBadge Value="@HasSort" Dot Color="red">
                    排序
                </MBadge>
            </MButton>
            <MMenu MinWidth="160">
                <ActivatorContent>
                    <MButton LeftIconName="mdi-format-line-spacing"
                             Text
                             @attributes="@context.Attrs">
                        行高
                    </MButton>
                </ActivatorContent>
                <ChildContent>
                    <MList Dense>
                        <MListItemGroup Value="@((int)RowHeight)"
                                        ValueChanged="@((val) => RowHeightChanged.InvokeAsync((RowHeight)val.AsT1))"
                                        Mandatory
                                        Color="primary">
                            <MListItem Value="0">
                                <ItemContent>
                                    <MListItemAction>
                                        <FadeTransition>
                                            <MIcon Dense TransitionShow="@context.Active">mdi-check</MIcon>
                                        </FadeTransition>
                                    </MListItemAction>
                                    <MListItemContent>
                                        <MListItemTitle>
                                            低
                                        </MListItemTitle>
                                    </MListItemContent>
                                </ItemContent>
                            </MListItem>
                            <MListItem Value="1">
                                <ItemContent>
                                    <MListItemAction>
                                        <FadeTransition>
                                            <MIcon Dense TransitionShow="@context.Active">mdi-check</MIcon>
                                        </FadeTransition>
                                    </MListItemAction>
                                    <MListItemContent>
                                        <MListItemTitle>
                                            中
                                        </MListItemTitle>
                                    </MListItemContent>
                                </ItemContent>
                            </MListItem>
                            <MListItem Value="2">
                                <ItemContent>
                                    <MListItemAction>
                                        <FadeTransition>
                                            <MIcon Dense TransitionShow="@context.Active">mdi-check</MIcon>
                                        </FadeTransition>
                                    </MListItemAction>
                                    <MListItemContent>
                                        <MListItemTitle>
                                            高
                                        </MListItemTitle>
                                    </MListItemContent>
                                </ItemContent>
                            </MListItem>
                        </MListItemGroup>
                    </MList>
                </ChildContent>
            </MMenu>
        </MCol>

        @{
            var searchableColumns = _activeViewInfo?.GetSearchableColumn();
            var hasSearch = searchableColumns?.Count > 0;
            if (hasSearch)
            {
                var placeholder = $"Search for {string.Join(", ", searchableColumns.Select(u => u.Column.Name))}";

                <MCol Cols="12" Md="6" Class="mb-2">
                    <MTextField @bind-Value="_activeViewInfo!.Value.Filter.Search"
                                Placeholder="@placeholder"
                                PersistentPlaceholder
                                Outlined
                                Clearable
                                Dense
                                HideDetails="true"
                                OnEnter="@OnSearch"
                                OnClearClick="@OnSearch">
                    </MTextField>
                </MCol>
            }
        }
        <MCol Cols="12" Md="hasSearch ? 12 : 6" Class="text-right">
            @if (HasSelect)
            {
                <MButton Disabled="@(!HasSelectedKeys)"
                         Color="error"
                         Depressed
                         Class="mr-1"
                         Loading="@_removing"
                         OnClick="@HandleOnRowRemove">
                    批量删除
                </MButton>
            }
            <MButton Color="secondary"
                     Depressed
                     OnClick="@ResetView">
                重置
            </MButton>
            <MButton Color="primary"
                     Depressed
                     OnClick="@SaveAsNewView">
                保存为新的视图
            </MButton>
        </MCol>
    </MRow>
</div>

<PModal @bind-Value="_configDialog"
        Title="表格配置"
        MaxWidth="600"
        Persistent>
    <div class="pb-3">
        <MDivider Class="mb-3" Left>
            列设置
        </MDivider>
        <div class="m-template-table__toolbar-columns" @ref="@_columnsRef">
            <MSortableProvider Items="@Columns"
                               ItemKey="@(column => column.Id)"
                               Order="@ColumnOrder"
                               OrderChanged="@ColumnOrderChanged"
                               ContainerRef="@_columnsRef"
                               GhostClass="accent--text"
                               Handle=".handle"
                               Ignore=".ignore-element">
                <ItemContent Context="sortContext">
                    @{
                        bool hidden, handle, editable;
                        if (sortContext.Item.Id == Preset.ActionsColumnId)
                        {
                            hidden = !HasActions;
                            handle = false;
                            editable = false;
                        }
                        else if (sortContext.Item.Id == Preset.RowSelectColumnId)
                        {
                            hidden = !HasSelect;
                            handle = false;
                            editable = false;
                        }
                        else
                        {
                            hidden = HiddenColumnIds.Contains(sortContext.Item.Id);
                            handle = true;
                            editable = true;
                        }

                        var css = $"{(handle ? "handle" : "ignore-element")} {(hidden ? "hidden" : "")}";
                    }
                    <MChip Draggable="@handle"
                           Label
                           Class="@css"
                           Color="@(hidden ? "grey" : "black")"
                           Outlined
                           Attributes="@sortContext.Attrs">
                        @Templates.GenTypeIcon(sortContext.Item.Type, small: true)
                        <span class="mr-2">@sortContext.Item.Name</span>
                        @if (editable)
                        {
                            <MButton IconName="mdi-pencil-outline"
                                     Small
                                     Style="color: inherit"
                                     OnClick="@(() => OnColumnEditClick.InvokeAsync(sortContext.Item))">
                            </MButton>
                            <MDivider Vertical Length="16" Class="my-auto mx-1"/>
                        }
                        <MToggle Value="@(!hidden)"
                                 DataOn="@("mdi-eye-outline")"
                                 DataOff="@("mdi-eye-off-outline")"
                                 TData="string">
                            <MButton IconName="@context.Data"
                                     Small
                                     Style="color: inherit"
                                     OnClick="@(() => OnColumnToggle.InvokeAsync(sortContext.Item.Id))"/>
                        </MToggle>
                    </MChip>
                </ItemContent>
            </MSortableProvider>
        </div>
    </div>
    <div>
        <MDivider Class="mb-3" Left>
            分页设置
        </MDivider>
        <MSelect Value="@PageSizeOptions"
                 ValueChanged="@HandleOnPageSizeOptionsChange"
                 TItem="int"
                 TItemValue="int"
                 TValue="List<int>"
                 Items="@_itemsPerPageOptions"
                 ItemText="u => u.ToString(CultureInfo.InvariantCulture)"
                 ItemValue="u => u"
                 Dense
                 Filled
                 Label="每页数量"
                 Multiple
                 HideDetails="@("auto")"
                 Messages="@_messages"
                 MenuProps="m => m.OffsetY = true">
        </MSelect>
    </div>
</PModal>

<MDialog @bind-Value="_filterDialog"
         MaxWidth="400">
    <MButton Outlined Block>Add filter</MButton>
</MDialog>

@code {

    private ElementReference _columnsRef;

}