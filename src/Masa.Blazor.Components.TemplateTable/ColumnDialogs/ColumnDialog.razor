@using Masa.Blazor.Components.TemplateTable.ColumnConfigs
@namespace Masa.Blazor.Components.TemplateTable.ColumnDialogs

<MDialog @bind-Value="_menu"
         @bind-Value:after="OnDialogChanged"
         Width="440"
         ContentClass="px-6 pt-7 pb-6"
         Persistent>
    <MForm OnValidSubmit="@HandleOnSubmit">
        <MTextField @bind-Value="@_column.Name"
                    Filled
                    TValue="string"
                    Label="column-name"
                    Required>
        </MTextField>
        <MSelect @bind-Value="@_column.Type"
                 Items="@_columnTypeMetadata"
                 ItemValue="u => u.Value"
                 ItemText="u => u.Name"
                 Filled
                 Label="column-type"
                 HideDetails="true"
                 TItem="(string Name, ColumnType Value)"
                 TItemValue="ColumnType"
                 TValue="ColumnType"
                 OnSelect="@HandleOnColumnTypeSelect">
        </MSelect>

        <div class="mt-6">
            @switch (_column.Type)
            {
                case ColumnType.Date:
                    <DateConfigInput Value="@_column.Config" OnUpdate="HandleOnConfigUpdate"/>
                    break;
                case ColumnType.Select or ColumnType.MultiSelect:
                    <SelectConfigInput Value="@_column.Config" OnUpdate="HandleOnConfigUpdate"/>
                    break;
                case ColumnType.Progress:
                    <ProgressConfigInput Value="@_column.Config" OnUpdate="HandleOnConfigUpdate"/>
                    break;
                case ColumnType.Number:
                    <NumberConfigInput Value="@_column.Config" OnUpdate="HandleOnConfigUpdate"/>
                    break;
                case ColumnType.Actions:
                    <ActionsConfigInput Value="@_column.Config" OnUpdate="HandleOnConfigUpdate"/>
                    break;
            }
        </div>

        <div class="d-flex justify-end mt-4">
            <MButton Class="mr-2" OnClick="@(() => _menu = false)">Cancel</MButton>
            <MButton Type="submit" Color="primary">Confirm</MButton>
        </div>
    </MForm>
</MDialog>

@code {

    [Parameter] public EventCallback<ColumnInfo> OnSave { get; set; }

    private bool _menu;

    private ColumnInfo _column = new();

    private static IList<(string Name, ColumnType Value)> _columnTypeMetadata = GetEnumMetadata<ColumnType>();

    private void HandleOnColumnTypeSelect(((string Name, ColumnType Value) Item, bool Selected) item)
    {
        _column.Config = null;
    }

    private void HandleOnSubmit()
    {
        OnSave.InvokeAsync(_column);
        _menu = false;
    }

    public static IList<(string Name, T Value)> GetEnumMetadata<T>() where T : Enum
    {
        var metadataList = new List<(string Name, T Value)>();
        foreach (var value in Enum.GetValues(typeof(T)))
        {
            metadataList.Add((value.ToString(), (T)value));
        }

        return metadataList;
    }
    
    private void HandleOnConfigUpdate(object config)
    {
        _column.ConfigObject = config;
        _column.Config = JsonSerializer.Serialize(config);
    }

    private void OnDialogChanged()
    {
        if (!_menu)
        {
            _column.Config = null;
        }
    }

    internal void Open(Column column)
    {
        _column = new ColumnInfo()
        {
            Id = column.Id,
            Name = column.Name,
            Type = column.Type,
            Config = column.Config,
        };

        _menu = true;
        StateHasChanged();
    }
}